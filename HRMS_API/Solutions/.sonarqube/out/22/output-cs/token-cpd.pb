Åë
fF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\LeaveInformationRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Administration& 4
{ 
public 

class &
LeaveInformationRepository +
:, -
BaseRepository. <
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public &
LeaveInformationRepository )
() *
IConfiguration* 8
configuration9 F
,F G
IDistributedCacheH Y

redisCacheZ d
)d e
:f g
baseh l
(l m
configurationm z
)z {
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
LeaveInformation /
>/ 0
>0 1
GetLeaveInformation2 E
(E F
)F G
{   	
List!! 
<!! 
LeaveInformation!! !
>!!! "

leavesInfo!!# -
=!!. /
null!!0 4
;!!4 5
using"" 
("" 
var"" 

connection"" !
=""" #
await""$ )
base""* .
."". /
CreateConnection""/ ?
(""? @
DbSchema""@ H
.""H I
PORTAL""I O
)""O P
)""P Q
{## #
OracleDynamicParameters$$ '

parameters$$( 2
=$$3 4
new$$5 8#
OracleDynamicParameters$$9 P
($$P Q
)$$Q R
;$$R S

parameters%% 
.%% 
Add%% 
(%% 
name%% #
:%%# $
$str%%% .
,%%. /
dbType%%0 6
:%%6 7
OracleMappingType%%8 I
.%%I J
	RefCursor%%J S
,%%S T
	direction%%U ^
:%%^ _
ParameterDirection%%` r
.%%r s
Output%%s y
)%%y z
;%%z {

leavesInfo&& 
=&& 
(&& 
await&& #

connection&&$ .
.&&. /

QueryAsync&&/ 9
<&&9 :
LeaveInformation&&: J
>&&J K
(&&K L
DatabaseProcedures&&L ^
.&&^ _!
GET_LEAVE_INFORMATION&&_ t
,&&t u

parameters	&&v Ä
,
&&Ä Å
commandType
&&Ç ç
:
&&ç é
CommandType
&&è ö
.
&&ö õ
StoredProcedure
&&õ ™
)
&&™ ´
)
&&´ ¨
.
&&¨ ≠
ToList
&&≠ ≥
(
&&≥ ¥
)
&&¥ µ
;
&&µ ∂

leavesInfo'' 
='' 

leavesInfo'' '
.''' (
OrderByDescending''( 9
(''9 :
x'': ;
=>''< >
x''? @
.''@ A 
LeaveInformationName''A U
)''U V
.''V W
ToList''W ]
(''] ^
)''^ _
;''_ `
}(( 
return)) 

leavesInfo)) 
;)) 
}** 	
public,, 
async,, 
Task,, 
<,, 
bool,, 
>,, "
UpdateLeaveInformation,,  6
(,,6 7#
LeaveInformationSaveReq,,7 N
leaveInformation,,O _
),,_ `
{-- 	
bool.. 
isSaved.. 
=.. 
false..  
;..  !#
OracleDynamicParameters// #

parameters//$ .
=/// 0
null//1 5
;//5 6
int00 
rowsUpdated00 
=00 
$num00 
;00  
using11 
(11 
IDbConnection11  

connection11! +
=11, -
await11. 3
base114 8
.118 9
CreateConnection119 I
(11I J
DbSchema11J R
.11R S
PORTAL11S Y
)11Y Z
)11Z [
{22 

parameters44 
=44 
new44  #
OracleDynamicParameters44! 8
(448 9
)449 :
;44: ;

parameters55 
.55 
Add55 
(55 
name55 #
:55# $
$str55% <
,55< =
leaveInformation55> N
.55N O
LeaveInformationID55O a
,55a b
dbType55c i
:55i j
OracleMappingType55k |
.55| }
Int32	55} Ç
,
55Ç É
	direction
55Ñ ç
:
55ç é 
ParameterDirection
55è °
.
55° ¢
Input
55¢ ß
)
55ß ®
;
55® ©

parameters66 
.66 
Add66 
(66 
name66 #
:66# $
$str66% >
,66> ?
leaveInformation66@ P
.66P Q 
LeaveInformationName66Q e
,66e f
dbType66g m
:66m n
OracleMappingType	66o Ä
.
66Ä Å
Varchar2
66Å â
,
66â ä
	direction
66ã î
:
66î ï 
ParameterDirection
66ñ ®
.
66® ©
Input
66© Æ
)
66Æ Ø
;
66Ø ∞

parameters77 
.77 
Add77 
(77 
name77 #
:77# $
$str77% 5
,775 6
leaveInformation777 G
.77G H
LeaveTypeID77H S
,77S T
dbType77U [
:77[ \
OracleMappingType77] n
.77n o
Int3277o t
,77t u
	direction77v 
:	77 Ä 
ParameterDirection
77Å ì
.
77ì î
Input
77î ô
)
77ô ö
;
77ö õ

parameters88 
.88 
Add88 
(88 
name88 #
:88# $
$str88% 7
,887 8
leaveInformation889 I
.88I J
LeavePolicyID88J W
,88W X
dbType88Y _
:88_ `
OracleMappingType88a r
.88r s
Int3288s x
,88x y
	direction	88z É
:
88É Ñ 
ParameterDirection
88Ö ó
.
88ó ò
Input
88ò ù
)
88ù û
;
88û ü

parameters99 
.99 
Add99 
(99 
name99 #
:99# $
$str99% 8
,998 9
leaveInformation99: J
.99J K
OfficeTypeSlno99K Y
,99Y Z
dbType99[ a
:99a b
OracleMappingType99c t
.99t u
Int3299u z
,99z {
	direction	99| Ö
:
99Ö Ü 
ParameterDirection
99á ô
.
99ô ö
Input
99ö ü
)
99ü †
;
99† °

parameters:: 
.:: 
Add:: 
(:: 
name:: #
:::# $
$str::% 3
,::3 4
leaveInformation::5 E
.::E F

BranchSlno::F P
,::P Q
dbType::R X
:::X Y
OracleMappingType::Z k
.::k l
Int32::l q
,::q r
	direction::s |
:::| }
ParameterDirection	::~ ê
.
::ê ë
Input
::ë ñ
)
::ñ ó
;
::ó ò

parameters;; 
.;; 
Add;; 
(;; 
name;; #
:;;# $
$str;;% 1
,;;1 2
leaveInformation;;3 C
.;;C D
StatusID;;D L
,;;L M
dbType;;N T
:;;T U
OracleMappingType;;V g
.;;g h
Int16;;h m
,;;m n
	direction;;o x
:;;x y
ParameterDirection	;;z å
.
;;å ç
Input
;;ç í
)
;;í ì
;
;;ì î
rowsUpdated<< 
=<< 
await<< #

connection<<$ .
.<<. /
ExecuteAsync<</ ;
(<<; <
DatabaseProcedures<<< N
.<<N O&
SP_UPDATE_LEAVE_INFOMATION<<O i
,<<i j

parameters<<k u
,<<u v
commandType	<<w Ç
:
<<Ç É
CommandType
<<Ñ è
.
<<è ê
StoredProcedure
<<ê ü
)
<<ü †
;
<<† °
}== 
isSaved>> 
=>> 
(>> 
rowsUpdated>> "
*>># $
->>% &
$num>>& '
)>>' (
>>>) *
$num>>+ ,
;>>, -
return?? 
isSaved?? 
;?? 
}@@ 	
privateAA 
DateTimeAA 
CreatedDateAA $
=AA% &
DateTimeAA' /
.AA/ 0
NowAA0 3
;AA3 4
publicBB 
asyncBB 
TaskBB 
<BB 
boolBB 
>BB !
SavedLeaveInformationBB  5
(BB5 6#
LeaveInformationSaveReqBB6 M
leaveInformationBBN ^
)BB^ _
{CC 	
boolEE 
isSavedEE 
=EE 
falseEE "
;EE" ##
OracleDynamicParametersFF #

parametersFF$ .
=FF/ 0
nullFF1 5
;FF5 6
intGG 
rowsInsertedGG 
=GG 
$numGG  
;GG  !
usingII 
(II 
IDbConnectionII  

connectionII! +
=II, -
awaitII. 3
baseII4 8
.II8 9
CreateConnectionII9 I
(III J
DbSchemaIIJ R
.IIR S
PORTALIIS Y
)IIY Z
)IIZ [
{JJ 

parametersKK 
=KK 
newKK  #
OracleDynamicParametersKK! 8
(KK8 9
)KK9 :
;KK: ;

parametersLL 
.LL 
AddLL 
(LL 
nameLL #
:LL# $
$strLL% >
,LL> ?
leaveInformationLL@ P
.LLP Q 
LeaveInformationNameLLQ e
,LLe f
dbTypeLLg m
:LLm n
OracleMappingType	LLo Ä
.
LLÄ Å
Varchar2
LLÅ â
,
LLâ ä
	direction
LLã î
:
LLî ï 
ParameterDirection
LLñ ®
.
LL® ©
Input
LL© Æ
)
LLÆ Ø
;
LLØ ∞

parametersMM 
.MM 
AddMM 
(MM 
nameMM #
:MM# $
$strMM% 5
,MM5 6
leaveInformationMM7 G
.MMG H
LeaveTypeIDMMH S
,MMS T
dbTypeMMU [
:MM[ \
OracleMappingTypeMM] n
.MMn o
Int32MMo t
,MMt u
	directionMMv 
:	MM Ä 
ParameterDirection
MMÅ ì
.
MMì î
Input
MMî ô
)
MMô ö
;
MMö õ

parametersNN 
.NN 
AddNN 
(NN 
nameNN #
:NN# $
$strNN% 7
,NN7 8
leaveInformationNN9 I
.NNI J
LeavePolicyIDNNJ W
,NNW X
dbTypeNNY _
:NN_ `
OracleMappingTypeNNa r
.NNr s
Int32NNs x
,NNx y
	direction	NNz É
:
NNÉ Ñ 
ParameterDirection
NNÖ ó
.
NNó ò
Input
NNò ù
)
NNù û
;
NNû ü

parametersOO 
.OO 
AddOO 
(OO 
nameOO #
:OO# $
$strOO% 8
,OO8 9
leaveInformationOO: J
.OOJ K
OfficeTypeSlnoOOK Y
,OOY Z
dbTypeOO[ a
:OOa b
OracleMappingTypeOOc t
.OOt u
Int32OOu z
,OOz {
	direction	OO| Ö
:
OOÖ Ü 
ParameterDirection
OOá ô
.
OOô ö
Input
OOö ü
)
OOü †
;
OO† °

parametersPP 
.PP 
AddPP 
(PP 
namePP #
:PP# $
$strPP% 3
,PP3 4
leaveInformationPP5 E
.PPE F

BranchSlnoPPF P
,PPP Q
dbTypePPR X
:PPX Y
OracleMappingTypePPZ k
.PPk l
Int32PPl q
,PPq r
	directionPPs |
:PP| }
ParameterDirection	PP~ ê
.
PPê ë
Input
PPë ñ
)
PPñ ó
;
PPó ò

parametersQQ 
.QQ 
AddQQ 
(QQ 
nameQQ #
:QQ# $
$strQQ% 1
,QQ1 2
leaveInformationQQ3 C
.QQC D
StatusIDQQD L
,QQL M
dbTypeQQN T
:QQT U
OracleMappingTypeQQV g
.QQg h
Int16QQh m
,QQm n
	directionQQo x
:QQx y
ParameterDirection	QQz å
.
QQå ç
Input
QQç í
)
QQí ì
;
QQì î
rowsInsertedRR 
=RR 
awaitRR $

connectionRR% /
.RR/ 0
ExecuteAsyncRR0 <
(RR< =
DatabaseProceduresRR= O
.RRO P&
SP_INSERT_LEAVE_INFOMATIONRRP j
,RRj k

parametersRRl v
,RRv w
commandType	RRx É
:
RRÉ Ñ
CommandType
RRÖ ê
.
RRê ë
StoredProcedure
RRë †
)
RR† °
;
RR° ¢
}SS 
isSavedTT 
=TT 
(TT 
rowsInsertedTT #
*TT$ %
-TT& '
$numTT' (
)TT( )
>TT* +
$numTT, -
;TT- .
returnUU 
isSavedUU 
;UU 
}VV 	
publicWW 
asyncWW 
TaskWW 
<WW 
boolWW 
>WW "
DeleteLeaveInformationWW  6
(WW6 7
intWW7 :
leaveInformationIdWW; M
)WWM N
{XX 	
boolYY 
isSavedYY 
=YY 
falseYY  
;YY  !#
OracleDynamicParametersZZ #

parametersZZ$ .
=ZZ/ 0
nullZZ1 5
;ZZ5 6
int[[ 
rowsDeleted[[ 
=[[ 
$num[[ 
;[[  
using\\ 
(\\ 
IDbConnection\\  

connection\\! +
=\\, -
await\\. 3
base\\4 8
.\\8 9
CreateConnection\\9 I
(\\I J
DbSchema\\J R
.\\R S
PORTAL\\S Y
)\\Y Z
)\\Z [
{]] 

parameters__ 
=__ 
new__  #
OracleDynamicParameters__! 8
(__8 9
)__9 :
;__: ;

parameters`` 
.`` 
Add`` 
(`` 
name`` #
:``# $
$str``% <
,``< =
leaveInformationId``> P
,``P Q
dbType``R X
:``X Y
OracleMappingType``Z k
.``k l
Int32``l q
,``q r
	direction``s |
:``| }
ParameterDirection	``~ ê
.
``ê ë
Input
``ë ñ
)
``ñ ó
;
``ó ò
rowsDeletedaa 
=aa 
awaitaa #

connectionaa$ .
.aa. /
ExecuteAsyncaa/ ;
(aa; <
DatabaseProceduresaa< N
.aaN O&
SP_DELETE_LEAVE_INFOMATIONaaO i
,aai j

parametersaak u
,aau v
commandType	aaw Ç
:
aaÇ É
CommandType
aaÑ è
.
aaè ê
StoredProcedure
aaê ü
)
aaü †
;
aa† °
}bb 
isSavedcc 
=cc 
(cc 
rowsDeletedcc "
*cc# $
-cc% &
$numcc& '
)cc' (
>cc) *
$numcc+ ,
;cc, -
returndd 
isSaveddd 
;dd 
}ee 	
publicff 
asyncff 
Taskff 
<ff 
Listff 
<ff  
LeaveTypeInformationff 3
>ff3 4
>ff4 5$
GetLeaveInformationByOfcff6 N
(ffN O
intffO R
officeTypeSlnoffS a
,ffa b
intffc f
?fff g

branchSlnoffh r
)ffr s
{gg 	
Listhh 
<hh  
LeaveTypeInformationhh %
>hh% &

leavesInfohh' 1
=hh2 3
nullhh4 8
;hh8 9
usingii 
(ii 
varii 

connectionii !
=ii" #
awaitii$ )
baseii* .
.ii. /
CreateConnectionii/ ?
(ii? @
DbSchemaii@ H
.iiH I
PORTALiiI O
)iiO P
)iiP Q
{jj #
OracleDynamicParameterskk '

parameterskk( 2
=kk3 4
newkk5 8#
OracleDynamicParameterskk9 P
(kkP Q
)kkQ R
;kkR S

parametersll 
.ll 
Addll 
(ll 
namell #
:ll# $
$strll% 6
,ll6 7
officeTypeSlnoll8 F
,llF G
dbTypellH N
:llN O
OracleMappingTypellP a
.lla b
Int32llb g
,llg h
	directionlli r
:llr s
ParameterDirection	llt Ü
.
llÜ á
Input
llá å
)
llå ç
;
llç é

parametersmm 
.mm 
Addmm 
(mm 
namemm #
:mm# $
$strmm% 2
,mm2 3

branchSlnomm4 >
,mm> ?
dbTypemm@ F
:mmF G
OracleMappingTypemmH Y
.mmY Z
Int32mmZ _
,mm_ `
	directionmma j
:mmj k
ParameterDirectionmml ~
.mm~ 
Input	mm Ñ
)
mmÑ Ö
;
mmÖ Ü

parametersnn 
.nn 
Addnn 
(nn 
namenn #
:nn# $
$strnn% .
,nn. /
dbTypenn0 6
:nn6 7
OracleMappingTypenn8 I
.nnI J
	RefCursornnJ S
,nnS T
	directionnnU ^
:nn^ _
ParameterDirectionnn` r
.nnr s
Outputnns y
)nny z
;nnz {

leavesInfooo 
=oo 
(oo 
awaitoo #

connectionoo$ .
.oo. /

QueryAsyncoo/ 9
<oo9 : 
LeaveTypeInformationoo: N
>ooN O
(ooO P
DatabaseProceduresooP b
.oob c%
SP_GET_LEAVE_TYPES_BY_OFCooc |
,oo| }

parameters	oo~ à
,
ooà â
commandType
ooä ï
:
ooï ñ
CommandType
ooó ¢
.
oo¢ £
StoredProcedure
oo£ ≤
)
oo≤ ≥
)
oo≥ ¥
.
oo¥ µ
ToList
ooµ ª
(
ooª º
)
ooº Ω
;
ooΩ æ

leavesInfopp 
=pp 

leavesInfopp '
.pp' (
OrderByDescendingpp( 9
(pp9 :
xpp: ;
=>pp< >
xpp? @
.pp@ A
LeaveInformationIdppA S
)ppS T
.ppT U
ToListppU [
(pp[ \
)pp\ ]
;pp] ^
}qq 
returnrr 

leavesInforr 
;rr 
}ss 	
}tt 
}uu Ó¿
nF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\LeavePolicyInformationRepositorycs.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Administration& 4
{ 
public 

class .
"LeavePolicyInformationRepositorycs 3
:4 5
BaseRepository6 D
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public .
"LeavePolicyInformationRepositorycs 1
(1 2
IConfiguration2 @
configurationA N
,N O
IDistributedCacheP a

redisCacheb l
)l m
: 
base 
( 
configuration  
)  !
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 

redisCache 
= 

redisCache (
;( )
}   	
public"" 
async"" 
Task"" 
<"" 
List"" 
<"" "
LeavePolicyInformation"" 5
>""5 6
>""6 7%
GetLeavePolicyInformation""8 Q
(""Q R
)""R S
{## 	
List$$ 
<$$ "
LeavePolicyInformation$$ '
>$$' (
	empLeaves$$) 2
=$$3 4
null$$5 9
;$$9 :
using%% 
(%% 
var%% 

connection%% !
=%%" #
await%%$ )
base%%* .
.%%. /
CreateConnection%%/ ?
(%%? @
DbSchema%%@ H
.%%H I
PORTAL%%I O
)%%O P
)%%P Q
{&& #
OracleDynamicParameters'' '

parameters''( 2
=''3 4
new''5 8#
OracleDynamicParameters''9 P
(''P Q
)''Q R
;''R S

parameters(( 
.(( 
Add(( 
((( 
name(( #
:((# $
$str((% .
,((. /
dbType((0 6
:((6 7
OracleMappingType((8 I
.((I J
	RefCursor((J S
,((S T
	direction((U ^
:((^ _
ParameterDirection((` r
.((r s
Output((s y
)((y z
;((z {
	empLeaves)) 
=)) 
()) 
await)) "

connection))# -
.))- .

QueryAsync)). 8
<))8 9"
LeavePolicyInformation))9 O
>))O P
())P Q
DatabaseProcedures))Q c
.))c d)
GET_LEAVE_POLICY_INFORMATION	))d Ä
,
))Ä Å

parameters
))Ç å
,
))å ç
commandType
))é ô
:
))ô ö
CommandType
))õ ¶
.
))¶ ß
StoredProcedure
))ß ∂
)
))∂ ∑
)
))∑ ∏
.
))∏ π
ToList
))π ø
(
))ø ¿
)
))¿ ¡
;
))¡ ¬
	empLeaves** 
=** 
	empLeaves** %
.**% &
OrderByDescending**& 7
(**7 8
x**8 9
=>**: <
x**= >
.**> ?

PolicyName**? I
)**I J
.**J K
ToList**K Q
(**Q R
)**R S
;**S T
}++ 
return,, 
	empLeaves,, 
;,, 
}-- 	
public// 
async// 
Task// 
<// 
bool// 
>// &
SaveLeavePolicyInformation//  :
(//: ;"
LeavePolicyInformation//; Q)
leavePolicyInformationDetails//R o
)//o p
{00 	
bool11 
isSaved11 
=11 
false11  
;11  !#
OracleDynamicParameters33 #

parameters33$ .
=33/ 0
null331 5
;335 6
int44 
rowInserted44 
=44 
$num44 
;44  
using55 
(55 
IDbConnection55  

connection55! +
=55, -
await55. 3
base554 8
.558 9
CreateConnection559 I
(55I J
DbSchema55J R
.55R S
PORTAL55S Y
)55Y Z
)55Z [
{66 

parameters77 
=77 
new77  #
OracleDynamicParameters77! 8
(778 9
)779 :
;77: ;

parameters88 
.88 
Add88 
(88 
name88 #
:88# $
$str88% 3
,883 4)
leavePolicyInformationDetails885 R
.88R S

PolicyName88S ]
,88] ^
dbType88_ e
:88e f
OracleMappingType88g x
.88x y
Varchar2	88y Å
,
88Å Ç
	direction
88É å
:
88å ç 
ParameterDirection
88é †
.
88† °
Input
88° ¶
)
88¶ ß
;
88ß ®

parameters99 
.99 
Add99 
(99 
name99 #
:99# $
$str99% 3
,993 4)
leavePolicyInformationDetails995 R
.99R S

LowerBound99S ]
,99] ^
dbType99_ e
:99e f
OracleMappingType99g x
.99x y
Int3299y ~
,99~ 
	direction
99Ä â
:
99â ä 
ParameterDirection
99ã ù
.
99ù û
Input
99û £
)
99£ §
;
99§ •

parameters:: 
.:: 
Add:: 
(:: 
name:: #
:::# $
$str::% 3
,::3 4)
leavePolicyInformationDetails::5 R
.::R S

UpperBound::S ]
,::] ^
dbType::_ e
:::e f
OracleMappingType::g x
.::x y
Int32::y ~
,::~ 
	direction
::Ä â
:
::â ä 
ParameterDirection
::ã ù
.
::ù û
Input
::û £
)
::£ §
;
::§ •

parameters;; 
.;; 
Add;; 
(;; 
name;; #
:;;# $
$str;;% 9
,;;9 :)
leavePolicyInformationDetails;;; X
.;;X Y
ApplyBeForeDays;;Y h
,;;h i
dbType;;j p
:;;p q
OracleMappingType	;;r É
.
;;É Ñ
Int32
;;Ñ â
,
;;â ä
	direction
;;ã î
:
;;î ï 
ParameterDirection
;;ñ ®
.
;;® ©
Input
;;© Æ
)
;;Æ Ø
;
;;Ø ∞

parameters<< 
.<< 
Add<< 
(<< 
name<< #
:<<# $
$str<<% <
,<<< =)
leavePolicyInformationDetails<<> [
.<<[ \
MaxConcecutiveDays<<\ n
,<<n o
dbType<<p v
:<<v w
OracleMappingType	<<x â
.
<<â ä
Int32
<<ä è
,
<<è ê
	direction
<<ë ö
:
<<ö õ 
ParameterDirection
<<ú Æ
.
<<Æ Ø
Input
<<Ø ¥
)
<<¥ µ
;
<<µ ∂

parameters== 
.== 
Add== 
(== 
name== #
:==# $
$str==% C
,==C D)
leavePolicyInformationDetails==E b
.==b c%
AllowAfter_MaxConcecutive==c |
,==| }
dbType	==~ Ñ
:
==Ñ Ö
OracleMappingType
==Ü ó
.
==ó ò
Int32
==ò ù
,
==ù û
	direction
==ü ®
:
==® © 
ParameterDirection
==™ º
.
==º Ω
Input
==Ω ¬
)
==¬ √
;
==√ ƒ

parameters>> 
.>> 
Add>> 
(>> 
name>> #
:>># $
$str>>% 4
,>>4 5)
leavePolicyInformationDetails>>6 S
.>>S T
AccrualRate>>T _
,>>_ `
dbType>>a g
:>>g h
OracleMappingType>>i z
.>>z {
Int32	>>{ Ä
,
>>Ä Å
	direction
>>Ç ã
:
>>ã å 
ParameterDirection
>>ç ü
.
>>ü †
Input
>>† •
)
>>• ¶
;
>>¶ ß

parameters?? 
.?? 
Add?? 
(?? 
name?? #
:??# $
$str??% 8
,??8 9)
leavePolicyInformationDetails??: W
.??W X
NeedCertificate??X g
,??g h
dbType??i o
:??o p
OracleMappingType	??q Ç
.
??Ç É
Int32
??É à
,
??à â
	direction
??ä ì
:
??ì î 
ParameterDirection
??ï ß
.
??ß ®
Input
??® ≠
)
??≠ Æ
;
??Æ Ø

parameters@@ 
.@@ 
Add@@ 
(@@ 
name@@ #
:@@# $
$str@@% B
,@@B C)
leavePolicyInformationDetails@@D a
.@@a b$
ConsiderWeekendsHolidays@@b z
,@@z {
dbType	@@| Ç
:
@@Ç É
OracleMappingType
@@Ñ ï
.
@@ï ñ
Int32
@@ñ õ
,
@@õ ú
	direction
@@ù ¶
:
@@¶ ß 
ParameterDirection
@@® ∫
.
@@∫ ª
Input
@@ª ¿
)
@@¿ ¡
;
@@¡ ¬

parametersAA 
.AA 
AddAA 
(AA 
nameAA #
:AA# $
$strAA% 5
,AA5 6)
leavePolicyInformationDetailsAA7 T
.AAT U
MaximumUsageAAU a
,AAa b
dbTypeAAc i
:AAi j
OracleMappingTypeAAk |
.AA| }
Int32	AA} Ç
,
AAÇ É
	direction
AAÑ ç
:
AAç é 
ParameterDirection
AAè °
.
AA° ¢
Input
AA¢ ß
)
AAß ®
;
AA® ©

parametersBB 
.BB 
AddBB 
(BB 
nameBB #
:BB# $
$strBB% @
,BB@ A)
leavePolicyInformationDetailsBBB _
.BB_ ` 
CanBeMergedWithOtherBB` t
,BBt u
dbTypeBBv |
:BB| }
OracleMappingType	BB~ è
.
BBè ê
Int32
BBê ï
,
BBï ñ
	direction
BBó †
:
BB† ° 
ParameterDirection
BB¢ ¥
.
BB¥ µ
Input
BBµ ∫
)
BB∫ ª
;
BBª º

parametersCC 
.CC 
AddCC 
(CC 
nameCC #
:CC# $
$strCC% 5
,CC5 6)
leavePolicyInformationDetailsCC7 T
.CCT U
ApplicableToCCU a
,CCa b
dbTypeCCc i
:CCi j
OracleMappingTypeCCk |
.CC| }
Int32	CC} Ç
,
CCÇ É
	direction
CCÑ ç
:
CCç é 
ParameterDirection
CCè °
.
CC° ¢
Input
CC¢ ß
)
CCß ®
;
CC® ©

parametersDD 
.DD 
AddDD 
(DD 
nameDD #
:DD# $
$strDD% :
,DD: ;)
leavePolicyInformationDetailsDD< Y
.DDY Z
CanApplyHalfDayDDZ i
,DDi j
dbTypeDDk q
:DDq r
OracleMappingType	DDs Ñ
.
DDÑ Ö
Int32
DDÖ ä
,
DDä ã
	direction
DDå ï
:
DDï ñ 
ParameterDirection
DDó ©
.
DD© ™
Input
DD™ Ø
)
DDØ ∞
;
DD∞ ±

parametersEE 
.EE 
AddEE 
(EE 
nameEE #
:EE# $
$strEE% 1
,EE1 2)
leavePolicyInformationDetailsEE3 P
.EEP Q
StatusIDEEQ Y
,EEY Z
dbTypeEE[ a
:EEa b
OracleMappingTypeEEc t
.EEt u
Int32EEu z
,EEz {
	direction	EE| Ö
:
EEÖ Ü 
ParameterDirection
EEá ô
.
EEô ö
Input
EEö ü
)
EEü †
;
EE† °

parametersFF 
.FF 
AddFF 
(FF 
nameFF #
:FF# $
$strFF% /
,FF/ 0)
leavePolicyInformationDetailsFF1 N
.FFN O

RowversionFFO Y
,FFY Z
dbTypeFF[ a
:FFa b
OracleMappingTypeFFc t
.FFt u
Int32FFu z
,FFz {
	direction	FF| Ö
:
FFÖ Ü 
ParameterDirection
FFá ô
.
FFô ö
Input
FFö ü
)
FFü †
;
FF† °
rowInsertedGG 
=GG 
awaitGG #

connectionGG$ .
.GG. /
ExecuteAsyncGG/ ;
(GG; <
DatabaseProceduresGG< N
.GGN O'
SP_INSERT_POLICY_INFOMATIONGGO j
,GGj k

parametersGGl v
,GGv w
commandType	GGx É
:
GGÉ Ñ
CommandType
GGÖ ê
.
GGê ë
StoredProcedure
GGë †
)
GG† °
;
GG° ¢
}HH 
isSavedII 
=II 
(II 
rowInsertedII "
*II# $
-II% &
$numII& '
)II' (
>II) *
$numII+ ,
;II, -
returnJJ 
isSavedJJ 
;JJ 
}KK 	
publicMM 
asyncMM 
TaskMM 
<MM 
boolMM 
>MM (
UpdateLeavePolicyInformationMM  <
(MM< =%
LeavePolicyInformationReqMM= V)
leavePolicyInformationDetailsMMW t
)MMt u
{NN 	
boolOO 
isSavedOO 
=OO 
falseOO  
;OO  !#
OracleDynamicParametersPP #

parametersPP$ .
=PP/ 0
nullPP1 5
;PP5 6
intQQ 
rowsUpdatedQQ 
=QQ 
$numQQ 
;QQ  
usingRR 
(RR 
IDbConnectionRR  

connectionRR! +
=RR, -
awaitRR. 3
baseRR4 8
.RR8 9
CreateConnectionRR9 I
(RRI J
DbSchemaRRJ R
.RRR S
PORTALRRS Y
)RRY Z
)RRZ [
{SS 

parametersUU 
=UU 
newUU  #
OracleDynamicParametersUU! 8
(UU8 9
)UU9 :
;UU: ;

parametersVV 
.VV 
AddVV 
(VV 
nameVV #
:VV# $
$strVV% 1
,VV1 2)
leavePolicyInformationDetailsVV3 P
.VVP Q
PolicyIDVVQ Y
,VVY Z
dbTypeVV[ a
:VVa b
OracleMappingTypeVVc t
.VVt u
Int32VVu z
,VVz {
	direction	VV| Ö
:
VVÖ Ü 
ParameterDirection
VVá ô
.
VVô ö
Input
VVö ü
)
VVü †
;
VV† °

parametersWW 
.WW 
AddWW 
(WW 
nameWW #
:WW# $
$strWW% 3
,WW3 4)
leavePolicyInformationDetailsWW5 R
.WWR S

PolicyNameWWS ]
,WW] ^
dbTypeWW_ e
:WWe f
OracleMappingTypeWWg x
.WWx y
Varchar2	WWy Å
,
WWÅ Ç
	direction
WWÉ å
:
WWå ç 
ParameterDirection
WWé †
.
WW† °
Input
WW° ¶
)
WW¶ ß
;
WWß ®

parametersXX 
.XX 
AddXX 
(XX 
nameXX #
:XX# $
$strXX% 3
,XX3 4)
leavePolicyInformationDetailsXX5 R
.XXR S

LowerBoundXXS ]
,XX] ^
dbTypeXX_ e
:XXe f
OracleMappingTypeXXg x
.XXx y
Int32XXy ~
,XX~ 
	direction
XXÄ â
:
XXâ ä 
ParameterDirection
XXã ù
.
XXù û
Input
XXû £
)
XX£ §
;
XX§ •

parametersYY 
.YY 
AddYY 
(YY 
nameYY #
:YY# $
$strYY% 3
,YY3 4)
leavePolicyInformationDetailsYY5 R
.YYR S

UpperBoundYYS ]
,YY] ^
dbTypeYY_ e
:YYe f
OracleMappingTypeYYg x
.YYx y
Int32YYy ~
,YY~ 
	direction
YYÄ â
:
YYâ ä 
ParameterDirection
YYã ù
.
YYù û
Input
YYû £
)
YY£ §
;
YY§ •

parametersZZ 
.ZZ 
AddZZ 
(ZZ 
nameZZ #
:ZZ# $
$strZZ% 9
,ZZ9 :)
leavePolicyInformationDetailsZZ; X
.ZZX Y
ApplyBeForeDaysZZY h
,ZZh i
dbTypeZZj p
:ZZp q
OracleMappingType	ZZr É
.
ZZÉ Ñ
Int32
ZZÑ â
,
ZZâ ä
	direction
ZZã î
:
ZZî ï 
ParameterDirection
ZZñ ®
.
ZZ® ©
Input
ZZ© Æ
)
ZZÆ Ø
;
ZZØ ∞

parameters[[ 
.[[ 
Add[[ 
([[ 
name[[ #
:[[# $
$str[[% <
,[[< =)
leavePolicyInformationDetails[[> [
.[[[ \
MaxConcecutiveDays[[\ n
,[[n o
dbType[[p v
:[[v w
OracleMappingType	[[x â
.
[[â ä
Int32
[[ä è
,
[[è ê
	direction
[[ë ö
:
[[ö õ 
ParameterDirection
[[ú Æ
.
[[Æ Ø
Input
[[Ø ¥
)
[[¥ µ
;
[[µ ∂

parameters\\ 
.\\ 
Add\\ 
(\\ 
name\\ #
:\\# $
$str\\% C
,\\C D)
leavePolicyInformationDetails\\E b
.\\b c%
AllowAfter_MaxConcecutive\\c |
,\\| }
dbType	\\~ Ñ
:
\\Ñ Ö
OracleMappingType
\\Ü ó
.
\\ó ò
Int32
\\ò ù
,
\\ù û
	direction
\\ü ®
:
\\® © 
ParameterDirection
\\™ º
.
\\º Ω
Input
\\Ω ¬
)
\\¬ √
;
\\√ ƒ

parameters]] 
.]] 
Add]] 
(]] 
name]] #
:]]# $
$str]]% 4
,]]4 5)
leavePolicyInformationDetails]]6 S
.]]S T
AccrualRate]]T _
,]]_ `
dbType]]a g
:]]g h
OracleMappingType]]i z
.]]z {
Int32	]]{ Ä
,
]]Ä Å
	direction
]]Ç ã
:
]]ã å 
ParameterDirection
]]ç ü
.
]]ü †
Input
]]† •
)
]]• ¶
;
]]¶ ß

parameters^^ 
.^^ 
Add^^ 
(^^ 
name^^ #
:^^# $
$str^^% 8
,^^8 9)
leavePolicyInformationDetails^^: W
.^^W X
NeedCertificate^^X g
,^^g h
dbType^^i o
:^^o p
OracleMappingType	^^q Ç
.
^^Ç É
Int32
^^É à
,
^^à â
	direction
^^ä ì
:
^^ì î 
ParameterDirection
^^ï ß
.
^^ß ®
Input
^^® ≠
)
^^≠ Æ
;
^^Æ Ø

parameters__ 
.__ 
Add__ 
(__ 
name__ #
:__# $
$str__% B
,__B C)
leavePolicyInformationDetails__D a
.__a b$
ConsiderWeekendsHolidays__b z
,__z {
dbType	__| Ç
:
__Ç É
OracleMappingType
__Ñ ï
.
__ï ñ
Int32
__ñ õ
,
__õ ú
	direction
__ù ¶
:
__¶ ß 
ParameterDirection
__® ∫
.
__∫ ª
Input
__ª ¿
)
__¿ ¡
;
__¡ ¬

parameters`` 
.`` 
Add`` 
(`` 
name`` #
:``# $
$str``% @
,``@ A)
leavePolicyInformationDetails``B _
.``_ ` 
CanBeMergedWithOther``` t
,``t u
dbType``v |
:``| }
OracleMappingType	``~ è
.
``è ê
Int32
``ê ï
,
``ï ñ
	direction
``ó †
:
``† ° 
ParameterDirection
``¢ ¥
.
``¥ µ
Input
``µ ∫
)
``∫ ª
;
``ª º

parametersaa 
.aa 
Addaa 
(aa 
nameaa #
:aa# $
$straa% 5
,aa5 6)
leavePolicyInformationDetailsaa7 T
.aaT U
MaximumUsageaaU a
,aaa b
dbTypeaac i
:aai j
OracleMappingTypeaak |
.aa| }
Int32	aa} Ç
,
aaÇ É
	direction
aaÑ ç
:
aaç é 
ParameterDirection
aaè °
.
aa° ¢
Input
aa¢ ß
)
aaß ®
;
aa® ©

parametersbb 
.bb 
Addbb 
(bb 
namebb #
:bb# $
$strbb% 5
,bb5 6)
leavePolicyInformationDetailsbb7 T
.bbT U
ApplicableTobbU a
,bba b
dbTypebbc i
:bbi j
OracleMappingTypebbk |
.bb| }
Int32	bb} Ç
,
bbÇ É
	direction
bbÑ ç
:
bbç é 
ParameterDirection
bbè °
.
bb° ¢
Input
bb¢ ß
)
bbß ®
;
bb® ©

parameterscc 
.cc 
Addcc 
(cc 
namecc #
:cc# $
$strcc% :
,cc: ;)
leavePolicyInformationDetailscc< Y
.ccY Z
CanApplyHalfDayccZ i
,cci j
dbTypecck q
:ccq r
OracleMappingType	ccs Ñ
.
ccÑ Ö
Int32
ccÖ ä
,
ccä ã
	direction
ccå ï
:
ccï ñ 
ParameterDirection
ccó ©
.
cc© ™
Input
cc™ Ø
)
ccØ ∞
;
cc∞ ±

parametersdd 
.dd 
Adddd 
(dd 
namedd #
:dd# $
$strdd% 1
,dd1 2)
leavePolicyInformationDetailsdd3 P
.ddP Q
StatusIDddQ Y
,ddY Z
dbTypedd[ a
:dda b
OracleMappingTypeddc t
.ddt u
Int32ddu z
,ddz {
	direction	dd| Ö
:
ddÖ Ü 
ParameterDirection
ddá ô
.
ddô ö
Input
ddö ü
)
ddü †
;
dd† °

parametersee 
.ee 
Addee 
(ee 
nameee #
:ee# $
$stree% /
,ee/ 0)
leavePolicyInformationDetailsee1 N
.eeN O

RowversioneeO Y
,eeY Z
dbTypeee[ a
:eea b
OracleMappingTypeeec t
.eet u
Int32eeu z
,eez {
	direction	ee| Ö
:
eeÖ Ü 
ParameterDirection
eeá ô
.
eeô ö
Input
eeö ü
)
eeü †
;
ee† °
rowsUpdatedgg 
=gg 
awaitgg #

connectiongg$ .
.gg. /
ExecuteAsyncgg/ ;
(gg; <
DatabaseProceduresgg< N
.ggN O'
SP_UPDATE_POLICY_INFOMATIONggO j
,ggj k

parametersggl v
,ggv w
commandType	ggx É
:
ggÉ Ñ
CommandType
ggÖ ê
.
ggê ë
StoredProcedure
ggë †
)
gg† °
;
gg° ¢
}ii 
isSavedjj 
=jj 
(jj 
rowsUpdatedjj "
*jj# $
-jj% &
$numjj& '
)jj' (
>jj) *
$numjj+ ,
;jj, -
returnkk 
isSavedkk 
;kk 
}ll 	
publicmm 
asyncmm 
Taskmm 
<mm 
boolmm 
>mm (
DeleteLeavePolicyInformationmm  <
(mm< =
intmm= @
policyIDmmA I
)mmI J
{nn 	
booloo 
isSavedoo 
=oo 
falseoo  
;oo  !#
OracleDynamicParameterspp #

parameterspp$ .
=pp/ 0
nullpp1 5
;pp5 6
intqq 
rowsDeletedqq 
=qq 
$numqq 
;qq  
usingrr 
(rr 
IDbConnectionrr  

connectionrr! +
=rr, -
awaitrr. 3
baserr4 8
.rr8 9
CreateConnectionrr9 I
(rrI J
DbSchemarrJ R
.rrR S
PORTALrrS Y
)rrY Z
)rrZ [
{ss 

parametersuu 
=uu 
newuu  #
OracleDynamicParametersuu! 8
(uu8 9
)uu9 :
;uu: ;

parametersvv 
.vv 
Addvv 
(vv 
namevv #
:vv# $
$strvv% 1
,vv1 2
policyIDvv3 ;
,vv; <
dbTypevv= C
:vvC D
OracleMappingTypevvE V
.vvV W
Int32vvW \
,vv\ ]
	directionvv^ g
:vvg h
ParameterDirectionvvi {
.vv{ |
Input	vv| Å
)
vvÅ Ç
;
vvÇ É
rowsDeletedww 
=ww 
awaitww #

connectionww$ .
.ww. /
ExecuteAsyncww/ ;
(ww; <
DatabaseProceduresww< N
.wwN O'
SP_DELETE_POLICY_INFOMATIONwwO j
,wwj k

parameterswwl v
,wwv w
commandType	wwx É
:
wwÉ Ñ
CommandType
wwÖ ê
.
wwê ë
StoredProcedure
wwë †
)
ww† °
;
ww° ¢
}xx 
isSavedyy 
=yy 
(yy 
rowsDeletedyy "
*yy# $
-yy% &
$numyy& '
)yy' (
>yy) *
$numyy+ ,
;yy, -
returnzz 
isSavedzz 
;zz 
}{{ 	
}~~ 
} à7
gF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\ModuleInformationRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Administration& 4
{ 
public 

class '
ModuleInformationRepository ,
:- .
BaseRepository/ =
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public '
ModuleInformationRepository *
(* +
IConfiguration+ 9
configuration: G
,G H
IDistributedCacheI Z

redisCache[ e
)e f
: 
base 
( 
configuration  
)  !
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 

redisCache 
= 

redisCache (
;( )
} 	
public 
async 
Task 
< 
List 
< 
SecurityModule -
>- .
>. /(
LoadActiveModuleInformations0 L
(L M
)M N
{   	
List!! 
<!! 
SecurityModule!! 
>!!  
modules!!! (
=!!) *
new!!+ .
List!!/ 3
<!!3 4
SecurityModule!!4 B
>!!B C
(!!C D
)!!D E
;!!E F
List"" 
<"" 
ScreenInformation"" "
>""" #
screenInformations""$ 6
=""7 8
null""9 =
;""= >
using## 
(## 
var## 

connection## !
=##" #
await##$ )
CreateConnection##* :
(##: ;
DbSchema##; C
.##C D
PORTAL##D J
)##J K
)##K L
{$$ #
OracleDynamicParameters%% '
	parmeters%%( 1
=%%2 3
new%%4 7#
OracleDynamicParameters%%8 O
(%%O P
)%%P Q
;%%Q R
	parmeters&& 
.&& 
Add&& 
(&& 
name&& "
:&&" #
$str&&$ -
,&&- .
dbType&&/ 5
:&&5 6
OracleMappingType&&7 H
.&&H I
	RefCursor&&I R
,&&R S
	direction&&T ]
:&&] ^
ParameterDirection&&_ q
.&&q r
Output&&r x
)&&x y
;&&y z
screenInformations'' "
=''# $
(''% &
await''& +

connection'', 6
.''6 7

QueryAsync''7 A
<''A B
ScreenInformation''B S
>''S T
(''T U
DatabaseProcedures''U g
.''g h!
SP_GET_ACTIVE_SCREENS''h }
,''} ~
	parmeters	'' à
,
''à â
commandType
''ä ï
:
''ï ñ
CommandType
''ó ¢
.
''¢ £
StoredProcedure
''£ ≤
)
''≤ ≥
)
''≥ ¥
.
''¥ µ
ToList
''µ ª
(
''ª º
)
''º Ω
;
''Ω æ
}(( 
modules)) 
=)) 
()) 
from)) 
moduleInformation)) -
in)). 0
screenInformations))1 C
select** 
new** !
SecurityModule**" 0
{++ 
Id-- 
=-- 
moduleInformation--  1
.--1 2
ScreenId--2 :
,--: ;
Name.. 
=..  !
moduleInformation.." 3
...3 4

ScreenName..4 >
,..> ?
StatusId// #
=//$ %
moduleInformation//& 7
.//7 8
StatusId//8 @
,//@ A
ParentId00 #
=00$ %
moduleInformation00& 7
.007 8
ParentScreenId008 F
,00F G
	NodeLevel11 $
=11% &
	NodeLevel11' 0
.110 1
Module111 7
,117 8
NodeType22 #
=22$ %
NodeType22& .
.22. /
Module22/ 5
.225 6
ToString226 >
(22> ?
)22? @
,22@ A
Items33  
=33! "&
LoadActivePageInformations33# =
(33= >
screenInformations33> P
.33P Q
Where33Q V
(33V W
x33W X
=>33Y [
x33\ ]
.33] ^
ParentScreenId33^ l
==33m o
moduleInformation	33p Å
.
33Å Ç
ScreenId
33Ç ä
)
33ä ã
.
33ã å
ToList
33å í
(
33í ì
)
33ì î
)
33î ï
,
33ï ñ
}44 
)44 
.44 
ToList44  
(44  !
)44! "
;44" #
return55 
modules55 
;55 
}66 	
private77 
List77 
<77 
SecurityModule77 #
>77# $&
LoadActivePageInformations77% ?
(77? @
List77@ D
<77D E
ScreenInformation77E V
>77V W
screenInformations77X j
)77j k
{88 	
List99 
<99 
SecurityModule99 
>99  
pages99! &
=99' (
null99) -
;99- .
pages:: 
=:: 
(:: 
from:: 
moduleInformation:: +
in::, .
screenInformations::/ A
select;; 
new;; 
SecurityModule;;  .
{<< 
Id== 
=== 
moduleInformation== /
.==/ 0
ScreenId==0 8
,==8 9
Name>> 
=>> 
moduleInformation>>  1
.>>1 2

ScreenName>>2 <
,>>< =
StatusId?? !
=??" #
moduleInformation??$ 5
.??5 6
StatusId??6 >
,??> ?
ParentId@@ !
=@@" #
moduleInformation@@$ 5
.@@5 6
ParentScreenId@@6 D
,@@D E
	NodeLevelAA "
=AA# $
	NodeLevelAA% .
.AA. /
PageAA/ 3
,AA3 4
NodeTypeBB !
=BB" #
NodeTypeBB$ ,
.BB, -
PageBB- 1
.BB1 2
ToStringBB2 :
(BB: ;
)BB; <
,BB< =
ItemsCC 
=CC  &
LoadActivePageInformationsCC! ;
(CC; <
screenInformationsCC< N
.CCN O
WhereCCO T
(CCT U
xCCU V
=>CCW Y
xCCZ [
.CC[ \
ParentScreenIdCC\ j
==CCk m
moduleInformationCCn 
.	CC Ä
ScreenId
CCÄ à
)
CCà â
.
CCâ ä
ToList
CCä ê
(
CCê ë
)
CCë í
)
CCí ì
,
CCì î
}DD 
)DD 
.DD 
ToListDD 
(DD 
)DD  
;DD  !
returnEE 
pagesEE 
;EE 
}FF 	
}GG 
}HH Õ	
eF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\PageInformationRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Administration& 4
{ 
public 

class %
PageInformationRepository *
:+ ,
BaseRepository- ;
{		 
private

 
readonly

 
IConfiguration

 '
configuration

( 5
;

5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public %
PageInformationRepository (
(( )
IConfiguration) 7
configuration8 E
,E F
IDistributedCacheG X

redisCacheY c
)c d
: 
base 
( 
configuration  
)  !
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 

redisCache 
= 

redisCache (
;( )
} 	
} 
} ﬂ	
kF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\PermissionInformationRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Administration& 4
{ 
public 

class +
PermissionInformationRepository 0
:1 2
BaseRepository3 A
{		 
private

 
readonly

 
IConfiguration

 '
configuration

( 5
;

5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public +
PermissionInformationRepository .
(. /
IConfiguration/ =
configuration> K
,K L
IDistributedCacheM ^

redisCache_ i
)i j
: 
base 
( 
configuration  
)  !
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 

redisCache 
= 

redisCache (
;( )
} 	
} 
} ≤Ü
eF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\RoleInformationRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Administration& 4
{ 
public 

class %
RoleInformationRepository *
:+ ,
BaseRepository- ;
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public %
RoleInformationRepository (
(( )
IConfiguration) 7
configuration8 E
,E F
IDistributedCacheG X

redisCacheY c
)c d
:e f
baseg k
(k l
configurationl y
)y z
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 

redisCache 
= 

redisCache (
;( )
}   	
public"" 
async"" 
Task"" 
<"" 
List"" 
<"" 
RoleInformation"" .
>"". /
>""/ 0
GetUserRoles""1 =
(""= >
long""> B
employeeSlno""C O
)""O P
{## 	
List$$ 
<$$ 
RoleInformation$$  
>$$  !
	userRoles$$" +
=$$, -
null$$. 2
;$$2 3
using&& 
(&& 
var&& 

connection&& !
=&&" #
await&&$ )
CreateConnection&&* :
(&&: ;
DbSchema&&; C
.&&C D
PORTAL&&D J
)&&J K
)&&K L
{'' #
OracleDynamicParameters(( '
	parmeters((( 1
=((2 3
new((4 7#
OracleDynamicParameters((8 O
(((O P
)((P Q
;((Q R
	parmeters)) 
.)) 
Add)) 
()) 
name)) "
:))" #
$str))$ 3
,))3 4
employeeSlno))5 A
,))A B
dbType))C I
:))I J
OracleMappingType))K \
.))\ ]
Int32))] b
,))b c
	direction))d m
:))m n
ParameterDirection	))o Å
.
))Å Ç
Input
))Ç á
)
))á à
;
))à â
	parmeters** 
.** 
Add** 
(** 
name** "
:**" #
$str**$ -
,**- .
dbType**/ 5
:**5 6
OracleMappingType**7 H
.**H I
	RefCursor**I R
,**R S
	direction**T ]
:**] ^
ParameterDirection**_ q
.**q r
Output**r x
)**x y
;**y z
	userRoles++ 
=++ 
(++ 
await++ "

connection++# -
.++- .

QueryAsync++. 8
<++8 9
RoleInformation++9 H
>++H I
(++I J
DatabaseProcedures++J \
.++\ ]
GET_EMPLOYEE_ROLES++] o
,++o p
	parmeters++q z
,++z {
commandType	++| á
:
++á à
CommandType
++â î
.
++î ï
StoredProcedure
++ï §
)
++§ •
)
++• ¶
.
++¶ ß
ToList
++ß ≠
(
++≠ Æ
)
++Æ Ø
;
++Ø ∞
},, 
return-- 
	userRoles-- 
;-- 
}.. 	
public00 
Task00 
<00 
bool00 
>00 
DeActivateRole00 (
(00( )
long00) -
roleSlno00. 6
)006 7
{11 	
throw22 
new22 #
NotImplementedException22 -
(22- .
)22. /
;22/ 0
}33 	
public55 
Task55 
<55 
bool55 
>55 
ActivateRole55 &
(55& '
long55' +
roleSlno55, 4
)554 5
{66 	
throw77 
new77 #
NotImplementedException77 -
(77- .
)77. /
;77/ 0
}88 	
public:: 
async:: 
Task:: 
<:: 
List:: 
<:: 
RoleInformation:: .
>::. /
>::/ 0
GetAllActiveRoles::1 B
(::B C
)::C D
{;; 	
List<< 
<<< 
RoleInformation<<  
><<  !
	userRoles<<" +
=<<, -
null<<. 2
;<<2 3
using>> 
(>> 
var>> 

connection>> !
=>>" #
await>>$ )
CreateConnection>>* :
(>>: ;
DbSchema>>; C
.>>C D
PORTAL>>D J
)>>J K
)>>K L
{?? #
OracleDynamicParameters@@ '
	parmeters@@( 1
=@@2 3
new@@4 7#
OracleDynamicParameters@@8 O
(@@O P
)@@P Q
;@@Q R
	parmetersAA 
.AA 
AddAA 
(AA 
nameAA "
:AA" #
$strAA$ -
,AA- .
dbTypeAA/ 5
:AA5 6
OracleMappingTypeAA7 H
.AAH I
	RefCursorAAI R
,AAR S
	directionAAT ]
:AA] ^
ParameterDirectionAA_ q
.AAq r
OutputAAr x
)AAx y
;AAy z
	userRolesBB 
=BB 
(BB 
awaitBB "

connectionBB# -
.BB- .

QueryAsyncBB. 8
<BB8 9
RoleInformationBB9 H
>BBH I
(BBI J
DatabaseProceduresBBJ \
.BB\ ]
GET_ACTIVE_ROLESBB] m
,BBm n
	parmetersBBo x
,BBx y
commandType	BBz Ö
:
BBÖ Ü
CommandType
BBá í
.
BBí ì
StoredProcedure
BBì ¢
)
BB¢ £
)
BB£ §
.
BB§ •
ToList
BB• ´
(
BB´ ¨
)
BB¨ ≠
;
BB≠ Æ
}CC 
returnDD 
	userRolesDD 
;DD 
}EE 	
publicGG 
asyncGG 
TaskGG 
<GG 
RoleInformationGG )
>GG) *
GetRoleInformationGG+ =
(GG= >
longGG> B
roleSlnoGGC K
)GGK L
{HH 	
RoleInformationII 
roleInformationII +
=II, -
nullII. 2
;II2 3
usingJJ 
(JJ 
varJJ 

connectionJJ !
=JJ" #
awaitJJ$ )
CreateConnectionJJ* :
(JJ: ;
DbSchemaJJ; C
.JJC D
PORTALJJD J
)JJJ K
)JJK L
{KK #
OracleDynamicParametersLL '
	parmetersLL( 1
=LL2 3
newLL4 7#
OracleDynamicParametersLL8 O
(LLO P
)LLP Q
;LLQ R
	parmetersMM 
.MM 
AddMM 
(MM 
nameMM "
:MM" #
$strMM$ /
,MM/ 0
roleSlnoMM1 9
,MM9 :
dbTypeMM; A
:MMA B
OracleMappingTypeMMC T
.MMT U
Int32MMU Z
,MMZ [
	directionMM\ e
:MMe f
ParameterDirectionMMg y
.MMy z
InputMMz 
)	MM Ä
;
MMÄ Å
	parmetersNN 
.NN 
AddNN 
(NN 
nameNN "
:NN" #
$strNN$ -
,NN- .
dbTypeNN/ 5
:NN5 6
OracleMappingTypeNN7 H
.NNH I
	RefCursorNNI R
,NNR S
	directionNNT ]
:NN] ^
ParameterDirectionNN_ q
.NNq r
OutputNNr x
)NNx y
;NNy z
roleInformationOO 
=OO  !

connectionOO" ,
.OO, -

QueryFirstOO- 7
<OO7 8
RoleInformationOO8 G
>OOG H
(OOH I
DatabaseProceduresOOI [
.OO[ \"
P_GET_ROLE_INFORMATIONOO\ r
,OOr s
	parmetersOOt }
,OO} ~
commandType	OO ä
:
OOä ã
CommandType
OOå ó
.
OOó ò
StoredProcedure
OOò ß
)
OOß ®
;
OO® ©
}PP 
returnQQ 
roleInformationQQ "
;QQ" #
}RR 	
publicTT 
asyncTT 
TaskTT 
<TT 
boolTT 
>TT 
MapRolesToUserTT  .
(TT. /
)TT/ 0
{UU 	
boolVV 
isRolesMappedVV 
=VV  
falseVV! &
;VV& '
usingWW 
(WW 
varWW 

connectionWW !
=WW" #
awaitWW$ )
CreateConnectionWW* :
(WW: ;
DbSchemaWW; C
.WWC D
PORTALWWD J
)WWJ K
)WWK L
{XX 
}\\ 
return]] 
isRolesMapped]]  
;]]  !
}^^ 	
public`` 
async`` 
Task`` 
<`` 
bool`` 
>`` 
SaveRoleInformation``  3
(``3 4
RoleInformation``4 C
roleInformation``D S
)``S T
{aa 	
boolbb 
isRoleSavedbb 
=bb 
falsebb $
;bb$ %
intcc 
updatedRecordscc 
=cc  
$numcc! "
;cc" #
usingdd 
(dd 
vardd 

connectiondd !
=dd" #
awaitdd$ )
CreateConnectiondd* :
(dd: ;
DbSchemadd; C
.ddC D
PORTALddD J
)ddJ K
)ddK L
{ee #
OracleDynamicParametersff '
	parmetersff( 1
=ff2 3
newff4 7#
OracleDynamicParametersff8 O
(ffO P
)ffP Q
;ffQ R
	parmetersgg 
.gg 
Addgg 
(gg 
namegg "
:gg" #
$strgg$ /
,gg/ 0
roleInformationgg1 @
.gg@ A
RoleIdggA G
,ggG H
dbTypeggI O
:ggO P
OracleMappingTypeggQ b
.ggb c
Int32ggc h
,ggh i
	directionggj s
:ggs t
ParameterDirection	ggu á
.
ggá à
Input
ggà ç
)
ggç é
;
ggé è
	parmetershh 
.hh 
Addhh 
(hh 
namehh "
:hh" #
$strhh$ 0
,hh0 1
roleInformationhh2 A
.hhA B
RoleNamehhB J
,hhJ K
dbTypehhL R
:hhR S
OracleMappingTypehhT e
.hhe f
Varchar2hhf n
,hhn o
	directionhhp y
:hhy z
ParameterDirection	hh{ ç
.
hhç é
Input
hhé ì
)
hhì î
;
hhî ï
	parmetersii 
.ii 
Addii 
(ii 
nameii "
:ii" #
$strii$ 2
,ii2 3
roleInformationii4 C
.iiC D
DescriptioniiD O
,iiO P
dbTypeiiQ W
:iiW X
OracleMappingTypeiiY j
.iij k
Varchar2iik s
,iis t
	directioniiu ~
:ii~  
ParameterDirection
iiÄ í
.
iií ì
Input
iiì ò
)
iiò ô
;
iiô ö
	parmetersjj 
.jj 
Addjj 
(jj 
namejj "
:jj" #
$strjj$ .
,jj. /
roleInformationjj0 ?
.jj? @
IsAdminjj@ G
,jjG H
dbTypejjI O
:jjO P
OracleMappingTypejjQ b
.jjb c
Int32jjc h
,jjh i
	directionjjj s
:jjs t
ParameterDirection	jju á
.
jjá à
Input
jjà ç
)
jjç é
;
jjé è
	parmeterskk 
.kk 
Addkk 
(kk 
namekk "
:kk" #
$strkk$ 0
,kk0 1
$numkk2 3
,kk3 4
dbTypekk5 ;
:kk; <
OracleMappingTypekk= N
.kkN O
Int32kkO T
,kkT U
	directionkkV _
:kk_ `
ParameterDirectionkka s
.kks t
Inputkkt y
)kky z
;kkz {
updatedRecordsll 
=ll  
awaitll! &

connectionll' 1
.ll1 2
ExecuteAsyncll2 >
(ll> ?
DatabaseProceduresll? Q
.llQ R#
P_SAVE_ROLE_INFORMATIONllR i
,lli j
	parmetersllk t
,llt u
commandType	llv Å
:
llÅ Ç
CommandType
llÉ é
.
llé è
StoredProcedure
llè û
)
llû ü
;
llü †
}mm 
returnnn 
(nn 
updatedRecordsnn "
*nn# $
-nn% &
$numnn& '
)nn' (
>nn) *
$numnn+ ,
;nn, -
}oo 	
internalqq 
asyncqq 
Taskqq 
<qq 
Listqq  
<qq  !
RoleInformationqq! 0
>qq0 1
>qq1 2
GetMappedRolesqq3 A
(qqA B
intqqB E
employeeSlnoqqF R
)qqR S
{rr 	
Listss 
<ss 
RoleInformationss  
>ss  !
mappedRolesss" -
=ss. /
nullss0 4
;ss4 5
usinguu 
(uu 
varuu 

connectionuu !
=uu" #
awaituu$ )
CreateConnectionuu* :
(uu: ;
DbSchemauu; C
.uuC D
PORTALuuD J
)uuJ K
)uuK L
{vv #
OracleDynamicParametersww '
	parmetersww( 1
=ww2 3
newww4 7#
OracleDynamicParametersww8 O
(wwO P
)wwP Q
;wwQ R
	parmetersxx 
.xx 
Addxx 
(xx 
namexx "
:xx" #
$strxx$ 3
,xx3 4
employeeSlnoxx5 A
,xxA B
dbTypexxC I
:xxI J
OracleMappingTypexxK \
.xx\ ]
Int32xx] b
,xxb c
	directionxxd m
:xxm n
ParameterDirection	xxo Å
.
xxÅ Ç
Input
xxÇ á
)
xxá à
;
xxà â
	parmetersyy 
.yy 
Addyy 
(yy 
nameyy "
:yy" #
$stryy$ -
,yy- .
dbTypeyy/ 5
:yy5 6
OracleMappingTypeyy7 H
.yyH I
	RefCursoryyI R
,yyR S
	directionyyT ]
:yy] ^
ParameterDirectionyy_ q
.yyq r
Outputyyr x
)yyx y
;yyy z
mappedRoleszz 
=zz 
(zz 
awaitzz $

connectionzz% /
.zz/ 0

QueryAsynczz0 :
<zz: ;
RoleInformationzz; J
>zzJ K
(zzK L
DatabaseProcedureszzL ^
.zz^ _!
SP_GET_EMPLOYEE_ROLESzz_ t
,zzt u
	parmeterszzv 
,	zz Ä
commandType
zzÅ å
:
zzå ç
CommandType
zzé ô
.
zzô ö
StoredProcedure
zzö ©
)
zz© ™
)
zz™ ´
.
zz´ ¨
ToList
zz¨ ≤
(
zz≤ ≥
)
zz≥ ¥
;
zz¥ µ
}{{ 
return|| 
mappedRoles|| 
;|| 
}}} 	
public 
async 
Task 
< 
List 
< 
RoleInformation .
>. /
>/ 0
SearchRoles1 <
(< =)
RoleInformationSearchCriteria= Z
searchCriteria[ i
)i j
{
ÄÄ 	
List
ÅÅ 
<
ÅÅ 
RoleInformation
ÅÅ  
>
ÅÅ  !
	userRoles
ÅÅ" +
=
ÅÅ, -
null
ÅÅ. 2
;
ÅÅ2 3
using
ÉÉ 
(
ÉÉ 
var
ÉÉ 

connection
ÉÉ !
=
ÉÉ" #
await
ÉÉ$ )
CreateConnection
ÉÉ* :
(
ÉÉ: ;
DbSchema
ÉÉ; C
.
ÉÉC D
PORTAL
ÉÉD J
)
ÉÉJ K
)
ÉÉK L
{
ÑÑ %
OracleDynamicParameters
ÖÖ '
	parmeters
ÖÖ( 1
=
ÖÖ2 3
new
ÖÖ4 7%
OracleDynamicParameters
ÖÖ8 O
(
ÖÖO P
)
ÖÖP Q
;
ÖÖQ R
	parmeters
ÜÜ 
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
name
ÜÜ "
:
ÜÜ" #
$str
ÜÜ$ -
,
ÜÜ- .
dbType
ÜÜ/ 5
:
ÜÜ5 6
OracleMappingType
ÜÜ7 H
.
ÜÜH I
	RefCursor
ÜÜI R
,
ÜÜR S
	direction
ÜÜT ]
:
ÜÜ] ^ 
ParameterDirection
ÜÜ_ q
.
ÜÜq r
Output
ÜÜr x
)
ÜÜx y
;
ÜÜy z
	userRoles
áá 
=
áá 
(
áá 
await
áá "

connection
áá# -
.
áá- .

QueryAsync
áá. 8
<
áá8 9
RoleInformation
áá9 H
>
ááH I
(
ááI J 
DatabaseProcedures
ááJ \
.
áá\ ]'
P_SEARCH_ROLE_INFORMATION
áá] v
,
ááv w
	parmetersááx Å
,ááÅ Ç
commandTypeááÉ é
:ááé è
CommandTypeááê õ
.ááõ ú
StoredProcedureááú ´
)áá´ ¨
)áá¨ ≠
.áá≠ Æ
ToListááÆ ¥
(áá¥ µ
)ááµ ∂
;áá∂ ∑
}
àà 
return
ââ 
	userRoles
ââ 
;
ââ 
}
ää 	
}
ãã 
}çç ∏
dF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\RolePermissionRepository.cs
	namespace		 	
Phoenix		
 
.		 
Database		 
.		 

Repository		 %
.		% &
Administration		& 4
{

 
public 

class $
RolePermissionRepository )
:* +
BaseRepository, :
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public $
RolePermissionRepository '
(' (
IConfiguration( 6
configuration7 D
,D E
IDistributedCacheF W

redisCacheX b
)b c
: 
base 
( 
configuration  
)  !
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 

redisCache 
= 

redisCache (
;( )
} 	
public 
List 
< !
PermissionInformation )
>) *!
LoadMappedPermissions+ @
(@ A
intA D
roleIdE K
)K L
{ 	
List 
< !
PermissionInformation &
>& '
permissions( 3
=4 5
null6 :
;: ;
return 
permissions 
; 
} 	
public 
bool 
SavePermissions #
(# $
List$ (
<( )
SecurityModule) 7
>7 8
permissions9 D
,D E
intF I
roleIdJ P
)P Q
{ 	
List   
<   
RolePermission   
>    
rolePermissions  ! 0
=  1 2
null  3 7
;  7 8
List!! 
<!! 
RolePermission!! 
>!!  &
toBeDeletedRolePermissions!!! ;
=!!< =
null!!> B
;!!B C
rolePermissions"" 
="" 
new"" !
List""" &
<""& '
RolePermission""' 5
>""5 6
(""6 7
)""7 8
;""8 9
return22 
true22 
;22 
}33 	
private55 
RoleInformation55 #
PopulateRoleInformation55  7
(557 8
int558 ;
roleId55< B
)55B C
{66 	
RoleInformation77 
roleInformation77 +
=77, -
null77. 2
;772 3
using88 
(88 %
RoleInformationRepository88 ,
roleRepository88- ;
=88< =
new88> A%
RoleInformationRepository88B [
(88[ \
configuration88\ i
,88i j

redisCache88k u
)88u v
)88v w
{99 
};; 
return== 
roleInformation== "
;==" #
}>> 	
private@@ !
PermissionInformation@@ %)
PopulatePermisisonInformation@@& C
(@@C D
int@@D G
permissionId@@H T
)@@T U
{AA 	!
PermissionInformationBB !!
permissionInformationBB" 7
=BB8 9
nullBB: >
;BB> ?
usingCC 
(CC +
PermissionInformationRepositoryCC 2
roleRepositoryCC3 A
=CCB C
newCCD G+
PermissionInformationRepositoryCCH g
(CCg h
configurationCCh u
,CCu v

redisCache	CCw Å
)
CCÅ Ç
)
CCÇ É
{DD 
}FF 
returnHH !
permissionInformationHH (
;HH( )
}II 	
}JJ 
}KK «v
dF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\SecurityModuleRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Administration& 4
{ 
public 

class $
SecurityModuleRepository )
:* +
BaseRepository, :
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public $
SecurityModuleRepository '
(' (
IConfiguration( 6
configuration7 D
,D E
IDistributedCacheF W

redisCacheX b
)b c
:d e
basef j
(j k
configurationk x
)x y
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 

redisCache 
= 

redisCache (
;( )
} 	
public   
async   
Task   
<   
List   
<   
SecurityModule   -
>  - .
>  . /!
LoadMappedPermissions  0 E
(  E F
int  F I
roleId  J P
)  P Q
{!! 	
List"" 
<"" 
SecurityModule"" 
>""  
securityModules""! 0
=""1 2
null""3 7
;""7 8
List## 
<## 
SecurityModule## 
>##  
mappedPermissions##! 2
=##3 4
null##5 9
;##9 :
List$$ 
<$$ 
SecurityModule$$ 
>$$  
modules$$! (
=$$) *
null$$+ /
;$$/ 0
securityModules%% 
=%% 
new%% !
List%%" &
<%%& '
SecurityModule%%' 5
>%%5 6
(%%6 7
)%%7 8
;%%8 9
modules'' 
='' 
await'' (
LoadActiveModuleInformations'' 8
(''8 9
)''9 :
;'': ;
mappedPermissions(( 
=(( 
await((  %!
LoadRoleMappedScreens((& ;
(((; <
roleId((< B
)((B C
;((C D
foreach)) 
()) 
SecurityModule)) #
mainPermission))$ 2
in))3 5
modules))6 =
)))= >
{** 
SecurityModule++ 

permission++ )
=++* +
mappedPermissions++, =
.++= >
Where++> C
(++C D
x++D E
=>++F H
x++I J
.++J K
Id++K M
==++N P
mainPermission++Q _
.++_ `
Id++` b
)++b c
.++c d
FirstOrDefault++d r
(++r s
)++s t
;++t u
if,, 
(,, 

permission,, 
!=,, !
null,," &
),,& '
{-- 
mainPermission.. "
..." #
RolePermission..# 1
=..2 3
true..4 8
;..8 9
}// 
}00 
securityModules11 
.11 
AddRange11 $
(11$ %
modules11% ,
)11, -
;11- .
return22 
securityModules22 "
;22" #
}33 	
private55 
async55 
Task55 
<55 
List55 
<55  
SecurityModule55  .
>55. /
>55/ 0(
LoadActiveModuleInformations551 M
(55M N
)55N O
{66 	
List77 
<77 
SecurityModule77 
>77  $
activeModuleInformations77! 9
=77: ;
null77< @
;77@ A
using88 
(88 '
ModuleInformationRepository88 .

repository88/ 9
=88: ;
new88< ?'
ModuleInformationRepository88@ [
(88[ \
this88\ `
.88` a
configuration88a n
,88n o
this88p t
.88t u

redisCache88u 
)	88 Ä
)
88Ä Å
{99 $
activeModuleInformations:: (
=::) *
await::+ 0

repository::1 ;
.::; <(
LoadActiveModuleInformations::< X
(::X Y
)::Y Z
;::Z [
};; 
return<< $
activeModuleInformations<< +
;<<+ ,
}== 	
public?? 
async?? 
Task?? 
<?? 
bool?? 
>?? 
SavePermissions??  /
(??/ 0
List??0 4
<??4 5
SecurityModule??5 C
>??C D
permissions??E P
,??P Q
int??R U
roleId??V \
)??\ ]
{@@ 	
boolAA 
isSavedAA 
=AA 
falseAA  
;AA  !
ListBB 
<BB 
intBB 
>BB 
selectedPermissionsBB )
=BB* +
permissionsBB, 7
.BB7 8
SelectBB8 >
(BB> ?
xBB? @
=>BBA C
xBBD E
.BBE F
IdBBF H
)BBH I
.BBI J
ToListBBJ P
(BBP Q
)BBQ R
;BBR S
intCC 
updatedRecordsCC 
=CC  
$numCC! "
;CC" #
intDD 
rowsUpdatedDD 
=DD 
$numDD 
;DD  
usingEE 
(EE 
varEE 

connectionEE !
=EE" #
awaitEE$ )
CreateConnectionEE* :
(EE: ;
DbSchemaEE; C
.EEC D
PORTALEED J
)EEJ K
)EEK L
{FF #
OracleDynamicParametersGG '
	parmetersGG( 1
=GG2 3
newGG4 7#
OracleDynamicParametersGG8 O
(GGO P
)GGP Q
;GGQ R
	parmetersHH 
.HH 
AddHH 
(HH 
nameHH "
:HH" #
$strHH$ 2
,HH2 3
selectedPermissionsHH4 G
.HHG H
ToArrayHHH O
(HHO P
)HHP Q
,HHQ R
dbTypeHHS Y
:HHY Z
OracleMappingTypeHH[ l
.HHl m
Int32HHm r
,HHr s
	directionHHt }
:HH} ~
ParameterDirection	HH ë
.
HHë í
Input
HHí ó
,
HHó ò!
selectedPermissions
HHô ¨
.
HH¨ ≠
Count
HH≠ ≤
,
HH≤ ≥
collectionTypeII "
:II" #'
OracleMappingCollectionTypeII$ ?
.II? @!
PLSQLAssociativeArrayII@ U
)IIU V
;IIV W
	parmetersJJ 
.JJ 
AddJJ 
(JJ 
nameJJ "
:JJ" #
$strJJ$ /
,JJ/ 0
roleIdJJ1 7
,JJ7 8
dbTypeJJ9 ?
:JJ? @
OracleMappingTypeJJA R
.JJR S
Int32JJS X
,JJX Y
	directionJJZ c
:JJc d
ParameterDirectionJJe w
.JJw x
InputJJx }
)JJ} ~
;JJ~ 
	parmetersKK 
.KK 
AddKK 
(KK 
nameKK "
:KK" #
$strKK$ 5
,KK5 6
$numKK7 <
,KK< =
dbTypeKK> D
:KKD E
OracleMappingTypeKKF W
.KKW X
Int32KKX ]
,KK] ^
	directionKK_ h
:KKh i
ParameterDirectionKKj |
.KK| }
Input	KK} Ç
)
KKÇ É
;
KKÉ Ñ
	parmetersLL 
.LL 
AddLL 
(LL 
nameLL "
:LL" #
$strLL$ 6
,LL6 7
dbTypeLL8 >
:LL> ?
OracleMappingTypeLL@ Q
.LLQ R
Int32LLR W
,LLW X
	directionLLY b
:LLb c
ParameterDirectionLLd v
.LLv w
OutputLLw }
)LL} ~
;LL~ 
updatedRecordsMM 
=MM  
awaitMM! &

connectionMM' 1
.MM1 2
ExecuteAsyncMM2 >
(MM> ?
DatabaseProceduresMM? Q
.MMQ R
SP_SAVE_PERMISSIONSMMR e
,MMe f
	parmetersMMg p
,MMp q
commandTypeMMr }
:MM} ~
CommandType	MM ä
.
MMä ã
StoredProcedure
MMã ö
)
MMö õ
;
MMõ ú
rowsUpdatedNN 
=NN 
	parmetersNN '
.NN' (
GetNN( +
<NN+ ,
intNN, /
>NN/ 0
(NN0 1
$strNN1 C
)NNC D
;NND E
}OO 
isSavedQQ 
=QQ 
rowsUpdatedQQ !
>QQ" #
$numQQ$ %
;QQ% &
returnRR 
isSavedRR 
;RR 
}SS 	
privateUU 
asyncUU 
TaskUU 
<UU 
ListUU 
<UU  
SecurityModuleUU  .
>UU. /
>UU/ 0!
LoadRoleMappedScreensUU1 F
(UUF G
intUUG J
roleIdUUK Q
)UUQ R
{VV 	
ListWW 
<WW 
SecurityModuleWW 
>WW  
modulesWW! (
=WW) *
newWW+ .
ListWW/ 3
<WW3 4
SecurityModuleWW4 B
>WWB C
(WWC D
)WWD E
;WWE F
ListXX 
<XX 
ScreenInformationXX "
>XX" #
screenInformationsXX$ 6
=XX7 8
nullXX9 =
;XX= >
usingYY 
(YY 
varYY 

connectionYY !
=YY" #
awaitYY$ )
CreateConnectionYY* :
(YY: ;
DbSchemaYY; C
.YYC D
PORTALYYD J
)YYJ K
)YYK L
{ZZ #
OracleDynamicParameters[[ '
	parmeters[[( 1
=[[2 3
new[[4 7#
OracleDynamicParameters[[8 O
([[O P
)[[P Q
;[[Q R
	parmeters\\ 
.\\ 
Add\\ 
(\\ 
name\\ "
:\\" #
$str\\$ /
,\\/ 0
roleId\\1 7
,\\7 8
dbType\\9 ?
:\\? @
OracleMappingType\\A R
.\\R S
Int32\\S X
,\\X Y
	direction\\Z c
:\\c d
ParameterDirection\\e w
.\\w x
Input\\x }
)\\} ~
;\\~ 
	parmeters]] 
.]] 
Add]] 
(]] 
name]] "
:]]" #
$str]]$ -
,]]- .
dbType]]/ 5
:]]5 6
OracleMappingType]]7 H
.]]H I
	RefCursor]]I R
,]]R S
	direction]]T ]
:]]] ^
ParameterDirection]]_ q
.]]q r
Output]]r x
)]]x y
;]]y z
screenInformations^^ "
=^^# $
(^^% &
await^^& +

connection^^, 6
.^^6 7

QueryAsync^^7 A
<^^A B
ScreenInformation^^B S
>^^S T
(^^T U
DatabaseProcedures^^U g
.^^g h
SP_GET_ROLE_SCREENS^^h {
,^^{ |
	parmeters	^^} Ü
,
^^Ü á
commandType
^^à ì
:
^^ì î
CommandType
^^ï †
.
^^† °
StoredProcedure
^^° ∞
)
^^∞ ±
)
^^± ≤
.
^^≤ ≥
ToList
^^≥ π
(
^^π ∫
)
^^∫ ª
;
^^ª º
}__ 
modules`` 
=`` 
(`` 
from`` 
moduleInformation`` -
in``. 0
screenInformations``1 C
selectaa 
newaa !
SecurityModuleaa" 0
{bb 
Iddd 
=dd 
moduleInformationdd  1
.dd1 2
ScreenIddd2 :
,dd: ;
Nameee 
=ee  !
moduleInformationee" 3
.ee3 4

ScreenNameee4 >
,ee> ?
StatusIdff #
=ff$ %
moduleInformationff& 7
.ff7 8
StatusIdff8 @
,ff@ A
ParentIdgg #
=gg$ %
moduleInformationgg& 7
.gg7 8
ParentScreenIdgg8 F
,ggF G
	NodeLevelhh $
=hh% &
Enumerationshh' 3
.hh3 4
	NodeLevelhh4 =
.hh= >
Modulehh> D
,hhD E
NodeTypeii #
=ii$ %
Enumerationsii& 2
.ii2 3
NodeTypeii3 ;
.ii; <
Moduleii< B
.iiB C
ToStringiiC K
(iiK L
)iiL M
,iiM N
Itemsjj  
=jj! " 
LoadPageInformationsjj# 7
(jj7 8
screenInformationsjj8 J
.jjJ K
WherejjK P
(jjP Q
xjjQ R
=>jjS U
xjjV W
.jjW X
ParentScreenIdjjX f
==jjg i
moduleInformationjjj {
.jj{ |
ScreenId	jj| Ñ
)
jjÑ Ö
.
jjÖ Ü
ToList
jjÜ å
(
jjå ç
)
jjç é
)
jjé è
,
jjè ê
}kk 
)kk 
.kk 
ToListkk  
(kk  !
)kk! "
;kk" #
returnll 
modulesll 
;ll 
}mm 	
privateoo 
Listoo 
<oo 
SecurityModuleoo #
>oo# $ 
LoadPageInformationsoo% 9
(oo9 :
Listoo: >
<oo> ?
ScreenInformationoo? P
>ooP Q
screenInformationsooR d
)ood e
{pp 	
Listqq 
<qq 
SecurityModuleqq 
>qq  
modulesqq! (
=qq) *
nullqq+ /
;qq/ 0
modulesrr 
=rr 
(rr 
fromrr 
moduleInformationrr -
inrr. 0
screenInformationsrr1 C
selectss 
newss !
SecurityModuless" 0
{tt 
Idvv 
=vv 
moduleInformationvv  1
.vv1 2
ScreenIdvv2 :
,vv: ;
Nameww 
=ww  !
moduleInformationww" 3
.ww3 4

ScreenNameww4 >
,ww> ?
StatusIdxx #
=xx$ %
moduleInformationxx& 7
.xx7 8
StatusIdxx8 @
,xx@ A
ParentIdyy #
=yy$ %
moduleInformationyy& 7
.yy7 8
ParentScreenIdyy8 F
,yyF G
	NodeLevelzz $
=zz% &
Enumerationszz' 3
.zz3 4
	NodeLevelzz4 =
.zz= >
Modulezz> D
,zzD E
NodeType{{ #
={{$ %
Enumerations{{& 2
.{{2 3
NodeType{{3 ;
.{{; <
Module{{< B
.{{B C
ToString{{C K
({{K L
){{L M
,{{M N
Items||  
=||! " 
LoadPageInformations||# 7
(||7 8
screenInformations||8 J
.||J K
Where||K P
(||P Q
x||Q R
=>||S U
x||V W
.||W X
ParentScreenId||X f
==||g i
moduleInformation||j {
.||{ |
ScreenId	||| Ñ
)
||Ñ Ö
.
||Ö Ü
ToList
||Ü å
(
||å ç
)
||ç é
)
||é è
,
||è ê
}}} 
)}} 
.}} 
ToList}}  
(}}  !
)}}! "
;}}" #
return~~ 
modules~~ 
;~~ 
} 	
}
ÄÄ 
}ÅÅ ¥«
eF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Administration\UserInformationRepository.cs
	namespace   	
Phoenix  
 
.   
Database   
.   

Repository   %
.  % &
Administration  & 4
{!! 
public"" 

class"" %
UserInformationRepository"" *
:""+ ,
BaseRepository""- ;
{## 
private$$ 
readonly$$ 
IConfiguration$$ '
configuration$$( 5
;$$5 6
private%% 
readonly%% 
ICryptography%% &
cryptography%%' 3
;%%3 4
private&& 
readonly&& 
IDistributedCache&& *

redisCache&&+ 5
;&&5 6
private'' 
readonly'' 
IJwtAuthManager'' (
jwtAuthManager'') 7
;''7 8
public(( %
UserInformationRepository(( (
(((( )
IConfiguration(() 7
configuration((8 E
,((E F
ICryptography((G T
cryptography((U a
,((a b
IDistributedCache((c t

redisCache((u 
,	(( Ä
IJwtAuthManager
((Å ê
jwtAuthManager
((ë ü
)
((ü †
:
((° ¢
base
((£ ß
(
((ß ®
configuration
((® µ
)
((µ ∂
{)) 	
this** 
.** 
configuration** 
=**  
configuration**! .
;**. /
this++ 
.++ 
cryptography++ 
=++ 
cryptography++  ,
;++, -
this,, 
.,, 

redisCache,, 
=,, 

redisCache,, (
;,,( )
this-- 
.-- 
jwtAuthManager-- 
=--  !
jwtAuthManager--" 0
;--0 1
}// 	
public11 
async11 
Task11 
<11 
bool11 
>11 
ActivateUser11  ,
(11, -
long11- 1
employeeSlno112 >
)11> ?
{22 	
int33 
updatedRecords33 
=33  
$num33! "
;33" #
string44 

loginQuery44 
=44 
$str44  _
;44_ `
using55 
(55 
IDbConnection55  

connection55! +
=55, -
await55. 3
CreateConnection554 D
(55D E
DbSchema55E M
.55M N
PORTAL55N T
)55T U
)55U V
{66 
string77 
query77 
=77 
string77 %
.77% &
Format77& ,
(77, -

loginQuery77- 7
,777 8
employeeSlno779 E
)77E F
;77F G
updatedRecords88 
=88  
await88! &

connection88' 1
.881 2
ExecuteAsync882 >
(88> ?
query88? D
)88D E
;88E F
}99 
return;; 
updatedRecords;; !
>;;" #
$num;;$ %
;;;% &
}== 	
private@@ 
async@@ 
Task@@ 
<@@ 
string@@ !
>@@! "
GetEqualToken@@# 0
(@@0 1
string@@1 7
customizedId@@8 D
,@@D E
EmployeeProfile@@F U
profile@@V ]
)@@] ^
{AA 	
RestClientOptionsCC 
optionsCC %
=CC& '
newCC( +
RestClientOptionsCC, =
(CC= >
EqualSettingsCC> K
.CCK L
CurrentCCL S
.CCS T
EqualInitGateWayUrlCCT g
)CCg h
{DD 
TimeoutEE 
=EE 
-EE 
$numEE 
}FF 
;FF 
stringHH 
validationKeyHH  
=HH! "
EqualSettingsHH# 0
.HH0 1
CurrentHH1 8
.HH8 9
ExperiencedPersonHH9 J
;HHJ K
InitiateRequestJJ 
requestJJ #
=JJ$ %
newJJ& )
InitiateRequestJJ* 9
(JJ9 :
)JJ: ;
{KK 
idempotency_idLL 
=LL  
customizedIdLL! -
,LL- .
gateway_instance_idNN #
=NN$ %
profileNN& -
.NN- .
EqualGateWayNN. :
,NN: ;
keysOO 
=OO 
newOO 
ListOO 
<OO  
KeyOO  #
>OO# $
(OO$ %
)OO% &
}PP 
;PP 
varZZ 
clientZZ 
=ZZ 
newZZ 

RestClientZZ '
(ZZ' (
optionsZZ( /
)ZZ/ 0
;ZZ0 1
var[[ 
restRequest[[ 
=[[ 
new[[ !
RestRequest[[" -
([[- .
EqualSettings[[. ;
.[[; <
Current[[< C
.[[C D!
InitializeTransaction[[D Y
,[[Y Z
Method[[[ a
.[[a b
Post[[b f
)[[f g
;[[g h
client\\ 
.\\ 
Authenticator\\  
=\\! "
new\\# &"
HttpBasicAuthenticator\\' =
(\\= >
EqualSettings\\> K
.\\K L
Current\\L S
.\\S T
ClientId\\T \
,\\\ ]
EqualSettings\\^ k
.\\k l
Current\\l s
.\\s t
ClientSecret	\\t Ä
)
\\Ä Å
;
\\Å Ç
restRequest]] 
.]] 
	AddHeader]] !
(]]! "
$str]]" 0
,]]0 1
$str]]2 D
)]]D E
;]]E F
var^^ 
body^^ 
=^^ 
JsonConvert^^ "
.^^" #
SerializeObject^^# 2
(^^2 3
request^^3 :
)^^: ;
;^^; <
restRequest__ 
.__ 
AddStringBody__ %
(__% &
body__& *
,__* +

DataFormat__, 6
.__6 7
Json__7 ;
)__; <
;__< =
RestResponse`` 
response`` !
=``" #
await``$ )
client``* 0
.``0 1
ExecuteAsync``1 =
(``= >
restRequest``> I
)``I J
;``J K
TokenResponsebb 
tokenResponsebb '
=bb( )
JsonConvertbb* 5
.bb5 6
DeserializeObjectbb6 G
<bbG H
TokenResponsebbH U
>bbU V
(bbV W
responsebbW _
.bb_ `
Contentbb` g
)bbg h
;bbh i
returncc 
tokenResponsecc  
.cc  !
tokencc! &
;cc& '
}dd 	
publicee 
asyncee 
Taskee 
<ee 
boolee 
>ee )
FetchEqualVerificationDetialsee  =
(ee= >
stringee> D
tokeneeE J
)eeJ K
{ff 	
RestClientOptionsgg 
optionsgg %
=gg& '
newgg( +
RestClientOptionsgg, =
(gg= >
EqualSettingsgg> K
.ggK L
CurrentggL S
.ggS T
EqualGateWayUrlggT c
)ggc d
{hh 
Timeoutii 
=ii 
-ii 
$numii 
}jj 
;jj 
varll 
clientll 
=ll 
newll 

RestClientll '
(ll' (
optionsll( /
)ll/ 0
;ll0 1
varmm 
requestmm 
=mm 
newmm 
RestRequestmm )
(mm) *
EqualSettingsmm* 7
.mm7 8
Currentmm8 ?
.mm? @
	FetchDatamm@ I
,mmI J
MethodmmK Q
.mmQ R
PostmmR V
)mmV W
;mmW X
clientnn 
.nn 
Authenticatornn  
=nn! "
newnn# &"
HttpBasicAuthenticatornn' =
(nn= >
EqualSettingsnn> K
.nnK L
CurrentnnL S
.nnS T
ClientIdnnT \
,nn\ ]
EqualSettingsnn^ k
.nnk l
Currentnnl s
.nns t
ClientSecret	nnt Ä
)
nnÄ Å
;
nnÅ Ç
requestoo 
.oo 
	AddHeaderoo 
(oo 
$stroo ,
,oo, -
$stroo. @
)oo@ A
;ooA B
requestpp 
.pp 
	AddHeaderpp 
(pp 
$strpp &
,pp& '
$strpp( :
)pp: ;
;pp; <
stringrr 
bodyrr 
=rr 
stringrr  
.rr  !
Formatrr! '
(rr' (
$strrr( 1
,rr1 2
tokenrr3 8
)rr8 9
;rr9 :
requestss 
.ss 
AddStringBodyss !
(ss! "
bodyss" &
,ss& '

DataFormatss( 2
.ss2 3
Jsonss3 7
)ss7 8
;ss8 9
RestResponsett 
responsett !
=tt" #
awaittt$ )
clienttt* 0
.tt0 1
ExecuteAsynctt1 =
(tt= >
requesttt> E
)ttE F
;ttF G
TokenResponseuu 
tokenResponseuu '
=uu( )
JsonConvertuu* 5
.uu5 6
DeserializeObjectuu6 G
<uuG H
TokenResponseuuH U
>uuU V
(uuV W
responseuuW _
.uu_ `
Contentuu` g
)uug h
;uuh i
returnww 
tokenResponseww  
.ww  !
statusww! '
==ww( *
$strww+ 4
;ww4 5
}xx 	
publicyy 
asyncyy 
Taskyy 
<yy 
UserInformationyy )
>yy) *
AuthenticateUseryy+ ;
(yy; <
LoginInformationyy< L
loginInformationyyM ]
)yy] ^
{zz 	
UserInformation{{ 
userInformation{{ +
={{, -
null{{. 2
;{{2 3
string|| 
password|| 
=|| 
string|| $
.||$ %
Empty||% *
;||* +
using
ÑÑ 
(
ÑÑ 
var
ÑÑ 

connection
ÑÑ !
=
ÑÑ" #
await
ÑÑ$ )
base
ÑÑ* .
.
ÑÑ. /
CreateConnection
ÑÑ/ ?
(
ÑÑ? @
DbSchema
ÑÑ@ H
.
ÑÑH I
PORTAL
ÑÑI O
)
ÑÑO P
)
ÑÑP Q
{
ÖÖ %
OracleDynamicParameters
ÜÜ '

parameters
ÜÜ( 2
=
ÜÜ3 4
new
ÜÜ5 8%
OracleDynamicParameters
ÜÜ9 P
(
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S

parameters
áá 
.
áá 
Add
áá 
(
áá 
name
áá #
:
áá# $
$str
áá% .
,
áá. /
loginInformation
áá0 @
.
áá@ A
UserName
ááA I
,
ááI J
dbType
ááK Q
:
ááQ R
OracleMappingType
ááS d
.
áád e
Varchar2
ááe m
,
áám n
	direction
ááo x
:
ááx y!
ParameterDirectionááz å
.ááå ç
Inputááç í
)ááí ì
;ááì î

parameters
àà 
.
àà 
Add
àà 
(
àà 
name
àà #
:
àà# $
$str
àà% .
,
àà. /
dbType
àà0 6
:
àà6 7
OracleMappingType
àà8 I
.
ààI J
	RefCursor
ààJ S
,
ààS T
	direction
ààU ^
:
àà^ _ 
ParameterDirection
àà` r
.
ààr s
Output
ààs y
)
àày z
;
ààz {
userInformation
ââ 
=
ââ  !

connection
ââ" ,
.
ââ, -!
QueryFirstOrDefault
ââ- @
<
ââ@ A
UserInformation
ââA P
>
ââP Q
(
ââQ R 
DatabaseProcedures
ââR d
.
ââd e
VALIDATE_USER
ââe r
,
ââr s

parameters
âât ~
,
ââ~ 
commandTypeââÄ ã
:ââã å
CommandTypeââç ò
.ââò ô
StoredProcedureââô ®
)ââ® ©
;ââ© ™
}
ää 
if
ãã 
(
ãã 
userInformation
ãã 
!=
ãã  "
null
ãã# '
)
ãã' (
{
åå 
string
çç 
	plianText
çç  
=
çç! "
string
çç# )
.
çç) *
Empty
çç* /
;
çç/ 0
if
éé 
(
éé 
!
éé 
string
éé 
.
éé 
IsNullOrEmpty
éé )
(
éé) *
userInformation
éé* 9
.
éé9 :
PasswordSalt
éé: F
)
ééF G
)
ééG H
{
èè 
password
êê 
=
êê 
cryptography
êê +
.
êê+ ,
Encrypt
êê, 3
(
êê3 4
loginInformation
êê4 D
.
êêD E
Password
êêE M
,
êêM N
userInformation
êêO ^
.
êê^ _
PasswordSalt
êê_ k
)
êêk l
;
êêl m
	plianText
ëë 
=
ëë 
cryptography
ëë  ,
.
ëë, -
Decrypt
ëë- 4
(
ëë4 5
userInformation
ëë5 D
.
ëëD E
Password
ëëE M
,
ëëM N
userInformation
ëëO ^
.
ëë^ _
PasswordSalt
ëë_ k
)
ëëk l
;
ëël m
}
íí 
if
ìì 
(
ìì 
userInformation
ìì #
.
ìì# $
Password
ìì$ ,
==
ìì- /
password
ìì0 8
)
ìì8 9
{
îî 
JwtAuthResult
ïï !
token
ïï" '
=
ïï( )
jwtAuthManager
ïï* 8
.
ïï8 9
GenerateToken
ïï9 F
(
ïïF G
userInformation
ïïG V
)
ïïV W
;
ïïW X
userInformation
ññ #
.
ññ# $
Token
ññ$ )
=
ññ* +
token
ññ, 1
.
ññ1 2
AccessToken
ññ2 =
;
ññ= >
userInformation
óó #
.
óó# $
RefreshToken
óó$ 0
=
óó1 2
token
óó3 8
.
óó8 9
RefreshToken
óó9 E
;
óóE F
userInformation
òò #
.
òò# $
MappedScreens
òò$ 1
=
òò2 3
await
òò4 9
GetMappedScreens
òò: J
(
òòJ K
userInformation
òòK Z
.
òòZ [
EmployeeSlno
òò[ g
)
òòg h
;
òòh i
await
ôô 
SaveLoginTries
ôô (
(
ôô( )
userInformation
ôô) 8
.
ôô8 9
EmployeeSlno
ôô9 E
)
ôôE F
;
ôôF G
EmployeeProfile
öö #
profile
öö$ +
=
öö, -
await
öö. 3'
GetEmployeeMinimalProfile
öö4 M
(
ööM N
userInformation
ööN ]
.
öö] ^
EmployeeSlno
öö^ j
)
ööj k
;
öök l
if
õõ 
(
õõ !
ApplicationSettings
õõ +
.
õõ+ ,
Current
õõ, 3
.
õõ3 4'
AllowEmployeeVerification
õõ4 M
)
õõM N
{
úú 
if
ùù 
(
ùù 
!
ùù 
userInformation
ùù ,
.
ùù, -

IsVerified
ùù- 7
&&
ùù8 :
profile
ùù; B
.
ùùB C$
IsVerificationRequired
ùùC Y
)
ùùY Z
{
ûû 
userInformation
üü +
.
üü+ ,
IdempotencyId
üü, 9
=
üü: ;
await
üü< A
GetIdempotencyId
üüB R
(
üüR S
userInformation
üüS b
.
üüb c
EmployeeSlno
üüc o
,
üüo p
userInformationüüq Ä
.üüÄ Å
CustomizedIdüüÅ ç
)üüç é
;üüé è
string
°° "

equalToken
°°# -
=
°°. /
await
°°0 5
GetEqualToken
°°6 C
(
°°C D
userInformation
°°D S
.
°°S T
IdempotencyId
°°T a
,
°°a b
profile
°°c j
)
°°j k
;
°°k l
userInformation
¢¢ +
.
¢¢+ ,

EqualToken
¢¢, 6
=
¢¢7 8

equalToken
¢¢9 C
;
¢¢C D
userInformation
££ +
.
££+ ,
ClientId
££, 4
=
££5 6
EqualSettings
££7 D
.
££D E
Current
££E L
.
££L M
ClientId
££M U
;
££U V
}
§§ 
}
•• 
else
¶¶ 
{
ßß 
userInformation
®® '
.
®®' (

IsVerified
®®( 2
=
®®3 4
true
®®5 9
;
®®9 :
}
©© 
}
´´ 
else
¨¨ 
{
≠≠ 
userInformation
ÆÆ #
=
ÆÆ$ %
null
ÆÆ& *
;
ÆÆ* +
}
ØØ 
}
∞∞ 
return
±± 
userInformation
±± "
;
±±" #
}
≤≤ 	
private
¥¥ 
async
¥¥ 
Task
¥¥ &
SaveEmployeeVerification
¥¥ 3
(
¥¥3 4
int
¥¥4 7
employeeslno
¥¥8 D
,
¥¥D E
string
¥¥F L
idempotencyId
¥¥M Z
)
¥¥Z [
{
µµ 	
using
∂∂ 
(
∂∂ 
var
∂∂ 

connection
∂∂ !
=
∂∂" #
await
∂∂$ )
CreateConnection
∂∂* :
(
∂∂: ;
DbSchema
∂∂; C
.
∂∂C D
PORTAL
∂∂D J
)
∂∂J K
)
∂∂K L
{
∑∑ %
OracleDynamicParameters
∏∏ '
	parmeters
∏∏( 1
=
∏∏2 3
new
∏∏4 7%
OracleDynamicParameters
∏∏8 O
(
∏∏O P
)
∏∏P Q
;
∏∏Q R
	parmeters
ππ 
.
ππ 
Add
ππ 
(
ππ 
name
ππ "
:
ππ" #
$str
ππ$ 3
,
ππ3 4
employeeslno
ππ5 A
,
ππA B
dbType
ππC I
:
ππI J
OracleMappingType
ππK \
.
ππ\ ]
Int32
ππ] b
,
ππb c
	direction
ππd m
:
ππm n!
ParameterDirectionππo Å
.ππÅ Ç
InputππÇ á
)ππá à
;ππà â
	parmeters
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
name
∫∫ "
:
∫∫" #
$str
∫∫$ 5
,
∫∫5 6
idempotencyId
∫∫7 D
,
∫∫D E
dbType
∫∫F L
:
∫∫L M
OracleMappingType
∫∫N _
.
∫∫_ `
Varchar2
∫∫` h
,
∫∫h i
	direction
∫∫j s
:
∫∫s t!
ParameterDirection∫∫u á
.∫∫á à
Input∫∫à ç
)∫∫ç é
;∫∫é è
await
ªª 

connection
ªª  
.
ªª  !
ExecuteAsync
ªª! -
(
ªª- . 
DatabaseProcedures
ªª. @
.
ªª@ A&
SP_SAVE_EMP_VERIFICATION
ªªA Y
,
ªªY Z
	parmeters
ªª[ d
,
ªªd e
commandType
ªªf q
:
ªªq r
CommandType
ªªs ~
.
ªª~ 
StoredProcedureªª é
)ªªé è
;ªªè ê
}
ºº 
}
ΩΩ 	
private
øø 
async
øø 
Task
øø 
<
øø 
string
øø !
>
øø! "
GetIdempotencyId
øø# 3
(
øø3 4
int
øø4 7
employeeSlno
øø8 D
,
øøD E
string
øøF L
customizedId
øøM Y
)
øøY Z
{
¿¿ 	
string
¡¡ 
idempotencyId
¡¡  
=
¡¡! "
string
¡¡# )
.
¡¡) *
Empty
¡¡* /
;
¡¡/ 0
UserInformation
¬¬ 
	firstData
¬¬ %
=
¬¬& '
null
¬¬( ,
;
¬¬, -
using
√√ 
(
√√ 
IDbConnection
√√  

connection
√√! +
=
√√, -
await
√√. 3
CreateConnection
√√4 D
(
√√D E
DbSchema
√√E M
.
√√M N
PORTAL
√√N T
)
√√T U
)
√√U V
{
ƒƒ %
OracleDynamicParameters
≈≈ '

parameters
≈≈( 2
=
≈≈3 4
new
≈≈5 8%
OracleDynamicParameters
≈≈9 P
(
≈≈P Q
)
≈≈Q R
;
≈≈R S
string
∆∆ 

templateid
∆∆ !
=
∆∆" #!
ApplicationSettings
∆∆$ 7
.
∆∆7 8
Current
∆∆8 ?
.
∆∆? @
HrmsOtpTemplate
∆∆@ O
;
∆∆O P

parameters
«« 
.
«« 
Add
«« 
(
«« 
name
«« #
:
««# $
$str
««% .
,
««. /
customizedId
««0 <
,
««< =
dbType
««> D
:
««D E
OracleMappingType
««F W
.
««W X
Varchar2
««X `
,
««` a
	direction
««b k
:
««k l 
ParameterDirection
««m 
.«« Ä
Input««Ä Ö
)««Ö Ü
;««Ü á

parameters
»» 
.
»» 
Add
»» 
(
»» 
name
»» #
:
»»# $
$str
»»% .
,
»». /
dbType
»»0 6
:
»»6 7
OracleMappingType
»»8 I
.
»»I J
	RefCursor
»»J S
,
»»S T
	direction
»»U ^
:
»»^ _ 
ParameterDirection
»»` r
.
»»r s
Output
»»s y
)
»»y z
;
»»z {
var
…… "
dbScreenInformations
…… (
=
……) *
await
……+ 0

connection
……1 ;
.
……; <

QueryAsync
……< F
<
……F G
UserInformation
……G V
>
……V W
(
……W X 
DatabaseProcedures
……X j
.
……j k 
GET_IDEMPOTENCY_ID
……k }
,
……} ~

parameters…… â
,……â ä
commandType……ã ñ
:……ñ ó
CommandType……ò £
.……£ §
StoredProcedure……§ ≥
)……≥ ¥
;……¥ µ
if
   
(
   "
dbScreenInformations
   (
!=
  ) +
null
  , 0
)
  0 1
{
ÀÀ 
	firstData
ÃÃ 
=
ÃÃ "
dbScreenInformations
ÃÃ  4
.
ÃÃ4 5
FirstOrDefault
ÃÃ5 C
(
ÃÃC D
)
ÃÃD E
;
ÃÃE F
}
ÕÕ 
}
ŒŒ 
if
œœ 
(
œœ 
	firstData
œœ 
!=
œœ 
null
œœ  
)
œœ  !
{
–– 
idempotencyId
—— 
=
—— 
	firstData
——  )
.
——) *
IdempotencyId
——* 7
;
——7 8
}
““ 
else
”” 
{
‘‘ 
idempotencyId
’’ 
=
’’ 
Guid
’’  $
.
’’$ %
NewGuid
’’% ,
(
’’, -
)
’’- .
.
’’. /
ToString
’’/ 7
(
’’7 8
)
’’8 9
;
’’9 :
await
◊◊ &
SaveEmployeeVerification
◊◊ .
(
◊◊. /
employeeSlno
◊◊/ ;
,
◊◊; <
idempotencyId
◊◊= J
)
◊◊J K
;
◊◊K L
}
ŸŸ 
return
⁄⁄ 
idempotencyId
⁄⁄  
;
⁄⁄  !
}
€€ 	
public
›› 
async
›› 
Task
›› 
<
›› 
UserInformation
›› )
>
››) *%
AuthenticateUserForNerp
››+ B
(
››B C
LoginInformation
››C S
loginInformation
››T d
)
››d e
{
ﬁﬁ 	
UserInformation
ﬂﬂ 
userInformation
ﬂﬂ +
=
ﬂﬂ, -
null
ﬂﬂ. 2
;
ﬂﬂ2 3
string
‡‡ 
password
‡‡ 
=
‡‡ 
string
‡‡ $
.
‡‡$ %
Empty
‡‡% *
;
‡‡* +
string
‚‚ 
encryptedPassword
‚‚ $
=
‚‚% &
PasswordEncrypt
‚‚' 6
.
‚‚6 7
PasswordEncrypt
‚‚7 F
.
‚‚F G
EncriptText
‚‚G R
(
‚‚R S
loginInformation
‚‚S c
.
‚‚c d
Password
‚‚d l
)
‚‚l m
;
‚‚m n
using
ÂÂ 
(
ÂÂ 
var
ÂÂ 

connection
ÂÂ !
=
ÂÂ" #
await
ÂÂ$ )
base
ÂÂ* .
.
ÂÂ. /
CreateConnection
ÂÂ/ ?
(
ÂÂ? @
DbSchema
ÂÂ@ H
.
ÂÂH I
PORTAL
ÂÂI O
)
ÂÂO P
)
ÂÂP Q
{
ÊÊ %
OracleDynamicParameters
ÁÁ '

parameters
ÁÁ( 2
=
ÁÁ3 4
new
ÁÁ5 8%
OracleDynamicParameters
ÁÁ9 P
(
ÁÁP Q
)
ÁÁQ R
;
ÁÁR S

parameters
ËË 
.
ËË 
Add
ËË 
(
ËË 
name
ËË #
:
ËË# $
$str
ËË% .
,
ËË. /
loginInformation
ËË0 @
.
ËË@ A
UserName
ËËA I
,
ËËI J
dbType
ËËK Q
:
ËËQ R
OracleMappingType
ËËS d
.
ËËd e
Varchar2
ËËe m
,
ËËm n
	direction
ËËo x
:
ËËx y!
ParameterDirectionËËz å
.ËËå ç
InputËËç í
)ËËí ì
;ËËì î

parameters
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ 
name
ÈÈ #
:
ÈÈ# $
$str
ÈÈ% 0
,
ÈÈ0 1
encryptedPassword
ÈÈ2 C
,
ÈÈC D
dbType
ÈÈE K
:
ÈÈK L
OracleMappingType
ÈÈM ^
.
ÈÈ^ _
Varchar2
ÈÈ_ g
,
ÈÈg h
	direction
ÈÈi r
:
ÈÈr s!
ParameterDirectionÈÈt Ü
.ÈÈÜ á
InputÈÈá å
)ÈÈå ç
;ÈÈç é

parameters
ÍÍ 
.
ÍÍ 
Add
ÍÍ 
(
ÍÍ 
name
ÍÍ #
:
ÍÍ# $
$str
ÍÍ% /
,
ÍÍ/ 0
dbType
ÍÍ1 7
:
ÍÍ7 8
OracleMappingType
ÍÍ9 J
.
ÍÍJ K
	RefCursor
ÍÍK T
,
ÍÍT U
	direction
ÍÍV _
:
ÍÍ_ ` 
ParameterDirection
ÍÍa s
.
ÍÍs t
Output
ÍÍt z
)
ÍÍz {
;
ÍÍ{ |
userInformation
ÎÎ 
=
ÎÎ  !

connection
ÎÎ" ,
.
ÎÎ, -!
QueryFirstOrDefault
ÎÎ- @
<
ÎÎ@ A
UserInformation
ÎÎA P
>
ÎÎP Q
(
ÎÎQ R 
DatabaseProcedures
ÎÎR d
.
ÎÎd e"
P_WEB_HS_USER_SELECT
ÎÎe y
,
ÎÎy z

parametersÎÎ{ Ö
,ÎÎÖ Ü
commandTypeÎÎá í
:ÎÎí ì
CommandTypeÎÎî ü
.ÎÎü †
StoredProcedureÎÎ† Ø
)ÎÎØ ∞
;ÎÎ∞ ±
}
ÏÏ 
if
ÌÌ 
(
ÌÌ 
userInformation
ÌÌ 
!=
ÌÌ  "
null
ÌÌ# '
&&
ÌÌ( *
userInformation
ÌÌ+ :
.
ÌÌ: ;
UserId
ÌÌ; A
>
ÌÌB C
$num
ÌÌD E
)
ÌÌE F
{
ÓÓ 
userInformation
ÔÔ 
.
ÔÔ  
CustomizedId
ÔÔ  ,
=
ÔÔ- .
loginInformation
ÔÔ/ ?
.
ÔÔ? @
UserName
ÔÔ@ H
;
ÔÔH I
JwtAuthResult
 
token
 #
=
$ %
jwtAuthManager
& 4
.
4 5
GenerateToken
5 B
(
B C
userInformation
C R
)
R S
;
S T
userInformation
ÒÒ 
.
ÒÒ  
Token
ÒÒ  %
=
ÒÒ& '
token
ÒÒ( -
.
ÒÒ- .
AccessToken
ÒÒ. 9
;
ÒÒ9 :
userInformation
ÚÚ 
.
ÚÚ  
RefreshToken
ÚÚ  ,
=
ÚÚ- .
token
ÚÚ/ 4
.
ÚÚ4 5
RefreshToken
ÚÚ5 A
;
ÚÚA B
}
ÛÛ 
return
ÙÙ 
userInformation
ÙÙ "
;
ÙÙ" #
}
ıı 	
public
ˆˆ 
async
ˆˆ 
Task
ˆˆ 
<
ˆˆ 
List
ˆˆ 
<
ˆˆ 
BranchInformation
ˆˆ 0
>
ˆˆ0 1
>
ˆˆ1 2%
GetUserBranchesFromNerp
ˆˆ3 J
(
ˆˆJ K
int
ˆˆK N
userSlno
ˆˆO W
)
ˆˆW X
{
˜˜ 	
List
¯¯ 
<
¯¯ 
BranchInformation
¯¯ "
>
¯¯" #
mappedBranches
¯¯$ 2
=
¯¯3 4
null
¯¯5 9
;
¯¯9 :
List
˘˘ 
<
˘˘ !
DbBranchInformation
˘˘ $
>
˘˘$ %

dbBranches
˘˘& 0
=
˘˘1 2
null
˘˘3 7
;
˘˘7 8
using
˙˙ 
(
˙˙ 
var
˙˙ 

connection
˙˙ !
=
˙˙" #
await
˙˙$ )
base
˙˙* .
.
˙˙. /
CreateConnection
˙˙/ ?
(
˙˙? @
DbSchema
˙˙@ H
.
˙˙H I
PORTAL
˙˙I O
)
˙˙O P
)
˙˙P Q
{
˚˚ %
OracleDynamicParameters
¸¸ '

parameters
¸¸( 2
=
¸¸3 4
new
¸¸5 8%
OracleDynamicParameters
¸¸9 P
(
¸¸P Q
)
¸¸Q R
;
¸¸R S

parameters
˝˝ 
.
˝˝ 
Add
˝˝ 
(
˝˝ 
name
˝˝ #
:
˝˝# $
$str
˝˝% 0
,
˝˝0 1
userSlno
˝˝2 :
,
˝˝: ;
dbType
˝˝< B
:
˝˝B C
OracleMappingType
˝˝D U
.
˝˝U V
Int32
˝˝V [
,
˝˝[ \
	direction
˝˝] f
:
˝˝f g 
ParameterDirection
˝˝h z
.
˝˝z {
Input˝˝{ Ä
)˝˝Ä Å
;˝˝Å Ç

parameters
˛˛ 
.
˛˛ 
Add
˛˛ 
(
˛˛ 
name
˛˛ #
:
˛˛# $
$str
˛˛% /
,
˛˛/ 0
dbType
˛˛1 7
:
˛˛7 8
OracleMappingType
˛˛9 J
.
˛˛J K
	RefCursor
˛˛K T
,
˛˛T U
	direction
˛˛V _
:
˛˛_ ` 
ParameterDirection
˛˛a s
.
˛˛s t
Output
˛˛t z
)
˛˛z {
;
˛˛{ |
var
ˇˇ 
x
ˇˇ 
=
ˇˇ 
await
ˇˇ 

connection
ˇˇ (
.
ˇˇ( )

QueryAsync
ˇˇ) 3
<
ˇˇ3 4!
DbBranchInformation
ˇˇ4 G
>
ˇˇG H
(
ˇˇH I 
DatabaseProcedures
ˇˇI [
.
ˇˇ[ \%
P_WEB_HS_BRA_BLD_SELECT
ˇˇ\ s
,
ˇˇs t

parameters
ˇˇu 
,ˇˇ Ä
commandTypeˇˇÅ å
:ˇˇå ç
CommandTypeˇˇé ô
.ˇˇô ö
StoredProcedureˇˇö ©
)ˇˇ© ™
;ˇˇ™ ´

dbBranches
ÄÄ 
=
ÄÄ 
x
ÄÄ 
.
ÄÄ 
ToList
ÄÄ %
(
ÄÄ% &
)
ÄÄ& '
;
ÄÄ' (
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 

dbBranches
ÇÇ 
!=
ÇÇ 
null
ÇÇ "
)
ÇÇ" #
{
ÉÉ 
mappedBranches
ÑÑ 
=
ÑÑ  

dbBranches
ÑÑ! +
.
ÑÑ+ ,
GroupBy
ÑÑ, 3
(
ÑÑ3 4
x
ÑÑ4 5
=>
ÑÑ6 8
new
ÑÑ9 <
{
ÑÑ= >
x
ÑÑ? @
.
ÑÑ@ A

BranchSlno
ÑÑA K
,
ÑÑK L
x
ÑÑM N
.
ÑÑN O
Branch_Name
ÑÑO Z
,
ÑÑZ [
x
ÑÑ\ ]
.
ÑÑ] ^
	Apex_Name
ÑÑ^ g
}
ÑÑh i
)
ÑÑi j
.
ÑÑj k
Select
ÑÑk q
(
ÑÑq r
x
ÑÑr s
=>
ÑÑt v
new
ÖÖ 
BranchInformation
ÖÖ %
(
ÖÖ% &
)
ÖÖ& '
{
ÜÜ 

BranchName
áá 
=
áá  
x
áá! "
.
áá" #
Key
áá# &
.
áá& '
Branch_Name
áá' 2
,
áá2 3
ApexName
àà 
=
àà 
x
àà  
.
àà  !
Key
àà! $
.
àà$ %
	Apex_Name
àà% .
,
àà. /

BranchSlno
ââ 
=
ââ  
x
ââ! "
.
ââ" #
Key
ââ# &
.
ââ& '

BranchSlno
ââ' 1
,
ââ1 2
	Buildings
ää 
=
ää 
x
ää  !
.
ää! "
Select
ää" (
(
ää( )
y
ää) *
=>
ää+ -
new
ää. 1!
BuildingInformation
ää2 E
(
ääE F
)
ääF G
{
ääH I
BuildingSlno
ääJ V
=
ääW X
y
ääY Z
.
ääZ [
BuildingSlno
ää[ g
,
ääg h
BuildingName
ääi u
=
ääv w
y
ääx y
.
ääy z
BuildingNameääz Ü
}ääá à
)ääà â
.ääâ ä
ToListäää ê
(ääê ë
)ääë í
}
ãã 
)
ãã 
.
ãã 
ToList
ãã 
(
ãã 
)
ãã 
;
ãã 
}
åå 
return
éé 
mappedBranches
éé !
;
éé! "
}
èè 	
public
êê 
async
êê 
Task
êê 
<
êê 
UserInformation
êê )
>
êê) *)
ValidateAndAuthenticateUser
êê+ F
(
êêF G
string
êêG M
userName
êêN V
)
êêV W
{
ëë 	
UserInformation
íí 
userInformation
íí +
=
íí, -
null
íí. 2
;
íí2 3
string
ìì 

loginQuery
ìì 
=
ìì 
$str
ìì  f
;
ììf g
using
îî 
(
îî 
IDbConnection
îî  

connection
îî! +
=
îî, -
await
îî. 3
CreateConnection
îî4 D
(
îîD E
DbSchema
îîE M
.
îîM N
PORTAL
îîN T
)
îîT U
)
îîU V
{
ïï 
string
ññ 
query
ññ 
=
ññ 
string
ññ %
.
ññ% &
Format
ññ& ,
(
ññ, -

loginQuery
ññ- 7
,
ññ7 8
userName
ññ9 A
)
ññA B
;
ññB C
userInformation
óó 
=
óó  !
await
óó" '

connection
óó( 2
.
óó2 3&
QueryFirstOrDefaultAsync
óó3 K
<
óóK L
UserInformation
óóL [
>
óó[ \
(
óó\ ]
query
óó] b
)
óób c
;
óóc d
userInformation
òò 
.
òò  
UserName
òò  (
=
òò) *
userName
òò+ 3
;
òò3 4
}
ôô 
if
öö 
(
öö 
userInformation
öö 
!=
öö  "
null
öö# '
)
öö' (
{
õõ 
JwtAuthResult
úú 
token
úú #
=
úú$ %
jwtAuthManager
úú& 4
.
úú4 5
GenerateToken
úú5 B
(
úúB C
userInformation
úúC R
)
úúR S
;
úúS T
userInformation
ùù 
.
ùù  
Token
ùù  %
=
ùù& '
token
ùù( -
.
ùù- .
AccessToken
ùù. 9
;
ùù9 :
userInformation
ûû 
.
ûû  
RefreshToken
ûû  ,
=
ûû- .
token
ûû/ 4
.
ûû4 5
RefreshToken
ûû5 A
;
ûûA B
userInformation
üü 
.
üü  
MappedScreens
üü  -
=
üü. /
await
üü0 5
GetMappedScreens
üü6 F
(
üüF G
userInformation
üüG V
.
üüV W
EmployeeSlno
üüW c
)
üüc d
;
üüd e
await
†† 
SaveLoginTries
†† $
(
††$ %
userInformation
††% 4
.
††4 5
EmployeeSlno
††5 A
)
††A B
;
††B C
}
°° 
return
¢¢ 
userInformation
¢¢ "
;
¢¢" #
}
££ 	
public
§§ 
async
§§ 
Task
§§ 
<
§§ 
UserInformation
§§ )
>
§§) *5
'RefreshTokenValidateAndAuthenticateUser
§§+ R
(
§§R S
UserInformation
§§S b
userInformation
§§c r
)
§§r s
{
•• 	
if
ÆÆ 
(
ÆÆ 
userInformation
ÆÆ 
!=
ÆÆ  "
null
ÆÆ# '
)
ÆÆ' (
{
ØØ 
JwtAuthResult
±± 
token
±± #
=
±±$ %
jwtAuthManager
±±& 4
.
±±4 5
Refresh
±±5 <
(
±±< =
userInformation
±±= L
)
±±L M
;
±±M N
userInformation
≤≤ 
.
≤≤  
Token
≤≤  %
=
≤≤& '
token
≤≤( -
.
≤≤- .
AccessToken
≤≤. 9
;
≤≤9 :
userInformation
≥≥ 
.
≥≥  
RefreshToken
≥≥  ,
=
≥≥- .
token
≥≥/ 4
.
≥≥4 5
RefreshToken
≥≥5 A
;
≥≥A B
userInformation
¥¥ 
.
¥¥  
MappedScreens
¥¥  -
=
¥¥. /
await
¥¥0 5
GetMappedScreens
¥¥6 F
(
¥¥F G
userInformation
¥¥G V
.
¥¥V W
EmployeeSlno
¥¥W c
)
¥¥c d
;
¥¥d e
await
µµ 
SaveLoginTries
µµ $
(
µµ$ %
userInformation
µµ% 4
.
µµ4 5
EmployeeSlno
µµ5 A
)
µµA B
;
µµB C
}
∂∂ 
return
∑∑ 
userInformation
∑∑ "
;
∑∑" #
}
∏∏ 	
public
∫∫ 
async
∫∫ 
Task
∫∫ 
SaveLoginTries
∫∫ (
(
∫∫( )
long
∫∫) -
employeeSlno
∫∫. :
)
∫∫: ;
{
ªª 	
bool
ºº 
isSaved
ºº 
=
ºº 
false
ºº  
;
ºº  !
using
ΩΩ 
(
ΩΩ 
var
ΩΩ 

connection
ΩΩ !
=
ΩΩ" #
await
ΩΩ$ )
CreateConnection
ΩΩ* :
(
ΩΩ: ;
DbSchema
ΩΩ; C
.
ΩΩC D
PORTAL
ΩΩD J
)
ΩΩJ K
)
ΩΩK L
{
ææ %
OracleDynamicParameters
øø '
	parmeters
øø( 1
=
øø2 3
new
øø4 7%
OracleDynamicParameters
øø8 O
(
øøO P
)
øøP Q
;
øøQ R
	parmeters
¿¿ 
.
¿¿ 
Add
¿¿ 
(
¿¿ 
name
¿¿ "
:
¿¿" #
$str
¿¿$ 3
,
¿¿3 4
employeeSlno
¿¿5 A
,
¿¿A B
dbType
¿¿C I
:
¿¿I J
OracleMappingType
¿¿K \
.
¿¿\ ]
Int32
¿¿] b
,
¿¿b c
	direction
¿¿d m
:
¿¿m n!
ParameterDirection¿¿o Å
.¿¿Å Ç
Input¿¿Ç á
)¿¿á à
;¿¿à â
	parmeters
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
name
¡¡ "
:
¡¡" #
$str
¡¡$ 3
,
¡¡3 4
$num
¡¡5 6
,
¡¡6 7
dbType
¡¡8 >
:
¡¡> ?
OracleMappingType
¡¡@ Q
.
¡¡Q R
Int32
¡¡R W
,
¡¡W X
	direction
¡¡Y b
:
¡¡b c 
ParameterDirection
¡¡d v
.
¡¡v w
Input
¡¡w |
)
¡¡| }
;
¡¡} ~
await
¬¬ 

connection
¬¬  
.
¬¬  !
ExecuteAsync
¬¬! -
(
¬¬- . 
DatabaseProcedures
¬¬. @
.
¬¬@ A#
SP_INSERT_LOGIN_TRIES
¬¬A V
,
¬¬V W
	parmeters
¬¬X a
,
¬¬a b
commandType
¬¬c n
:
¬¬n o
CommandType
¬¬p {
.
¬¬{ |
StoredProcedure¬¬| ã
)¬¬ã å
;¬¬å ç
}
√√ 
}
ƒƒ 	
public
«« 
async
«« 
Task
«« 
<
«« 
List
«« 
<
«« 
RoleInformation
«« .
>
««. /
>
««/ 0
GetMappedRoles
««1 ?
(
««? @
int
««@ C
employeeSlno
««D P
)
««P Q
{
»» 	
List
…… 
<
…… 
RoleInformation
……  
>
……  !
mappedRoles
……" -
=
……. /
null
……0 4
;
……4 5
using
   
(
   '
RoleInformationRepository
   ,!
dashboardRepository
  - @
=
  A B
new
  C F
(
  F G
configuration
  G T
,
  T U

redisCache
  V `
)
  ` a
)
  a b
{
ÀÀ 
mappedRoles
ÃÃ 
=
ÃÃ 
await
ÃÃ #!
dashboardRepository
ÃÃ$ 7
.
ÃÃ7 8
GetMappedRoles
ÃÃ8 F
(
ÃÃF G
employeeSlno
ÃÃG S
)
ÃÃS T
;
ÃÃT U
}
ÕÕ 
return
ŒŒ 
mappedRoles
ŒŒ 
;
ŒŒ 
}
œœ 	
public
—— 
async
—— 
Task
—— 
<
—— 
bool
—— 
>
—— 
SaveOrUpdateUser
——  0
(
——0 1
UserInformation
——1 @
userInformation
——A P
)
——P Q
{
““ 	
bool
”” 
isSaved
”” 
=
”” 
false
””  
;
””  !
List
‘‘ 
<
‘‘ 
int
‘‘ 
>
‘‘ 
selectedRoles
‘‘ #
=
‘‘$ %
userInformation
‘‘& 5
.
‘‘5 6
	UserRoles
‘‘6 ?
.
‘‘? @
Select
‘‘@ F
(
‘‘F G
x
‘‘G H
=>
‘‘I K
x
‘‘L M
.
‘‘M N
RoleId
‘‘N T
)
‘‘T U
.
‘‘U V
ToList
‘‘V \
(
‘‘\ ]
)
‘‘] ^
;
‘‘^ _
int
’’ 
updatedRecords
’’ 
=
’’  
$num
’’! "
;
’’" #
int
÷÷ 
rowsUpdated
÷÷ 
=
÷÷ 
$num
÷÷ 
;
÷÷  
using
◊◊ 
(
◊◊ 
var
◊◊ 

connection
◊◊ !
=
◊◊" #
await
◊◊$ )
CreateConnection
◊◊* :
(
◊◊: ;
DbSchema
◊◊; C
.
◊◊C D
PORTAL
◊◊D J
)
◊◊J K
)
◊◊K L
{
ÿÿ %
OracleDynamicParameters
ŸŸ '
	parmeters
ŸŸ( 1
=
ŸŸ2 3
new
ŸŸ4 7%
OracleDynamicParameters
ŸŸ8 O
(
ŸŸO P
)
ŸŸP Q
;
ŸŸQ R
	parmeters
⁄⁄ 
.
⁄⁄ 
Add
⁄⁄ 
(
⁄⁄ 
name
⁄⁄ "
:
⁄⁄" #
$str
⁄⁄$ ,
,
⁄⁄, -
selectedRoles
⁄⁄. ;
.
⁄⁄; <
ToArray
⁄⁄< C
(
⁄⁄C D
)
⁄⁄D E
,
⁄⁄E F
dbType
⁄⁄G M
:
⁄⁄M N
OracleMappingType
⁄⁄O `
.
⁄⁄` a
Int32
⁄⁄a f
,
⁄⁄f g
	direction
⁄⁄h q
:
⁄⁄q r!
ParameterDirection⁄⁄s Ö
.⁄⁄Ö Ü
Input⁄⁄Ü ã
,⁄⁄ã å
selectedRoles⁄⁄ç ö
.⁄⁄ö õ
Count⁄⁄õ †
,⁄⁄† °
collectionType
€€ "
:
€€" #)
OracleMappingCollectionType
€€$ ?
.
€€? @#
PLSQLAssociativeArray
€€@ U
)
€€U V
;
€€V W
	parmeters
‹‹ 
.
‹‹ 
Add
‹‹ 
(
‹‹ 
name
‹‹ "
:
‹‹" #
$str
‹‹$ 3
,
‹‹3 4
userInformation
‹‹5 D
.
‹‹D E
EmployeeSlno
‹‹E Q
,
‹‹Q R
dbType
‹‹S Y
:
‹‹Y Z
OracleMappingType
‹‹[ l
.
‹‹l m
Int32
‹‹m r
,
‹‹r s
	direction
‹‹t }
:
‹‹} ~!
ParameterDirection‹‹ ë
.‹‹ë í
Input‹‹í ó
)‹‹ó ò
;‹‹ò ô
	parmeters
›› 
.
›› 
Add
›› 
(
›› 
name
›› "
:
››" #
$str
››$ 5
,
››5 6
userInformation
››7 F
.
››F G
UserId
››G M
,
››M N
dbType
››O U
:
››U V
OracleMappingType
››W h
.
››h i
Int32
››i n
,
››n o
	direction
››p y
:
››y z!
ParameterDirection››{ ç
.››ç é
Input››é ì
)››ì î
;››î ï
	parmeters
ﬁﬁ 
.
ﬁﬁ 
Add
ﬁﬁ 
(
ﬁﬁ 
name
ﬁﬁ "
:
ﬁﬁ" #
$str
ﬁﬁ$ 6
,
ﬁﬁ6 7
dbType
ﬁﬁ8 >
:
ﬁﬁ> ?
OracleMappingType
ﬁﬁ@ Q
.
ﬁﬁQ R
Int32
ﬁﬁR W
,
ﬁﬁW X
	direction
ﬁﬁY b
:
ﬁﬁb c 
ParameterDirection
ﬁﬁd v
.
ﬁﬁv w
Output
ﬁﬁw }
)
ﬁﬁ} ~
;
ﬁﬁ~ 
updatedRecords
ﬂﬂ 
=
ﬂﬂ  
await
ﬂﬂ! &

connection
ﬂﬂ' 1
.
ﬂﬂ1 2
ExecuteAsync
ﬂﬂ2 >
(
ﬂﬂ> ? 
DatabaseProcedures
ﬂﬂ? Q
.
ﬂﬂQ R 
SP_SAVE_USER_ROLES
ﬂﬂR d
,
ﬂﬂd e
	parmeters
ﬂﬂf o
,
ﬂﬂo p
commandType
ﬂﬂq |
:
ﬂﬂ| }
CommandTypeﬂﬂ~ â
.ﬂﬂâ ä
StoredProcedureﬂﬂä ô
)ﬂﬂô ö
;ﬂﬂö õ
rowsUpdated
‡‡ 
=
‡‡ 
	parmeters
‡‡ '
.
‡‡' (
Get
‡‡( +
<
‡‡+ ,
int
‡‡, /
>
‡‡/ 0
(
‡‡0 1
$str
‡‡1 C
)
‡‡C D
;
‡‡D E
}
·· 
isSaved
„„ 
=
„„ 
rowsUpdated
„„ !
>
„„" #
$num
„„$ %
;
„„% &
return
‰‰ 
isSaved
‰‰ 
;
‰‰ 
}
ÂÂ 	
public
ËË 
async
ËË 
Task
ËË 
<
ËË 
bool
ËË 
>
ËË 
DeActivateUser
ËË  .
(
ËË. /
long
ËË/ 3
employeeSlno
ËË4 @
)
ËË@ A
{
ÈÈ 	
int
ÍÍ 
updatedRecords
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
string
ÎÎ 

loginQuery
ÎÎ 
=
ÎÎ 
$str
ÎÎ  _
;
ÎÎ_ `
using
ÏÏ 
(
ÏÏ 
IDbConnection
ÏÏ  

connection
ÏÏ! +
=
ÏÏ, -
await
ÏÏ. 3
CreateConnection
ÏÏ4 D
(
ÏÏD E
DbSchema
ÏÏE M
.
ÏÏM N
PORTAL
ÏÏN T
)
ÏÏT U
)
ÏÏU V
{
ÌÌ 
string
ÓÓ 
query
ÓÓ 
=
ÓÓ 
string
ÓÓ %
.
ÓÓ% &
Format
ÓÓ& ,
(
ÓÓ, -

loginQuery
ÓÓ- 7
,
ÓÓ7 8
employeeSlno
ÓÓ9 E
)
ÓÓE F
;
ÓÓF G
updatedRecords
ÔÔ 
=
ÔÔ  
await
ÔÔ! &

connection
ÔÔ' 1
.
ÔÔ1 2
ExecuteAsync
ÔÔ2 >
(
ÔÔ> ?
query
ÔÔ? D
)
ÔÔD E
;
ÔÔE F
}
 
return
ÚÚ 
updatedRecords
ÚÚ !
>
ÚÚ" #
$num
ÚÚ$ %
;
ÚÚ% &
}
ÛÛ 	
public
ıı 
async
ıı 
Task
ıı 
<
ıı 
EmployeeProfile
ıı )
>
ıı) * 
GetEmployeeProfile
ıı+ =
(
ıı= >
int
ıı> A
employeeSlno
ııB N
)
ııN O
{
ˆˆ 	
return
˜˜ 
await
˜˜ '
GetEmployeeMinimalProfile
˜˜ 2
(
˜˜2 3
employeeSlno
˜˜3 ?
)
˜˜? @
;
˜˜@ A
}
¯¯ 	
private
˙˙ 
async
˙˙ 
Task
˙˙ 
<
˙˙ 
List
˙˙ 
<
˙˙  
ScreenInformation
˙˙  1
>
˙˙1 2
>
˙˙2 3
GetMappedScreens
˙˙4 D
(
˙˙D E
int
˙˙E H
employeeSlno
˙˙I U
)
˙˙U V
{
˚˚ 	
List
¸¸ 
<
¸¸ 
ScreenInformation
¸¸ "
>
¸¸" #
mappedScreens
¸¸$ 1
=
¸¸2 3
null
¸¸4 8
;
¸¸8 9
List
˝˝ 
<
˝˝ 
ScreenInformation
˝˝ "
>
˝˝" #
	menuItems
˝˝$ -
=
˝˝. /
null
˝˝0 4
;
˝˝4 5
using
˛˛ 
(
˛˛ 
IDbConnection
˛˛  

connection
˛˛! +
=
˛˛, -
await
˛˛. 3
CreateConnection
˛˛4 D
(
˛˛D E
DbSchema
˛˛E M
.
˛˛M N
PORTAL
˛˛N T
)
˛˛T U
)
˛˛U V
{
ˇˇ %
OracleDynamicParameters
ÄÄ '

parameters
ÄÄ( 2
=
ÄÄ3 4
new
ÄÄ5 8%
OracleDynamicParameters
ÄÄ9 P
(
ÄÄP Q
)
ÄÄQ R
;
ÄÄR S
string
ÅÅ 

templateid
ÅÅ !
=
ÅÅ" #!
ApplicationSettings
ÅÅ$ 7
.
ÅÅ7 8
Current
ÅÅ8 ?
.
ÅÅ? @
HrmsOtpTemplate
ÅÅ@ O
;
ÅÅO P

parameters
ÇÇ 
.
ÇÇ 
Add
ÇÇ 
(
ÇÇ 
name
ÇÇ #
:
ÇÇ# $
$str
ÇÇ% 4
,
ÇÇ4 5
employeeSlno
ÇÇ6 B
,
ÇÇB C
dbType
ÇÇD J
:
ÇÇJ K
OracleMappingType
ÇÇL ]
.
ÇÇ] ^
Int32
ÇÇ^ c
,
ÇÇc d
	direction
ÇÇe n
:
ÇÇn o!
ParameterDirectionÇÇp Ç
.ÇÇÇ É
InputÇÇÉ à
)ÇÇà â
;ÇÇâ ä

parameters
ÉÉ 
.
ÉÉ 
Add
ÉÉ 
(
ÉÉ 
name
ÉÉ #
:
ÉÉ# $
$str
ÉÉ% .
,
ÉÉ. /
dbType
ÉÉ0 6
:
ÉÉ6 7
OracleMappingType
ÉÉ8 I
.
ÉÉI J
	RefCursor
ÉÉJ S
,
ÉÉS T
	direction
ÉÉU ^
:
ÉÉ^ _ 
ParameterDirection
ÉÉ` r
.
ÉÉr s
Output
ÉÉs y
)
ÉÉy z
;
ÉÉz {
var
ÑÑ "
dbScreenInformations
ÑÑ (
=
ÑÑ) *
await
ÑÑ+ 0

connection
ÑÑ1 ;
.
ÑÑ; <

QueryAsync
ÑÑ< F
<
ÑÑF G
ScreenInformation
ÑÑG X
>
ÑÑX Y
(
ÑÑY Z 
DatabaseProcedures
ÑÑZ l
.
ÑÑl m%
P_GET_EMPLOYEE_SCREENSÑÑm É
,ÑÑÉ Ñ

parametersÑÑÖ è
,ÑÑè ê
commandTypeÑÑë ú
:ÑÑú ù
CommandTypeÑÑû ©
.ÑÑ© ™
StoredProcedureÑÑ™ π
)ÑÑπ ∫
;ÑÑ∫ ª
mappedScreens
ÖÖ 
=
ÖÖ "
dbScreenInformations
ÖÖ  4
.
ÖÖ4 5
ToList
ÖÖ5 ;
(
ÖÖ; <
)
ÖÖ< =
;
ÖÖ= >
}
ÜÜ 
	menuItems
áá 
=
áá 
GetMenuItems
áá $
(
áá$ %
mappedScreens
áá% 2
)
áá2 3
;
áá3 4
return
àà 
	menuItems
àà 
;
àà 
}
ââ 	
private
ãã 
List
ãã 
<
ãã 
ScreenInformation
ãã &
>
ãã& '
GetMenuItems
ãã( 4
(
ãã4 5
List
ãã5 9
<
ãã9 :
ScreenInformation
ãã: K
>
ããK L
mappedScreens
ããM Z
)
ããZ [
{
åå 	
mappedScreens
çç 
=
çç 
mappedScreens
çç )
.
çç) *

DistinctBy
çç* 4
(
çç4 5
x
çç5 6
=>
çç7 9
x
çç: ;
.
çç; <
ScreenId
çç< D
)
ççD E
.
ççE F
ToList
ççF L
(
ççL M
)
ççM N
;
ççN O
List
éé 
<
éé 
ScreenInformation
éé "
>
éé" #
	menuItems
éé$ -
=
éé. /
mappedScreens
éé0 =
.
éé= >
Where
éé> C
(
ééC D
x
ééD E
=>
ééF H
x
ééI J
.
ééJ K
ParentScreenId
ééK Y
==
ééZ \
null
éé] a
)
ééa b
.
ééb c
OrderBy
ééc j
(
ééj k
x
éék l
=>
éém o
x
éép q
.
ééq r
DisplayOrder
éér ~
)
éé~ 
.éé Ä
ToListééÄ Ü
(ééÜ á
)ééá à
;ééà â
foreach
èè 
(
èè 
var
èè 
item
èè 
in
èè  
	menuItems
èè! *
)
èè* +
{
êê 
item
ëë 
.
ëë 
SubItems
ëë 
=
ëë 
GetSubMenuItems
ëë  /
(
ëë/ 0
mappedScreens
ëë0 =
,
ëë= >
item
ëë? C
.
ëëC D
ScreenId
ëëD L
)
ëëL M
;
ëëM N
}
íí 
return
ìì 
	menuItems
ìì 
;
ìì 
}
îî 	
private
ññ 
List
ññ 
<
ññ 
ScreenInformation
ññ &
>
ññ& '
GetSubMenuItems
ññ( 7
(
ññ7 8
List
ññ8 <
<
ññ< =
ScreenInformation
ññ= N
>
ññN O
mappedScreens
ññP ]
,
ññ] ^
int
ññ_ b
screenId
ññc k
)
ññk l
{
óó 	
List
òò 
<
òò 
ScreenInformation
òò "
>
òò" #
	menuItems
òò$ -
=
òò. /
mappedScreens
òò0 =
.
òò= >
Where
òò> C
(
òòC D
x
òòD E
=>
òòF H
x
òòI J
.
òòJ K
ParentScreenId
òòK Y
==
òòZ \
screenId
òò] e
)
òòe f
.
òòf g
OrderBy
òòg n
(
òòn o
x
òòo p
=>
òòq s
x
òòt u
.
òòu v
DisplayOrderòòv Ç
)òòÇ É
.òòÉ Ñ
ToListòòÑ ä
(òòä ã
)òòã å
;òòå ç
foreach
ôô 
(
ôô 
var
ôô 
item
ôô 
in
ôô  
	menuItems
ôô! *
)
ôô* +
{
öö 
item
õõ 
.
õõ 
SubItems
õõ 
=
õõ 
GetSubMenuItems
õõ  /
(
õõ/ 0
mappedScreens
õõ0 =
,
õõ= >
item
õõ? C
.
õõC D
ScreenId
õõD L
)
õõL M
;
õõM N
}
úú 
return
ùù 
	menuItems
ùù 
;
ùù 
}
ûû 	
public
†† 
async
†† 
Task
†† 
<
†† 
OtpData
†† !
>
††! "
GetOtp
††# )
(
††) *
string
††* 0
userName
††1 9
,
††9 :
bool
††; ?
isSignUp
††@ H
)
††H I
{
°° 	
UserInformation
¢¢ 
dbUserInformation
¢¢ -
=
¢¢. /
null
¢¢0 4
;
¢¢4 5
bool
££ 
result
££ 
=
££ 
false
££ 
;
££  
string
§§ 
otpValue
§§ 
=
§§ 
string
§§ $
.
§§$ %
Empty
§§% *
;
§§* +
string
•• 

otpMessage
•• 
=
•• 
string
••  &
.
••& '
Empty
••' ,
;
••, -
OtpData
¶¶ 
otpData
¶¶ 
=
¶¶ 
null
¶¶ "
;
¶¶" #
string
ßß 

loginQuery
ßß 
=
ßß 
$str
ßß  g
;
ßßg h
string
®® 
insertQuery
®® 
=
®®  
$str®®! ∂
;®®∂ ∑
using
©© 
(
©© 
IDbConnection
©©  

connection
©©! +
=
©©, -
await
©©. 3
CreateConnection
©©4 D
(
©©D E
DbSchema
©©E M
.
©©M N
PORTAL
©©N T
)
©©T U
)
©©U V
{
™™ 
dbUserInformation
´´ !
=
´´" #
await
´´$ )

connection
´´* 4
.
´´4 5&
QueryFirstOrDefaultAsync
´´5 M
<
´´M N
UserInformation
´´N ]
>
´´] ^
(
´´^ _
new
´´_ b
StringBuilder
´´c p
(
´´p q
)
´´q r
.
´´r s
AppendFormat
´´s 
(´´ Ä

loginQuery´´Ä ä
,´´ä ã
userName´´å î
)´´î ï
.´´ï ñ
ToString´´ñ û
(´´û ü
)´´ü †
)´´† °
;´´° ¢
if
¨¨ 
(
¨¨ 
dbUserInformation
¨¨ %
!=
¨¨& (
null
¨¨) -
)
¨¨- .
{
≠≠ 
otpData
ÆÆ 
=
ÆÆ 
new
ÆÆ !
OtpData
ÆÆ" )
(
ÆÆ) *
)
ÆÆ* +
;
ÆÆ+ ,
EmployeeProfile
ØØ #
employeeProfile
ØØ$ 3
=
ØØ4 5
await
ØØ6 ;'
GetEmployeeMinimalProfile
ØØ< U
(
ØØU V
dbUserInformation
ØØV g
.
ØØg h
EmployeeSlno
ØØh t
)
ØØt u
;
ØØu v
otpValue
∞∞ 
=
∞∞ 
GenerateOtp
∞∞ *
(
∞∞* +
)
∞∞+ ,
;
∞∞, -
insertQuery
±± 
=
±±  !
string
±±" (
.
±±( )
Format
±±) /
(
±±/ 0
insertQuery
±±0 ;
,
±±; <
dbUserInformation
±±= N
.
±±N O
EmployeeSlno
±±O [
,
±±[ \
otpValue
±±] e
,
±±e f
dbUserInformation
±±g x
.
±±x y
CustomizedId±±y Ö
,±±Ö Ü
Convert±±á é
.±±é è
ToInt32±±è ñ
(±±ñ ó
isSignUp±±ó ü
)±±ü †
)±±† °
;±±° ¢
await
≤≤ 

connection
≤≤ $
.
≤≤$ %
ExecuteAsync
≤≤% 1
(
≤≤1 2
insertQuery
≤≤2 =
)
≤≤= >
;
≤≤> ?
string
µµ 

OTPMessage
µµ %
=
µµ& '!
ApplicationSettings
µµ( ;
.
µµ; <
Current
µµ< C
.
µµC D

OTPMessage
µµD N
;
µµN O

otpMessage
∂∂ 
=
∂∂  
string
∂∂! '
.
∂∂' (
Format
∂∂( .
(
∂∂. /

OTPMessage
∂∂/ 9
,
∂∂9 :
Environment
∂∂; F
.
∂∂F G
NewLine
∂∂G N
,
∂∂N O
otpValue
∂∂P X
,
∂∂X Y
Environment
∂∂Z e
.
∂∂e f
NewLine
∂∂f m
,
∂∂m n"
ApplicationSettings∂∂o Ç
.∂∂Ç É
Current∂∂É ä
.∂∂ä ã

OtpTimeOut∂∂ã ï
,∂∂ï ñ
Environment∂∂ó ¢
.∂∂¢ £
NewLine∂∂£ ™
)∂∂™ ´
;∂∂´ ¨%
OracleDynamicParameters
∑∑ +
	parmeters
∑∑, 5
=
∑∑6 7
new
∑∑8 ;%
OracleDynamicParameters
∑∑< S
(
∑∑S T
)
∑∑T U
;
∑∑U V
string
∏∏ 

templateid
∏∏ %
=
∏∏& '!
ApplicationSettings
∏∏( ;
.
∏∏; <
Current
∏∏< C
.
∏∏C D
HrmsOtpTemplate
∏∏D S
;
∏∏S T
	parmeters
ππ 
.
ππ 
Add
ππ !
(
ππ! "
name
ππ" &
:
ππ& '
$str
ππ( 7
,
ππ7 8
employeeProfile
ππ9 H
.
ππH I
Mobile
ππI O
,
ππO P
dbType
ππQ W
:
ππW X
OracleMappingType
ππY j
.
ππj k
Int64
ππk p
,
ππp q
	direction
ππr {
:
ππ{ |!
ParameterDirectionππ} è
.ππè ê
Inputππê ï
)ππï ñ
;ππñ ó
	parmeters
∫∫ 
.
∫∫ 
Add
∫∫ !
(
∫∫! "
name
∫∫" &
:
∫∫& '
$str
∫∫( 2
,
∫∫2 3
string
∫∫4 :
.
∫∫: ;
Format
∫∫; A
(
∫∫A B

otpMessage
∫∫B L
,
∫∫L M
dbUserInformation
∫∫N _
.
∫∫_ `
UserName
∫∫` h
,
∫∫h i
otpValue
∫∫j r
)
∫∫r s
,
∫∫s t
dbType
∫∫u {
:
∫∫{ | 
OracleMappingType∫∫} é
.∫∫é è
Varchar2∫∫è ó
,∫∫ó ò
	direction∫∫ô ¢
:∫∫¢ £"
ParameterDirection∫∫§ ∂
.∫∫∂ ∑
Input∫∫∑ º
)∫∫º Ω
;∫∫Ω æ
	parmeters
ªª 
.
ªª 
Add
ªª !
(
ªª! "
name
ªª" &
:
ªª& '
$str
ªª( <
,
ªª< =
$num
ªª> ?
,
ªª? @
dbType
ªªA G
:
ªªG H
OracleMappingType
ªªI Z
.
ªªZ [
Int32
ªª[ `
,
ªª` a
	direction
ªªb k
:
ªªk l 
ParameterDirection
ªªm 
.ªª Ä
InputªªÄ Ö
)ªªÖ Ü
;ªªÜ á
	parmeters
ºº 
.
ºº 
Add
ºº !
(
ºº! "
name
ºº" &
:
ºº& '
$str
ºº( 9
,
ºº9 :
$num
ºº; <
,
ºº< =
dbType
ºº> D
:
ººD E
OracleMappingType
ººF W
.
ººW X
Int32
ººX ]
,
ºº] ^
	direction
ºº_ h
:
ººh i 
ParameterDirection
ººj |
.
ºº| }
Inputºº} Ç
)ººÇ É
;ººÉ Ñ
	parmeters
ææ 
.
ææ 
Add
ææ !
(
ææ! "
name
ææ" &
:
ææ& '
$str
ææ( 1
,
ææ1 2
$str
ææ3 ;
,
ææ; <
dbType
ææ= C
:
ææC D
OracleMappingType
ææE V
.
ææV W
Varchar2
ææW _
,
ææ_ `
	direction
ææa j
:
ææj k 
ParameterDirection
ææl ~
.
ææ~ 
Inputææ Ñ
)ææÑ Ö
;ææÖ Ü
	parmeters
øø 
.
øø 
Add
øø !
(
øø! "
name
øø" &
:
øø& '
$str
øø( 9
,
øø9 :

templateid
øø; E
,
øøE F
dbType
øøG M
:
øøM N
OracleMappingType
øøO `
.
øø` a
Varchar2
øøa i
,
øøi j
	direction
øøk t
:
øøt u!
ParameterDirectionøøv à
.øøà â
Inputøøâ é
)øøé è
;øøè ê
await
¿¿ 

connection
¿¿ $
.
¿¿$ %
ExecuteAsync
¿¿% 1
(
¿¿1 2 
DatabaseProcedures
¿¿2 D
.
¿¿D E
SEND_SMS
¿¿E M
,
¿¿M N
	parmeters
¿¿O X
,
¿¿X Y
commandType
¿¿Z e
:
¿¿e f
CommandType
¿¿g r
.
¿¿r s
StoredProcedure¿¿s Ç
)¿¿Ç É
;¿¿É Ñ
otpData
¬¬ 
.
¬¬ 
MobileNumber
¬¬ (
=
¬¬) *
Regex
¬¬+ 0
.
¬¬0 1
Replace
¬¬1 8
(
¬¬8 9
employeeProfile
¬¬9 H
.
¬¬H I
Mobile
¬¬I O
.
¬¬O P
ToString
¬¬P X
(
¬¬X Y
)
¬¬Y Z
,
¬¬Z [
$str
¬¬\ m
,
¬¬m n
$str
¬¬o r
)
¬¬r s
;
¬¬s t
otpData
√√ 
.
√√ 
	IsOtpSent
√√ %
=
√√& '
true
√√( ,
;
√√, -
}
ƒƒ 
}
≈≈ 
return
«« 
otpData
«« 
;
«« 
}
»» 	
public
   
async
   
Task
   
<
   
bool
   
>
   
ValidateOtp
    +
(
  + ,
string
  , 2
userName
  3 ;
,
  ; <
string
  = C
otpValue
  D L
)
  L M
{
ÀÀ 	
UserInformation
ÃÃ 
dbUserInformation
ÃÃ -
=
ÃÃ. /
null
ÃÃ0 4
;
ÃÃ4 5
int
ÕÕ 
updatedRows
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ  
bool
œœ 
isOtpVerfied
œœ 
=
œœ 
false
œœ  %
;
œœ% &
isOtpVerfied
–– 
=
–– 
ValidateOtp
–– &
(
––& '
otpValue
––' /
)
––/ 0
;
––0 1
string
—— 

loginQuery
—— 
=
—— 
$str——  ì
;——ì î
using
““ 
(
““ 
IDbConnection
““  

connection
““! +
=
““, -
await
““. 3
CreateConnection
““4 D
(
““D E
DbSchema
““E M
.
““M N
PORTAL
““N T
)
““T U
)
““U V
{
”” 
string
‘‘ 

dbOtpValue
‘‘ !
=
‘‘" #
await
‘‘$ )

connection
‘‘* 4
.
‘‘4 5 
ExecuteScalarAsync
‘‘5 G
<
‘‘G H
string
‘‘H N
>
‘‘N O
(
‘‘O P
new
‘‘P S
StringBuilder
‘‘T a
(
‘‘a b
)
‘‘b c
.
‘‘c d
AppendFormat
‘‘d p
(
‘‘p q

loginQuery
‘‘q {
,
‘‘{ |
userName‘‘} Ö
)‘‘Ö Ü
.‘‘Ü á
ToString‘‘á è
(‘‘è ê
)‘‘ê ë
)‘‘ë í
;‘‘í ì
if
’’ 
(
’’ 

dbOtpValue
’’ 
==
’’ !
otpValue
’’" *
)
’’* +
{
÷÷ 
string
◊◊ 
updateQuery
◊◊ &
=
◊◊' (
string
◊◊) /
.
◊◊/ 0
Format
◊◊0 6
(
◊◊6 7
$str◊◊7 ñ
,◊◊ñ ó
userName◊◊ò †
,◊◊† °

dbOtpValue◊◊¢ ¨
)◊◊¨ ≠
;◊◊≠ Æ
updatedRows
ÿÿ 
=
ÿÿ  !
await
ÿÿ" '

connection
ÿÿ( 2
.
ÿÿ2 3
ExecuteAsync
ÿÿ3 ?
(
ÿÿ? @
updateQuery
ÿÿ@ K
)
ÿÿK L
;
ÿÿL M
}
ŸŸ 
}
⁄⁄ 
return
€€ 
updatedRows
€€ 
>
€€  
$num
€€! "
;
€€" #
}
‹‹ 	
public
›› 
async
›› 
Task
›› 
<
›› 
OtpData
›› !
>
››! "
SignUp
››# )
(
››) *
string
››* 0
userName
››1 9
)
››9 :
{
ﬁﬁ 	
OtpData
ﬂﬂ 
otpData
ﬂﬂ 
=
ﬂﬂ 
null
ﬂﬂ "
;
ﬂﬂ" #
UserInformation
‡‡ 
userInformation
‡‡ +
=
‡‡, -
null
‡‡. 2
;
‡‡2 3
string
‚‚ 

loginQuery
‚‚ 
=
‚‚ 
$str
‚‚  {
;
‚‚{ |
using
„„ 
(
„„ 
IDbConnection
„„  

connection
„„! +
=
„„, -
await
„„. 3
CreateConnection
„„4 D
(
„„D E
DbSchema
„„E M
.
„„M N
PORTAL
„„N T
)
„„T U
)
„„U V
{
‰‰ 
string
ÂÂ 
query
ÂÂ 
=
ÂÂ 
string
ÂÂ %
.
ÂÂ% &
Format
ÂÂ& ,
(
ÂÂ, -

loginQuery
ÂÂ- 7
,
ÂÂ7 8
userName
ÂÂ9 A
)
ÂÂA B
;
ÂÂB C
userInformation
ÊÊ 
=
ÊÊ  !
await
ÊÊ" '

connection
ÊÊ( 2
.
ÊÊ2 3&
QueryFirstOrDefaultAsync
ÊÊ3 K
<
ÊÊK L
UserInformation
ÊÊL [
>
ÊÊ[ \
(
ÊÊ\ ]
query
ÊÊ] b
)
ÊÊb c
;
ÊÊc d
}
ÁÁ 
if
ËË 
(
ËË 
userInformation
ËË 
!=
ËË  "
null
ËË# '
)
ËË' (
{
ÈÈ 
otpData
ÍÍ 
=
ÍÍ 
await
ÍÍ 
GetOtp
ÍÍ  &
(
ÍÍ& '
userName
ÍÍ' /
,
ÍÍ/ 0
true
ÍÍ1 5
)
ÍÍ5 6
;
ÍÍ6 7
}
ÎÎ 
return
ÏÏ 
otpData
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
private
ÔÔ 
string
ÔÔ 
GenerateOtp
ÔÔ "
(
ÔÔ" #
)
ÔÔ# $
{
 	
string
ÒÒ 
	secretKey
ÒÒ 
=
ÒÒ 
$str
ÒÒ a
;
ÒÒa b
Totp
ÚÚ 
otpCalc
ÚÚ 
=
ÚÚ 
new
ÚÚ 
Totp
ÚÚ #
(
ÚÚ# $
Encoding
ÚÚ$ ,
.
ÚÚ, -
UTF8
ÚÚ- 1
.
ÚÚ1 2
GetBytes
ÚÚ2 :
(
ÚÚ: ;
	secretKey
ÚÚ; D
)
ÚÚD E
,
ÚÚE F
$num
ÚÚG I
,
ÚÚI J
OtpHashMode
ÚÚK V
.
ÚÚV W
Sha512
ÚÚW ]
,
ÚÚ] ^
$num
ÚÚ_ `
)
ÚÚ` a
;
ÚÚa b
string
ÛÛ 
otp
ÛÛ 
=
ÛÛ 
otpCalc
ÛÛ  
.
ÛÛ  !
ComputeTotp
ÛÛ! ,
(
ÛÛ, -
DateTime
ÛÛ- 5
.
ÛÛ5 6
UtcNow
ÛÛ6 <
)
ÛÛ< =
;
ÛÛ= >
return
ÙÙ 
otp
ÙÙ 
;
ÙÙ 
}
ıı 	
private
ˆˆ 
bool
ˆˆ 
ValidateOtp
ˆˆ  
(
ˆˆ  !
string
ˆˆ! '
otpValue
ˆˆ( 0
)
ˆˆ0 1
{
˜˜ 	
long
¯¯ 
timeRemaining
¯¯ 
=
¯¯  
$num
¯¯! "
;
¯¯" #
string
˘˘ 
	secretKey
˘˘ 
=
˘˘ 
$str
˘˘ a
;
˘˘a b
Totp
˙˙ 
otpCalc
˙˙ 
=
˙˙ 
new
˙˙ 
Totp
˙˙ #
(
˙˙# $
Encoding
˙˙$ ,
.
˙˙, -
UTF8
˙˙- 1
.
˙˙1 2
GetBytes
˙˙2 :
(
˙˙: ;
	secretKey
˙˙; D
)
˙˙D E
)
˙˙E F
;
˙˙F G
bool
˚˚ 
isotpVerified
˚˚ 
=
˚˚  
otpCalc
˚˚! (
.
˚˚( )

VerifyTotp
˚˚) 3
(
˚˚3 4
otpValue
˚˚4 <
,
˚˚< =
out
˚˚> A
timeRemaining
˚˚B O
,
˚˚O P
null
˚˚Q U
)
˚˚U V
;
˚˚V W
return
¸¸ 
isotpVerified
¸¸  
;
¸¸  !
}
˝˝ 	
public
ÄÄ 
async
ÄÄ 
Task
ÄÄ 
<
ÄÄ 
bool
ÄÄ 
>
ÄÄ 
ChangePassword
ÄÄ  .
(
ÄÄ. /
UserInformation
ÄÄ/ >
userInformation
ÄÄ? N
)
ÄÄN O
{
ÅÅ 	
UserInformation
ÇÇ 
dbUserInformation
ÇÇ -
=
ÇÇ. /
null
ÇÇ0 4
;
ÇÇ4 5
int
ÉÉ 
updatedRows
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ  
bool
ÑÑ 
isPasswordChanged
ÑÑ "
=
ÑÑ# $
false
ÑÑ% *
;
ÑÑ* +
string
ÖÖ 

loginQuery
ÖÖ 
=
ÖÖ 
$str
ÖÖ  g
;
ÖÖg h
string
ÜÜ 
updateQuery
ÜÜ 
=
ÜÜ  
$strÜÜ! ê
;ÜÜê ë
using
áá 
(
áá 
IDbConnection
áá  

connection
áá! +
=
áá, -
await
áá. 3
CreateConnection
áá4 D
(
ááD E
DbSchema
ááE M
.
ááM N
PORTAL
ááN T
)
ááT U
)
ááU V
{
àà 
dbUserInformation
ââ !
=
ââ" #
await
ââ$ )

connection
ââ* 4
.
ââ4 5&
QueryFirstOrDefaultAsync
ââ5 M
<
ââM N
UserInformation
ââN ]
>
ââ] ^
(
ââ^ _
new
ââ_ b
StringBuilder
ââc p
(
ââp q
)
ââq r
.
ââr s
AppendFormat
ââs 
(ââ Ä

loginQueryââÄ ä
,ââä ã
userInformationââå õ
.ââõ ú
CustomizedIdââú ®
)ââ® ©
.ââ© ™
ToStringââ™ ≤
(ââ≤ ≥
)ââ≥ ¥
)ââ¥ µ
;ââµ ∂
}
ää 
if
ãã 
(
ãã 
dbUserInformation
ãã !
!=
ãã" $
null
ãã% )
)
ãã) *
{
åå 
string
çç 
passwordSalt
çç #
=
çç$ %
Guid
çç& *
.
çç* +
NewGuid
çç+ 2
(
çç2 3
)
çç3 4
.
çç4 5
ToString
çç5 =
(
çç= >
)
çç> ?
.
çç? @
Replace
çç@ G
(
ççG H
$str
ççH K
,
ççK L
$str
ççM O
)
ççO P
.
ççP Q
ToUpper
ççQ X
(
ççX Y
)
ççY Z
;
ççZ [
string
éé 
password
éé 
=
éé  !
cryptography
éé" .
.
éé. /
Encrypt
éé/ 6
(
éé6 7
userInformation
éé7 F
.
ééF G
Password
ééG O
,
ééO P
passwordSalt
ééQ ]
)
éé] ^
;
éé^ _
string
èè 
encryptedPassword
èè (
=
èè) *
cryptography
èè+ 7
.
èè7 8
Encrypt
èè8 ?
(
èè? @
password
èè@ H
,
èèH I
passwordSalt
èèJ V
)
èèV W
;
èèW X
using
êê 
(
êê 
IDbConnection
êê $

connection
êê% /
=
êê0 1
await
êê2 7
CreateConnection
êê8 H
(
êêH I
DbSchema
êêI Q
.
êêQ R
PORTAL
êêR X
)
êêX Y
)
êêY Z
{
ëë 
updatedRows
íí 
=
íí  !
await
íí" '

connection
íí( 2
.
íí2 3
ExecuteAsync
íí3 ?
(
íí? @
new
íí@ C
StringBuilder
ííD Q
(
ííQ R
)
ííR S
.
ííS T
AppendFormat
ííT `
(
íí` a
updateQuery
íía l
,
ííl m
password
íín v
,
íív w
passwordSaltííx Ñ
,ííÑ Ö!
dbUserInformationííÜ ó
.ííó ò
CustomizedIdííò §
)íí§ •
.íí• ¶
ToStringíí¶ Æ
(ííÆ Ø
)ííØ ∞
)íí∞ ±
;íí± ≤
isPasswordChanged
ìì %
=
ìì& '
updatedRows
ìì( 3
>
ìì4 5
$num
ìì6 7
;
ìì7 8
}
îî 
}
ïï 
return
ññ 
isPasswordChanged
ññ $
;
ññ$ %
}
óó 	
private
öö 
async
öö 
Task
öö 
<
öö 
EmployeeProfile
öö *
>
öö* +'
GetEmployeeMinimalProfile
öö, E
(
ööE F
int
ööF I
employeeSlno
ööJ V
)
ööV W
{
õõ 	
EmployeeProfile
úú 
employeeProfile
úú +
=
úú, -
null
úú. 2
;
úú2 3
using
ùù 
(
ùù +
EmployeeInformationRepository
ùù 0
profileRepository
ùù1 B
=
ùùC D
new
ùùE H+
EmployeeInformationRepository
ùùI f
(
ùùf g
configuration
ùùg t
,
ùùt u
this
ùùv z
.
ùùz {

redisCacheùù{ Ö
)ùùÖ Ü
)ùùÜ á
{
ûû 
employeeProfile
üü 
=
üü  !
await
üü" '
profileRepository
üü( 9
.
üü9 :'
GetEmployeeMinimumProfile
üü: S
(
üüS T
employeeSlno
üüT `
)
üü` a
;
üüa b
}
†† 
return
°° 
employeeProfile
°° "
;
°°" #
}
¢¢ 	
private
§§ 
async
§§ 
Task
§§ 
<
§§ 
bool
§§ 
>
§§  
SavelastLogin
§§! .
(
§§. /
long
§§/ 3
employeeSlno
§§4 @
)
§§@ A
{
•• 	
int
¶¶ 
updatedRows
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶  
bool
ßß 
	isUpdated
ßß 
=
ßß 
false
ßß "
;
ßß" #
string
®® 

loginQuery
®® 
=
®® 
$str
®®  j
;
®®j k
using
©© 
(
©© 
IDbConnection
©©  

connection
©©! +
=
©©, -
await
©©. 3
CreateConnection
©©4 D
(
©©D E
DbSchema
©©E M
.
©©M N
PORTAL
©©N T
)
©©T U
)
©©U V
{
™™ 
updatedRows
´´ 
=
´´ 
await
´´ #

connection
´´$ .
.
´´. /
ExecuteAsync
´´/ ;
(
´´; <
new
´´< ?
StringBuilder
´´@ M
(
´´M N
)
´´N O
.
´´O P
AppendFormat
´´P \
(
´´\ ]

loginQuery
´´] g
,
´´g h
DateTime
´´i q
.
´´q r
Now
´´r u
.
´´u v
ToString
´´v ~
(
´´~ 
$str´´ ó
)´´ó ò
,´´ò ô
employeeSlno´´ö ¶
)´´¶ ß
.´´ß ®
ToString´´® ∞
(´´∞ ±
)´´± ≤
)´´≤ ≥
;´´≥ ¥
}
¨¨ 
	isUpdated
≠≠ 
=
≠≠ 
updatedRows
≠≠ #
>
≠≠$ %
$num
≠≠& '
;
≠≠' (
return
ÆÆ 
	isUpdated
ÆÆ 
;
ÆÆ 
}
ØØ 	
}
±± 
}≤≤ ÿª
[F:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Attendance\BioMetricRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &

Attendance& 0
{ 
public   

class   
BioMetricRepository   $
:  % &
BaseRepository  ' 5
{!! 
private"" 
readonly"" 
IConfiguration"" '
configuration""( 5
;""5 6
private## 
readonly## 
IDistributedCache## *

redisCache##+ 5
;##5 6
private$$ 
readonly$$ 
ILoggerManager$$ '
logger$$( .
;$$. /
private%% 
readonly%% 

Dictionary%% #
<%%# $
string%%$ *
,%%* +
DateTime%%, 4
>%%4 5
payrollDates%%6 B
=%%C D
null%%E I
;%%I J
public&& 
BioMetricRepository&& "
(&&" #
IConfiguration&&# 1
configuration&&2 ?
,&&? @
IDistributedCache&&A R

redisCache&&S ]
,&&] ^
ILoggerManager&&_ m
logger&&n t
)&&t u
:&&v w
base&&x |
(&&| }
configuration	&&} ä
)
&&ä ã
{'' 	
this(( 
.(( 
configuration(( 
=((  
configuration((! .
;((. /
this)) 
.)) 

redisCache)) 
=)) 

redisCache)) (
;))( )
this** 
.** 
logger** 
=** 
logger**  
;**  !
payrollDates++ 
=++ 
GetPayrollDates++ *
(++* +
DateTime+++ 3
.++3 4
Now++4 7
)++7 8
.++8 9
Result++9 ?
;++? @
}-- 	
public// 
async// 
Task// 
<// 
List// 
<// 
	BioMetric// (
>//( )
>//) * 
GetEmployeeTimeSheet//+ ?
(//? @
long//@ D

employeeId//E O
)//O P
{00 	
List11 
<11 
	BioMetric11 
>11 

attendance11 &
=11' (
null11) -
;11- .
IEnumerable22 
<22 
	BioMetric22 !
>22! "
dbAttendance22# /
=220 1
null222 6
;226 7
int33 
recordCount33 
=33 
$num33 
;33  
using66 
(66 
IDbConnection66  

connection66! +
=66, -
await66. 3
CreateConnection664 D
(66D E
DbSchema66E M
.66M N
PORTAL66N T
)66T U
)66U V
{77 #
OracleDynamicParameters88 '
	parmeters88( 1
=882 3
new884 7#
OracleDynamicParameters888 O
(88O P
)88P Q
;88Q R
	parmeters99 
.99 
Add99 
(99 
name99 "
:99" #
$str99$ ,
,99, -
null99. 2
,992 3
dbType994 :
:99: ;
OracleMappingType99< M
.99M N
Int3299N S
,99S T
	direction99U ^
:99^ _
ParameterDirection99` r
.99r s
Input99s x
)99x y
;99y z
	parmeters:: 
.:: 
Add:: 
(:: 
name:: "
:::" #
$str::$ 3
,::3 4

employeeId::5 ?
,::? @
dbType::A G
:::G H
OracleMappingType::I Z
.::Z [
Int64::[ `
,::` a
	direction::b k
:::k l
ParameterDirection::m 
.	:: Ä
Input
::Ä Ö
)
::Ö Ü
;
::Ü á
	parmeters;; 
.;; 
Add;; 
(;; 
name;; "
:;;" #
$str;;$ -
,;;- .
dbType;;/ 5
:;;5 6
OracleMappingType;;7 H
.;;H I
	RefCursor;;I R
,;;R S
	direction;;T ]
:;;] ^
ParameterDirection;;_ q
.;;q r
Output;;r x
);;x y
;;;y z
dbAttendance<< 
=<< 
(<<  
await<<  %

connection<<& 0
.<<0 1

QueryAsync<<1 ;
<<<; <
	BioMetric<<< E
><<E F
(<<F G
DatabaseProcedures<<G Y
.<<Y Z#
GET_EMPLOYEE_TIME_SHEET<<Z q
,<<q r
	parmeters<<s |
,<<| }
commandType	<<~ â
:
<<â ä
CommandType
<<ã ñ
.
<<ñ ó
StoredProcedure
<<ó ¶
)
<<¶ ß
)
<<ß ®
.
<<® ©
ToList
<<© Ø
(
<<Ø ∞
)
<<∞ ±
;
<<± ≤
recordCount== 
=== 
await== #

connection==$ .
.==. /
ExecuteScalarAsync==/ A
<==A B
int==B E
>==E F
(==F G
string==G M
.==M N
Format==N T
(==T U
DatabaseProcedures==U g
.==g h*
P_G_EMPLOYEE_TIME_SHEET_COUNT	==h Ö
,
==Ö Ü

employeeId
==á ë
)
==ë í
,
==í ì
commandType
==î ü
:
==ü †
CommandType
==° ¨
.
==¨ ≠
Text
==≠ ±
)
==± ≤
;
==≤ ≥

attendance?? 
=?? 
await?? "+
MapOnDutiesAndRegularAttendance??# B
(??B C
dbAttendance??C O
.??O P
ToList??P V
(??V W
)??W X
,??X Y

employeeId??Z d
.??d e
ToInt32OrDefault??e u
(??u v
)??v w
)??w x
;??x y
}@@ 
returnAA 

attendanceAA 
;AA 
}BB 	
publicDD 
asyncDD 
TaskDD 
<DD 
ListDD 
<DD 
	BioMetricDD (
>DD( )
>DD) * 
GetReporteeTimeSheetDD+ ?
(DD? @+
ReporteeTimeSheetSearchCriteriaDD@ _
searchCriteriaDD` n
)DDn o
{EE 	
ListFF 
<FF 
	BioMetricFF 
>FF 

attendanceFF &
=FF' (
nullFF) -
;FF- .
IEnumerableGG 
<GG 
	BioMetricGG !
>GG! "
dbAttendanceGG# /
=GG0 1
nullGG2 6
;GG6 7
intHH 
recordCountHH 
=HH 
$numHH 
;HH  
usingKK 
(KK 
IDbConnectionKK  

connectionKK! +
=KK, -
awaitKK. 3
CreateConnectionKK4 D
(KKD E
DbSchemaKKE M
.KKM N
PORTALKKN T
)KKT U
)KKU V
{LL #
OracleDynamicParametersMM '
	parmetersMM( 1
=MM2 3
newMM4 7#
OracleDynamicParametersMM8 O
(MMO P
)MMP Q
;MMQ R
	parmetersNN 
.NN 
AddNN 
(NN 
nameNN "
:NN" #
$strNN$ .
,NN. /
searchCriteriaNN0 >
.NN> ?
	ReportForNN? H
,NNH I
dbTypeNNJ P
:NNP Q
OracleMappingTypeNNR c
.NNc d
Int32NNd i
,NNi j
	directionNNk t
:NNt u
ParameterDirection	NNv à
.
NNà â
Input
NNâ é
)
NNé è
;
NNè ê
	parmetersOO 
.OO 
AddOO 
(OO 
nameOO "
:OO" #
$strOO$ 3
,OO3 4
searchCriteriaOO5 C
.OOC D 
ReportingManagerSlnoOOD X
,OOX Y
dbTypeOOZ `
:OO` a
OracleMappingTypeOOb s
.OOs t
Int64OOt y
,OOy z
	direction	OO{ Ñ
:
OOÑ Ö 
ParameterDirection
OOÜ ò
.
OOò ô
Input
OOô û
)
OOû ü
;
OOü †
	parmetersPP 
.PP 
AddPP 
(PP 
namePP "
:PP" #
$strPP$ /
,PP/ 0
searchCriteriaPP1 ?
.PP? @
	StartDatePP@ I
,PPI J
dbTypePPK Q
:PPQ R
OracleMappingTypePPS d
.PPd e
DatePPe i
,PPi j
	directionPPk t
:PPt u
ParameterDirection	PPv à
.
PPà â
Input
PPâ é
)
PPé è
;
PPè ê
	parmetersQQ 
.QQ 
AddQQ 
(QQ 
nameQQ "
:QQ" #
$strQQ$ -
,QQ- .
searchCriteriaQQ/ =
.QQ= >
EndDateQQ> E
,QQE F
dbTypeQQG M
:QQM N
OracleMappingTypeQQO `
.QQ` a
DateQQa e
,QQe f
	directionQQg p
:QQp q
ParameterDirection	QQr Ñ
.
QQÑ Ö
Input
QQÖ ä
)
QQä ã
;
QQã å
	parmetersRR 
.RR 
AddRR 
(RR 
nameRR "
:RR" #
$strRR$ -
,RR- .
dbTypeRR/ 5
:RR5 6
OracleMappingTypeRR7 H
.RRH I
	RefCursorRRI R
,RRR S
	directionRRT ]
:RR] ^
ParameterDirectionRR_ q
.RRq r
OutputRRr x
)RRx y
;RRy z
dbAttendanceSS 
=SS 
(SS  
awaitSS  %

connectionSS& 0
.SS0 1

QueryAsyncSS1 ;
<SS; <
	BioMetricSS< E
>SSE F
(SSF G
DatabaseProceduresSSG Y
.SSY Z%
P_GET_REPORTEE_TIME_SHEETSSZ s
,SSs t
	parmetersSSu ~
,SS~ 
commandType
SSÄ ã
:
SSã å
CommandType
SSç ò
.
SSò ô
StoredProcedure
SSô ®
)
SS® ©
)
SS© ™
.
SS™ ´
ToList
SS´ ±
(
SS± ≤
)
SS≤ ≥
;
SS≥ ¥

attendanceUU 
=UU 
awaitUU "+
MapOnDutiesAndRegularAttendanceUU# B
(UUB C
dbAttendanceUUC O
.UUO P
ToListUUP V
(UUV W
)UUW X
,UUX Y
searchCriteriaUUZ h
.UUh i 
ReportingManagerSlnoUUi }
)UU} ~
;UU~ 
}VV 
returnWW 

attendanceWW 
;WW 
}XX 	
privateZZ 
asyncZZ 
TaskZZ 
<ZZ 
ListZZ 
<ZZ  
	BioMetricZZ  )
>ZZ) *
>ZZ* ++
MapOnDutiesAndRegularAttendanceZZ, K
(ZZK L
ListZZL P
<ZZP Q
	BioMetricZZQ Z
>ZZZ [

attendanceZZ\ f
,ZZf g
intZZh k
employeeSlnoZZl x
)ZZx y
{[[ 	
List\\ 
<\\ 
HolidayInformation\\ #
>\\# $
holidays\\% -
=\\. /
await\\0 5'
CheckCompOffEmployeeHoliday\\6 Q
(\\Q R
employeeSlno\\R ^
)\\^ _
;\\_ `
List]] 
<]] 
LeaveDetail]] 
>]] 
leaves]] $
=]]% &
await]]' ,%
CheckCompOffEmployeLeaves]]- F
(]]F G
employeeSlno]]G S
)]]S T
;]]T U
List^^ 
<^^ 
LeaveDetail^^ 
>^^ 
earlyLeaves^^ )
=^^* +
await^^, 1)
CheckEarlyLogoutEmployeLeaves^^2 O
(^^O P
employeeSlno^^P \
)^^\ ]
;^^] ^
varaa 
startaa 
=aa 
payrollDatesaa $
[aa$ %
$straa% 0
]aa0 1
;aa1 2
varbb 
endbb 
=bb 
payrollDatesbb "
[bb" #
$strbb# ,
]bb, -
;bb- .
ifcc 
(cc 

attendancecc 
.cc 
Countcc  
>cc! "
$numcc# $
)cc$ %
{dd 

attendanceee 
.ee 
ForEachee "
(ee" #
(ee# $
itemee$ (
)ee( )
=>ee* ,
{ff 
itemgg 
.gg 
CanApplyOnDutygg '
=gg( )
itemgg* .
.gg. /
Holiday_Typegg/ ;
==gg< >
$numgg? @
?ggA B
falseggC H
:ggI J
trueggK O
;ggO P
ifhh 
(hh 
(hh 
itemhh 
.hh 

First_Halfhh (
==hh) +
$strhh, 4
&&hh5 7
itemhh8 <
.hh< =
Second_Halfhh= H
==hhI K
$strhhL U
)hhU V
||hhW Y
(ii 
itemii 
.ii 

First_Halfii (
==ii) +
$strii, 5
&&ii6 8
itemii9 =
.ii= >
Second_Halfii> I
==iiJ L
$striiM U
)iiU V
)iiV W
{jj 
itemkk 
.kk 
RegularOnDutykk *
=kk+ ,
truekk- 1
;kk1 2
}ll 
ifmm 
(mm 
itemmm 
.mm 

First_Halfmm '
==mm( *
$strmm+ 4
&&mm5 7
itemmm8 <
.mm< =
Second_Halfmm= H
==mmI K
$strmmL U
&&mmV X
itemmmY ]
.mm] ^

TotalHoursmm^ h
<=mmi k
$nummml m
)mmm n
{nn 
itemoo 
.oo 
CanApplyOnDutyoo +
=oo, -
trueoo. 2
;oo2 3
}pp 
ifrr 
(rr 
itemrr 
.rr 

First_Halfrr '
==rr( *
$strrr+ 4
&&rr5 7
itemrr8 <
.rr< =
Second_Halfrr= H
==rrI K
$strrrL U
&&rrV X
itemrrY ]
.rr] ^

TotalHoursrr^ h
>=rri k
$numrrl m
&&rrn p
itemrrq u
.rru v
AttendanceDate	rrv Ñ
>=
rrÖ á
DateTime
rrà ê
.
rrê ë
Now
rrë î
.
rrî ï
AddDays
rrï ú
(
rrú ù
-
rrù û
$num
rrû †
)
rr† °
&&
rr¢ §
start
rr• ™
<
rr´ ¨
DateTime
rr≠ µ
.
rrµ ∂
Now
rr∂ π
&&
rr∫ º
end
rrΩ ¿
>
rr¡ ¬
DateTime
rr√ À
.
rrÀ Ã
Now
rrÃ œ
)
rrœ –
{ss 
holidaystt  
=tt! "
holidaystt# +
.tt+ ,
Wherett, 1
(tt1 2
itt2 3
=>tt4 6
itt7 8
.tt8 9
HolidayDatett9 D
==ttE G
itemttH L
.ttL M
AttendanceDatettM [
)tt[ \
.tt\ ]
ToListtt] c
(ttc d
)ttd e
;tte f
varuu 
comOffsuu #
=uu$ %
leavesuu& ,
.uu, -
Whereuu- 2
(uu2 3
iuu3 4
=>uu5 7
iuu8 9
.uu9 :
CompOffDateuu: E
==uuF H
itemuuI M
.uuM N
AttendanceDateuuN \
)uu\ ]
.uu] ^
ToListuu^ d
(uud e
)uue f
;uuf g
ifvv 
(vv 
(vv 
itemvv !
.vv! "
WeekDayvv" )
==vv* ,
$strvv- 2
||vv3 5
holidaysvv6 >
.vv> ?
Countvv? D
>vvE F
$numvvG H
)vvH I
&&vvJ L
comOffsvvM T
.vvT U
CountvvU Z
<=vv[ ]
$numvv^ _
)vv_ `
{ww 
itemxx  
.xx  !
CanApplyCompOffxx! 0
=xx1 2
truexx3 7
;xx7 8
}yy 
}zz 
if{{ 
({{ 
({{ 
item{{ 
.{{ 

First_Half{{ (
=={{) +
$str{{, 5
&&{{6 8
item{{9 =
.{{= >
Second_Half{{> I
=={{J L
$str{{M V
){{V W
||{{X Z
({{[ \
item{{\ `
.{{` a

First_Half{{a k
=={{l n
$str{{o x
&&{{y {
item	{{| Ä
.
{{Ä Å
Second_Half
{{Å å
==
{{ç è
$str
{{ê ô
)
{{ô ö
)
{{ö õ
{|| 
item}} 
.}} &
CanNotApplyEarlyLogOutTime}} 7
=}}8 9
true}}: >
;}}> ?
} 
var
ÄÄ 
earlyLogoutData
ÄÄ '
=
ÄÄ( )
earlyLeaves
ÄÄ* 5
.
ÄÄ5 6
Where
ÄÄ6 ;
(
ÄÄ; <
i
ÄÄ< =
=>
ÄÄ> @
i
ÄÄA B
.
ÄÄB C
	LeaveFrom
ÄÄC L
==
ÄÄM O
item
ÄÄP T
.
ÄÄT U
AttendanceDate
ÄÄU c
)
ÄÄc d
.
ÄÄd e
ToList
ÄÄe k
(
ÄÄk l
)
ÄÄl m
;
ÄÄm n
if
ÅÅ 
(
ÅÅ 
earlyLogoutData
ÅÅ '
.
ÅÅ' (
Count
ÅÅ( -
>
ÅÅ. /
$num
ÅÅ0 1
||
ÅÅ2 4
item
ÅÅ5 9
.
ÅÅ9 :
AttendanceDate
ÅÅ: H
<
ÅÅI J
start
ÅÅK P
)
ÅÅP Q
{
ÇÇ 
item
ÉÉ 
.
ÉÉ (
CanNotApplyEarlyLogOutTime
ÉÉ 7
=
ÉÉ8 9
true
ÉÉ: >
;
ÉÉ> ?
}
ÑÑ 
}
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
return
áá 

attendance
áá 
;
áá 
}
àà 	
private
ää 
async
ää 
Task
ää 
<
ää 
List
ää 
<
ää   
HolidayInformation
ää  2
>
ää2 3
>
ää3 4)
CheckCompOffEmployeeHoliday
ää5 P
(
ääP Q
int
ääQ T
employeeSlno
ääU a
)
ääa b
{
ãã 	
List
åå 
<
åå  
HolidayInformation
åå #
>
åå# $
holidays
åå% -
=
åå. /
null
åå0 4
;
åå4 5
using
çç 
(
çç 
HolidayRepository
çç $

repository
çç% /
=
çç0 1
new
çç2 5
HolidayRepository
çç6 G
(
ççG H
this
ççH L
.
ççL M
configuration
ççM Z
,
ççZ [
this
çç\ `
.
çç` a

redisCache
çça k
)
ççk l
)
ççl m
{
éé 
holidays
èè 
=
èè 
await
èè  

repository
èè! +
.
èè+ ,!
GetEmployeeHolidays
èè, ?
(
èè? @
employeeSlno
èè@ L
)
èèL M
;
èèM N
}
ëë 
return
íí 
holidays
íí 
;
íí 
}
ìì 	
private
îî 
async
îî 
Task
îî 
<
îî 
List
îî 
<
îî  
LeaveDetail
îî  +
>
îî+ ,
>
îî, -'
CheckCompOffEmployeLeaves
îî. G
(
îîG H
int
îîH K
employeeSlno
îîL X
)
îîX Y
{
ïï 	
List
ññ 
<
ññ 
LeaveDetail
ññ 
>
ññ 
leaves
ññ $
=
ññ% &
null
ññ' +
;
ññ+ ,
using
óó 
(
óó '
LeaveManagementRepository
óó ,

repository
óó- 7
=
óó8 9
new
óó: ='
LeaveManagementRepository
óó> W
(
óóW X
this
óóX \
.
óó\ ]
configuration
óó] j
,
óój k
this
óól p
.
óóp q
logger
óóq w
)
óów x
)
óóx y
{
òò 
var
öö 
start
öö 
=
öö 
payrollDates
öö (
[
öö( )
$str
öö) 4
]
öö4 5
;
öö5 6
var
õõ 
end
õõ 
=
õõ 
payrollDates
õõ &
[
õõ& '
$str
õõ' 0
]
õõ0 1
;
õõ1 2
leaves
úú 
=
úú 
await
úú 

repository
úú )
.
úú) **
GetEmployeeLeavesByLeaveType
úú* F
(
úúF G
employeeSlno
úúG S
,
úúS T
start
úúU Z
,
úúZ [
end
úú\ _
,
úú_ `
LeaveTypeNames
úúa o
.
úúo p
COMPENSATORY_OFFúúp Ä
.úúÄ Å 
ToInt32OrDefaultúúÅ ë
(úúë í
)úúí ì
)úúì î
;úúî ï
}
ûû 
return
üü 
leaves
üü 
;
üü 
}
†† 	
private
¢¢ 
async
¢¢ 
Task
¢¢ 
<
¢¢ 
List
¢¢ 
<
¢¢  
LeaveDetail
¢¢  +
>
¢¢+ ,
>
¢¢, -+
CheckEarlyLogoutEmployeLeaves
¢¢. K
(
¢¢K L
int
¢¢L O
employeeSlno
¢¢P \
)
¢¢\ ]
{
££ 	
List
§§ 
<
§§ 
LeaveDetail
§§ 
>
§§ 
leaves
§§ $
=
§§% &
null
§§' +
;
§§+ ,
using
•• 
(
•• '
LeaveManagementRepository
•• ,

repository
••- 7
=
••8 9
new
••: ='
LeaveManagementRepository
••> W
(
••W X
this
••X \
.
••\ ]
configuration
••] j
,
••j k
this
••l p
.
••p q
logger
••q w
)
••w x
)
••x y
{
¶¶ 
var
®® 
start
®® 
=
®® 
payrollDates
®® (
[
®®( )
$str
®®) 4
]
®®4 5
;
®®5 6
var
©© 
end
©© 
=
©© 
payrollDates
©© &
[
©©& '
$str
©©' 0
]
©©0 1
;
©©1 2
leaves
™™ 
=
™™ 
await
™™ 

repository
™™ )
.
™™) **
GetEmployeeLeavesByLeaveType
™™* F
(
™™F G
employeeSlno
™™G S
,
™™S T
start
™™U Z
,
™™Z [
end
™™\ _
,
™™_ `
LeaveTypeNames
™™a o
.
™™o p 
EARLY_LOGOUT_TIME™™p Å
.™™Å Ç 
ToInt32OrDefault™™Ç í
(™™í ì
)™™ì î
)™™î ï
;™™ï ñ
}
¨¨ 
return
≠≠ 
leaves
≠≠ 
;
≠≠ 
}
ÆÆ 	
private
ØØ 
async
ØØ 
Task
ØØ 
<
ØØ 

Dictionary
ØØ %
<
ØØ% &
string
ØØ& ,
,
ØØ, -
DateTime
ØØ. 6
>
ØØ6 7
>
ØØ7 8
GetPayrollDates
ØØ9 H
(
ØØH I
DateTime
ØØI Q
fromDate
ØØR Z
)
ØØZ [
{
∞∞ 	
PayrollPeriod
±± 
payrollPeriod
±± '
=
±±( )
null
±±* .
;
±±. /

Dictionary
≤≤ 
<
≤≤ 
string
≤≤ 
,
≤≤ 
DateTime
≤≤ '
>
≤≤' (
payrollDates
≤≤) 5
=
≤≤6 7
new
≤≤8 ;

Dictionary
≤≤< F
<
≤≤F G
string
≤≤G M
,
≤≤M N
DateTime
≤≤O W
>
≤≤W X
(
≤≤X Y
)
≤≤Y Z
;
≤≤Z [
using
¥¥ 
(
¥¥ 
var
¥¥ 

connection
¥¥ !
=
¥¥" #
new
¥¥$ '%
PayrollPeriodRepository
¥¥( ?
(
¥¥? @
this
¥¥@ D
.
¥¥D E
configuration
¥¥E R
)
¥¥R S
)
¥¥S T
{
µµ 
payrollDates
∂∂ 
=
∂∂ 
await
∂∂ $

connection
∂∂% /
.
∂∂/ 0
GetPayrollDates
∂∂0 ?
(
∂∂? @
fromDate
∂∂@ H
)
∂∂H I
;
∂∂I J
if
∑∑ 
(
∑∑ 
payrollPeriod
∑∑ !
!=
∑∑" $
null
∑∑% )
)
∑∑) *
{
∏∏ 
payrollDates
ππ  
.
ππ  !
Add
ππ! $
(
ππ$ %
$str
ππ% 0
,
ππ0 1
payrollPeriod
ππ2 ?
.
ππ? @
FromDate
ππ@ H
)
ππH I
;
ππI J
payrollDates
∫∫  
.
∫∫  !
Add
∫∫! $
(
∫∫$ %
$str
∫∫% .
,
∫∫. /
payrollPeriod
∫∫0 =
.
∫∫= >
ToDate
∫∫> D
)
∫∫D E
;
∫∫E F
}
ªª 
}
ΩΩ 
return
ææ 
payrollDates
ææ 
;
ææ  
}
¿¿ 	
}
√√ 
}ƒƒ Ó
YF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Attendance\HolidayRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &

Attendance& 0
{ 
public 

class 
HolidayRepository "
:# $
BaseRepository% 3
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public 
HolidayRepository  
(  !
IConfiguration! /
configuration0 =
,= >
IDistributedCache? P

redisCacheQ [
)[ \
:] ^
base_ c
(c d
configurationd q
)q r
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 

redisCache 
= 

redisCache (
;( )
} 	
public 
async 
Task 
< 
List 
< 
HolidayInformation 1
>1 2
>2 3
GetEmployeeHolidays4 G
(G H
longH L

employeeIdM W
)W X
{ 	
List   
<   
HolidayInformation   #
>  # $

attendance  % /
=  0 1
null  2 6
;  6 7
using!! 
(!! 
IDbConnection!!  

connection!!! +
=!!, -
await!!. 3
CreateConnection!!4 D
(!!D E
DbSchema!!E M
.!!M N
PORTAL!!N T
)!!T U
)!!U V
{"" #
OracleDynamicParameters## '
	parmeters##( 1
=##2 3
new##4 7#
OracleDynamicParameters##8 O
(##O P
)##P Q
;##Q R
	parmeters$$ 
.$$ 
Add$$ 
($$ 
name$$ "
:$$" #
$str$$$ 3
,$$3 4

employeeId$$5 ?
,$$? @
dbType$$A G
:$$G H
OracleMappingType$$I Z
.$$Z [
Int64$$[ `
,$$` a
	direction$$b k
:$$k l
ParameterDirection$$m 
.	$$ Ä
Input
$$Ä Ö
)
$$Ö Ü
;
$$Ü á
	parmeters%% 
.%% 
Add%% 
(%% 
name%% "
:%%" #
$str%%$ -
,%%- .
dbType%%/ 5
:%%5 6
OracleMappingType%%7 H
.%%H I
	RefCursor%%I R
,%%R S
	direction%%T ]
:%%] ^
ParameterDirection%%_ q
.%%q r
Output%%r x
)%%x y
;%%y z
IEnumerable&& 
<&& 
HolidayInformation&& .
>&&. /
dbAttendance&&0 <
=&&= >
(&&? @
await&&@ E

connection&&F P
.&&P Q

QueryAsync&&Q [
<&&[ \
HolidayInformation&&\ n
>&&n o
(&&o p
DatabaseProcedures	&&p Ç
.
&&Ç É#
P_GET_PORTAL_HOLIDAYS
&&É ò
,
&&ò ô
	parmeters
&&ö £
,
&&£ §
commandType
&&• ∞
:
&&∞ ±
CommandType
&&≤ Ω
.
&&Ω æ
StoredProcedure
&&æ Õ
)
&&Õ Œ
)
&&Œ œ
.
&&œ –
ToList
&&– ÷
(
&&÷ ◊
)
&&◊ ÿ
;
&&ÿ Ÿ

attendance'' 
='' 
dbAttendance'' )
.'') *
ToList''* 0
(''0 1
)''1 2
;''2 3
}(( 
return)) 

attendance)) 
;)) 
}** 	
}++ 
},, °*
aF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\AutoApproval\AutoApprovalRespository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
AutoApproval& 2
{ 
public 

class #
AutoApprovalRespository (
:) *
BaseRepository+ 9
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
ILoggerManager '
logger( .
;. /
public #
AutoApprovalRespository &
(& '
IConfiguration' 5
configuration6 C
,C D
ILoggerManagerE S
loggerT Z
)Z [
:\ ]
base^ b
(b c
configurationc p
)p q
{ 	
this   
.   
configuration   
=    
configuration  ! .
;  . /
this!! 
.!! 
logger!! 
=!! 
logger!!  
;!!  !
}"" 	
public$$ 
async$$ 
Task$$ 
GetAutoApprovals$$ *
($$* +
)$$+ ,
{%% 	
List&& 
<&& 
AutoApprovalDetails&& $
>&&$ %
autoapprovals&&& 3
=&&4 5
null&&6 :
;&&: ;
using'' 
('' 
var'' 

connection'' !
=''" #
await''$ )
CreateConnection''* :
('': ;
DbSchema''; C
.''C D
PORTAL''D J
)''J K
)''K L
{(( #
OracleDynamicParameters)) '
	parmeters))( 1
=))2 3
new))4 7#
OracleDynamicParameters))8 O
())O P
)))P Q
;))Q R
	parmeters** 
.** 
Add** 
(** 
name** "
:**" #
$str**$ -
,**- .
dbType**/ 5
:**5 6
OracleMappingType**7 H
.**H I
	RefCursor**I R
,**R S
	direction**T ]
:**] ^
ParameterDirection**_ q
.**q r
Output**r x
)**x y
;**y z
autoapprovals++ 
=++ 
(++  !
await++! &

connection++' 1
.++1 2

QueryAsync++2 <
<++< =
AutoApprovalDetails++= P
>++P Q
(++Q R
DatabaseProcedures++R d
.++d e
GET_AUTO_APPROVALS++e w
,++w x
	parmeters	++y Ç
,
++Ç É
commandType
++Ñ è
:
++è ê
CommandType
++ë ú
.
++ú ù
StoredProcedure
++ù ¨
)
++¨ ≠
)
++≠ Æ
.
++Æ Ø
ToList
++Ø µ
(
++µ ∂
)
++∂ ∑
;
++∑ ∏
},, 
foreach-- 
(-- 
var-- 
item-- 
in--  
autoapprovals--! .
)--. /
{.. 
LeaveDetail// 
leaveDetail// '
=//( )
new//* -
LeaveDetail//. 9
(//9 :
)//: ;
;//; <
bool00 
empLeaveStatus00 #
=00$ %
false00& +
;00+ ,
using11 
(11 %
LeaveManagementRepository11 0%
leaveManagementRepository111 J
=11K L
new11M P
(11P Q
configuration11Q ^
,11^ _
logger11` f
)11f g
)11g h
{22 
leaveDetail33 
.33  
LeaveId33  '
=33( )
item33* .
.33. /
LeaveId33/ 6
;336 7
leaveDetail44 
.44  
WorkFlowTypeId44  .
=44/ 0
item441 5
.445 6
WorkflowTypeId446 D
;44D E
leaveDetail55 
.55  

StepTypeId55  *
=55+ ,
item55- 1
.551 2

StepTypeId552 <
;55< =
leaveDetail66 
.66  
StepMasterId66  ,
=66- .
item66/ 3
.663 4
StepMasterId664 @
;66@ A
leaveDetail77 
.77  
LeaveStatusId77  -
=77. /
LeaveStatusNames770 @
.77@ A
Approved77A I
.77I J
ToInt32OrDefault77J Z
(77Z [
)77[ \
;77\ ]
leaveDetail88 
.88  
EmployeeSlno88  ,
=88- .
item88/ 3
.883 4
EmployeeSno884 ?
;88? @
leaveDetail99 
.99  
ApprovedRemarks99  /
=990 1
$str992 L
;99L M
leaveDetail;; 
.;;  
LeaveTo;;  '
=;;( )
item;;* .
.;;. /
LeaveTo;;/ 6
;;;6 7
leaveDetail<< 
.<<  
	LeaveFrom<<  )
=<<* +
item<<, 0
.<<0 1
	LeaveFrom<<1 :
;<<: ;
leaveDetail== 
.==  
LeaveTypeId==  +
===, -
item==. 2
.==2 3
LeaveTypeId==3 >
;==> ?
empLeaveStatus>> "
=>># $
await>>% *%
leaveManagementRepository>>+ D
.>>D E%
UpdateEmployeeLeaveStatus>>E ^
(>>^ _
leaveDetail>>_ j
)>>j k
;>>k l
}?? 
}AA 
}BB 	
}CC 
}DD πî
XF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\CarLease\CarLeaseRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
CarLease& .
{ 
public 

class 
CarLeaseRepository #
:$ %
BaseRepository& 4
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
CarLeaseRepository !
(! "
IConfiguration" 0
configuration1 >
)> ?
:@ A
baseB F
(F G
configurationG T
)T U
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
CarLeaseBillName /
>/ 0
>0 1 
GetCarLeaseBillNames2 F
(F G
)G H
{ 	
List 
< 
CarLeaseBillName !
>! "
carLeaseBillName# 3
=4 5
null6 :
;: ;
string 
sqlQuery 
= 
$str ^
;^ _
using   
(   
var   

connection   !
=  " #
await  $ )
base  * .
.  . /
CreateConnection  / ?
(  ? @
DbSchema  @ H
.  H I
PORTAL  I O
)  O P
)  P Q
{!! #
OracleDynamicParameters"" '
	parmeters""( 1
=""2 3
new""4 7#
OracleDynamicParameters""8 O
(""O P
)""P Q
;""Q R
sqlQuery## 
=## 
string## !
.##! "
Format##" (
(##( )
sqlQuery##) 1
,##1 2
$str##3 6
)##6 7
;##7 8
carLeaseBillName$$  
=$$! "
($$# $
await$$$ )

connection$$* 4
.$$4 5

QueryAsync$$5 ?
<$$? @
CarLeaseBillName$$@ P
>$$P Q
($$Q R
sqlQuery$$R Z
,$$Z [
commandType$$\ g
:$$g h
CommandType$$i t
.$$t u
Text$$u y
)$$y z
)$$z {
.$${ |
ToList	$$| Ç
(
$$Ç É
)
$$É Ñ
;
$$Ñ Ö
}%% 
return&& 
carLeaseBillName&& #
;&&# $
}'' 	
public)) 
async)) 
Task)) 
<)) 
List)) 
<)) &
CarLeaseMaintenanceBalance)) 9
>))9 :
>)): ;)
GetCarLeaseMaintenanceBalance))< Y
())Y Z
int))Z ]
empSLNo))^ e
)))e f
{** 	
PagedResultSet++ 
<++ &
CarLeaseMaintenanceBalance++ 5
>++5 6
pagedResultSet++7 E
=++F G
null++H L
;++L M
List,, 
<,, &
CarLeaseMaintenanceBalance,, +
>,,+ ,*
CarLeaseMaintenanceBalanceList,,- K
=,,L M
null,,N R
;,,R S
using-- 
(-- 
var-- 

connection-- !
=--" #
await--$ )
base--* .
.--. /
CreateConnection--/ ?
(--? @
DbSchema--@ H
.--H I
PORTAL--I O
)--O P
)--P Q
{.. #
OracleDynamicParameters// '
	parmeters//( 1
=//2 3
new//4 7#
OracleDynamicParameters//8 O
(//O P
)//P Q
;//Q R
	parmeters00 
.00 
Add00 
(00 
name00 "
:00" #
$str00$ 3
,003 4
empSLNo005 <
,00< =
dbType00> D
:00D E
OracleMappingType00F W
.00W X
Int3200X ]
,00] ^
	direction00_ h
:00h i
ParameterDirection00j |
.00| }
Input	00} Ç
)
00Ç É
;
00É Ñ
	parmeters11 
.11 
Add11 
(11 
name11 "
:11" #
$str11$ -
,11- .
dbType11/ 5
:115 6
OracleMappingType117 H
.11H I
	RefCursor11I R
,11R S
	direction11T ]
:11] ^
ParameterDirection11_ q
.11q r
Output11r x
)11x y
;11y z*
CarLeaseMaintenanceBalanceList22 .
=22/ 0
(221 2
await222 7

connection228 B
.22B C

QueryAsync22C M
<22M N&
CarLeaseMaintenanceBalance22N h
>22h i
(22i j
DatabaseProcedures22j |
.22| }'
P_GET_EMP_CL_MAINTE_SELECT	22} ó
,
22ó ò
	parmeters
22ô ¢
,
22¢ £
commandType
22§ Ø
:
22Ø ∞
CommandType
22± º
.
22º Ω
StoredProcedure
22Ω Ã
)
22Ã Õ
)
22Õ Œ
.
22Œ œ
ToList
22œ ’
(
22’ ÷
)
22÷ ◊
;
22◊ ÿ
}33 
return44 *
CarLeaseMaintenanceBalanceList44 1
;441 2
}55 	
public66 
async66 
Task66 
<66 
List66 
<66 +
CarLeaseMaintenancePendingBills66 >
>66> ?
>66? @.
"GetCarLeaseMaintenancePendingBills66A c
(66c d
int66d g
empSLNo66h o
)66o p
{77 	
PagedResultSet88 
<88 +
CarLeaseMaintenancePendingBills88 :
>88: ;
pagedResultSet88< J
=88K L
null88M Q
;88Q R
List99 
<99 +
CarLeaseMaintenancePendingBills99 0
>990 1*
CarLeaseMaintenanceBalanceList992 P
=99Q R
null99S W
;99W X
using:: 
(:: 
var:: 

connection:: !
=::" #
await::$ )
base::* .
.::. /
CreateConnection::/ ?
(::? @
DbSchema::@ H
.::H I
PORTAL::I O
)::O P
)::P Q
{;; #
OracleDynamicParameters<< '
	parmeters<<( 1
=<<2 3
new<<4 7#
OracleDynamicParameters<<8 O
(<<O P
)<<P Q
;<<Q R
	parmeters== 
.== 
Add== 
(== 
name== "
:==" #
$str==$ 3
,==3 4
empSLNo==5 <
,==< =
dbType==> D
:==D E
OracleMappingType==F W
.==W X
Int32==X ]
,==] ^
	direction==_ h
:==h i
ParameterDirection==j |
.==| }
Input	==} Ç
)
==Ç É
;
==É Ñ
	parmeters>> 
.>> 
Add>> 
(>> 
name>> "
:>>" #
$str>>$ -
,>>- .
dbType>>/ 5
:>>5 6
OracleMappingType>>7 H
.>>H I
	RefCursor>>I R
,>>R S
	direction>>T ]
:>>] ^
ParameterDirection>>_ q
.>>q r
Output>>r x
)>>x y
;>>y z*
CarLeaseMaintenanceBalanceList@@ .
=@@/ 0
(@@1 2
await@@2 7

connection@@8 B
.@@B C

QueryAsync@@C M
<@@M N+
CarLeaseMaintenancePendingBills@@N m
>@@m n
(@@n o
DatabaseProcedures	@@o Å
.
@@Å Ç*
P_GET_EMP_CL_MAINBILL_SELECT
@@Ç û
,
@@û ü
	parmeters
@@† ©
,
@@© ™
commandType
@@´ ∂
:
@@∂ ∑
CommandType
@@∏ √
.
@@√ ƒ
StoredProcedure
@@ƒ ”
)
@@” ‘
)
@@‘ ’
.
@@’ ÷
ToList
@@÷ ‹
(
@@‹ ›
)
@@› ﬁ
;
@@ﬁ ﬂ
}AA 
returnBB *
CarLeaseMaintenanceBalanceListBB 1
;BB1 2
}CC 	
publicEE 
asyncEE 
TaskEE 
<EE 
boolEE 
>EE %
UploadCarLeaseMaintenanceEE  9
(EE9 :%
CarLeaseMaintenanceDetailEE: S%
uploadCarLeaseMaintenanceEET m
)EEm n
{FF 	#
OracleDynamicParametersGG #
	parmetersGG$ -
=GG. /
newGG0 3
(GG3 4
)GG4 5
;GG5 6
boolHH 
respHH 
=HH 
falseHH 
;HH 
intII  
updatedParentRecordsII $
=II% &
$numII' (
;II( )
intJJ 
updatedChildRecordsJJ #
=JJ$ %
$numJJ& '
;JJ' (
usingLL 
(LL 
varLL 

connectionLL !
=LL" #
awaitLL$ )
baseLL* .
.LL. /
CreateConnectionLL/ ?
(LL? @
DbSchemaLL@ H
.LLH I
PORTALLLI O
)LLO P
)LLP Q
{MM 
boolNN 
filsUploadStatusNN %
=NN& '
awaitNN( -+
MainteneceUploadFileToDirectoryNN. M
(NNM N%
uploadCarLeaseMaintenanceNNN g
)NNg h
;NNh i
ifOO 
(OO 
filsUploadStatusOO $
)OO$ %
{PP #
OracleDynamicParametersQQ +
paramQQ, 1
=QQ2 3
newQQ4 7
(QQ7 8
)QQ8 9
;QQ9 :
paramRR 
.RR 
AddRR 
(RR 
nameRR "
:RR" #
$strRR$ 2
,RR2 3%
uploadCarLeaseMaintenanceRR4 M
.RRM N
PBranchSLNoRRN Y
,RRY Z
dbTypeRR[ a
:RRa b
OracleMappingTypeRRc t
.RRt u
Int32RRu z
,RRz {
	direction	RR| Ö
:
RRÖ Ü 
ParameterDirection
RRá ô
.
RRô ö
Input
RRö ü
)
RRü †
;
RR† °
paramSS 
.SS 
AddSS 
(SS 
nameSS "
:SS" #
$strSS$ .
,SS. /%
uploadCarLeaseMaintenanceSS0 I
.SSI J
EmpSLNoSSJ Q
,SSQ R
dbTypeSSS Y
:SSY Z
OracleMappingTypeSS[ l
.SSl m
Int32SSm r
,SSr s
	directionSSt }
:SS} ~
ParameterDirection	SS ë
.
SSë í
Input
SSí ó
)
SSó ò
;
SSò ô
paramTT 
.TT 
AddTT 
(TT 
nameTT "
:TT" #
$strTT$ /
,TT/ 0%
uploadCarLeaseMaintenanceTT1 J
.TTJ K
UniqueNoTTK S
,TTS T
dbTypeTTU [
:TT[ \
OracleMappingTypeTT] n
.TTn o
Int32TTo t
,TTt u
	directionTTv 
:	TT Ä 
ParameterDirection
TTÅ ì
.
TTì î
Input
TTî ô
)
TTô ö
;
TTö õ
paramUU 
.UU 
AddUU 
(UU 
nameUU "
:UU" #
$strUU$ /
,UU/ 0%
uploadCarLeaseMaintenanceUU1 J
.UUJ K
UserSLNoUUK S
,UUS T
dbTypeUUU [
:UU[ \
OracleMappingTypeUU] n
.UUn o
Int32UUo t
,UUt u
	directionUUv 
:	UU Ä 
ParameterDirection
UUÅ ì
.
UUì î
Input
UUî ô
)
UUô ö
;
UUö õ
paramVV 
.VV 
AddVV 
(VV 
nameVV "
:VV" #
$strVV$ /
,VV/ 0
dbTypeVV1 7
:VV7 8
OracleMappingTypeVV9 J
.VVJ K
Int32VVK P
,VVP Q
	directionVVR [
:VV[ \
ParameterDirectionVV] o
.VVo p
OutputVVp v
)VVv w
;VVw x 
updatedParentRecordsWW (
=WW) *
awaitWW+ 0

connectionWW1 ;
.WW; <
ExecuteAsyncWW< H
(WWH I
DatabaseProceduresWWI [
.WW[ \!
SP_EMP_UPLD_CAR_LEASEWW\ q
,WWq r
paramWWs x
,WWx y
commandType	WWz Ö
:
WWÖ Ü
CommandType
WWá í
.
WWí ì
StoredProcedure
WWì ¢
)
WW¢ £
;
WW£ §
varXX 
parentIdXX  
=XX! "
paramXX# (
.XX( )
GetXX) ,
<XX, -
intXX- 0
>XX0 1
(XX1 2
$strXX2 =
)XX= >
;XX> ?
ifZZ 
(ZZ %
uploadCarLeaseMaintenanceZZ 4
.ZZ4 5
FileZZ5 9
!=ZZ9 ;
nullZZ; ?
)ZZ? @
{[[ #
OracleDynamicParameters\\ 3
parm\\4 8
=\\9 :
new\\; >
(\\> ?
)\\? @
;\\@ A
parm]]  
.]]  !
Add]]! $
(]]$ %
name]]% )
:]]) *
$str]]+ 6
,]]6 7
parentId]]8 @
,]]@ A
dbType]]B H
:]]H I
OracleMappingType]]J [
.]][ \
Int32]]\ a
,]]a b
	direction]]c l
:]]l m
ParameterDirection	]]n Ä
.
]]Ä Å
Input
]]Å Ü
)
]]Ü á
;
]]á à
parm^^  
.^^  !
Add^^! $
(^^$ %
name^^% )
:^^) *
$str^^+ 4
,^^4 5%
uploadCarLeaseMaintenance^^6 O
.^^O P
Amount^^P V
,^^V W
dbType^^X ^
:^^^ _
OracleMappingType^^` q
.^^q r
Int32^^r w
,^^w x
	direction	^^y Ç
:
^^Ç É 
ParameterDirection
^^Ñ ñ
.
^^ñ ó
Input
^^ó ú
)
^^ú ù
;
^^ù û
parm__  
.__  !
Add__! $
(__$ %
name__% )
:__) *
$str__+ 6
,__6 7%
uploadCarLeaseMaintenance__8 Q
.__Q R
File__R V
.__V W
FileName__W _
,___ `
dbType__a g
:__g h
OracleMappingType__i z
.__z {
Varchar2	__{ É
,
__É Ñ
	direction
__Ö é
:
__é è 
ParameterDirection
__ê ¢
.
__¢ £
Input
__£ ®
)
__® ©
;
__© ™
parm``  
.``  !
Add``! $
(``$ %
name``% )
:``) *
$str``+ 6
,``6 7%
uploadCarLeaseMaintenance``8 Q
.``Q R
FilePath``R Z
,``Z [
dbType``\ b
:``b c
OracleMappingType``d u
.``u v
Varchar2``v ~
,``~ 
	direction
``Ä â
:
``â ä 
ParameterDirection
``ã ù
.
``ù û
Input
``û £
)
``£ §
;
``§ •
parmaa  
.aa  !
Addaa! $
(aa$ %
nameaa% )
:aa) *
$straa+ 6
,aa6 7%
uploadCarLeaseMaintenanceaa8 Q
.aaQ R
CarLeaseSLnoaaR ^
,aa^ _
dbTypeaa` f
:aaf g
OracleMappingTypeaah y
.aay z
Int32aaz 
,	aa Ä
	direction
aaÅ ä
:
aaä ã 
ParameterDirection
aaå û
.
aaû ü
Input
aaü §
)
aa§ •
;
aa• ¶
parmbb  
.bb  !
Addbb! $
(bb$ %
namebb% )
:bb) *
$strbb+ 6
,bb6 7%
uploadCarLeaseMaintenancebb8 Q
.bbQ R
BillDatebbR Z
,bbZ [
dbTypebb\ b
:bbb c
OracleMappingTypebbd u
.bbu v
Datebbv z
,bbz {
	direction	bb| Ö
:
bbÖ Ü 
ParameterDirection
bbá ô
.
bbô ö
Input
bbö ü
)
bbü †
;
bb† °
parmcc  
.cc  !
Addcc! $
(cc$ %
namecc% )
:cc) *
$strcc+ 4
,cc4 5%
uploadCarLeaseMaintenancecc6 O
.ccO P
BillNoccP V
,ccV W
dbTypeccX ^
:cc^ _
OracleMappingTypecc` q
.ccq r
Varchar2ccr z
,ccz {
	direction	cc| Ö
:
ccÖ Ü 
ParameterDirection
ccá ô
.
ccô ö
Input
ccö ü
)
ccü †
;
cc† °
updatedChildRecordsdd .
=dd/ 0
awaitdd1 6

connectiondd7 A
.ddA B
ExecuteAsyncddB N
(ddN O
DatabaseProceduresddO a
.dda b%
SP_EMP_UPLD_CAR_LEASE_DDTddb {
,dd{ |
parm	dd} Å
,
ddÅ Ç
commandType
ddÉ é
:
ddé è
CommandType
ddê õ
.
ddõ ú
StoredProcedure
ddú ´
)
dd´ ¨
;
dd¨ ≠
}ee 
}ff 
resphh 
=hh 
(hh  
updatedParentRecordshh ,
*hh- .
-hh/ 0
$numhh0 1
)hh1 2
>hh3 4
$numhh5 6
&&hh7 9
(hh: ;
updatedChildRecordshh; N
*hhO P
-hhQ R
$numhhR S
)hhS T
>hhU V
$numhhW X
;hhX Y
}ii 
returnjj 
respjj 
;jj 
}kk 	
publicmm 
asyncmm 
Taskmm 
<mm 
boolmm 
>mm !
DeleteMaintenenceBillmm  5
(mm5 6
intmm6 9
recordIdmm: B
)mmB C
{nn 	
usingoo 
(oo 
varoo 

connectionoo !
=oo" #
awaitoo$ )
baseoo* .
.oo. /
CreateConnectionoo/ ?
(oo? @
DbSchemaoo@ H
.ooH I
PORTALooI O
)ooO P
)ooP Q
{pp #
OracleDynamicParametersqq '
	parmetersqq( 1
=qq2 3
newqq4 7#
OracleDynamicParametersqq8 O
(qqO P
)qqP Q
;qqQ R
	parmetersrr 
.rr 
Addrr 
(rr 
namerr "
:rr" #
$strrr$ /
,rr/ 0
recordIdrr1 9
,rr9 :
dbTyperr; A
:rrA B
OracleMappingTyperrC T
.rrT U
Int32rrU Z
,rrZ [
	directionrr\ e
:rre f
ParameterDirectionrrg y
.rry z
Inputrrz 
)	rr Ä
;
rrÄ Å
varss 
responsess 
=ss 
awaitss "

connectionss# -
.ss- .

QueryAsyncss. 8
<ss8 9
boolss9 =
>ss= >
(ss> ?
DatabaseProceduresss? Q
.ssQ R$
P_DELETE_EMP_CL_MAINBILLssR j
,ssj k
	parmetersssl u
,ssu v
commandType	ssw Ç
:
ssÇ É
CommandType
ssÑ è
.
ssè ê
StoredProcedure
ssê ü
)
ssü †
;
ss† °
}tt 
returnuu 
trueuu 
;uu 
}vv 	
publiczz 
asynczz 
Taskzz 
<zz 
Listzz 
<zz "
CarLeaseAgreementBillszz 5
>zz5 6
>zz6 7%
GetCarLeaseAgreementBillszz8 Q
(zzQ R
intzzR U
employeeSLNozzV b
)zzb c
{{{ 	
List|| 
<|| "
CarLeaseAgreementBills|| '
>||' (*
CarLeaseMaintenanceBalanceList||) G
=||H I
null||J N
;||N O
using}} 
(}} 
var}} 

connection}} !
=}}" #
await}}$ )
base}}* .
.}}. /
CreateConnection}}/ ?
(}}? @
DbSchema}}@ H
.}}H I
PORTAL}}I O
)}}O P
)}}P Q
{~~ #
OracleDynamicParameters '
	parmeters( 1
=2 3
new4 7#
OracleDynamicParameters8 O
(O P
)P Q
;Q R
	parmeters
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ 
name
ÄÄ "
:
ÄÄ" #
$str
ÄÄ$ 3
,
ÄÄ3 4
employeeSLNo
ÄÄ5 A
,
ÄÄA B
dbType
ÄÄC I
:
ÄÄI J
OracleMappingType
ÄÄK \
.
ÄÄ\ ]
Int32
ÄÄ] b
,
ÄÄb c
	direction
ÄÄd m
:
ÄÄm n!
ParameterDirectionÄÄo Å
.ÄÄÅ Ç
InputÄÄÇ á
)ÄÄá à
;ÄÄà â
	parmeters
ÅÅ 
.
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
name
ÅÅ "
:
ÅÅ" #
$str
ÅÅ$ -
,
ÅÅ- .
dbType
ÅÅ/ 5
:
ÅÅ5 6
OracleMappingType
ÅÅ7 H
.
ÅÅH I
	RefCursor
ÅÅI R
,
ÅÅR S
	direction
ÅÅT ]
:
ÅÅ] ^ 
ParameterDirection
ÅÅ_ q
.
ÅÅq r
Output
ÅÅr x
)
ÅÅx y
;
ÅÅy z,
CarLeaseMaintenanceBalanceList
ÉÉ .
=
ÉÉ/ 0
(
ÉÉ1 2
await
ÉÉ2 7

connection
ÉÉ8 B
.
ÉÉB C

QueryAsync
ÉÉC M
<
ÉÉM N$
CarLeaseAgreementBills
ÉÉN d
>
ÉÉd e
(
ÉÉe f 
DatabaseProcedures
ÉÉf x
.
ÉÉx y(
P_GET_EMP_CL_AGREE_SELECTÉÉy í
,ÉÉí ì
	parmetersÉÉî ù
,ÉÉù û
commandTypeÉÉü ™
:ÉÉ™ ´
CommandTypeÉÉ¨ ∑
.ÉÉ∑ ∏
StoredProcedureÉÉ∏ «
)ÉÉ« »
)ÉÉ» …
.ÉÉ…  
ToListÉÉ  –
(ÉÉ– —
)ÉÉ— “
;ÉÉ“ ”
}
ÑÑ 
return
ÖÖ ,
CarLeaseMaintenanceBalanceList
ÖÖ 1
;
ÖÖ1 2
}
ÜÜ 	
public
àà 
async
àà 
Task
àà 
<
àà 
bool
àà 
>
àà )
UploadCarLeaseAgreementBill
àà  ;
(
àà; <
List
àà< @
<
àà@ A$
CarLeaseAgreementBills
ààA W
>
ààW X)
carLeaseAgreementBillUpload
ààY t
)
ààt u
{
ââ 	
List
ää 
<
ää %
OracleDynamicParameters
ää (
>
ää( )
	parmeters
ää* 3
=
ää4 5
new
ää6 9
(
ää9 :
)
ää: ;
;
ää; <
bool
ãã 
resp
ãã 
=
ãã 
false
ãã 
;
ãã 
using
çç 
(
çç 
var
çç 

connection
çç !
=
çç" #
await
çç$ )
base
çç* .
.
çç. /
CreateConnection
çç/ ?
(
çç? @
DbSchema
çç@ H
.
ççH I
PORTAL
ççI O
)
ççO P
)
ççP Q
{
éé 
bool
èè 
filsUploadStatus
èè %
=
èè& '
await
èè( -0
"AgreementBillUploadFileToDirectory
èè. P
(
èèP Q)
carLeaseAgreementBillUpload
èèQ l
)
èèl m
;
èèm n
if
êê 
(
êê 
filsUploadStatus
êê $
)
êê$ %
{
ëë )
carLeaseAgreementBillUpload
íí /
.
íí/ 0
ForEach
íí0 7
(
íí7 8
	agreement
íí8 A
=>
ííB D
{
ìì %
OracleDynamicParameters
îî /
param
îî0 5
=
îî6 7
new
îî8 ;
(
îî; <
)
îî< =
;
îî= >
param
ïï 
.
ïï 
Add
ïï !
(
ïï! "
name
ïï" &
:
ïï& '
$str
ïï( =
,
ïï= >
	agreement
ïï? H
.
ïïH I 
EmpCarLeasedDTSLNo
ïïI [
,
ïï[ \
dbType
ïï] c
:
ïïc d
OracleMappingType
ïïe v
.
ïïv w
Int32
ïïw |
,
ïï| }
	directionïï~ á
:ïïá à"
ParameterDirectionïïâ õ
.ïïõ ú
Inputïïú °
)ïï° ¢
;ïï¢ £
param
ññ 
.
ññ 
Add
ññ !
(
ññ! "
name
ññ" &
:
ññ& '
$str
ññ( 3
,
ññ3 4
	agreement
ññ5 >
.
ññ> ?
FileData
ññ? G
.
ññG H
FileName
ññH P
,
ññP Q
dbType
ññR X
:
ññX Y
OracleMappingType
ññZ k
.
ññk l
Varchar2
ññl t
,
ññt u
	direction
ññv 
:ññ Ä"
ParameterDirectionññÅ ì
.ññì î
Inputññî ô
)ññô ö
;ññö õ
param
óó 
.
óó 
Add
óó !
(
óó! "
name
óó" &
:
óó& '
$str
óó( 3
,
óó3 4
	agreement
óó5 >
.
óó> ?
FilePath
óó? G
,
óóG H
dbType
óóI O
:
óóO P
OracleMappingType
óóQ b
.
óób c
Varchar2
óóc k
,
óók l
	direction
óóm v
:
óóv w!
ParameterDirectionóóx ä
.óóä ã
Inputóóã ê
)óóê ë
;óóë í
param
òò 
.
òò 
Add
òò !
(
òò! "
name
òò" &
:
òò& '
$str
òò( 1
,
òò1 2
	agreement
òò3 <
.
òò< =
BillNo
òò= C
,
òòC D
dbType
òòE K
:
òòK L
OracleMappingType
òòM ^
.
òò^ _
Varchar2
òò_ g
,
òòg h
	direction
òòi r
:
òòr s!
ParameterDirectionòòt Ü
.òòÜ á
Inputòòá å
)òòå ç
;òòç é
param
ôô 
.
ôô 
Add
ôô !
(
ôô! "
name
ôô" &
:
ôô& '
$str
ôô( 3
,
ôô3 4
	agreement
ôô5 >
.
ôô> ?
BillDate
ôô? G
,
ôôG H
dbType
ôôI O
:
ôôO P
OracleMappingType
ôôQ b
.
ôôb c
Date
ôôc g
,
ôôg h
	direction
ôôi r
:
ôôr s!
ParameterDirectionôôt Ü
.ôôÜ á
Inputôôá å
)ôôå ç
;ôôç é
param
öö 
.
öö 
Add
öö !
(
öö! "
name
öö" &
:
öö& '
$str
öö( 2
,
öö2 3
	agreement
öö4 =
.
öö= >
Remarks
öö> E
,
ööE F
dbType
ööG M
:
ööM N
OracleMappingType
ööO `
.
öö` a
Varchar2
ööa i
,
ööi j
	direction
öök t
:
ööt u!
ParameterDirectionööv à
.ööà â
Inputööâ é
)ööé è
;ööè ê
	parmeters
õõ !
.
õõ! "
Add
õõ" %
(
õõ% &
param
õõ& +
)
õõ+ ,
;
õõ, -
}
úú 
)
úú 
;
úú 
await
ùù 

connection
ùù $
.
ùù$ %
ExecuteAsync
ùù% 1
(
ùù1 2 
DatabaseProcedures
ùù2 D
.
ùùD E)
SP_EMP_CL_AGRE_BILLS_UPLOAD
ùùE `
,
ùù` a
	parmeters
ùùb k
,
ùùk l
commandType
ùùm x
:
ùùx y
CommandTypeùùz Ö
.ùùÖ Ü
StoredProcedureùùÜ ï
)ùùï ñ
;ùùñ ó
}
ûû 
resp
üü 
=
üü 
true
üü 
;
üü 
}
†† 
return
°° 
resp
°° 
;
°° 
}
¢¢ 	
private
§§ 
async
§§ 
Task
§§ 
<
§§ 
bool
§§ 
>
§§  0
"AgreementBillUploadFileToDirectory
§§! C
(
§§C D
List
§§D H
<
§§H I$
CarLeaseAgreementBills
§§I _
>
§§_ `$
carLeaseAgreementBills
§§a w
)
§§w x
{
•• 	
if
¶¶ 
(
¶¶ $
carLeaseAgreementBills
¶¶ &
!=
¶¶' )
null
¶¶* .
&&
¶¶/ 1$
carLeaseAgreementBills
¶¶2 H
.
¶¶H I
Count
¶¶I N
>
¶¶O P
$num
¶¶Q R
)
¶¶R S
{
ßß 
foreach
®® 
(
®® 
var
®® 
item
®® !
in
®®" $$
carLeaseAgreementBills
®®% ;
)
®®; <
{
©© 
string
™™ 
filePath
™™ #
=
™™$ %
Path
™™& *
.
™™* +
Combine
™™+ 2
(
™™2 3!
ApplicationSettings
™™3 F
.
™™F G
Current
™™G N
.
™™N O$
CarLeaseAgreementsPath
™™O e
,
™™e f
item
™™g k
.
™™k l
	MonthSlNo
™™l u
.
™™u v 
ToStringOrDefault™™v á
(™™á à
)™™à â
)™™â ä
;™™ä ã
if
´´ 
(
´´ 
!
´´ 
	Directory
´´ "
.
´´" #
Exists
´´# )
(
´´) *
filePath
´´* 2
)
´´2 3
)
´´3 4
{
¨¨ 
	Directory
≠≠ !
.
≠≠! "
CreateDirectory
≠≠" 1
(
≠≠1 2
filePath
≠≠2 :
)
≠≠: ;
;
≠≠; <
}
ÆÆ 
string
ØØ 
fileType
ØØ #
=
ØØ$ %
Path
ØØ& *
.
ØØ* +
GetExtension
ØØ+ 7
(
ØØ7 8
item
ØØ8 <
.
ØØ< =
FileData
ØØ= E
.
ØØE F
FileName
ØØF N
)
ØØN O
.
ØØO P
ToString
ØØP X
(
ØØX Y
)
ØØY Z
.
ØØZ [
ToLower
ØØ[ b
(
ØØb c
)
ØØc d
;
ØØd e
string
∞∞ 
fileName
∞∞ #
=
∞∞$ %
string
∞∞& ,
.
∞∞, -
Format
∞∞- 3
(
∞∞3 4
$str
∞∞4 E
,
∞∞E F
item
∞∞G K
.
∞∞K L
EmployeeSlno
∞∞L X
,
∞∞X Y
item
∞∞Z ^
.
∞∞^ _
BillNo
∞∞_ e
,
∞∞e f
DateTime
∞∞g o
.
∞∞o p
Now
∞∞p s
.
∞∞s t
Ticks
∞∞t y
,
∞∞y z
fileType∞∞{ É
,∞∞É Ñ
item∞∞Ö â
.∞∞â ä
EmployeeSlno∞∞ä ñ
)∞∞ñ ó
;∞∞ó ò
filePath
±± 
=
±± 
Path
±± #
.
±±# $
Combine
±±$ +
(
±±+ ,
filePath
±±, 4
,
±±4 5
fileName
±±6 >
)
±±> ?
;
±±? @
if
≤≤ 
(
≤≤ 
!
≤≤ 
File
≤≤ 
.
≤≤ 
Exists
≤≤ $
(
≤≤$ %
filePath
≤≤% -
)
≤≤- .
)
≤≤. /
{
≥≥ 
string
¥¥ 
base64String
¥¥ +
=
¥¥, -
item
¥¥. 2
.
¥¥2 3
	FileImage
¥¥3 <
.
¥¥< =
	Substring
¥¥= F
(
¥¥F G
item
¥¥G K
.
¥¥K L
	FileImage
¥¥L U
.
¥¥U V
IndexOf
¥¥V ]
(
¥¥] ^
$char
¥¥^ a
)
¥¥a b
+
¥¥c d
$num
¥¥e f
)
¥¥f g
;
¥¥g h
byte
µµ 
[
µµ 
]
µµ 

imageBytes
µµ )
=
µµ* +
Convert
µµ, 3
.
µµ3 4
FromBase64String
µµ4 D
(
µµD E
base64String
µµE Q
)
µµQ R
;
µµR S
File
∂∂ 
.
∂∂ 
WriteAllBytes
∂∂ *
(
∂∂* +
filePath
∂∂+ 3
,
∂∂3 4

imageBytes
∂∂5 ?
)
∂∂? @
;
∂∂@ A
item
∑∑ 
.
∑∑ 
FilePath
∑∑ %
=
∑∑& '
filePath
∑∑( 0
;
∑∑0 1
item
∏∏ 
.
∏∏ 
FileData
∏∏ %
.
∏∏% &
FileName
∏∏& .
=
∏∏/ 0
fileName
∏∏1 9
;
∏∏9 :
}
ππ 
}
∫∫ 
}
ªª 
return
ºº 
true
ºº 
;
ºº 
}
ΩΩ 	
private
øø 
async
øø 
Task
øø 
<
øø 
bool
øø 
>
øø  -
MainteneceUploadFileToDirectory
øø! @
(
øø@ A'
CarLeaseMaintenanceDetail
øøA Z'
uploadCarLeaseMaintenance
øø[ t
)
øøt u
{
¿¿ 	
if
¡¡ 
(
¡¡ '
uploadCarLeaseMaintenance
¡¡ )
!=
¡¡) +
null
¡¡+ /
)
¡¡/ 0
{
¬¬ 
string
ƒƒ 
filePath
ƒƒ #
=
ƒƒ$ %
Path
ƒƒ& *
.
ƒƒ* +
Combine
ƒƒ+ 2
(
ƒƒ2 3!
ApplicationSettings
ƒƒ3 F
.
ƒƒF G
Current
ƒƒG N
.
ƒƒN O%
CarLeaseMaintenancePath
ƒƒO f
)
ƒƒf g
;
ƒƒg h
if
≈≈ 
(
≈≈ 
!
≈≈ 
	Directory
≈≈ "
.
≈≈" #
Exists
≈≈# )
(
≈≈) *
filePath
≈≈* 2
)
≈≈2 3
)
≈≈3 4
{
∆∆ 
	Directory
«« !
.
««! "
CreateDirectory
««" 1
(
««1 2
filePath
««2 :
)
««: ;
;
««; <
}
»» 
string
…… 
fileType
…… #
=
……$ %
Path
……& *
.
……* +
GetExtension
……+ 7
(
……7 8'
uploadCarLeaseMaintenance
……8 Q
.
……Q R
File
……R V
.
……V W
FileName
……W _
)
……_ `
.
……` a
ToString
……a i
(
……i j
)
……j k
.
……k l
ToLower
……l s
(
……s t
)
……t u
;
……u v
string
   
fileName
   #
=
  $ %
string
  & ,
.
  , -
Format
  - 3
(
  3 4
$str
  4 H
,
  H I'
uploadCarLeaseMaintenance
  J c
.
  c d
EmpSLNo
  d k
,
  k l(
uploadCarLeaseMaintenance  l Ö
.  Ö Ü
UniqueNo  Ü é
,  é è)
uploadCarLeaseMaintenance  ê ©
.  © ™
BillNo  ™ ∞
,  ∞ ±
DateTime  ≤ ∫
.  ∫ ª
Now  ª æ
.  æ ø
Ticks  ø ƒ
,  ƒ ≈)
uploadCarLeaseMaintenance  ∆ ﬂ
.  ﬂ ‡
EmpSLNo  ‡ Á
,  Á Ë
fileType  È Ò
)  Ò Ú
;  Ú Û
filePath
ÀÀ 
=
ÀÀ 
Path
ÀÀ #
.
ÀÀ# $
Combine
ÀÀ$ +
(
ÀÀ+ ,
filePath
ÀÀ, 4
,
ÀÀ4 5
fileName
ÀÀ6 >
)
ÀÀ> ?
;
ÀÀ? @
if
ÕÕ 
(
ÕÕ 
!
ÕÕ 
File
ÕÕ 
.
ÕÕ 
Exists
ÕÕ $
(
ÕÕ$ %
filePath
ÕÕ% -
)
ÕÕ- .
)
ÕÕ. /
{
ŒŒ 
string
œœ 
base64String
œœ +
=
œœ, -'
uploadCarLeaseMaintenance
œœ. G
.
œœG H
File
œœH L
.
œœL M
FileAsBase64
œœM Y
.
œœY Z
	Substring
œœZ c
(
œœc d'
uploadCarLeaseMaintenance
œœd }
.
œœ} ~
Fileœœ~ Ç
.œœÇ É
FileAsBase64œœÉ è
.œœè ê
IndexOfœœê ó
(œœó ò
$charœœò õ
)œœõ ú
+œœù û
$numœœü †
)œœ† °
;œœ° ¢
byte
–– 
[
–– 
]
–– 

imageBytes
–– )
=
––* +
Convert
––, 3
.
––3 4
FromBase64String
––4 D
(
––D E
base64String
––E Q
)
––Q R
;
––R S
File
—— 
.
—— 
WriteAllBytes
—— *
(
——* +
filePath
——+ 3
,
——3 4

imageBytes
——5 ?
)
——? @
;
——@ A'
uploadCarLeaseMaintenance
““ -
.
““- .
FilePath
““. 6
=
““7 8
filePath
““9 A
;
““A B'
uploadCarLeaseMaintenance
”” -
.
””- .
File
””. 2
.
””2 3
FileName
””3 ;
=
””< =
fileName
””> F
;
””F G
}
‘‘ 
}
÷÷ 
return
◊◊ 
true
◊◊ 
;
◊◊ 
}
ÿÿ 	
}
‹‹ 
}›› È
ZF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Districts\DistrictsRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
	Districts& /
{ 
public 

class 
DistrictsRepository $
:$ %
BaseRepository& 4
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
DistrictsRepository "
(" #
IConfiguration# 1
configuration2 ?
)? @
:A B
baseC G
(G H
configurationH U
)U V
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
DistrictDetails .
>. /
>/ 0
GetDistrictDetails1 C
(C D
intD G
	stateSlNoH Q
)Q R
{ 	
List 
< 
DistrictDetails  
>  !
districtDetails" 1
=2 3
null4 8
;8 9
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{ #
OracleDynamicParameters   '
	parmeters  ( 1
=  2 3
new  4 7#
OracleDynamicParameters  8 O
(  O P
)  P Q
;  Q R
	parmeters!! 
.!! 
Add!! 
(!! 
name!! "
:!!" #
$str!!$ 0
,!!0 1
	stateSlNo!!2 ;
,!!; <
dbType!!= C
:!!C D
OracleMappingType!!E V
.!!V W
Int32!!W \
,!!\ ]
	direction!!^ g
:!!g h
ParameterDirection!!i {
.!!{ |
Input	!!| Å
)
!!Å Ç
;
!!Ç É
	parmeters"" 
."" 
Add"" 
("" 
name"" "
:""" #
$str""$ -
,""- .
dbType""/ 5
:""5 6
OracleMappingType""7 H
.""H I
	RefCursor""I R
,""R S
	direction""T ]
:""] ^
ParameterDirection""_ q
.""q r
Output""r x
)""x y
;""y z
districtDetails## 
=##  !
(##" #
await### (

connection##) 3
.##3 4

QueryAsync##4 >
<##> ?
DistrictDetails##? N
>##N O
(##O P
DatabaseProcedures##P b
.##b c
DISTRICT_DETAILS##c s
,##s t
	parmeters##u ~
,##~ 
commandType
##Ä ã
:
##ã å
CommandType
##ç ò
.
##ò ô
StoredProcedure
##ô ®
)
##® ©
)
##© ™
.
##™ ´
ToList
##´ ±
(
##± ≤
)
##≤ ≥
;
##≥ ¥
}$$ 
return%% 
districtDetails%% "
;%%" #
}&& 	
}'' 
}(( ∞ù
qF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\EmployeeVerification\EmployeeVerificationRespository.cs
	namespace%% 	
Phoenix%%
 
.%% 
Database%% 
.%% 

Repository%% %
.%%% & 
EmployeeVerification%%& :
{&& 
public'' 

class'' +
EmployeeVerificationRespository'' 0
:''1 2
BaseRepository''3 A
{(( 
private)) 
readonly)) 
IConfiguration)) '
configuration))( 5
;))5 6
public** +
EmployeeVerificationRespository** .
(**. /
IConfiguration**/ =
configuration**> K
)**K L
:**M N
base**O S
(**S T
configuration**T a
)**a b
{++ 	
this,, 
.,, 
configuration,, 
=,,  
configuration,,! .
;,,. /
}-- 	
public// 
async// 
Task// 
<// 
Root// 
>//  
GetVerficationResult//  4
(//4 5
string//5 ;
idempotencyId//< I
,//I J
int//K N
?//N O
EmployeeSlno//P \
=//] ^
null//_ c
)//c d
{00 	
RestClientOptions11 
options11 %
=11& '
new11( +
RestClientOptions11, =
(11= >
EqualSettings11> K
.11K L
Current11L S
.11S T
EqualGateWayUrl11T c
)11c d
{22 
Timeout33 
=33 
-33 
$num33 
}44 
;44 

RestClient66 
client66 
=66 
new66  #

RestClient66$ .
(66. /
options66/ 6
)666 7
;667 8
RestRequest77 
request77 
=77  !
new77" %
RestRequest77& 1
(771 2
EqualSettings772 ?
.77? @
Current77@ G
.77G H
	FetchData77H Q
,77Q R
Method77S Y
.77Y Z
Post77Z ^
)77^ _
;77_ `
client88 
.88 
Authenticator88  
=88! "
new88# &"
HttpBasicAuthenticator88' =
(88= >
EqualSettings88> K
.88K L
Current88L S
.88S T
ClientId88T \
,88\ ]
EqualSettings88^ k
.88k l
Current88l s
.88s t
ClientSecret	88t Ä
)
88Ä Å
;
88Å Ç
request99 
.99 
	AddHeader99 
(99 
$str99 ,
,99, -
$str99. @
)99@ A
;99A B
request:: 
.:: 
	AddHeader:: 
(:: 
$str:: &
,::& '
$str::( :
)::: ;
;::; <
string;; 
body;; 
=;; 
string;;  
.;;  !
Format;;! '
(;;' (
$str;;( 1
,;;1 2
idempotencyId;;3 @
);;@ A
;;;A B
request<< 
.<< 
AddStringBody<< !
(<<! "
body<<" &
,<<& '

DataFormat<<( 2
.<<2 3
Json<<3 7
)<<7 8
;<<8 9
RestResponse== 
response== !
===" #
await==$ )
client==* 0
.==0 1
ExecuteAsync==1 =
(=== >
request==> E
)==E F
;==F G
Root>> 
verificationResult>> #
=>>$ %
JsonConvert>>& 1
.>>1 2
DeserializeObject>>2 C
<>>C D
Root>>D H
>>>H I
(>>I J
response>>J R
.>>R S
Content>>S Z
)>>Z [
;>>[ \
if?? 
(?? 
verificationResult?? !
.??! "
data??" &
!=??' )
null??* .
&&??/ 1
EmployeeSlno??2 >
!=??? A
null??B F
)??F G
{@@ 
verificationResultAA "
.AA" #

AadharPathAA# -
=AA. /
awaitAA0 5!
GetEmployeeAadharPathAA6 K
(AAK L
EmployeeSlnoAAL X
)AAX Y
;AAY Z
}BB 
returnCC 
verificationResultCC %
;CC% &
}DD 	
privateHH 
stringHH 
GetPanHashCodeHH %
(HH% &
PANHH& )

panDetailsHH* 4
,HH4 5
stringHH6 <
idempotencyIdHH= J
,HHJ K
intHHL O
employeeSlnoHHP \
)HH\ ]
{II 	
intJJ 
resultJJ 
=JJ 
$numJJ 
;JJ 
resultLL 
=LL 
(LL 
resultLL 
*LL 
$numLL "
)LL" #
^LL$ %
employeeSlnoLL& 2
.LL2 3
GetHashCodeLL3 >
(LL> ?
)LL? @
;LL@ A
resultMM 
=MM 
(MM 
resultMM 
*MM 
$numMM "
)MM" #
^MM$ %
idempotencyIdMM& 3
.MM3 4
GetHashCodeMM4 ?
(MM? @
)MM@ A
;MMA B
resultNN 
=NN 
(NN 
resultNN 
*NN 
$numNN "
)NN" #
^NN$ %

panDetailsNN& 0
.NN0 1
key_nameNN1 9
.NN9 :
GetHashCodeNN: E
(NNE F
)NNF G
;NNG H
resultOO 
=OO 
(OO 
resultOO 
*OO 
$numOO "
)OO" #
^OO$ %

panDetailsOO& 0
.OO0 1

key_statusOO1 ;
.OO; <
GetHashCodeOO< G
(OOG H
)OOH I
;OOI J
resultPP 
=PP 
(PP 
resultPP 
*PP 
$numPP "
)PP" #
^PP$ %

panDetailsPP& 0
.PP0 1
key_dataPP1 9
[PP9 :
$numPP: ;
]PP; <
.PP< =
genderPP= C
.PPC D
GetHashCodePPD O
(PPO P
)PPP Q
;PPQ R
resultQQ 
=QQ 
(QQ 
resultQQ 
*QQ 
$numQQ "
)QQ" #
^QQ$ %

panDetailsQQ& 0
.QQ0 1
key_dataQQ1 9
[QQ9 :
$numQQ: ;
]QQ; <
.QQ< =
key_idQQ= C
.QQC D
GetHashCodeQQD O
(QQO P
)QQP Q
;QQQ R
resultRR 
=RR 
(RR 
resultRR 
*RR 
$numRR "
)RR" #
^RR$ %

panDetailsRR& 0
.RR0 1
key_dataRR1 9
[RR9 :
$numRR: ;
]RR; <
.RR< =
dobRR= @
.RR@ A
GetHashCodeRRA L
(RRL M
)RRM N
;RRN O
resultSS 
=SS 
(SS 
resultSS 
*SS 
$numSS "
)SS" #
^SS$ %

panDetailsSS& 0
.SS0 1
key_dataSS1 9
[SS9 :
$numSS: ;
]SS; <
.SS< =
nameSS= A
.SSA B
GetHashCodeSSB M
(SSM N
)SSN O
;SSO P
resultTT 
=TT 
(TT 
resultTT 
*TT 
$numTT "
)TT" #
^TT$ %

panDetailsTT& 0
.TT0 1
key_dataTT1 9
[TT9 :
$numTT: ;
]TT; <
.TT< =
key_fetched_atTT= K
.TTK L
GetHashCodeTTL W
(TTW X
)TTX Y
;TTY Z
returnUU 
resultUU 
.UU 
ToStringUU "
(UU" #
)UU# $
;UU$ %
}VV 	
privateYY 
stringYY 
GetAadharHashCodeYY (
(YY( )
AADHAARYY) 0
aadhardetailsYY1 >
,YY> ?
stringYY@ F
idempotencyIdYYG T
,YYT U
intYYV Y
employeeSlnoYYZ f
)YYf g
{ZZ 	
int[[ 
result[[ 
=[[ 
$num[[ 
;[[ 
result]] 
=]] 
(]] 
result]] 
*]] 
$num]] "
)]]" #
^]]$ %
employeeSlno]]& 2
.]]2 3
GetHashCode]]3 >
(]]> ?
)]]? @
;]]@ A
result^^ 
=^^ 
(^^ 
result^^ 
*^^ 
$num^^ "
)^^" #
^^^$ %
idempotencyId^^& 3
.^^3 4
GetHashCode^^4 ?
(^^? @
)^^@ A
;^^A B
result__ 
=__ 
(__ 
result__ 
*__ 
$num__ "
)__" #
^__$ %
aadhardetails__& 3
.__3 4
key_name__4 <
.__< =
GetHashCode__= H
(__H I
)__I J
;__J K
result`` 
=`` 
(`` 
result`` 
*`` 
$num`` "
)``" #
^``$ %
aadhardetails``& 3
.``3 4

key_status``4 >
.``> ?
GetHashCode``? J
(``J K
)``K L
;``L M
resultaa 
=aa 
(aa 
resultaa 
*aa 
$numaa "
)aa" #
^aa$ %
aadhardetailsaa& 3
.aa3 4
key_dataaa4 <
[aa< =
$numaa= >
]aa> ?
.aa? @
genderaa@ F
.aaF G
GetHashCodeaaG R
(aaR S
)aaS T
;aaT U
resultbb 
=bb 
(bb 
resultbb 
*bb 
$numbb "
)bb" #
^bb$ %
aadhardetailsbb& 3
.bb3 4
key_databb4 <
[bb< =
$numbb= >
]bb> ?
.bb? @
key_idbb@ F
.bbF G
GetHashCodebbG R
(bbR S
)bbS T
;bbT U
resultcc 
=cc 
(cc 
resultcc 
*cc 
$numcc "
)cc" #
^cc$ %
aadhardetailscc& 3
.cc3 4
key_datacc4 <
[cc< =
$numcc= >
]cc> ?
.cc? @
dobcc@ C
.ccC D
GetHashCodeccD O
(ccO P
)ccP Q
;ccQ R
resultdd 
=dd 
(dd 
resultdd 
*dd 
$numdd "
)dd" #
^dd$ %
aadhardetailsdd& 3
.dd3 4
key_datadd4 <
[dd< =
$numdd= >
]dd> ?
.dd? @
namedd@ D
.ddD E
GetHashCodeddE P
(ddP Q
)ddQ R
;ddR S
resultee 
=ee 
(ee 
resultee 
*ee 
$numee "
)ee" #
^ee$ %
aadhardetailsee& 3
.ee3 4
key_dataee4 <
[ee< =
$numee= >
]ee> ?
.ee? @
key_fetched_atee@ N
.eeN O
GetHashCodeeeO Z
(eeZ [
)ee[ \
;ee\ ]
returnff 
resultff 
.ff 
ToStringff "
(ff" #
)ff# $
;ff$ %
}gg 	
privatehh 
stringhh 
GetBankHashCodehh &
(hh& '
BANKACCOUNThh' 2
bankDetailshh3 >
,hh> ?
stringhh@ F
idempotencyIdhhG T
,hhT U
inthhV Y
employeeSlnohhZ f
)hhf g
{ii 	
intjj 
resultjj 
=jj 
$numjj 
;jj 
resultll 
=ll 
(ll 
resultll 
*ll 
$numll "
)ll" #
^ll$ %
employeeSlnoll& 2
.ll2 3
GetHashCodell3 >
(ll> ?
)ll? @
;ll@ A
resultmm 
=mm 
(mm 
resultmm 
*mm 
$nummm "
)mm" #
^mm$ %
idempotencyIdmm& 3
.mm3 4
GetHashCodemm4 ?
(mm? @
)mm@ A
;mmA B
resultnn 
=nn 
(nn 
resultnn 
*nn 
$numnn "
)nn" #
^nn$ %
bankDetailsnn& 1
.nn1 2
key_namenn2 :
.nn: ;
GetHashCodenn; F
(nnF G
)nnG H
;nnH I
resultoo 
=oo 
(oo 
resultoo 
*oo 
$numoo "
)oo" #
^oo$ %
bankDetailsoo& 1
.oo1 2

key_statusoo2 <
.oo< =
GetHashCodeoo= H
(ooH I
)ooI J
;ooJ K
resultpp 
=pp 
(pp 
resultpp 
*pp 
$numpp "
)pp" #
^pp$ %
bankDetailspp& 1
.pp1 2
key_datapp2 :
[pp: ;
$numpp; <
]pp< =
.pp= >
account_numberpp> L
.ppL M
GetHashCodeppM X
(ppX Y
)ppY Z
;ppZ [
resultqq 
=qq 
(qq 
resultqq 
*qq 
$numqq "
)qq" #
^qq$ %
bankDetailsqq& 1
.qq1 2
key_dataqq2 :
[qq: ;
$numqq; <
]qq< =
.qq= >
	bank_nameqq> G
.qqG H
GetHashCodeqqH S
(qqS T
)qqT U
;qqU V
resultrr 
=rr 
(rr 
resultrr 
*rr 
$numrr "
)rr" #
^rr$ %
bankDetailsrr& 1
.rr1 2
key_datarr2 :
[rr: ;
$numrr; <
]rr< =
.rr= >
branch_namerr> I
.rrI J
GetHashCoderrJ U
(rrU V
)rrV W
;rrW X
resultss 
=ss 
(ss 
resultss 
*ss 
$numss "
)ss" #
^ss$ %
bankDetailsss& 1
.ss1 2
key_datass2 :
[ss: ;
$numss; <
]ss< =
.ss= >
ifscss> B
.ssB C
GetHashCodessC N
(ssN O
)ssO P
;ssP Q
resulttt 
=tt 
(tt 
resulttt 
*tt 
$numtt "
)tt" #
^tt$ %
bankDetailstt& 1
.tt1 2
key_datatt2 :
[tt: ;
$numtt; <
]tt< =
.tt= >
key_fetched_attt> L
.ttL M
GetHashCodettM X
(ttX Y
)ttY Z
;ttZ [
returnuu 
resultuu 
.uu 
ToStringuu "
(uu" #
)uu# $
;uu$ %
}vv 	
publicww 
asyncww 
Taskww 
<ww 
boolww 
>ww $
SaveEmployeeVerifiedDataww  8
(ww8 9
stringww9 ?
idempotencyIdww@ M
,wwM N
intwwO R
employeeSlnowwS _
)ww_ `
{xx 	
intyy 
panRowsSavedyy 
=yy 
$numyy  
;yy  !
intzz 
aadharRowsSavedzz 
=zz  !
$numzz" #
;zz# $
int{{ 
bankRowsSaved{{ 
={{ 
$num{{  !
;{{! "
int|| 
isEmployeeUpdated|| !
=||" #
$num||$ %
;||% &
bool}} 
isSucess}} 
=}} 
false}} !
;}}! "
Root~~ 
verificationResult~~ #
=~~$ %
await~~& + 
GetVerficationResult~~, @
(~~@ A
idempotencyId~~A N
)~~N O
;~~O P
if
ÄÄ 
(
ÄÄ  
verificationResult
ÄÄ "
!=
ÄÄ# %
null
ÄÄ& *
&&
ÄÄ+ - 
verificationResult
ÄÄ. @
.
ÄÄ@ A
status
ÄÄA G
.
ÄÄG H
ToUpper
ÄÄH O
(
ÄÄO P
)
ÄÄP Q
==
ÄÄR T
$str
ÄÄU ^
)
ÄÄ^ _
{
ÅÅ 
PAN
ÇÇ 

panDetails
ÇÇ 
=
ÇÇ   
verificationResult
ÇÇ! 3
.
ÇÇ3 4
data
ÇÇ4 8
.
ÇÇ8 9
key_details
ÇÇ9 D
.
ÇÇD E
PAN
ÇÇE H
;
ÇÇH I
AADHAAR
ÉÉ 
aADHAAR
ÉÉ 
=
ÉÉ  ! 
verificationResult
ÉÉ" 4
.
ÉÉ4 5
data
ÉÉ5 9
.
ÉÉ9 :
key_details
ÉÉ: E
.
ÉÉE F
AADHAAR
ÉÉF M
;
ÉÉM N
BANKACCOUNT
ÑÑ 
bankAccount
ÑÑ '
=
ÑÑ( ) 
verificationResult
ÑÑ* <
.
ÑÑ< =
data
ÑÑ= A
.
ÑÑA B
key_details
ÑÑB M
.
ÑÑM N
BANK_ACCOUNT
ÑÑN Z
;
ÑÑZ [
DRIVINGLICENCE
ÖÖ 
drivingLicence
ÖÖ -
=
ÖÖ. / 
verificationResult
ÖÖ0 B
.
ÖÖB C
data
ÖÖC G
.
ÖÖG H
key_details
ÖÖH S
.
ÖÖS T
DRIVING_LICENCE
ÖÖT c
;
ÖÖc d
if
áá 
(
áá 

panDetails
áá 
!=
áá !
null
áá" &
)
áá& '
{
àà 
using
ââ 
(
ââ 
var
ââ 

connection
ââ )
=
ââ* +
await
ââ, 1
base
ââ2 6
.
ââ6 7
CreateConnection
ââ7 G
(
ââG H
DbSchema
ââH P
.
ââP Q
PORTAL
ââQ W
)
ââW X
)
ââX Y
{
ää %
OracleDynamicParameters
ãã /

parameters
ãã0 :
=
ãã; <
new
ãã= @%
OracleDynamicParameters
ããA X
(
ããX Y
)
ããY Z
;
ããZ [

parameters
åå "
.
åå" #
Add
åå# &
(
åå& '
name
åå' +
:
åå+ ,
$str
åå- >
,
åå> ?
idempotencyId
åå@ M
,
ååM N
dbType
ååO U
:
ååU V
OracleMappingType
ååW h
.
ååh i
Varchar2
ååi q
,
ååq r
	direction
åås |
:
åå| }!
ParameterDirectionåå~ ê
.ååê ë
Inputååë ñ
)ååñ ó
;ååó ò

parameters
çç "
.
çç" #
Add
çç# &
(
çç& '
name
çç' +
:
çç+ ,
$str
çç- <
,
çç< =
employeeSlno
çç> J
,
ççJ K
dbType
ççL R
:
ççR S
OracleMappingType
ççT e
.
ççe f
Varchar2
ççf n
,
ççn o
	direction
ççp y
:
ççy z!
ParameterDirectionçç{ ç
.ççç é
Inputççé ì
)ççì î
;ççî ï

parameters
éé "
.
éé" #
Add
éé# &
(
éé& '
name
éé' +
:
éé+ ,
$str
éé- 8
,
éé8 9

panDetails
éé: D
.
ééD E
key_name
ééE M
,
ééM N
dbType
ééO U
:
ééU V
OracleMappingType
ééW h
.
ééh i
Varchar2
ééi q
,
ééq r
	direction
éés |
:
éé| }!
ParameterDirectionéé~ ê
.ééê ë
Inputééë ñ
)ééñ ó
;ééó ò

parameters
èè "
.
èè" #
Add
èè# &
(
èè& '
name
èè' +
:
èè+ ,
$str
èè- :
,
èè: ;

panDetails
èè< F
.
èèF G

key_status
èèG Q
,
èèQ R
dbType
èèS Y
:
èèY Z
OracleMappingType
èè[ l
.
èèl m
Varchar2
èèm u
,
èèu v
	directionèèw Ä
:èèÄ Å"
ParameterDirectionèèÇ î
.èèî ï
Inputèèï ö
)èèö õ
;èèõ ú

parameters
êê "
.
êê" #
Add
êê# &
(
êê& '
name
êê' +
:
êê+ ,
$str
êê- 6
,
êê6 7

panDetails
êê8 B
.
êêB C
key_data
êêC K
[
êêK L
$num
êêL M
]
êêM N
.
êêN O
gender
êêO U
,
êêU V
dbType
êêW ]
:
êê] ^
OracleMappingType
êê_ p
.
êêp q
Varchar2
êêq y
,
êêy z
	directionêê{ Ñ
:êêÑ Ö"
ParameterDirectionêêÜ ò
.êêò ô
Inputêêô û
)êêû ü
;êêü †

parameters
ëë "
.
ëë" #
Add
ëë# &
(
ëë& '
name
ëë' +
:
ëë+ ,
$str
ëë- 6
,
ëë6 7

panDetails
ëë8 B
.
ëëB C
key_data
ëëC K
[
ëëK L
$num
ëëL M
]
ëëM N
.
ëëN O
key_id
ëëO U
,
ëëU V
dbType
ëëW ]
:
ëë] ^
OracleMappingType
ëë_ p
.
ëëp q
Varchar2
ëëq y
,
ëëy z
	directionëë{ Ñ
:ëëÑ Ö"
ParameterDirectionëëÜ ò
.ëëò ô
Inputëëô û
)ëëû ü
;ëëü †

parameters
íí "
.
íí" #
Add
íí# &
(
íí& '
name
íí' +
:
íí+ ,
$str
íí- 3
,
íí3 4

panDetails
íí5 ?
.
íí? @
key_data
íí@ H
[
ííH I
$num
ííI J
]
ííJ K
.
ííK L
dob
ííL O
,
ííO P
dbType
ííQ W
:
ííW X
OracleMappingType
ííY j
.
ííj k
Varchar2
íík s
,
íís t
	direction
ííu ~
:
íí~ "
ParameterDirectionííÄ í
.ííí ì
Inputííì ò
)ííò ô
;ííô ö

parameters
ìì "
.
ìì" #
Add
ìì# &
(
ìì& '
name
ìì' +
:
ìì+ ,
$str
ìì- 4
,
ìì4 5

panDetails
ìì6 @
.
ìì@ A
key_data
ììA I
[
ììI J
$num
ììJ K
]
ììK L
.
ììL M
name
ììM Q
,
ììQ R
dbType
ììS Y
:
ììY Z
OracleMappingType
ìì[ l
.
ììl m
Varchar2
ììm u
,
ììu v
	directionììw Ä
:ììÄ Å"
ParameterDirectionììÇ î
.ììî ï
Inputììï ö
)ììö õ
;ììõ ú

parameters
îî "
.
îî" #
Add
îî# &
(
îî& '
name
îî' +
:
îî+ ,
$str
îî- :
,
îî: ;

panDetails
îî< F
.
îîF G
key_data
îîG O
[
îîO P
$num
îîP Q
]
îîQ R
.
îîR S

key_report
îîS ]
,
îî] ^
dbType
îî_ e
:
îîe f
OracleMappingType
îîg x
.
îîx y
Varchar2îîy Å
,îîÅ Ç
	directionîîÉ å
:îîå ç"
ParameterDirectionîîé †
.îî† °
Inputîî° ¶
)îî¶ ß
;îîß ®

parameters
ïï "
.
ïï" #
Add
ïï# &
(
ïï& '
name
ïï' +
:
ïï+ ,
$str
ïï- 8
,
ïï8 9

panDetails
ïï: D
.
ïïD E
key_data
ïïE M
[
ïïM N
$num
ïïN O
]
ïïO P
.
ïïP Q
key_buid
ïïQ Y
,
ïïY Z
dbType
ïï[ a
:
ïïa b
OracleMappingType
ïïc t
.
ïït u
Varchar2
ïïu }
,
ïï} ~
	directionïï à
:ïïà â"
ParameterDirectionïïä ú
.ïïú ù
Inputïïù ¢
)ïï¢ £
;ïï£ §

parameters
ññ "
.
ññ" #
Add
ññ# &
(
ññ& '
name
ññ' +
:
ññ+ ,
$str
ññ- <
,
ññ< =

panDetails
ññ> H
.
ññH I
key_data
ññI Q
[
ññQ R
$num
ññR S
]
ññS T
.
ññT U
key_provider
ññU a
,
ñña b
dbType
ññc i
:
ññi j
OracleMappingType
ññk |
.
ññ| }
Varchar2ññ} Ö
,ññÖ Ü
	directionññá ê
:ññê ë"
ParameterDirectionññí §
.ññ§ •
Inputññ• ™
)ññ™ ´
;ññ´ ¨

parameters
óó "
.
óó" #
Add
óó# &
(
óó& '
name
óó' +
:
óó+ ,
$str
óó- >
,
óó> ?

panDetails
óó@ J
.
óóJ K
key_data
óóK S
[
óóS T
$num
óóT U
]
óóU V
.
óóV W
key_global_uid
óóW e
,
óóe f
dbType
óóg m
:
óóm n 
OracleMappingTypeóóo Ä
.óóÄ Å
Varchar2óóÅ â
,óóâ ä
	directionóóã î
:óóî ï"
ParameterDirectionóóñ ®
.óó® ©
Inputóó© Æ
)óóÆ Ø
;óóØ ∞

parameters
òò "
.
òò" #
Add
òò# &
(
òò& '
name
òò' +
:
òò+ ,
$str
òò- :
,
òò: ;

panDetails
òò< F
.
òòF G
key_data
òòG O
[
òòO P
$num
òòP Q
]
òòQ R
.
òòR S

key_source
òòS ]
,
òò] ^
dbType
òò_ e
:
òòe f
OracleMappingType
òòg x
.
òòx y
Varchar2òòy Å
,òòÅ Ç
	directionòòÉ å
:òòå ç"
ParameterDirectionòòé †
.òò† °
Inputòò° ¶
)òò¶ ß
;òòß ®

parameters
ôô "
.
ôô" #
Add
ôô# &
(
ôô& '
name
ôô' +
:
ôô+ ,
$str
ôô- >
,
ôô> ?

panDetails
ôô@ J
.
ôôJ K
key_data
ôôK S
[
ôôS T
$num
ôôT U
]
ôôU V
.
ôôV W
key_fetched_at
ôôW e
,
ôôe f
dbType
ôôg m
:
ôôm n 
OracleMappingTypeôôo Ä
.ôôÄ Å
Varchar2ôôÅ â
,ôôâ ä
	directionôôã î
:ôôî ï"
ParameterDirectionôôñ ®
.ôô® ©
Inputôô© Æ
)ôôÆ Ø
;ôôØ ∞

parameters
öö "
.
öö" #
Add
öö# &
(
öö& '
name
öö' +
:
öö+ ,
$str
öö- =
,
öö= >
GetPanHashCode
öö? M
(
ööM N

panDetails
ööN X
,
ööX Y
idempotencyId
ööZ g
,
öög h
employeeSlno
ööi u
)
ööu v
,
ööv w
dbType
ööx ~
:
öö~ !
OracleMappingTypeööÄ ë
.ööë í
Varchar2ööí ö
,ööö õ
	directionööú •
:öö• ¶"
ParameterDirectionööß π
.ööπ ∫
Inputöö∫ ø
)ööø ¿
;öö¿ ¡
panRowsSaved
õõ $
=
õõ% &
await
õõ' ,

connection
õõ- 7
.
õõ7 8
ExecuteAsync
õõ8 D
(
õõD E 
DatabaseProcedures
õõE W
.
õõW X"
SP_SAVE_EMPLOYEE_PAN
õõX l
,
õõl m

parameters
õõn x
,
õõx y
commandTypeõõz Ö
:õõÖ Ü
CommandTypeõõá í
.õõí ì
StoredProcedureõõì ¢
)õõ¢ £
;õõ£ §
}
ùù 
}
ûû 
if
†† 
(
†† 
aADHAAR
†† 
!=
†† 
null
†† #
)
††# $
{
°° 
using
¢¢ 
(
¢¢ 
var
¢¢ 

connection
¢¢ )
=
¢¢* +
await
¢¢, 1
base
¢¢2 6
.
¢¢6 7
CreateConnection
¢¢7 G
(
¢¢G H
DbSchema
¢¢H P
.
¢¢P Q
PORTAL
¢¢Q W
)
¢¢W X
)
¢¢X Y
{
££ %
OracleDynamicParameters
§§ /

parameters
§§0 :
=
§§; <
new
§§= @%
OracleDynamicParameters
§§A X
(
§§X Y
)
§§Y Z
;
§§Z [

parameters
•• "
.
••" #
Add
••# &
(
••& '
name
••' +
:
••+ ,
$str
••- >
,
••> ?
idempotencyId
••@ M
,
••M N
dbType
••O U
:
••U V
OracleMappingType
••W h
.
••h i
Varchar2
••i q
,
••q r
	direction
••s |
:
••| }!
ParameterDirection••~ ê
.••ê ë
Input••ë ñ
)••ñ ó
;••ó ò

parameters
¶¶ "
.
¶¶" #
Add
¶¶# &
(
¶¶& '
name
¶¶' +
:
¶¶+ ,
$str
¶¶- <
,
¶¶< =
employeeSlno
¶¶> J
,
¶¶J K
dbType
¶¶L R
:
¶¶R S
OracleMappingType
¶¶T e
.
¶¶e f
Int32
¶¶f k
,
¶¶k l
	direction
¶¶m v
:
¶¶v w!
ParameterDirection¶¶x ä
.¶¶ä ã
Input¶¶ã ê
)¶¶ê ë
;¶¶ë í

parameters
ßß "
.
ßß" #
Add
ßß# &
(
ßß& '
name
ßß' +
:
ßß+ ,
$str
ßß- 8
,
ßß8 9
aADHAAR
ßß: A
.
ßßA B
key_name
ßßB J
,
ßßJ K
dbType
ßßL R
:
ßßR S
OracleMappingType
ßßT e
.
ßße f
Varchar2
ßßf n
,
ßßn o
	direction
ßßp y
:
ßßy z!
ParameterDirectionßß{ ç
.ßßç é
Inputßßé ì
)ßßì î
;ßßî ï

parameters
®® "
.
®®" #
Add
®®# &
(
®®& '
name
®®' +
:
®®+ ,
$str
®®- :
,
®®: ;
aADHAAR
®®< C
.
®®C D

key_status
®®D N
,
®®N O
dbType
®®P V
:
®®V W
OracleMappingType
®®X i
.
®®i j
Varchar2
®®j r
,
®®r s
	direction
®®t }
:
®®} ~!
ParameterDirection®® ë
.®®ë í
Input®®í ó
)®®ó ò
;®®ò ô

parameters
™™ "
.
™™" #
Add
™™# &
(
™™& '
name
™™' +
:
™™+ ,
$str
™™- <
,
™™< =
aADHAAR
™™> E
.
™™E F
key_data
™™F N
[
™™N O
$num
™™O P
]
™™P Q
.
™™Q R
address_area
™™R ^
,
™™^ _
dbType
™™` f
:
™™f g
OracleMappingType
™™h y
.
™™y z
Varchar2™™z Ç
,™™Ç É
	direction™™Ñ ç
:™™ç é"
ParameterDirection™™è °
.™™° ¢
Input™™¢ ß
)™™ß ®
;™™® ©

parameters
´´ "
.
´´" #
Add
´´# &
(
´´& '
name
´´' +
:
´´+ ,
$str
´´- 8
,
´´8 9
aADHAAR
´´: A
.
´´A B
key_data
´´B J
[
´´J K
$num
´´K L
]
´´L M
.
´´M N
equal_artefact
´´N \
,
´´\ ]
dbType
´´^ d
:
´´d e
OracleMappingType
´´f w
.
´´w x
Varchar2´´x Ä
,´´Ä Å
	direction´´Ç ã
:´´ã å"
ParameterDirection´´ç ü
.´´ü †
Input´´† •
)´´• ¶
;´´¶ ß

parameters
¨¨ "
.
¨¨" #
Add
¨¨# &
(
¨¨& '
name
¨¨' +
:
¨¨+ ,
$str
¨¨- 7
,
¨¨7 8
aADHAAR
¨¨9 @
.
¨¨@ A
key_data
¨¨A I
[
¨¨I J
$num
¨¨J K
]
¨¨K L
.
¨¨L M
address
¨¨M T
,
¨¨T U
dbType
¨¨V \
:
¨¨\ ]
OracleMappingType
¨¨^ o
.
¨¨o p
Varchar2
¨¨p x
,
¨¨x y
	direction¨¨z É
:¨¨É Ñ"
ParameterDirection¨¨Ö ó
.¨¨ó ò
Input¨¨ò ù
)¨¨ù û
;¨¨û ü

parameters
≠≠ "
.
≠≠" #
Add
≠≠# &
(
≠≠& '
name
≠≠' +
:
≠≠+ ,
$str
≠≠- 6
,
≠≠6 7
aADHAAR
≠≠8 ?
.
≠≠? @
key_data
≠≠@ H
[
≠≠H I
$num
≠≠I J
]
≠≠J K
.
≠≠K L
gender
≠≠L R
,
≠≠R S
dbType
≠≠T Z
:
≠≠Z [
OracleMappingType
≠≠\ m
.
≠≠m n
Varchar2
≠≠n v
,
≠≠v w
	direction≠≠x Å
:≠≠Å Ç"
ParameterDirection≠≠É ï
.≠≠ï ñ
Input≠≠ñ õ
)≠≠õ ú
;≠≠ú ù

parameters
ÆÆ "
.
ÆÆ" #
Add
ÆÆ# &
(
ÆÆ& '
name
ÆÆ' +
:
ÆÆ+ ,
$str
ÆÆ- =
,
ÆÆ= >
aADHAAR
ÆÆ? F
.
ÆÆF G
key_data
ÆÆG O
[
ÆÆO P
$num
ÆÆP Q
]
ÆÆQ R
.
ÆÆR S
address_house
ÆÆS `
,
ÆÆ` a
dbType
ÆÆb h
:
ÆÆh i
OracleMappingType
ÆÆj {
.
ÆÆ{ |
Varchar2ÆÆ| Ñ
,ÆÆÑ Ö
	directionÆÆÜ è
:ÆÆè ê"
ParameterDirectionÆÆë £
.ÆÆ£ §
InputÆÆ§ ©
)ÆÆ© ™
;ÆÆ™ ´

parameters
ØØ "
.
ØØ" #
Add
ØØ# &
(
ØØ& '
name
ØØ' +
:
ØØ+ ,
$str
ØØ- 6
,
ØØ6 7
aADHAAR
ØØ8 ?
.
ØØ? @
key_data
ØØ@ H
[
ØØH I
$num
ØØI J
]
ØØJ K
.
ØØK L
key_id
ØØL R
,
ØØR S
dbType
ØØT Z
:
ØØZ [
OracleMappingType
ØØ\ m
.
ØØm n
Varchar2
ØØn v
,
ØØv w
	directionØØx Å
:ØØÅ Ç"
ParameterDirectionØØÉ ï
.ØØï ñ
InputØØñ õ
)ØØõ ú
;ØØú ù

parameters
∞∞ "
.
∞∞" #
Add
∞∞# &
(
∞∞& '
name
∞∞' +
:
∞∞+ ,
$str
∞∞- ?
,
∞∞? @
aADHAAR
∞∞A H
.
∞∞H I
key_data
∞∞I Q
[
∞∞Q R
$num
∞∞R S
]
∞∞S T
.
∞∞T U
address_country
∞∞U d
,
∞∞d e
dbType
∞∞f l
:
∞∞l m
OracleMappingType
∞∞n 
.∞∞ Ä
Varchar2∞∞Ä à
,∞∞à â
	direction∞∞ä ì
:∞∞ì î"
ParameterDirection∞∞ï ß
.∞∞ß ®
Input∞∞® ≠
)∞∞≠ Æ
;∞∞Æ Ø

parameters
±± "
.
±±" #
Add
±±# &
(
±±& '
name
±±' +
:
±±+ ,
$str
±±- =
,
±±= >
aADHAAR
±±? F
.
±±F G
key_data
±±G O
[
±±O P
$num
±±P Q
]
±±Q R
.
±±R S
address_state
±±S `
,
±±` a
dbType
±±b h
:
±±h i
OracleMappingType
±±j {
.
±±{ |
Varchar2±±| Ñ
,±±Ñ Ö
	direction±±Ü è
:±±è ê"
ParameterDirection±±ë £
.±±£ §
Input±±§ ©
)±±© ™
;±±™ ´

parameters
≤≤ "
.
≤≤" #
Add
≤≤# &
(
≤≤& '
name
≤≤' +
:
≤≤+ ,
$str
≤≤- 5
,
≤≤5 6
aADHAAR
≤≤7 >
.
≤≤> ?
key_data
≤≤? G
[
≤≤G H
$num
≤≤H I
]
≤≤I J
.
≤≤J K
photo
≤≤K P
,
≤≤P Q
dbType
≤≤R X
:
≤≤X Y
OracleMappingType
≤≤Z k
.
≤≤k l
Varchar2
≤≤l t
,
≤≤t u
	direction
≤≤v 
:≤≤ Ä"
ParameterDirection≤≤Å ì
.≤≤ì î
Input≤≤î ô
)≤≤ô ö
;≤≤ö õ

parameters
≥≥ "
.
≥≥" #
Add
≥≥# &
(
≥≥& '
name
≥≥' +
:
≥≥+ ,
$str
≥≥- A
,
≥≥A B
aADHAAR
≥≥C J
.
≥≥J K
key_data
≥≥K S
[
≥≥S T
$num
≥≥T U
]
≥≥U V
.
≥≥V W
verification_type
≥≥W h
,
≥≥h i
dbType
≥≥j p
:
≥≥p q 
OracleMappingType≥≥r É
.≥≥É Ñ
Varchar2≥≥Ñ å
,≥≥å ç
	direction≥≥é ó
:≥≥ó ò"
ParameterDirection≥≥ô ´
.≥≥´ ¨
Input≥≥¨ ±
)≥≥± ≤
;≥≥≤ ≥

parameters
¥¥ "
.
¥¥" #
Add
¥¥# &
(
¥¥& '
name
¥¥' +
:
¥¥+ ,
$str
¥¥- <
,
¥¥< =
aADHAAR
¥¥> E
.
¥¥E F
key_data
¥¥F N
[
¥¥N O
$num
¥¥O P
]
¥¥P Q
.
¥¥Q R
key_provider
¥¥R ^
,
¥¥^ _
dbType
¥¥` f
:
¥¥f g
OracleMappingType
¥¥h y
.
¥¥y z
Varchar2¥¥z Ç
,¥¥Ç É
	direction¥¥Ñ ç
:¥¥ç é"
ParameterDirection¥¥è °
.¥¥° ¢
Input¥¥¢ ß
)¥¥ß ®
;¥¥® ©

parameters
∂∂ "
.
∂∂" #
Add
∂∂# &
(
∂∂& '
name
∂∂' +
:
∂∂+ ,
$str
∂∂- 2
,
∂∂2 3
aADHAAR
∂∂4 ;
.
∂∂; <
key_data
∂∂< D
[
∂∂D E
$num
∂∂E F
]
∂∂F G
.
∂∂G H
co
∂∂H J
,
∂∂J K
dbType
∂∂L R
:
∂∂R S
OracleMappingType
∂∂T e
.
∂∂e f
Varchar2
∂∂f n
,
∂∂n o
	direction
∂∂p y
:
∂∂y z!
ParameterDirection∂∂{ ç
.∂∂ç é
Input∂∂é ì
)∂∂ì î
;∂∂î ï

parameters
∑∑ "
.
∑∑" #
Add
∑∑# &
(
∑∑& '
name
∑∑' +
:
∑∑+ ,
$str
∑∑- ?
,
∑∑? @
aADHAAR
∑∑A H
.
∑∑H I
key_data
∑∑I Q
[
∑∑Q R
$num
∑∑R S
]
∑∑S T
.
∑∑T U
address_pincode
∑∑U d
,
∑∑d e
dbType
∑∑f l
:
∑∑l m
OracleMappingType
∑∑n 
.∑∑ Ä
Varchar2∑∑Ä à
,∑∑à â
	direction∑∑ä ì
:∑∑ì î"
ParameterDirection∑∑ï ß
.∑∑ß ®
Input∑∑® ≠
)∑∑≠ Æ
;∑∑Æ Ø

parameters
∏∏ "
.
∏∏" #
Add
∏∏# &
(
∏∏& '
name
∏∏' +
:
∏∏+ ,
$str
∏∏- ;
,
∏∏; <
aADHAAR
∏∏= D
.
∏∏D E
key_data
∏∏E M
[
∏∏M N
$num
∏∏N O
]
∏∏O P
.
∏∏P Q
issuer_name
∏∏Q \
,
∏∏\ ]
dbType
∏∏^ d
:
∏∏d e
OracleMappingType
∏∏f w
.
∏∏w x
Varchar2∏∏x Ä
,∏∏Ä Å
	direction∏∏Ç ã
:∏∏ã å"
ParameterDirection∏∏ç ü
.∏∏ü †
Input∏∏† •
)∏∏• ¶
;∏∏¶ ß

parameters
ππ "
.
ππ" #
Add
ππ# &
(
ππ& '
name
ππ' +
:
ππ+ ,
$str
ππ- @
,
ππ@ A
aADHAAR
ππB I
.
ππI J
key_data
ππJ R
[
ππR S
$num
ππS T
]
ππT U
.
ππU V
address_landmark
ππV f
,
ππf g
dbType
ππh n
:
ππn o 
OracleMappingTypeππp Å
.ππÅ Ç
Varchar2ππÇ ä
,ππä ã
	directionππå ï
:ππï ñ"
ParameterDirectionππó ©
.ππ© ™
Inputππ™ Ø
)ππØ ∞
;ππ∞ ±

parameters
∫∫ "
.
∫∫" #
Add
∫∫# &
(
∫∫& '
name
∫∫' +
:
∫∫+ ,
$str
∫∫- 3
,
∫∫3 4
aADHAAR
∫∫5 <
.
∫∫< =
key_data
∫∫= E
[
∫∫E F
$num
∫∫F G
]
∫∫G H
.
∫∫H I
dob
∫∫I L
,
∫∫L M
dbType
∫∫N T
:
∫∫T U
OracleMappingType
∫∫V g
.
∫∫g h
Varchar2
∫∫h p
,
∫∫p q
	direction
∫∫r {
:
∫∫{ |!
ParameterDirection∫∫} è
.∫∫è ê
Input∫∫ê ï
)∫∫ï ñ
;∫∫ñ ó

parameters
ªª "
.
ªª" #
Add
ªª# &
(
ªª& '
name
ªª' +
:
ªª+ ,
$str
ªª- >
,
ªª> ?
aADHAAR
ªª@ G
.
ªªG H
key_data
ªªH P
[
ªªP Q
$num
ªªQ R
]
ªªR S
.
ªªS T
address_street
ªªT b
,
ªªb c
dbType
ªªd j
:
ªªj k
OracleMappingType
ªªl }
.
ªª} ~
Varchar2ªª~ Ü
,ªªÜ á
	directionªªà ë
:ªªë í"
ParameterDirectionªªì •
.ªª• ¶
Inputªª¶ ´
)ªª´ ¨
;ªª¨ ≠

parameters
ºº "
.
ºº" #
Add
ºº# &
(
ºº& '
name
ºº' +
:
ºº+ ,
$str
ºº- 4
,
ºº4 5
aADHAAR
ºº6 =
.
ºº= >
key_data
ºº> F
[
ººF G
$num
ººG H
]
ººH I
.
ººI J
name
ººJ N
,
ººN O
dbType
ººP V
:
ººV W
OracleMappingType
ººX i
.
ººi j
Varchar2
ººj r
,
ººr s
	direction
ººt }
:
ºº} ~!
ParameterDirectionºº ë
.ººë í
Inputººí ó
)ººó ò
;ººò ô

parameters
ΩΩ "
.
ΩΩ" #
Add
ΩΩ# &
(
ΩΩ& '
name
ΩΩ' +
:
ΩΩ+ ,
$str
ΩΩ- 8
,
ΩΩ8 9
aADHAAR
ΩΩ: A
.
ΩΩA B
key_data
ΩΩB J
[
ΩΩJ K
$num
ΩΩK L
]
ΩΩL M
.
ΩΩM N
key_buid
ΩΩN V
,
ΩΩV W
dbType
ΩΩX ^
:
ΩΩ^ _
OracleMappingType
ΩΩ` q
.
ΩΩq r
Varchar2
ΩΩr z
,
ΩΩz {
	directionΩΩ| Ö
:ΩΩÖ Ü"
ParameterDirectionΩΩá ô
.ΩΩô ö
InputΩΩö ü
)ΩΩü †
;ΩΩ† °

parameters
ææ "
.
ææ" #
Add
ææ# &
(
ææ& '
name
ææ' +
:
ææ+ ,
$str
ææ- >
,
ææ> ?
aADHAAR
ææ@ G
.
ææG H
key_data
ææH P
[
ææP Q
$num
ææQ R
]
ææR S
.
ææS T
key_global_uid
ææT b
,
ææb c
dbType
ææd j
:
ææj k
OracleMappingType
ææl }
.
ææ} ~
Varchar2ææ~ Ü
,ææÜ á
	directionææà ë
:ææë í"
ParameterDirectionææì •
.ææ• ¶
Inputææ¶ ´
)ææ´ ¨
;ææ¨ ≠

parameters
øø "
.
øø" #
Add
øø# &
(
øø& '
name
øø' +
:
øø+ ,
$str
øø- :
,
øø: ;
aADHAAR
øø< C
.
øøC D
key_data
øøD L
[
øøL M
$num
øøM N
]
øøN O
.
øøO P

key_source
øøP Z
,
øøZ [
dbType
øø\ b
:
øøb c
OracleMappingType
øød u
.
øøu v
Varchar2
øøv ~
,
øø~ 
	directionøøÄ â
:øøâ ä"
ParameterDirectionøøã ù
.øøù û
Inputøøû £
)øø£ §
;øø§ •

parameters
¿¿ "
.
¿¿" #
Add
¿¿# &
(
¿¿& '
name
¿¿' +
:
¿¿+ ,
$str
¿¿- @
,
¿¿@ A
aADHAAR
¿¿B I
.
¿¿I J
key_data
¿¿J R
[
¿¿R S
$num
¿¿S T
]
¿¿T U
.
¿¿U V
address_district
¿¿V f
,
¿¿f g
dbType
¿¿h n
:
¿¿n o 
OracleMappingType¿¿p Å
.¿¿Å Ç
Varchar2¿¿Ç ä
,¿¿ä ã
	direction¿¿å ï
:¿¿ï ñ"
ParameterDirection¿¿ó ©
.¿¿© ™
Input¿¿™ Ø
)¿¿Ø ∞
;¿¿∞ ±

parameters
¡¡ "
.
¡¡" #
Add
¡¡# &
(
¡¡& '
name
¡¡' +
:
¡¡+ ,
$str
¡¡- =
,
¡¡= >
GetAadharHashCode
¡¡? P
(
¡¡P Q
aADHAAR
¡¡Q X
,
¡¡X Y
idempotencyId
¡¡Z g
,
¡¡g h
employeeSlno
¡¡i u
)
¡¡u v
,
¡¡v w
dbType
¡¡x ~
:
¡¡~ !
OracleMappingType¡¡Ä ë
.¡¡ë í
Varchar2¡¡í ö
,¡¡ö õ
	direction¡¡ú •
:¡¡• ¶"
ParameterDirection¡¡ß π
.¡¡π ∫
Input¡¡∫ ø
)¡¡ø ¿
;¡¡¿ ¡

parameters
¬¬ "
.
¬¬" #
Add
¬¬# &
(
¬¬& '
name
¬¬' +
:
¬¬+ ,
$str
¬¬- >
,
¬¬> ?
aADHAAR
¬¬@ G
.
¬¬G H
key_data
¬¬H P
[
¬¬P Q
$num
¬¬Q R
]
¬¬R S
.
¬¬S T
key_fetched_at
¬¬T b
,
¬¬b c
dbType
¬¬d j
:
¬¬j k
OracleMappingType
¬¬l }
.
¬¬} ~
Varchar2¬¬~ Ü
,¬¬Ü á
	direction¬¬à ë
:¬¬ë í"
ParameterDirection¬¬ì •
.¬¬• ¶
Input¬¬¶ ´
)¬¬´ ¨
;¬¬¨ ≠
aadharRowsSaved
≈≈ '
=
≈≈( )
await
≈≈* /

connection
≈≈0 :
.
≈≈: ;
ExecuteAsync
≈≈; G
(
≈≈G H 
DatabaseProcedures
≈≈H Z
.
≈≈Z [&
SP_SAVE_EMPLOYEE_AADHAAR
≈≈[ s
,
≈≈s t

parameters
≈≈u 
,≈≈ Ä
commandType≈≈Å å
:≈≈å ç
CommandType≈≈é ô
.≈≈ô ö
StoredProcedure≈≈ö ©
)≈≈© ™
;≈≈™ ´
}
«« 
}
»» 
if
   
(
   
bankAccount
   
!=
    "
null
  # '
)
  ' (
{
ÀÀ 
using
ÃÃ 
(
ÃÃ 
var
ÃÃ 

connection
ÃÃ )
=
ÃÃ* +
await
ÃÃ, 1
base
ÃÃ2 6
.
ÃÃ6 7
CreateConnection
ÃÃ7 G
(
ÃÃG H
DbSchema
ÃÃH P
.
ÃÃP Q
PORTAL
ÃÃQ W
)
ÃÃW X
)
ÃÃX Y
{
ÕÕ %
OracleDynamicParameters
ŒŒ /

parameters
ŒŒ0 :
=
ŒŒ; <
new
ŒŒ= @%
OracleDynamicParameters
ŒŒA X
(
ŒŒX Y
)
ŒŒY Z
;
ŒŒZ [

parameters
œœ "
.
œœ" #
Add
œœ# &
(
œœ& '
name
œœ' +
:
œœ+ ,
$str
œœ- >
,
œœ> ?
idempotencyId
œœ@ M
,
œœM N
dbType
œœO U
:
œœU V
OracleMappingType
œœW h
.
œœh i
Varchar2
œœi q
,
œœq r
	direction
œœs |
:
œœ| }!
ParameterDirectionœœ~ ê
.œœê ë
Inputœœë ñ
)œœñ ó
;œœó ò

parameters
–– "
.
––" #
Add
––# &
(
––& '
name
––' +
:
––+ ,
$str
––- <
,
––< =
employeeSlno
––> J
,
––J K
dbType
––L R
:
––R S
OracleMappingType
––T e
.
––e f
Int32
––f k
,
––k l
	direction
––m v
:
––v w!
ParameterDirection––x ä
.––ä ã
Input––ã ê
)––ê ë
;––ë í

parameters
—— "
.
——" #
Add
——# &
(
——& '
name
——' +
:
——+ ,
$str
——- :
,
——: ;
bankAccount
——< G
.
——G H

key_status
——H R
,
——R S
dbType
——T Z
:
——Z [
OracleMappingType
——\ m
.
——m n
Varchar2
——n v
,
——v w
	direction——x Å
:——Å Ç"
ParameterDirection——É ï
.——ï ñ
Input——ñ õ
)——õ ú
;——ú ù

parameters
““ "
.
““" #
Add
““# &
(
““& '
name
““' +
:
““+ ,
$str
““- >
,
““> ?
bankAccount
““@ K
.
““K L
key_data
““L T
[
““T U
$num
““U V
]
““V W
.
““W X
account_number
““X f
,
““f g
dbType
““h n
:
““n o 
OracleMappingType““p Å
.““Å Ç
Varchar2““Ç ä
,““ä ã
	direction““å ï
:““ï ñ"
ParameterDirection““ó ©
.““© ™
Input““™ Ø
)““Ø ∞
;““∞ ±

parameters
”” "
.
””" #
Add
””# &
(
””& '
name
””' +
:
””+ ,
$str
””- 6
,
””6 7
bankAccount
””8 C
.
””C D
key_data
””D L
[
””L M
$num
””M N
]
””N O
.
””O P
key_id
””P V
,
””V W
dbType
””X ^
:
””^ _
OracleMappingType
””` q
.
””q r
Varchar2
””r z
,
””z {
	direction””| Ö
:””Ö Ü"
ParameterDirection””á ô
.””ô ö
Input””ö ü
)””ü †
;””† °

parameters
‘‘ "
.
‘‘" #
Add
‘‘# &
(
‘‘& '
name
‘‘' +
:
‘‘+ ,
$str
‘‘- <
,
‘‘< =
bankAccount
‘‘> I
.
‘‘I J
key_data
‘‘J R
[
‘‘R S
$num
‘‘S T
]
‘‘T U
.
‘‘U V
key_provider
‘‘V b
,
‘‘b c
dbType
‘‘d j
:
‘‘j k
OracleMappingType
‘‘l }
.
‘‘} ~
Varchar2‘‘~ Ü
,‘‘Ü á
	direction‘‘à ë
:‘‘ë í"
ParameterDirection‘‘ì •
.‘‘• ¶
Input‘‘¶ ´
)‘‘´ ¨
;‘‘¨ ≠

parameters
’’ "
.
’’" #
Add
’’# &
(
’’& '
name
’’' +
:
’’+ ,
$str
’’- ;
,
’’; <
bankAccount
’’= H
.
’’H I
key_data
’’I Q
[
’’Q R
$num
’’R S
]
’’S T
.
’’T U
issuer_name
’’U `
,
’’` a
dbType
’’b h
:
’’h i
OracleMappingType
’’j {
.
’’{ |
Varchar2’’| Ñ
,’’Ñ Ö
	direction’’Ü è
:’’è ê"
ParameterDirection’’ë £
.’’£ §
Input’’§ ©
)’’© ™
;’’™ ´

parameters
÷÷ "
.
÷÷" #
Add
÷÷# &
(
÷÷& '
name
÷÷' +
:
÷÷+ ,
$str
÷÷- 8
,
÷÷8 9
bankAccount
÷÷: E
.
÷÷E F
key_data
÷÷F N
[
÷÷N O
$num
÷÷O P
]
÷÷P Q
.
÷÷Q R
key_name
÷÷R Z
,
÷÷Z [
dbType
÷÷\ b
:
÷÷b c
OracleMappingType
÷÷d u
.
÷÷u v
Varchar2
÷÷v ~
,
÷÷~ 
	direction÷÷Ä â
:÷÷â ä"
ParameterDirection÷÷ã ù
.÷÷ù û
Input÷÷û £
)÷÷£ §
;÷÷§ •

parameters
◊◊ "
.
◊◊" #
Add
◊◊# &
(
◊◊& '
name
◊◊' +
:
◊◊+ ,
$str
◊◊- ;
,
◊◊; <
bankAccount
◊◊= H
.
◊◊H I
key_data
◊◊I Q
[
◊◊Q R
$num
◊◊R S
]
◊◊S T
.
◊◊T U
branch_name
◊◊U `
,
◊◊` a
dbType
◊◊b h
:
◊◊h i
OracleMappingType
◊◊j {
.
◊◊{ |
Varchar2◊◊| Ñ
,◊◊Ñ Ö
	direction◊◊Ü è
:◊◊è ê"
ParameterDirection◊◊ë £
.◊◊£ §
Input◊◊§ ©
)◊◊© ™
;◊◊™ ´

parameters
ÿÿ "
.
ÿÿ" #
Add
ÿÿ# &
(
ÿÿ& '
name
ÿÿ' +
:
ÿÿ+ ,
$str
ÿÿ- 9
,
ÿÿ9 :
bankAccount
ÿÿ; F
.
ÿÿF G
key_data
ÿÿG O
[
ÿÿO P
$num
ÿÿP Q
]
ÿÿQ R
.
ÿÿR S
	bank_name
ÿÿS \
,
ÿÿ\ ]
dbType
ÿÿ^ d
:
ÿÿd e
OracleMappingType
ÿÿf w
.
ÿÿw x
Varchar2ÿÿx Ä
,ÿÿÄ Å
	directionÿÿÇ ã
:ÿÿã å"
ParameterDirectionÿÿç ü
.ÿÿü †
Inputÿÿ† •
)ÿÿ• ¶
;ÿÿ¶ ß

parameters
ŸŸ "
.
ŸŸ" #
Add
ŸŸ# &
(
ŸŸ& '
name
ŸŸ' +
:
ŸŸ+ ,
$str
ŸŸ- 4
,
ŸŸ4 5
bankAccount
ŸŸ6 A
.
ŸŸA B
key_data
ŸŸB J
[
ŸŸJ K
$num
ŸŸK L
]
ŸŸL M
.
ŸŸM N
name
ŸŸN R
,
ŸŸR S
dbType
ŸŸT Z
:
ŸŸZ [
OracleMappingType
ŸŸ\ m
.
ŸŸm n
Varchar2
ŸŸn v
,
ŸŸv w
	directionŸŸx Å
:ŸŸÅ Ç"
ParameterDirectionŸŸÉ ï
.ŸŸï ñ
InputŸŸñ õ
)ŸŸõ ú
;ŸŸú ù

parameters
⁄⁄ "
.
⁄⁄" #
Add
⁄⁄# &
(
⁄⁄& '
name
⁄⁄' +
:
⁄⁄+ ,
$str
⁄⁄- 8
,
⁄⁄8 9
bankAccount
⁄⁄: E
.
⁄⁄E F
key_data
⁄⁄F N
[
⁄⁄N O
$num
⁄⁄O P
]
⁄⁄P Q
.
⁄⁄Q R
key_buid
⁄⁄R Z
,
⁄⁄Z [
dbType
⁄⁄\ b
:
⁄⁄b c
OracleMappingType
⁄⁄d u
.
⁄⁄u v
Varchar2
⁄⁄v ~
,
⁄⁄~ 
	direction⁄⁄Ä â
:⁄⁄â ä"
ParameterDirection⁄⁄ã ù
.⁄⁄ù û
Input⁄⁄û £
)⁄⁄£ §
;⁄⁄§ •

parameters
€€ "
.
€€" #
Add
€€# &
(
€€& '
name
€€' +
:
€€+ ,
$str
€€- >
,
€€> ?
bankAccount
€€@ K
.
€€K L
key_data
€€L T
[
€€T U
$num
€€U V
]
€€V W
.
€€W X
key_global_uid
€€X f
,
€€f g
dbType
€€h n
:
€€n o 
OracleMappingType€€p Å
.€€Å Ç
Varchar2€€Ç ä
,€€ä ã
	direction€€å ï
:€€ï ñ"
ParameterDirection€€ó ©
.€€© ™
Input€€™ Ø
)€€Ø ∞
;€€∞ ±

parameters
‹‹ "
.
‹‹" #
Add
‹‹# &
(
‹‹& '
name
‹‹' +
:
‹‹+ ,
$str
‹‹- :
,
‹‹: ;
bankAccount
‹‹< G
.
‹‹G H
key_data
‹‹H P
[
‹‹P Q
$num
‹‹Q R
]
‹‹R S
.
‹‹S T

key_source
‹‹T ^
,
‹‹^ _
dbType
‹‹` f
:
‹‹f g
OracleMappingType
‹‹h y
.
‹‹y z
Varchar2‹‹z Ç
,‹‹Ç É
	direction‹‹Ñ ç
:‹‹ç é"
ParameterDirection‹‹è °
.‹‹° ¢
Input‹‹¢ ß
)‹‹ß ®
;‹‹® ©

parameters
›› "
.
››" #
Add
››# &
(
››& '
name
››' +
:
››+ ,
$str
››- 4
,
››4 5
bankAccount
››6 A
.
››A B
key_data
››B J
[
››J K
$num
››K L
]
››L M
.
››M N
ifsc
››N R
,
››R S
dbType
››T Z
:
››Z [
OracleMappingType
››\ m
.
››m n
Varchar2
››n v
,
››v w
	direction››x Å
:››Å Ç"
ParameterDirection››É ï
.››ï ñ
Input››ñ õ
)››õ ú
;››ú ù

parameters
ﬁﬁ "
.
ﬁﬁ" #
Add
ﬁﬁ# &
(
ﬁﬁ& '
name
ﬁﬁ' +
:
ﬁﬁ+ ,
$str
ﬁﬁ- =
,
ﬁﬁ= >
GetBankHashCode
ﬁﬁ? N
(
ﬁﬁN O
bankAccount
ﬁﬁO Z
,
ﬁﬁZ [
idempotencyId
ﬁﬁ\ i
,
ﬁﬁi j
employeeSlno
ﬁﬁk w
)
ﬁﬁw x
,
ﬁﬁx y
dbTypeﬁﬁz Ä
:ﬁﬁÄ Å!
OracleMappingTypeﬁﬁÇ ì
.ﬁﬁì î
Varchar2ﬁﬁî ú
,ﬁﬁú ù
	directionﬁﬁû ß
:ﬁﬁß ®"
ParameterDirectionﬁﬁ© ª
.ﬁﬁª º
Inputﬁﬁº ¡
)ﬁﬁ¡ ¬
;ﬁﬁ¬ √

parameters
ﬂﬂ "
.
ﬂﬂ" #
Add
ﬂﬂ# &
(
ﬂﬂ& '
name
ﬂﬂ' +
:
ﬂﬂ+ ,
$str
ﬂﬂ- >
,
ﬂﬂ> ?
bankAccount
ﬂﬂ@ K
.
ﬂﬂK L
key_data
ﬂﬂL T
[
ﬂﬂT U
$num
ﬂﬂU V
]
ﬂﬂV W
.
ﬂﬂW X
key_fetched_at
ﬂﬂX f
,
ﬂﬂf g
dbType
ﬂﬂh n
:
ﬂﬂn o 
OracleMappingTypeﬂﬂp Å
.ﬂﬂÅ Ç
Varchar2ﬂﬂÇ ä
,ﬂﬂä ã
	directionﬂﬂå ï
:ﬂﬂï ñ"
ParameterDirectionﬂﬂó ©
.ﬂﬂ© ™
Inputﬂﬂ™ Ø
)ﬂﬂØ ∞
;ﬂﬂ∞ ±
bankRowsSaved
‡‡ %
=
‡‡& '
await
‡‡( -

connection
‡‡. 8
.
‡‡8 9
ExecuteAsync
‡‡9 E
(
‡‡E F 
DatabaseProcedures
‡‡F X
.
‡‡X Y+
SP_SAVE_EMPLOYEE_BANK_ACCOUNT
‡‡Y v
,
‡‡v w

parameters‡‡x Ç
,‡‡Ç É
commandType‡‡Ñ è
:‡‡è ê
CommandType‡‡ë ú
.‡‡ú ù
StoredProcedure‡‡ù ¨
)‡‡¨ ≠
;‡‡≠ Æ
}
‚‚ 
}
„„ 
if
ÂÂ 
(
ÂÂ 
drivingLicence
ÂÂ !
!=
ÂÂ" $
null
ÂÂ% )
)
ÂÂ) *
{
ÊÊ 
}
˘˘ 
using
¸¸ 
(
¸¸ 
var
¸¸ 

connection
¸¸ %
=
¸¸& '
await
¸¸( -
base
¸¸. 2
.
¸¸2 3
CreateConnection
¸¸3 C
(
¸¸C D
DbSchema
¸¸D L
.
¸¸L M
PORTAL
¸¸M S
)
¸¸S T
)
¸¸T U
{
˝˝ 
}
˛˛ 
if
ÄÄ 
(
ÄÄ 
(
ÄÄ 
panRowsSaved
ÄÄ !
*
ÄÄ" #
-
ÄÄ$ %
$num
ÄÄ% &
)
ÄÄ& '
>
ÄÄ( )
$num
ÄÄ* +
||
ÄÄ, .
(
ÄÄ/ 0
aadharRowsSaved
ÄÄ0 ?
*
ÄÄ@ A
-
ÄÄB C
$num
ÄÄC D
)
ÄÄD E
>
ÄÄF G
$num
ÄÄH I
||
ÄÄJ L
(
ÄÄM N
bankRowsSaved
ÄÄN [
*
ÄÄ\ ]
-
ÄÄ^ _
$num
ÄÄ_ `
)
ÄÄ` a
>
ÄÄb c
$num
ÄÄd e
)
ÄÄe f
{
ÅÅ 
using
ÉÉ 
(
ÉÉ 
var
ÉÉ 

connection
ÉÉ )
=
ÉÉ* +
await
ÉÉ, 1
base
ÉÉ2 6
.
ÉÉ6 7
CreateConnection
ÉÉ7 G
(
ÉÉG H
DbSchema
ÉÉH P
.
ÉÉP Q
PORTAL
ÉÉQ W
)
ÉÉW X
)
ÉÉX Y
{
ÑÑ %
OracleDynamicParameters
ÖÖ /

parameters
ÖÖ0 :
=
ÖÖ; <
new
ÖÖ= @%
OracleDynamicParameters
ÖÖA X
(
ÖÖX Y
)
ÖÖY Z
;
ÖÖZ [

parameters
ÜÜ "
.
ÜÜ" #
Add
ÜÜ# &
(
ÜÜ& '
name
ÜÜ' +
:
ÜÜ+ ,
$str
ÜÜ- <
,
ÜÜ< =
employeeSlno
ÜÜ> J
,
ÜÜJ K
dbType
ÜÜL R
:
ÜÜR S
OracleMappingType
ÜÜT e
.
ÜÜe f
Int32
ÜÜf k
,
ÜÜk l
	direction
ÜÜm v
:
ÜÜv w!
ParameterDirectionÜÜx ä
.ÜÜä ã
InputÜÜã ê
)ÜÜê ë
;ÜÜë í

parameters
áá "
.
áá" #
Add
áá# &
(
áá& '
name
áá' +
:
áá+ ,
$str
áá- =
,
áá= >
idempotencyId
áá? L
,
ááL M
dbType
ááN T
:
ááT U
OracleMappingType
ááV g
.
áág h
Varchar2
ááh p
,
ááp q
	direction
áár {
:
áá{ |!
ParameterDirectionáá} è
.ááè ê
Inputááê ï
)ááï ñ
;ááñ ó
isEmployeeUpdated
ââ )
=
ââ* +
await
ââ, 1

connection
ââ2 <
.
ââ< =
ExecuteAsync
ââ= I
(
ââI J 
DatabaseProcedures
ââJ \
.
ââ\ ])
SP_UPDATE_EMP_VERIFY_STATUS
ââ] x
,
ââx y

parametersââz Ñ
,ââÑ Ö
commandTypeââÜ ë
:ââë í
CommandTypeââì û
.ââû ü
StoredProcedureââü Æ
)ââÆ Ø
;ââØ ∞
}
ää 
isSucess
ãã 
=
ãã 
(
ãã  
isEmployeeUpdated
ãã  1
*
ãã2 3
-
ãã4 5
$num
ãã5 6
)
ãã6 7
>
ãã8 9
$num
ãã: ;
;
ãã; <
}
çç 
}
éé 
return
êê 
isSucess
êê 
;
êê 
}
ëë 	
public
íí 
async
íí 
Task
íí 
<
íí 
bool
íí 
>
íí .
 UpdateEmployeeVerificationStatus
íí  @
(
íí@ A+
EmployeeVerificationStatusReq
ííA ^
req
íí_ b
)
ííb c
{
ìì 	
bool
îî 
resp
îî 
=
îî 
false
îî 
;
îî 
int
ïï 
updatedRecords
ïï 
=
ïï  
$num
ïï! "
;
ïï" #
using
óó 
(
óó 
var
óó 

connection
óó !
=
óó" #
await
óó$ )
base
óó* .
.
óó. /
CreateConnection
óó/ ?
(
óó? @
DbSchema
óó@ H
.
óóH I
PORTAL
óóI O
)
óóO P
)
óóP Q
{
òò %
OracleDynamicParameters
ôô '
param
ôô( -
=
ôô. /
new
ôô0 3
(
ôô3 4
)
ôô4 5
;
ôô5 6
param
öö 
.
öö 
Add
öö 
(
öö 
name
öö 
:
öö 
$str
öö  +
,
öö+ ,
req
öö- 0
.
öö0 1
StatusId
öö1 9
,
öö9 :
dbType
öö; A
:
ööA B
OracleMappingType
ööC T
.
ööT U
Int32
ööU Z
,
ööZ [
	direction
öö\ e
:
ööe f 
ParameterDirection
öög y
.
ööy z
Input
ööz 
)öö Ä
;ööÄ Å
param
õõ 
.
õõ 
Add
õõ 
(
õõ 
name
õõ 
:
õõ 
$str
õõ  /
,
õõ/ 0
req
õõ1 4
.
õõ4 5
EmployeeSlno
õõ5 A
,
õõA B
dbType
õõC I
:
õõI J
OracleMappingType
õõK \
.
õõ\ ]
Int32
õõ] b
,
õõb c
	direction
õõd m
:
õõm n!
ParameterDirectionõõo Å
.õõÅ Ç
InputõõÇ á
)õõá à
;õõà â
param
úú 
.
úú 
Add
úú 
(
úú 
name
úú 
:
úú 
$str
úú  0
,
úú0 1
req
úú2 5
.
úú5 6
IdempotencyId
úú6 C
,
úúC D
dbType
úúE K
:
úúK L
OracleMappingType
úúM ^
.
úú^ _
Varchar2
úú_ g
,
úúg h
	direction
úúi r
:
úúr s!
ParameterDirectionúút Ü
.úúÜ á
Inputúúá å
)úúå ç
;úúç é
param
ùù 
.
ùù 
Add
ùù 
(
ùù 
name
ùù 
:
ùù 
$str
ùù  .
,
ùù. /
req
ùù0 3
.
ùù3 4

ApprovedBy
ùù4 >
,
ùù> ?
dbType
ùù@ F
:
ùùF G
OracleMappingType
ùùH Y
.
ùùY Z
Int32
ùùZ _
,
ùù_ `
	direction
ùùa j
:
ùùj k 
ParameterDirection
ùùl ~
.
ùù~ 
Inputùù Ñ
)ùùÑ Ö
;ùùÖ Ü
param
ûû 
.
ûû 
Add
ûû 
(
ûû 
name
ûû 
:
ûû 
$str
ûû  3
,
ûû3 4
req
ûû5 8
.
ûû8 9
ApprovedRemarks
ûû9 H
,
ûûH I
dbType
ûûJ P
:
ûûP Q
OracleMappingType
ûûR c
.
ûûc d
Varchar2
ûûd l
,
ûûl m
	direction
ûûn w
:
ûûw x!
ParameterDirectionûûy ã
.ûûã å
Inputûûå ë
)ûûë í
;ûûí ì
param
üü 
.
üü 
Add
üü 
(
üü 
name
üü 
:
üü 
$str
üü  4
,
üü4 5
req
üü6 9
.
üü9 :
LockBankDetails
üü: I
.
üüI J
ToInt32OrDefault
üüJ Z
(
üüZ [
)
üü[ \
,
üü\ ]
dbType
üü^ d
:
üüd e
OracleMappingType
üüf w
.
üüw x
Int32
üüx }
,
üü} ~
	directionüü à
:üüà â"
ParameterDirectionüüä ú
.üüú ù
Inputüüù ¢
)üü¢ £
;üü£ §
updatedRecords
†† 
=
††  
await
††! &

connection
††' 1
.
††1 2
ExecuteAsync
††2 >
(
††> ? 
DatabaseProcedures
††? Q
.
††Q R,
SP_UPDATE_EMP_HR_VERIFY_STATUS
††R p
,
††p q
param
††r w
,
††w x
commandType††y Ñ
:††Ñ Ö
CommandType††Ü ë
.††ë í
StoredProcedure††í °
)††° ¢
;††¢ £
resp
¢¢ 
=
¢¢ 
(
¢¢ 
updatedRecords
¢¢ &
*
¢¢' (
-
¢¢) *
$num
¢¢* +
)
¢¢+ ,
>
¢¢- .
$num
¢¢/ 0
;
¢¢0 1
}
££ 
return
§§ 
resp
§§ 
;
§§ 
}
¶¶ 	
public
ßß 
async
ßß 
Task
ßß 
<
ßß 
string
ßß  
>
ßß  !#
GetEmployeeAadharPath
ßß" 7
(
ßß7 8
int
ßß8 ;
?
ßß; <
EmployeeSlno
ßß= I
)
ßßI J
{
®® 	
string
©©  
employeeAadharPath
©© %
=
©©& '
null
©©( ,
;
©©, -
StringBuilder
™™ 

imagesPath
™™ $
=
™™% &
new
™™' *
StringBuilder
™™+ 8
(
™™8 9
)
™™9 :
;
™™: ;
string
´´ 
[
´´ 
]
´´ 
	imagePath
´´ 
=
´´  
null
´´! %
;
´´% &
using
≠≠ 
(
≠≠ 
IDbConnection
≠≠  

connection
≠≠! +
=
≠≠, -
await
≠≠. 3
CreateConnection
≠≠4 D
(
≠≠D E
DbSchema
≠≠E M
.
≠≠M N
PORTAL
≠≠N T
)
≠≠T U
)
≠≠U V
{
ÆÆ %
OracleDynamicParameters
ØØ '

parameters
ØØ( 2
=
ØØ3 4
new
ØØ5 8%
OracleDynamicParameters
ØØ9 P
(
ØØP Q
)
ØØQ R
;
ØØR S
string
∞∞ 

templateid
∞∞ !
=
∞∞" #!
ApplicationSettings
∞∞$ 7
.
∞∞7 8
Current
∞∞8 ?
.
∞∞? @
HrmsOtpTemplate
∞∞@ O
;
∞∞O P

parameters
±± 
.
±± 
Add
±± 
(
±± 
name
±± #
:
±±# $
$str
±±% 4
,
±±4 5
EmployeeSlno
±±6 B
,
±±B C
dbType
±±D J
:
±±J K
OracleMappingType
±±L ]
.
±±] ^
Varchar2
±±^ f
,
±±f g
	direction
±±h q
:
±±q r!
ParameterDirection±±s Ö
.±±Ö Ü
Input±±Ü ã
)±±ã å
;±±å ç

parameters
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
name
≤≤ #
:
≤≤# $
$str
≤≤% .
,
≤≤. /
dbType
≤≤0 6
:
≤≤6 7
OracleMappingType
≤≤8 I
.
≤≤I J
	RefCursor
≤≤J S
,
≤≤S T
	direction
≤≤U ^
:
≤≤^ _ 
ParameterDirection
≤≤` r
.
≤≤r s
Output
≤≤s y
)
≤≤y z
;
≤≤z {
var
≥≥ "
dbScreenInformations
≥≥ (
=
≥≥) *
await
≥≥+ 0

connection
≥≥1 ;
.
≥≥; <

QueryAsync
≥≥< F
<
≥≥F G
string
≥≥G M
>
≥≥M N
(
≥≥N O 
DatabaseProcedures
≥≥O a
.
≥≥a b!
GET_EMP_AADHAR_PATH
≥≥b u
,
≥≥u v

parameters≥≥w Å
,≥≥Å Ç
commandType≥≥É é
:≥≥é è
CommandType≥≥ê õ
.≥≥õ ú
StoredProcedure≥≥ú ´
)≥≥´ ¨
;≥≥¨ ≠
if
¥¥ 
(
¥¥ "
dbScreenInformations
¥¥ (
!=
¥¥) +
null
¥¥, 0
)
¥¥0 1
{
µµ  
employeeAadharPath
∂∂ &
=
∂∂' ("
dbScreenInformations
∂∂) =
.
∂∂= >
FirstOrDefault
∂∂> L
(
∂∂L M
)
∂∂M N
;
∂∂N O

imagesPath
∑∑ 
.
∑∑ 
Clear
∑∑ $
(
∑∑$ %
)
∑∑% &
;
∑∑& '
	imagePath
∏∏ 
=
∏∏  
employeeAadharPath
∏∏  2
.
∏∏2 3
Split
∏∏3 8
(
∏∏8 9
$char
∏∏9 <
)
∏∏< =
;
∏∏= >
string
ππ 
path
ππ 
=
ππ  !
	imagePath
ππ" +
.
ππ+ ,
Where
ππ, 1
(
ππ1 2
x
ππ2 3
=>
ππ4 6
!
ππ7 8
x
ππ8 9
.
ππ9 :
IsNotNullOrEmpty
ππ: J
(
ππJ K
)
ππK L
)
ππL M
.
ππM N
FirstOrDefault
ππN \
(
ππ\ ]
)
ππ] ^
;
ππ^ _

imagesPath
∫∫ 
.
∫∫ 
AppendFormat
∫∫ +
(
∫∫+ ,
$str
∫∫, <
,
∫∫< =!
ApplicationSettings
∫∫> Q
.
∫∫Q R
Current
∫∫R Y
.
∫∫Y Z
ProfilePath
∫∫Z e
,
∫∫e f
	imagePath
∫∫g p
[
∫∫p q
$num
∫∫q r
]
∫∫r s
)
∫∫s t
;
∫∫t u 
employeeAadharPath
ªª &
=
ªª' (

imagesPath
ªª) 3
.
ªª3 4
ToString
ªª4 <
(
ªª< =
)
ªª= >
;
ªª> ?
}
ºº 
}
ΩΩ 
return
ææ  
employeeAadharPath
ææ %
;
ææ% &
}
¿¿ 	
}
¡¡ 
}¬¬ ÈÁ
cF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Employee\EmployeeInformationRepository.cs
	namespace)) 	
Phoenix))
 
.)) 
Database)) 
.)) 

Repository)) %
.))% &
Employee))& .
{** 
public++ 

class++ )
EmployeeInformationRepository++ .
:++/ 0
BaseRepository++1 ?
{,, 
private-- 
readonly-- 
IConfiguration-- '
configuration--( 5
;--5 6
private.. 
readonly.. 
ICryptography.. &
cryptography..' 3
;..3 4
private// 
readonly// 
IDistributedCache// *

redisCache//+ 5
;//5 6
public11 )
EmployeeInformationRepository11 ,
(11, -
IConfiguration11- ;
configuration11< I
,11I J
IDistributedCache11K \

redisCache11] g
)11g h
:11i j
base11k o
(11o p
configuration11p }
)11} ~
{22 	
this33 
.33 
configuration33 
=33  
configuration33! .
;33. /
this44 
.44 
cryptography44 
=44 
cryptography44  ,
;44, -
this55 
.55 

redisCache55 
=55 

redisCache55 (
;55( )
}66 	
public88 
async88 
Task88 
<88 
EmployeeProfile88 )
>88) *
GetEmployeeProfile88+ =
(88= >
int88> A
employeeSlno88B N
)88N O
{99 	
EmployeeProfile:: 
employee:: $
=::% &
null::' +
;::+ ,
StringBuilder;; 

imagesPath;; $
=;;% &
new;;' *
StringBuilder;;+ 8
(;;8 9
);;9 :
;;;: ;
string<< 
[<< 
]<< 
	imagePath<< 
=<<  
null<<! %
;<<% &
using== 
(== 
var== 

connection== !
===" #
await==$ )
base==* .
.==. /
CreateConnection==/ ?
(==? @
DbSchema==@ H
.==H I
PORTAL==I O
)==O P
)==P Q
{>> #
OracleDynamicParameters?? '
	parmeters??( 1
=??2 3
new??4 7#
OracleDynamicParameters??8 O
(??O P
)??P Q
;??Q R
	parmeters@@ 
.@@ 
Add@@ 
(@@ 
name@@ "
:@@" #
$str@@$ 3
,@@3 4
employeeSlno@@5 A
,@@A B
dbType@@C I
:@@I J
OracleMappingType@@K \
.@@\ ]
Int32@@] b
,@@b c
	direction@@d m
:@@m n
ParameterDirection	@@o Å
.
@@Å Ç
Input
@@Ç á
)
@@á à
;
@@à â
	parmetersAA 
.AA 
AddAA 
(AA 
nameAA "
:AA" #
$strAA$ -
,AA- .
Employee_DetailsAA/ ?
.AA? @
EMPLOYEEAA@ H
.AAH I
ToInt32OrDefaultAAI Y
(AAY Z
)AAZ [
,AA[ \
dbTypeAA] c
:AAc d
OracleMappingTypeAAe v
.AAv w
Varchar2AAw 
,	AA Ä
	direction
AAÅ ä
:
AAä ã 
ParameterDirection
AAå û
.
AAû ü
Input
AAü §
)
AA§ •
;
AA• ¶
	parmetersBB 
.BB 
AddBB 
(BB 
nameBB "
:BB" #
$strBB$ -
,BB- .
dbTypeBB/ 5
:BB5 6
OracleMappingTypeBB7 H
.BBH I
	RefCursorBBI R
,BBR S
	directionBBT ]
:BB] ^
ParameterDirectionBB_ q
.BBq r
OutputBBr x
)BBx y
;BBy z
employeeCC 
=CC 
awaitCC  

connectionCC! +
.CC+ ,
QueryFirstAsyncCC, ;
<CC; <
EmployeeProfileCC< K
>CCK L
(CCL M
DatabaseProceduresCCM _
.CC_ ` 
GET_EMP_PROFILE_DATACC` t
,CCt u
	parmetersCCv 
,	CC Ä
commandType
CCÅ å
:
CCå ç
CommandType
CCé ô
.
CCô ö
StoredProcedure
CCö ©
)
CC© ™
.
CC™ ´
ConfigureAwait
CC´ π
(
CCπ ∫
false
CC∫ ø
)
CCø ¿
;
CC¿ ¡
}DD 
ifEE 
(EE 
employeeEE 
!=EE 
nullEE  
)EE  !
{FF 

imagesPathGG 
.GG 
ClearGG  
(GG  !
)GG! "
;GG" #
	imagePathHH 
=HH 
employeeHH $
.HH$ %
	PhotoPathHH% .
.HH. /
SplitHH/ 4
(HH4 5
$charHH5 8
)HH8 9
;HH9 :

imagesPathII 
.II 
AppendFormatII '
(II' (
$strII( 8
,II8 9
ApplicationSettingsII: M
.IIM N
CurrentIIN U
.IIU V
ProfilePathIIV a
,IIa b
	imagePathIIc l
[IIl m
$numIIm n
]IIn o
)IIo p
;IIp q
employeeJJ 
.JJ 
	PhotoPathJJ "
=JJ# $

imagesPathJJ% /
.JJ/ 0
ToStringJJ0 8
(JJ8 9
)JJ9 :
;JJ: ;
employeeKK 
.KK 
PhotoBinaryKK $
=KK% &
stringKK' -
.KK- .
FormatKK. 4
(KK4 5
$strKK5 >
,KK> ?
$strKK@ W
,KKW X
GetBinaryDataKKY f
(KKf g

imagesPathKKg q
.KKq r
ToStringKKr z
(KKz {
)KK{ |
)KK| }
)KK} ~
;KK~ 

imagesPathMM 
.MM 
ClearMM  
(MM  !
)MM! "
;MM" #
	imagePathNN 
=NN 
employeeNN $
.NN$ %
BankInfoPathNN% 1
.NN1 2
SplitNN2 7
(NN7 8
$charNN8 ;
)NN; <
;NN< =

imagesPathOO 
.OO 
AppendFormatOO '
(OO' (
$strOO( 6
,OO6 7
ApplicationSettingsOO8 K
.OOK L
CurrentOOL S
.OOS T
ProfilePathOOT _
,OO_ `
	imagePathOOa j
[OOj k
$numOOk l
]OOl m
)OOm n
;OOn o
employeePP 
.PP 
BankInfoPathPP %
=PP& '

imagesPathPP( 2
.PP2 3
ToStringPP3 ;
(PP; <
)PP< =
;PP= >

imagesPathSS 
.SS 
ClearSS  
(SS  !
)SS! "
;SS" #
	imagePathTT 
=TT 
employeeTT $
.TT$ %

AadharPathTT% /
.TT/ 0
SplitTT0 5
(TT5 6
$charTT6 9
)TT9 :
;TT: ;

imagesPathUU 
.UU 
AppendFormatUU '
(UU' (
$strUU( 8
,UU8 9
ApplicationSettingsUU: M
.UUM N
CurrentUUN U
.UUU V
ProfilePathUUV a
,UUa b
	imagePathUUc l
[UUl m
$numUUm n
]UUn o
)UUo p
;UUp q
employeeVV 
.VV 

AadharPathVV #
=VV$ %

imagesPathVV& 0
.VV0 1
ToStringVV1 9
(VV9 :
)VV: ;
;VV; <
employeeYY 
.YY 
FinSLNoYY  
=YY! "
ApplicationSettingsYY# 6
.YY6 7
CurrentYY7 >
.YY> ?
FinancialYearIdYY? N
;YYN O
employeeZZ 
.ZZ $
EmployeeEducationDetailsZZ 1
=ZZ2 3
awaitZZ4 9'
GetEmployeeEducationDetailsZZ: U
(ZZU V
employeeSlnoZZV b
)ZZb c
;ZZc d
employee[[ 
.[[ !
EmployeeFamilyDetails[[ .
=[[/ 0
await[[1 6$
GetEmployeeFamilyDetails[[7 O
([[O P
employeeSlno[[P \
)[[\ ]
;[[] ^
employee\\ 
.\\ %
EmployeeExperienceDetails\\ 2
=\\3 4
await\\5 :(
GetEmployeeExperienceDetails\\; W
(\\W X
employeeSlno\\X d
)\\d e
;\\e f
employee]] 
.]] "
EmployeeAddressDetails]] /
=]]0 1
await]]2 7%
GetEmployeeAddressDetails]]8 Q
(]]Q R
employeeSlno]]R ^
)]]^ _
;]]_ `
employee^^ 
.^^  
EmployeeAssetDetails^^ -
=^^. /
await^^0 5#
GetEmployeeAssetDetails^^6 M
(^^M N
employeeSlno^^N Z
)^^Z [
;^^[ \
}__ 
return`` 
employee`` 
;`` 
}aa 	
privatecc 
asynccc 
Taskcc 
<cc 
Listcc 
<cc  
ReportingStructurecc  2
>cc2 3
>cc3 4)
GetEmployeeReportingStructurecc5 R
(ccR S
intccS V
employeeSlnoccW c
)ccc d
{dd 	
Listee 
<ee 
ReportingStructureee #
>ee# $
reportingStructureee% 7
=ee8 9
nullee: >
;ee> ?
usingff 
(ff 
IDbConnectionff  

connectionff! +
=ff, -
awaitff. 3
CreateConnectionff4 D
(ffD E
DbSchemaffE M
.ffM N
PORTALffN T
)ffT U
)ffU V
{gg #
OracleDynamicParametershh '

parametershh( 2
=hh3 4
newhh5 8#
OracleDynamicParametershh9 P
(hhP Q
)hhQ R
;hhR S
stringii 

templateidii !
=ii" #
ApplicationSettingsii$ 7
.ii7 8
Currentii8 ?
.ii? @
HrmsOtpTemplateii@ O
;iiO P

parametersjj 
.jj 
Addjj 
(jj 
namejj #
:jj# $
$strjj% 4
,jj4 5
employeeSlnojj6 B
,jjB C
dbTypejjD J
:jjJ K
OracleMappingTypejjL ]
.jj] ^
Int32jj^ c
,jjc d
	directionjje n
:jjn o
ParameterDirection	jjp Ç
.
jjÇ É
Input
jjÉ à
)
jjà â
;
jjâ ä

parameterskk 
.kk 
Addkk 
(kk 
namekk #
:kk# $
$strkk% .
,kk. /
dbTypekk0 6
:kk6 7
OracleMappingTypekk8 I
.kkI J
	RefCursorkkJ S
,kkS T
	directionkkU ^
:kk^ _
ParameterDirectionkk` r
.kkr s
Outputkks y
)kky z
;kkz {
varll  
dbScreenInformationsll (
=ll) *
awaitll+ 0

connectionll1 ;
.ll; <

QueryAsyncll< F
<llF G
ReportingStructurellG Y
>llY Z
(llZ [
DatabaseProceduresll[ m
.llm n*
SP_GET_EMP_REPORTING_MANAGERS	lln ã
,
llã å

parameters
llç ó
,
lló ò
commandType
llô §
:
ll§ •
CommandType
ll¶ ±
.
ll± ≤
StoredProcedure
ll≤ ¡
)
ll¡ ¬
;
ll¬ √
reportingStructuremm "
=mm# $ 
dbScreenInformationsmm% 9
.mm9 :
ToListmm: @
(mm@ A
)mmA B
;mmB C
}nn 
returnoo 
reportingStructureoo %
;oo% &
}pp 	
publicqq 
asyncqq 
Taskqq 
<qq 
Listqq 
<qq 
HolidayInformationqq 1
>qq1 2
>qq2 3
GetEmployeeHolidaysqq4 G
(qqG H
longqqH L

employeeIdqqM W
)qqW X
{rr 	
Listss 
<ss 
HolidayInformationss #
>ss# $
holidaysss% -
=ss. /
nullss0 4
;ss4 5
usingtt 
(tt 
HolidayRepositorytt $

repositorytt% /
=tt0 1
newtt2 5
HolidayRepositorytt6 G
(ttG H
thisttH L
.ttL M
configurationttM Z
,ttZ [
thistt\ `
.tt` a

redisCachetta k
)ttk l
)ttl m
{uu 
holidaysvv 
=vv 
awaitvv  

repositoryvv! +
.vv+ ,
GetEmployeeHolidaysvv, ?
(vv? @

employeeIdvv@ J
)vvJ K
;vvK L
foreachww 
(ww 
varww 
itemww !
inww" $
holidaysww% -
)ww- .
{xx 
itemyy 
.yy 
	MonthNameyy "
=yy# $
itemyy% )
.yy) *
HolidayDateyy* 5
.yy5 6
ToStringyy6 >
(yy> ?
$stryy? D
)yyD E
;yyE F
itemzz 
.zz 
Dayzz 
=zz 
itemzz #
.zz# $
HolidayDatezz$ /
.zz/ 0
ToStringzz0 8
(zz8 9
$strzz9 =
)zz= >
;zz> ?
}{{ 
holidays}} 
=}} 
holidays}} #
.}}# $
OrderBy}}$ +
(}}+ ,
i}}, -
=>}}. 0
i}}1 2
.}}2 3
HolidayDate}}3 >
)}}> ?
.}}? @
ToList}}@ F
(}}F G
)}}G H
;}}H I
}~~ 
return 
holidays 
; 
}
ÄÄ 	
public
ÇÇ 
async
ÇÇ 
Task
ÇÇ 
<
ÇÇ 
EmployeeProfile
ÇÇ )
>
ÇÇ) *'
GetEmployeeMinimumProfile
ÇÇ+ D
(
ÇÇD E
int
ÇÇE H
employeeSlno
ÇÇI U
)
ÇÇU V
{
ÉÉ 	
EmployeeProfile
ÑÑ 
employee
ÑÑ $
=
ÑÑ% &
null
ÑÑ' +
;
ÑÑ+ ,
StringBuilder
ÖÖ 

imagesPath
ÖÖ $
=
ÖÖ% &
new
ÖÖ' *
StringBuilder
ÖÖ+ 8
(
ÖÖ8 9
)
ÖÖ9 :
;
ÖÖ: ;
bool
áá 
flag
áá 
=
áá 
await
áá )
GetEmployeeEligibleForLeave
áá 9
(
áá9 :
employeeSlno
áá: F
)
ááF G
;
ááG H
string
ää 
[
ää 
]
ää 
	imagePath
ää 
=
ää  
null
ää! %
;
ää% &
using
ãã 
(
ãã 
var
ãã 

connection
ãã !
=
ãã" #
await
ãã$ )
base
ãã* .
.
ãã. /
CreateConnection
ãã/ ?
(
ãã? @
DbSchema
ãã@ H
.
ããH I
PORTAL
ããI O
)
ããO P
)
ããP Q
{
åå %
OracleDynamicParameters
çç '
	parmeters
çç( 1
=
çç2 3
new
çç4 7%
OracleDynamicParameters
çç8 O
(
ççO P
)
ççP Q
;
ççQ R
	parmeters
éé 
.
éé 
Add
éé 
(
éé 
name
éé "
:
éé" #
$str
éé$ 3
,
éé3 4
employeeSlno
éé5 A
,
ééA B
dbType
ééC I
:
ééI J
OracleMappingType
ééK \
.
éé\ ]
Int32
éé] b
,
ééb c
	direction
ééd m
:
éém n!
ParameterDirectionééo Å
.ééÅ Ç
InputééÇ á
)ééá à
;ééà â
	parmeters
èè 
.
èè 
Add
èè 
(
èè 
name
èè "
:
èè" #
$str
èè$ -
,
èè- .
Employee_Details
èè/ ?
.
èè? @
EMPLOYEE
èè@ H
.
èèH I
ToInt32OrDefault
èèI Y
(
èèY Z
)
èèZ [
,
èè[ \
dbType
èè] c
:
èèc d
OracleMappingType
èèe v
.
èèv w
Varchar2
èèw 
,èè Ä
	directionèèÅ ä
:èèä ã"
ParameterDirectionèèå û
.èèû ü
Inputèèü §
)èè§ •
;èè• ¶
	parmeters
êê 
.
êê 
Add
êê 
(
êê 
name
êê "
:
êê" #
$str
êê$ -
,
êê- .
dbType
êê/ 5
:
êê5 6
OracleMappingType
êê7 H
.
êêH I
	RefCursor
êêI R
,
êêR S
	direction
êêT ]
:
êê] ^ 
ParameterDirection
êê_ q
.
êêq r
Output
êêr x
)
êêx y
;
êêy z
employee
ëë 
=
ëë 
await
ëë  

connection
ëë! +
.
ëë+ ,
QueryFirstAsync
ëë, ;
<
ëë; <
EmployeeProfile
ëë< K
>
ëëK L
(
ëëL M 
DatabaseProcedures
ëëM _
.
ëë_ `"
GET_EMP_PROFILE_DATA
ëë` t
,
ëët u
	parmeters
ëëv 
,ëë Ä
commandTypeëëÅ å
:ëëå ç
CommandTypeëëé ô
.ëëô ö
StoredProcedureëëö ©
)ëë© ™
;ëë™ ´
}
íí 
if
ìì 
(
ìì 
employee
ìì 
!=
ìì 
null
ìì  
)
ìì  !
{
îî 

imagesPath
ïï 
.
ïï 
Clear
ïï  
(
ïï  !
)
ïï! "
;
ïï" #
	imagePath
ññ 
=
ññ 
employee
ññ $
.
ññ$ %
	PhotoPath
ññ% .
.
ññ. /
Split
ññ/ 4
(
ññ4 5
$char
ññ5 8
)
ññ8 9
;
ññ9 :

imagesPath
óó 
.
óó 
AppendFormat
óó '
(
óó' (
$str
óó( 8
,
óó8 9!
ApplicationSettings
óó: M
.
óóM N
Current
óóN U
.
óóU V
ProfilePath
óóV a
,
óóa b
	imagePath
óóc l
[
óól m
$num
óóm n
]
óón o
)
óóo p
;
óóp q
employee
òò 
.
òò 
	PhotoPath
òò "
=
òò# $

imagesPath
òò% /
.
òò/ 0
ToString
òò0 8
(
òò8 9
)
òò9 :
;
òò: ;

imagesPath
õõ 
.
õõ 
Clear
õõ  
(
õõ  !
)
õõ! "
;
õõ" #
	imagePath
úú 
=
úú 
employee
úú $
.
úú$ %
BankInfoPath
úú% 1
.
úú1 2
Split
úú2 7
(
úú7 8
$char
úú8 ;
)
úú; <
;
úú< =

imagesPath
ùù 
.
ùù 
AppendFormat
ùù '
(
ùù' (
$str
ùù( 6
,
ùù6 7!
ApplicationSettings
ùù8 K
.
ùùK L
Current
ùùL S
.
ùùS T
ProfilePath
ùùT _
,
ùù_ `
	imagePath
ùùa j
[
ùùj k
$num
ùùk l
]
ùùl m
)
ùùm n
;
ùùn o
employee
ûû 
.
ûû 
BankInfoPath
ûû %
=
ûû& '

imagesPath
ûû( 2
.
ûû2 3
ToString
ûû3 ;
(
ûû; <
)
ûû< =
;
ûû= >

imagesPath
°° 
.
°° 
Clear
°°  
(
°°  !
)
°°! "
;
°°" #

imagesPath
°°$ .
.
°°. /
Clear
°°/ 4
(
°°4 5
)
°°5 6
;
°°6 7
	imagePath
¢¢ 
=
¢¢ 
employee
¢¢ $
.
¢¢$ %

AadharPath
¢¢% /
.
¢¢/ 0
Split
¢¢0 5
(
¢¢5 6
$char
¢¢6 9
)
¢¢9 :
;
¢¢: ;

imagesPath
££ 
.
££ 
AppendFormat
££ '
(
££' (
$str
££( 8
,
££8 9!
ApplicationSettings
££: M
.
££M N
Current
££N U
.
££U V
ProfilePath
££V a
,
££a b
	imagePath
££c l
[
££l m
$num
££m n
]
££n o
)
££o p
;
££p q
employee
§§ 
.
§§ 

AadharPath
§§ #
=
§§$ %

imagesPath
§§& 0
.
§§0 1
ToString
§§1 9
(
§§9 :
)
§§: ;
;
§§; <
employee
ßß 
.
ßß 
FinSLNo
ßß  
=
ßß! "!
ApplicationSettings
ßß# 6
.
ßß6 7
Current
ßß7 >
.
ßß> ?
FinancialYearId
ßß? N
;
ßßN O

Dictionary
®® 
<
®® 
string
®® !
,
®®! "
DateTime
®®# +
>
®®+ ,
payrollDates
®®- 9
=
®®: ;
await
®®< A
GetPayrollDates
®®B Q
(
®®Q R
DateTime
®®R Z
.
®®Z [
Now
®®[ ^
)
®®^ _
;
®®_ `
employee
©© 
.
©© 
PayrollMonthFrom
©© )
=
©©* +
payrollDates
©©, 8
[
©©8 9
$str
©©9 D
]
©©D E
;
©©E F
employee
™™ 
.
™™ 
PayrollMonthTo
™™ '
=
™™( )
payrollDates
™™* 6
[
™™6 7
$str
™™7 @
]
™™@ A
;
™™A B
employee
´´ 
.
´´  
ReportingStructure
´´ +
=
´´, -
await
´´. 3+
GetEmployeeReportingStructure
´´4 Q
(
´´Q R
employeeSlno
´´R ^
)
´´^ _
;
´´_ `
if
¨¨ 
(
¨¨ 
employee
¨¨ 
.
¨¨  
ReportingStructure
¨¨ /
!=
¨¨0 2
null
¨¨3 7
&&
¨¨8 :
employee
¨¨; C
.
¨¨C D 
ReportingStructure
¨¨D V
.
¨¨V W
Count
¨¨W \
>
¨¨] ^
$num
¨¨_ `
)
¨¨` a
{
≠≠ 
employee
ÆÆ 
.
ÆÆ 

LevelCount
ÆÆ '
=
ÆÆ( )
employee
ÆÆ* 2
.
ÆÆ2 3 
ReportingStructure
ÆÆ3 E
[
ÆÆE F
$num
ÆÆF G
]
ÆÆG H
.
ÆÆH I

LevelCount
ÆÆI S
;
ÆÆS T
employee
ØØ 
.
ØØ  
ReportingManagerId
ØØ /
=
ØØ0 1
employee
ØØ2 :
.
ØØ: ; 
ReportingStructure
ØØ; M
[
ØØM N
$num
ØØN O
]
ØØO P
.
ØØP Q#
ReportingEmployeeSlno
ØØQ f
;
ØØf g
employee
∞∞ 
.
∞∞ "
ReportingManagerName
∞∞ 1
=
∞∞2 3
employee
∞∞4 <
.
∞∞< = 
ReportingStructure
∞∞= O
[
∞∞O P
$num
∞∞P Q
]
∞∞Q R
.
∞∞R S#
ReportingEmployeeName
∞∞S h
;
∞∞h i
int
≤≤ '
inValidReportingEmployees
≤≤ 1
=
≤≤2 3
employee
≤≤4 <
.
≤≤< = 
ReportingStructure
≤≤= O
.
≤≤O P
Where
≤≤P U
(
≤≤U V
x
≤≤V W
=>
≤≤X Z
x
≤≤[ \
.
≤≤\ ]#
ReportingEmployeeSlno
≤≤] r
==
≤≤s u
$num
≤≤v w
)
≤≤w x
.
≤≤x y
ToList
≤≤y 
(≤≤ Ä
)≤≤Ä Å
.≤≤Å Ç
Count≤≤Ç á
;≤≤á à
employee
¥¥ 
.
¥¥ 
CanApplyLeave
¥¥ *
=
¥¥+ ,'
inValidReportingEmployees
¥¥- F
==
¥¥G I
$num
¥¥J K
;
¥¥K L
}
∆∆ 
employee
ÕÕ 
.
ÕÕ 
	HrDetails
ÕÕ "
=
ÕÕ# $
await
ÕÕ% *"
GetEmployeeHRDetails
ÕÕ+ ?
(
ÕÕ? @
employeeSlno
ÕÕ@ L
)
ÕÕL M
;
ÕÕM N
employee
ŒŒ 
.
ŒŒ 
IsApplicable
ŒŒ %
=
ŒŒ& '
flag
ŒŒ( ,
;
ŒŒ, -
}
œœ 
return
–– 
employee
–– 
;
–– 
}
—— 	
private
““ 
async
““ 
Task
““ 
<
““ 

Dictionary
““ %
<
““% &
string
““& ,
,
““, -
DateTime
““. 6
>
““6 7
>
““7 8
GetPayrollDates
““9 H
(
““H I
DateTime
““I Q
fromDate
““R Z
)
““Z [
{
”” 	
PayrollPeriod
‘‘ 
payrollPeriod
‘‘ '
=
‘‘( )
null
‘‘* .
;
‘‘. /

Dictionary
’’ 
<
’’ 
string
’’ 
,
’’ 
DateTime
’’ '
>
’’' (
payrollDates
’’) 5
=
’’6 7
new
’’8 ;

Dictionary
’’< F
<
’’F G
string
’’G M
,
’’M N
DateTime
’’O W
>
’’W X
(
’’X Y
)
’’Y Z
;
’’Z [
using
◊◊ 
(
◊◊ 
var
◊◊ 

connection
◊◊ !
=
◊◊" #
new
◊◊$ '%
PayrollPeriodRepository
◊◊( ?
(
◊◊? @
this
◊◊@ D
.
◊◊D E
configuration
◊◊E R
)
◊◊R S
)
◊◊S T
{
ÿÿ 
payrollDates
ŸŸ 
=
ŸŸ 
await
ŸŸ $

connection
ŸŸ% /
.
ŸŸ/ 0
GetPayrollDates
ŸŸ0 ?
(
ŸŸ? @
fromDate
ŸŸ@ H
)
ŸŸH I
;
ŸŸI J
if
⁄⁄ 
(
⁄⁄ 
payrollPeriod
⁄⁄ !
!=
⁄⁄" $
null
⁄⁄% )
)
⁄⁄) *
{
€€ 
payrollDates
‹‹  
.
‹‹  !
Add
‹‹! $
(
‹‹$ %
$str
‹‹% 0
,
‹‹0 1
payrollPeriod
‹‹2 ?
.
‹‹? @
FromDate
‹‹@ H
)
‹‹H I
;
‹‹I J
payrollDates
››  
.
››  !
Add
››! $
(
››$ %
$str
››% .
,
››. /
payrollPeriod
››0 =
.
››= >
ToDate
››> D
)
››D E
;
››E F
}
ﬁﬁ 
}
‡‡ 
return
·· 
payrollDates
·· 
;
··  
}
„„ 	
public
‰‰ 
async
‰‰ 
Task
‰‰ 
<
‰‰ 
EmployeeProfile
‰‰ )
>
‰‰) * 
GetEmployeeProfile
‰‰+ =
(
‰‰= >
string
‰‰> D

employeeId
‰‰E O
)
‰‰O P
{
ÂÂ 	
EmployeeProfile
ÊÊ 
employee
ÊÊ $
=
ÊÊ% &
null
ÊÊ' +
;
ÊÊ+ ,
StringBuilder
ÁÁ 

imagesPath
ÁÁ $
=
ÁÁ% &
new
ÁÁ' *
StringBuilder
ÁÁ+ 8
(
ÁÁ8 9
)
ÁÁ9 :
;
ÁÁ: ;
string
ËË 
[
ËË 
]
ËË 
	imagePath
ËË 
=
ËË  
null
ËË! %
;
ËË% &
using
ÈÈ 
(
ÈÈ 
var
ÈÈ 

connection
ÈÈ !
=
ÈÈ" #
await
ÈÈ$ )
base
ÈÈ* .
.
ÈÈ. /
CreateConnection
ÈÈ/ ?
(
ÈÈ? @
DbSchema
ÈÈ@ H
.
ÈÈH I
PORTAL
ÈÈI O
)
ÈÈO P
)
ÈÈP Q
{
ÍÍ %
OracleDynamicParameters
ÎÎ '
	parmeters
ÎÎ( 1
=
ÎÎ2 3
new
ÎÎ4 7%
OracleDynamicParameters
ÎÎ8 O
(
ÎÎO P
)
ÎÎP Q
;
ÎÎQ R
	parmeters
ÏÏ 
.
ÏÏ 
Add
ÏÏ 
(
ÏÏ 
name
ÏÏ "
:
ÏÏ" #
$str
ÏÏ$ 1
,
ÏÏ1 2

employeeId
ÏÏ3 =
,
ÏÏ= >
dbType
ÏÏ? E
:
ÏÏE F
OracleMappingType
ÏÏG X
.
ÏÏX Y
Varchar2
ÏÏY a
,
ÏÏa b
	direction
ÏÏc l
:
ÏÏl m!
ParameterDirectionÏÏn Ä
.ÏÏÄ Å
InputÏÏÅ Ü
)ÏÏÜ á
;ÏÏá à
	parmeters
ÌÌ 
.
ÌÌ 
Add
ÌÌ 
(
ÌÌ 
name
ÌÌ "
:
ÌÌ" #
$str
ÌÌ$ -
,
ÌÌ- .
dbType
ÌÌ/ 5
:
ÌÌ5 6
OracleMappingType
ÌÌ7 H
.
ÌÌH I
	RefCursor
ÌÌI R
,
ÌÌR S
	direction
ÌÌT ]
:
ÌÌ] ^ 
ParameterDirection
ÌÌ_ q
.
ÌÌq r
Output
ÌÌr x
)
ÌÌx y
;
ÌÌy z
employee
ÓÓ 
=
ÓÓ 
await
ÓÓ  

connection
ÓÓ! +
.
ÓÓ+ ,
QueryFirstAsync
ÓÓ, ;
<
ÓÓ; <
EmployeeProfile
ÓÓ< K
>
ÓÓK L
(
ÓÓL M 
DatabaseProcedures
ÓÓM _
.
ÓÓ_ `%
SP_GET_EMPLOYEE_PROFILE
ÓÓ` w
,
ÓÓw x
	parmetersÓÓy Ç
,ÓÓÇ É
commandTypeÓÓÑ è
:ÓÓè ê
CommandTypeÓÓë ú
.ÓÓú ù
StoredProcedureÓÓù ¨
)ÓÓ¨ ≠
;ÓÓ≠ Æ
}
ÔÔ 
if
 
(
 
employee
 
!=
 
null
  
)
  !
{
ÒÒ 
employee
ÇÇ 
.
ÇÇ 
FinSLNo
ÇÇ  
=
ÇÇ! "!
ApplicationSettings
ÇÇ# 6
.
ÇÇ6 7
Current
ÇÇ7 >
.
ÇÇ> ?
FinancialYearId
ÇÇ? N
;
ÇÇN O
}
ÉÉ 
return
ÑÑ 
employee
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
private
áá 
async
áá 
Task
áá 
<
áá 
EmployeeProfile
áá *
>
áá* +"
GetEmployeeHRDetails
áá, @
(
áá@ A
int
ááA D
employeeSlno
ááE Q
)
ááQ R
{
àà 	
EmployeeProfile
ââ 
hrInfo
ââ "
=
ââ# $
null
ââ% )
;
ââ) *
using
ää 
(
ää 
IDbConnection
ää  

connection
ää! +
=
ää, -
await
ää. 3
CreateConnection
ää4 D
(
ääD E
DbSchema
ääE M
.
ääM N
PORTAL
ääN T
)
ääT U
)
ääU V
{
ãã %
OracleDynamicParameters
åå '

parameters
åå( 2
=
åå3 4
new
åå5 8%
OracleDynamicParameters
åå9 P
(
ååP Q
)
ååQ R
;
ååR S
string
çç 

templateid
çç !
=
çç" #!
ApplicationSettings
çç$ 7
.
çç7 8
Current
çç8 ?
.
çç? @
HrmsOtpTemplate
çç@ O
;
ççO P

parameters
éé 
.
éé 
Add
éé 
(
éé 
name
éé #
:
éé# $
$str
éé% 4
,
éé4 5
employeeSlno
éé6 B
,
ééB C
dbType
ééD J
:
ééJ K
OracleMappingType
ééL ]
.
éé] ^
Int32
éé^ c
,
ééc d
	direction
éée n
:
één o!
ParameterDirectionéép Ç
.ééÇ É
InputééÉ à
)ééà â
;ééâ ä

parameters
èè 
.
èè 
Add
èè 
(
èè 
name
èè #
:
èè# $
$str
èè% .
,
èè. /
dbType
èè0 6
:
èè6 7
OracleMappingType
èè8 I
.
èèI J
	RefCursor
èèJ S
,
èèS T
	direction
èèU ^
:
èè^ _ 
ParameterDirection
èè` r
.
èèr s
Output
èès y
)
èèy z
;
èèz {
hrInfo
êê 
=
êê 
await
êê 

connection
êê )
.
êê) *&
QueryFirstOrDefaultAsync
êê* B
<
êêB C
EmployeeProfile
êêC R
>
êêR S
(
êêS T 
DatabaseProcedures
êêT f
.
êêf g)
SP_GET_EMPLOYEE_HR_DETAILSêêg Å
,êêÅ Ç

parametersêêÉ ç
,êêç é
commandTypeêêè ö
:êêö õ
CommandTypeêêú ß
.êêß ®
StoredProcedureêê® ∑
)êê∑ ∏
;êê∏ π
}
ëë 
return
íí 
hrInfo
íí 
;
íí 
}
ìì 	
public
ññ 
async
ññ 
Task
ññ 
<
ññ 
bool
ññ 
>
ññ )
GetEmployeeEligibleForLeave
ññ  ;
(
ññ; <
int
ññ< ?
employeeSlno
ññ@ L
)
ññL M
{
óó 	
bool
òò 

isEligible
òò 
=
òò 
false
òò #
;
òò# $
List
ôô 
<
ôô 
WorkFlowFlag
ôô 
>
ôô 

employeeWF
ôô )
=
ôô* +
null
ôô, 0
;
ôô0 1
using
öö 
(
öö 
var
öö 

connection
öö !
=
öö" #
await
öö$ )
base
öö* .
.
öö. /
CreateConnection
öö/ ?
(
öö? @
DbSchema
öö@ H
.
ööH I
PORTAL
ööI O
)
ööO P
)
ööP Q
{
õõ %
OracleDynamicParameters
ùù '
	parmeters
ùù( 1
=
ùù2 3
new
ùù4 7%
OracleDynamicParameters
ùù8 O
(
ùùO P
)
ùùP Q
;
ùùQ R
	parmeters
ûû 
.
ûû 
Add
ûû 
(
ûû 
name
ûû "
:
ûû" #
$str
ûû$ 3
,
ûû3 4
employeeSlno
ûû5 A
,
ûûA B
dbType
ûûC I
:
ûûI J
OracleMappingType
ûûK \
.
ûû\ ]
Int32
ûû] b
,
ûûb c
	direction
ûûd m
:
ûûm n!
ParameterDirectionûûo Å
.ûûÅ Ç
InputûûÇ á
)ûûá à
;ûûà â
	parmeters
üü 
.
üü 
Add
üü 
(
üü 
name
üü "
:
üü" #
$str
üü$ -
,
üü- .
dbType
üü/ 5
:
üü5 6
OracleMappingType
üü7 H
.
üüH I
	RefCursor
üüI R
,
üüR S
	direction
üüT ]
:
üü] ^ 
ParameterDirection
üü_ q
.
üüq r
Output
üür x
)
üüx y
;
üüy z

employeeWF
†† 
=
†† 
(
†† 
await
†† #

connection
††$ .
.
††. /

QueryAsync
††/ 9
<
††9 :
WorkFlowFlag
††: F
>
††F G
(
††G H 
DatabaseProcedures
††H Z
.
††Z [!
GET_EMPLOYEE_LEVELS
††[ n
,
††n o
	parmeters
††p y
,
††y z
commandType††{ Ü
:††Ü á
CommandType††à ì
.††ì î
StoredProcedure††î £
)††£ §
)††§ •
.††• ¶
ToList††¶ ¨
(††¨ ≠
)††≠ Æ
;††Æ Ø
if
°° 
(
°° 

employeeWF
°° 
.
°° 
Count
°° $
>
°°% &
$num
°°' (
)
°°( )
{
¢¢ 
if
££ 
(
££ 

employeeWF
££ "
.
££" #
Count
££# (
==
££) +

employeeWF
££, 6
[
££6 7
$num
££7 8
]
££8 9
.
££9 :
EmpstepsCount
££: G
)
££G H
{
§§ 

isEligible
•• "
=
••# $
true
••% )
;
••) *
}
¶¶ 
else
ßß 
{
®® 

isEligible
©© "
=
©©# $
false
©©% *
;
©©* +
}
™™ 
}
´´ 
else
¨¨ 
{
≠≠ 

isEligible
ÆÆ 
=
ÆÆ  
false
ÆÆ! &
;
ÆÆ& '
}
ØØ 
}
∞∞ 
return
±± 

isEligible
±± 
;
±± 
}
≤≤ 	
private
∂∂ 
string
∂∂ 
GetBinaryData
∂∂ $
(
∂∂$ %
string
∂∂% +
url
∂∂, /
)
∂∂/ 0
{
∑∑ 	
string
ππ !
encodedFileAsBase64
ππ &
=
ππ' (
string
ππ) /
.
ππ/ 0
Empty
ππ0 5
;
ππ5 6
string
∫∫ 

encodedUrl
∫∫ 
=
∫∫ 
Convert
∫∫  '
.
∫∫' (
ToBase64String
∫∫( 6
(
∫∫6 7
Encoding
∫∫7 ?
.
∫∫? @
Default
∫∫@ G
.
∫∫G H
GetBytes
∫∫H P
(
∫∫P Q
url
∫∫Q T
)
∫∫T U
)
∫∫U V
;
∫∫V W
try
ªª 
{
ºº 
using
ΩΩ 
(
ΩΩ 
var
ΩΩ 
client
ΩΩ !
=
ΩΩ" #
new
ΩΩ$ '
	WebClient
ΩΩ( 1
(
ΩΩ1 2
)
ΩΩ2 3
)
ΩΩ3 4
{
ææ 
byte
øø 
[
øø 
]
øø 
	dataBytes
øø $
=
øø% &
client
øø' -
.
øø- .
DownloadData
øø. :
(
øø: ;
new
øø; >
Uri
øø? B
(
øøB C
url
øøC F
)
øøF G
)
øøG H
;
øøH I!
encodedFileAsBase64
¿¿ '
=
¿¿( )
Convert
¿¿* 1
.
¿¿1 2
ToBase64String
¿¿2 @
(
¿¿@ A
	dataBytes
¿¿A J
)
¿¿J K
;
¿¿K L
}
¡¡ 
}
¬¬ 
catch
√√ 
(
√√ 
	Exception
√√ 
ex
√√ 
)
√√  
{
ƒƒ !
encodedFileAsBase64
≈≈ #
=
≈≈$ %
GetNoPhotoData
≈≈& 4
(
≈≈4 5!
ApplicationSettings
≈≈5 H
.
≈≈H I
Current
≈≈I P
.
≈≈P Q
NoPhoto
≈≈Q X
)
≈≈X Y
;
≈≈Y Z
}
∆∆ 
return
«« !
encodedFileAsBase64
«« &
;
««& '
}
»» 	
private
   
string
   
GetNoPhotoData
   %
(
  % &
string
  & ,
url
  - 0
)
  0 1
{
ÀÀ 	
string
ÕÕ !
encodedFileAsBase64
ÕÕ &
=
ÕÕ' (
string
ÕÕ) /
.
ÕÕ/ 0
Empty
ÕÕ0 5
;
ÕÕ5 6
string
ŒŒ 

encodedUrl
ŒŒ 
=
ŒŒ 
Convert
ŒŒ  '
.
ŒŒ' (
ToBase64String
ŒŒ( 6
(
ŒŒ6 7
Encoding
ŒŒ7 ?
.
ŒŒ? @
Default
ŒŒ@ G
.
ŒŒG H
GetBytes
ŒŒH P
(
ŒŒP Q
url
ŒŒQ T
)
ŒŒT U
)
ŒŒU V
;
ŒŒV W
try
œœ 
{
–– 
using
—— 
(
—— 
var
—— 
client
—— !
=
——" #
new
——$ '
	WebClient
——( 1
(
——1 2
)
——2 3
)
——3 4
{
““ 
byte
”” 
[
”” 
]
”” 
	dataBytes
”” $
=
””% &
client
””' -
.
””- .
DownloadData
””. :
(
””: ;
new
””; >
Uri
””? B
(
””B C
url
””C F
)
””F G
)
””G H
;
””H I!
encodedFileAsBase64
‘‘ '
=
‘‘( )
Convert
‘‘* 1
.
‘‘1 2
ToBase64String
‘‘2 @
(
‘‘@ A
	dataBytes
‘‘A J
)
‘‘J K
;
‘‘K L
}
’’ 
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
ex
◊◊ 
)
◊◊  
{
ÿÿ !
encodedFileAsBase64
ŸŸ #
=
ŸŸ$ %
String
ŸŸ& ,
.
ŸŸ, -
Empty
ŸŸ- 2
;
ŸŸ2 3
}
⁄⁄ 
return
€€ !
encodedFileAsBase64
€€ &
;
€€& '
}
‹‹ 	
private
ﬁﬁ 
string
ﬁﬁ 
GetBinaryData
ﬁﬁ $
(
ﬁﬁ$ %
string
ﬁﬁ% +
url
ﬁﬁ, /
,
ﬁﬁ/ 0
string
ﬁﬁ1 7
fileType
ﬁﬁ8 @
)
ﬁﬁ@ A
{
ﬂﬂ 	
string
‡‡ !
encodedFileAsBase64
‡‡ &
=
‡‡' (
string
‡‡) /
.
‡‡/ 0
Empty
‡‡0 5
;
‡‡5 6

RestClient
·· 
client
·· 
=
·· 
new
··  #

RestClient
··$ .
(
··. /
)
··/ 0
;
··0 1
RestRequest
‚‚ 
request
‚‚ 
=
‚‚  !
new
‚‚" %
RestRequest
‚‚& 1
(
‚‚1 2
url
‚‚2 5
,
‚‚5 6
Method
‚‚7 =
.
‚‚= >
Get
‚‚> A
)
‚‚A B
;
‚‚B C
request
„„ 
.
„„ 
	AddHeader
„„ 
(
„„ 
$str
„„ -
,
„„- .
$str
„„/ 9
)
„„9 :
;
„„: ;
request
‰‰ 
.
‰‰ 
	AddHeader
‰‰ 
(
‰‰ 
$str
‰‰ -
,
‰‰- .
$str
‰‰/ E
)
‰‰E F
;
‰‰F G
RestResponse
ÂÂ 
handle
ÂÂ 
=
ÂÂ  !
client
ÂÂ" (
.
ÂÂ( )
ExecuteAsync
ÂÂ) 5
<
ÂÂ5 6
RestResponse
ÂÂ6 B
>
ÂÂB C
(
ÂÂC D
request
ÂÂD K
)
ÂÂK L
.
ÂÂL M
Result
ÂÂM S
;
ÂÂS T!
encodedFileAsBase64
ÊÊ 
=
ÊÊ  !
string
ÊÊ" (
.
ÊÊ( )
Format
ÊÊ) /
(
ÊÊ/ 0
$str
ÊÊ0 L
,
ÊÊL M
fileType
ÊÊN V
,
ÊÊV W
Convert
ÊÊX _
.
ÊÊ_ `
ToBase64String
ÊÊ` n
(
ÊÊn o
handle
ÊÊo u
.
ÊÊu v
RawBytes
ÊÊv ~
)
ÊÊ~ 
)ÊÊ Ä
;ÊÊÄ Å
return
ËË !
encodedFileAsBase64
ËË &
;
ËË& '
}
ÈÈ 	
private
ÎÎ 
async
ÎÎ 
Task
ÎÎ 
<
ÎÎ 
List
ÎÎ 
<
ÎÎ  
EducationDetail
ÎÎ  /
>
ÎÎ/ 0
>
ÎÎ0 1)
GetEmployeeEducationDetails
ÎÎ2 M
(
ÎÎM N
int
ÎÎN Q
employeeSlno
ÎÎR ^
)
ÎÎ^ _
{
ÏÏ 	
List
ÌÌ 
<
ÌÌ 
EducationDetail
ÌÌ  
>
ÌÌ  !
educationDetails
ÌÌ" 2
=
ÌÌ3 4
null
ÌÌ5 9
;
ÌÌ9 :
using
ÓÓ 
(
ÓÓ 
var
ÓÓ 

connection
ÓÓ !
=
ÓÓ" #
await
ÓÓ$ )
base
ÓÓ* .
.
ÓÓ. /
CreateConnection
ÓÓ/ ?
(
ÓÓ? @
DbSchema
ÓÓ@ H
.
ÓÓH I
PORTAL
ÓÓI O
)
ÓÓO P
)
ÓÓP Q
{
ÔÔ %
OracleDynamicParameters
 '
	parmeters
( 1
=
2 3
new
4 7%
OracleDynamicParameters
8 O
(
O P
)
P Q
;
Q R
	parmeters
ÒÒ 
.
ÒÒ 
Add
ÒÒ 
(
ÒÒ 
name
ÒÒ "
:
ÒÒ" #
$str
ÒÒ$ 3
,
ÒÒ3 4
employeeSlno
ÒÒ5 A
,
ÒÒA B
dbType
ÒÒC I
:
ÒÒI J
OracleMappingType
ÒÒK \
.
ÒÒ\ ]
Int32
ÒÒ] b
,
ÒÒb c
	direction
ÒÒd m
:
ÒÒm n!
ParameterDirectionÒÒo Å
.ÒÒÅ Ç
InputÒÒÇ á
)ÒÒá à
;ÒÒà â
	parmeters
ÚÚ 
.
ÚÚ 
Add
ÚÚ 
(
ÚÚ 
name
ÚÚ "
:
ÚÚ" #
$str
ÚÚ$ -
,
ÚÚ- .
Employee_Details
ÚÚ/ ?
.
ÚÚ? @
EDUCATIONDTLS
ÚÚ@ M
.
ÚÚM N
ToInt32OrDefault
ÚÚN ^
(
ÚÚ^ _
)
ÚÚ_ `
,
ÚÚ` a
dbType
ÚÚb h
:
ÚÚh i
OracleMappingType
ÚÚj {
.
ÚÚ{ |
Varchar2ÚÚ| Ñ
,ÚÚÑ Ö
	directionÚÚÜ è
:ÚÚè ê"
ParameterDirectionÚÚë £
.ÚÚ£ §
InputÚÚ§ ©
)ÚÚ© ™
;ÚÚ™ ´
	parmeters
ÛÛ 
.
ÛÛ 
Add
ÛÛ 
(
ÛÛ 
name
ÛÛ "
:
ÛÛ" #
$str
ÛÛ$ -
,
ÛÛ- .
dbType
ÛÛ/ 5
:
ÛÛ5 6
OracleMappingType
ÛÛ7 H
.
ÛÛH I
	RefCursor
ÛÛI R
,
ÛÛR S
	direction
ÛÛT ]
:
ÛÛ] ^ 
ParameterDirection
ÛÛ_ q
.
ÛÛq r
Output
ÛÛr x
)
ÛÛx y
;
ÛÛy z
educationDetails
ÙÙ  
=
ÙÙ! "
(
ÙÙ# $
await
ÙÙ$ )

connection
ÙÙ* 4
.
ÙÙ4 5

QueryAsync
ÙÙ5 ?
<
ÙÙ? @
EducationDetail
ÙÙ@ O
>
ÙÙO P
(
ÙÙP Q 
DatabaseProcedures
ÙÙQ c
.
ÙÙc d"
GET_EMP_PROFILE_DATA
ÙÙd x
,
ÙÙx y
	parmetersÙÙz É
,ÙÙÉ Ñ
commandTypeÙÙÖ ê
:ÙÙê ë
CommandTypeÙÙí ù
.ÙÙù û
StoredProcedureÙÙû ≠
)ÙÙ≠ Æ
)ÙÙÆ Ø
.ÙÙØ ∞
ToListÙÙ∞ ∂
(ÙÙ∂ ∑
)ÙÙ∑ ∏
;ÙÙ∏ π
}
ıı 
return
ˆˆ 
educationDetails
ˆˆ #
;
ˆˆ# $
}
˜˜ 	
public
¯¯ 
async
¯¯ 
Task
¯¯ 
<
¯¯ 
List
¯¯ 
<
¯¯ 
FamilyDetail
¯¯ +
>
¯¯+ ,
>
¯¯, -&
GetEmployeeFamilyDetails
¯¯. F
(
¯¯F G
int
¯¯G J
employeeSlno
¯¯K W
)
¯¯W X
{
˘˘ 	
List
˙˙ 
<
˙˙ 
FamilyDetail
˙˙ 
>
˙˙ 
familyDetails
˙˙ ,
=
˙˙- .
null
˙˙/ 3
;
˙˙3 4
using
˚˚ 
(
˚˚ 
var
˚˚ 

connection
˚˚ !
=
˚˚" #
await
˚˚$ )
base
˚˚* .
.
˚˚. /
CreateConnection
˚˚/ ?
(
˚˚? @
DbSchema
˚˚@ H
.
˚˚H I
PORTAL
˚˚I O
)
˚˚O P
)
˚˚P Q
{
¸¸ %
OracleDynamicParameters
˝˝ '
	parmeters
˝˝( 1
=
˝˝2 3
new
˝˝4 7%
OracleDynamicParameters
˝˝8 O
(
˝˝O P
)
˝˝P Q
;
˝˝Q R
	parmeters
˛˛ 
.
˛˛ 
Add
˛˛ 
(
˛˛ 
name
˛˛ "
:
˛˛" #
$str
˛˛$ 3
,
˛˛3 4
employeeSlno
˛˛5 A
,
˛˛A B
dbType
˛˛C I
:
˛˛I J
OracleMappingType
˛˛K \
.
˛˛\ ]
Int32
˛˛] b
,
˛˛b c
	direction
˛˛d m
:
˛˛m n!
ParameterDirection˛˛o Å
.˛˛Å Ç
Input˛˛Ç á
)˛˛á à
;˛˛à â
	parmeters
ˇˇ 
.
ˇˇ 
Add
ˇˇ 
(
ˇˇ 
name
ˇˇ "
:
ˇˇ" #
$str
ˇˇ$ -
,
ˇˇ- .
Employee_Details
ˇˇ/ ?
.
ˇˇ? @

FAMILYDTLS
ˇˇ@ J
.
ˇˇJ K
ToInt32OrDefault
ˇˇK [
(
ˇˇ[ \
)
ˇˇ\ ]
,
ˇˇ] ^
dbType
ˇˇ_ e
:
ˇˇe f
OracleMappingType
ˇˇg x
.
ˇˇx y
Varchar2ˇˇy Å
,ˇˇÅ Ç
	directionˇˇÉ å
:ˇˇå ç"
ParameterDirectionˇˇé †
.ˇˇ† °
Inputˇˇ° ¶
)ˇˇ¶ ß
;ˇˇß ®
	parmeters
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ 
name
ÄÄ "
:
ÄÄ" #
$str
ÄÄ$ -
,
ÄÄ- .
dbType
ÄÄ/ 5
:
ÄÄ5 6
OracleMappingType
ÄÄ7 H
.
ÄÄH I
	RefCursor
ÄÄI R
,
ÄÄR S
	direction
ÄÄT ]
:
ÄÄ] ^ 
ParameterDirection
ÄÄ_ q
.
ÄÄq r
Output
ÄÄr x
)
ÄÄx y
;
ÄÄy z
familyDetails
ÅÅ 
=
ÅÅ 
(
ÅÅ  !
await
ÅÅ! &

connection
ÅÅ' 1
.
ÅÅ1 2

QueryAsync
ÅÅ2 <
<
ÅÅ< =
FamilyDetail
ÅÅ= I
>
ÅÅI J
(
ÅÅJ K 
DatabaseProcedures
ÅÅK ]
.
ÅÅ] ^"
GET_EMP_PROFILE_DATA
ÅÅ^ r
,
ÅÅr s
	parmeters
ÅÅt }
,
ÅÅ} ~
commandTypeÅÅ ä
:ÅÅä ã
CommandTypeÅÅå ó
.ÅÅó ò
StoredProcedureÅÅò ß
)ÅÅß ®
)ÅÅ® ©
.ÅÅ© ™
ToListÅÅ™ ∞
(ÅÅ∞ ±
)ÅÅ± ≤
;ÅÅ≤ ≥
}
ÇÇ 
return
ÉÉ 
familyDetails
ÉÉ  
;
ÉÉ  !
}
ÑÑ 	
public
ÖÖ 
async
ÖÖ 
Task
ÖÖ 
<
ÖÖ 
List
ÖÖ 
<
ÖÖ 
ExperienceDetail
ÖÖ /
>
ÖÖ/ 0
>
ÖÖ0 1*
GetEmployeeExperienceDetails
ÖÖ2 N
(
ÖÖN O
int
ÖÖO R
employeeSlno
ÖÖS _
)
ÖÖ_ `
{
ÜÜ 	
List
áá 
<
áá 
ExperienceDetail
áá !
>
áá! "
experienceDetails
áá# 4
=
áá5 6
null
áá7 ;
;
áá; <
using
àà 
(
àà 
var
àà 

connection
àà !
=
àà" #
await
àà$ )
base
àà* .
.
àà. /
CreateConnection
àà/ ?
(
àà? @
DbSchema
àà@ H
.
ààH I
PORTAL
ààI O
)
ààO P
)
ààP Q
{
ââ %
OracleDynamicParameters
ää '
	parmeters
ää( 1
=
ää2 3
new
ää4 7%
OracleDynamicParameters
ää8 O
(
ääO P
)
ääP Q
;
ääQ R
	parmeters
ãã 
.
ãã 
Add
ãã 
(
ãã 
name
ãã "
:
ãã" #
$str
ãã$ 3
,
ãã3 4
employeeSlno
ãã5 A
,
ããA B
dbType
ããC I
:
ããI J
OracleMappingType
ããK \
.
ãã\ ]
Int32
ãã] b
,
ããb c
	direction
ããd m
:
ããm n!
ParameterDirectionãão Å
.ããÅ Ç
InputããÇ á
)ããá à
;ããà â
	parmeters
åå 
.
åå 
Add
åå 
(
åå 
name
åå "
:
åå" #
$str
åå$ -
,
åå- .
Employee_Details
åå/ ?
.
åå? @
EXPERIENACEDTLS
åå@ O
.
ååO P
ToInt32OrDefault
ååP `
(
åå` a
)
ååa b
,
ååb c
dbType
ååd j
:
ååj k
OracleMappingType
åål }
.
åå} ~
Varchar2åå~ Ü
,ååÜ á
	directionååà ë
:ååë í"
ParameterDirectionååì •
.åå• ¶
Inputåå¶ ´
)åå´ ¨
;åå¨ ≠
	parmeters
çç 
.
çç 
Add
çç 
(
çç 
name
çç "
:
çç" #
$str
çç$ -
,
çç- .
dbType
çç/ 5
:
çç5 6
OracleMappingType
çç7 H
.
ççH I
	RefCursor
ççI R
,
ççR S
	direction
ççT ]
:
çç] ^ 
ParameterDirection
çç_ q
.
ççq r
Output
ççr x
)
ççx y
;
ççy z
experienceDetails
éé !
=
éé" #
(
éé$ %
await
éé% *

connection
éé+ 5
.
éé5 6

QueryAsync
éé6 @
<
éé@ A
ExperienceDetail
ééA Q
>
ééQ R
(
ééR S 
DatabaseProcedures
ééS e
.
éée f"
GET_EMP_PROFILE_DATA
ééf z
,
ééz {
	parmeterséé| Ö
,ééÖ Ü
commandTypeééá í
:ééí ì
CommandTypeééî ü
.ééü †
StoredProcedureéé† Ø
)ééØ ∞
)éé∞ ±
.éé± ≤
ToListéé≤ ∏
(éé∏ π
)ééπ ∫
;éé∫ ª
}
èè 
return
êê 
experienceDetails
êê $
;
êê$ %
}
ëë 	
public
íí 
async
íí 
Task
íí 
<
íí 
List
íí 
<
íí 
AddressDetail
íí ,
>
íí, -
>
íí- .'
GetEmployeeAddressDetails
íí/ H
(
ííH I
int
ííI L
employeeSlno
ííM Y
)
ííY Z
{
ìì 	
List
îî 
<
îî 
AddressDetail
îî 
>
îî 
addressDetails
îî  .
=
îî/ 0
new
îî1 4
List
îî5 9
<
îî9 :
AddressDetail
îî: G
>
îîG H
(
îîH I
)
îîI J
;
îîJ K
using
ïï 
(
ïï 
var
ïï 

connection
ïï !
=
ïï" #
await
ïï$ )
base
ïï* .
.
ïï. /
CreateConnection
ïï/ ?
(
ïï? @
DbSchema
ïï@ H
.
ïïH I
PORTAL
ïïI O
)
ïïO P
)
ïïP Q
{
ññ %
OracleDynamicParameters
óó '
	parmeters
óó( 1
=
óó2 3
new
óó4 7%
OracleDynamicParameters
óó8 O
(
óóO P
)
óóP Q
;
óóQ R
	parmeters
òò 
.
òò 
Add
òò 
(
òò 
name
òò "
:
òò" #
$str
òò$ 3
,
òò3 4
employeeSlno
òò5 A
,
òòA B
dbType
òòC I
:
òòI J
OracleMappingType
òòK \
.
òò\ ]
Int32
òò] b
,
òòb c
	direction
òòd m
:
òòm n!
ParameterDirectionòòo Å
.òòÅ Ç
InputòòÇ á
)òòá à
;òòà â
	parmeters
ôô 
.
ôô 
Add
ôô 
(
ôô 
name
ôô "
:
ôô" #
$str
ôô$ -
,
ôô- .
Employee_Details
ôô/ ?
.
ôô? @
ADDRESSDTLS
ôô@ K
.
ôôK L
ToInt32OrDefault
ôôL \
(
ôô\ ]
)
ôô] ^
,
ôô^ _
dbType
ôô` f
:
ôôf g
OracleMappingType
ôôh y
.
ôôy z
Varchar2ôôz Ç
,ôôÇ É
	directionôôÑ ç
:ôôç é"
ParameterDirectionôôè °
.ôô° ¢
Inputôô¢ ß
)ôôß ®
;ôô® ©
	parmeters
öö 
.
öö 
Add
öö 
(
öö 
name
öö "
:
öö" #
$str
öö$ -
,
öö- .
dbType
öö/ 5
:
öö5 6
OracleMappingType
öö7 H
.
ööH I
	RefCursor
ööI R
,
ööR S
	direction
ööT ]
:
öö] ^ 
ParameterDirection
öö_ q
.
ööq r
Output
öör x
)
ööx y
;
ööy z
addressDetails
õõ 
=
õõ  
(
õõ! "
await
õõ" '

connection
õõ( 2
.
õõ2 3

QueryAsync
õõ3 =
<
õõ= >
AddressDetail
õõ> K
>
õõK L
(
õõL M 
DatabaseProcedures
õõM _
.
õõ_ `"
GET_EMP_PROFILE_DATA
õõ` t
,
õõt u
	parmeters
õõv 
,õõ Ä
commandTypeõõÅ å
:õõå ç
CommandTypeõõé ô
.õõô ö
StoredProcedureõõö ©
)õõ© ™
)õõ™ ´
.õõ´ ¨
ToListõõ¨ ≤
(õõ≤ ≥
)õõ≥ ¥
;õõ¥ µ
}
úú 
return
ùù 
addressDetails
ùù !
;
ùù! "
}
ûû 	
public
üü 
async
üü 
Task
üü 
<
üü 
List
üü 
<
üü 
AssetDetail
üü *
>
üü* +
>
üü+ ,%
GetEmployeeAssetDetails
üü- D
(
üüD E
int
üüE H
employeeSlno
üüI U
)
üüU V
{
†† 	
List
°° 
<
°° 
AssetDetail
°° 
>
°° 
assetDetails
°° *
=
°°+ ,
null
°°- 1
;
°°1 2
using
¢¢ 
(
¢¢ 
var
¢¢ 

connection
¢¢ !
=
¢¢" #
await
¢¢$ )
base
¢¢* .
.
¢¢. /
CreateConnection
¢¢/ ?
(
¢¢? @
DbSchema
¢¢@ H
.
¢¢H I
PORTAL
¢¢I O
)
¢¢O P
)
¢¢P Q
{
££ %
OracleDynamicParameters
§§ '
	parmeters
§§( 1
=
§§2 3
new
§§4 7%
OracleDynamicParameters
§§8 O
(
§§O P
)
§§P Q
;
§§Q R
	parmeters
•• 
.
•• 
Add
•• 
(
•• 
name
•• "
:
••" #
$str
••$ 3
,
••3 4
employeeSlno
••5 A
,
••A B
dbType
••C I
:
••I J
OracleMappingType
••K \
.
••\ ]
Int32
••] b
,
••b c
	direction
••d m
:
••m n!
ParameterDirection••o Å
.••Å Ç
Input••Ç á
)••á à
;••à â
	parmeters
¶¶ 
.
¶¶ 
Add
¶¶ 
(
¶¶ 
name
¶¶ "
:
¶¶" #
$str
¶¶$ -
,
¶¶- .
Employee_Details
¶¶/ ?
.
¶¶? @
ASSET
¶¶@ E
.
¶¶E F
ToInt32OrDefault
¶¶F V
(
¶¶V W
)
¶¶W X
,
¶¶X Y
dbType
¶¶Z `
:
¶¶` a
OracleMappingType
¶¶b s
.
¶¶s t
Varchar2
¶¶t |
,
¶¶| }
	direction¶¶~ á
:¶¶á à"
ParameterDirection¶¶â õ
.¶¶õ ú
Input¶¶ú °
)¶¶° ¢
;¶¶¢ £
	parmeters
ßß 
.
ßß 
Add
ßß 
(
ßß 
name
ßß "
:
ßß" #
$str
ßß$ -
,
ßß- .
dbType
ßß/ 5
:
ßß5 6
OracleMappingType
ßß7 H
.
ßßH I
	RefCursor
ßßI R
,
ßßR S
	direction
ßßT ]
:
ßß] ^ 
ParameterDirection
ßß_ q
.
ßßq r
Output
ßßr x
)
ßßx y
;
ßßy z
assetDetails
®® 
=
®® 
(
®®  
await
®®  %

connection
®®& 0
.
®®0 1

QueryAsync
®®1 ;
<
®®; <
AssetDetail
®®< G
>
®®G H
(
®®H I 
DatabaseProcedures
®®I [
.
®®[ \"
GET_EMP_PROFILE_DATA
®®\ p
,
®®p q
	parmeters
®®r {
,
®®{ |
commandType®®} à
:®®à â
CommandType®®ä ï
.®®ï ñ
StoredProcedure®®ñ •
)®®• ¶
)®®¶ ß
.®®ß ®
ToList®®® Æ
(®®Æ Ø
)®®Ø ∞
;®®∞ ±
}
≠≠ 
return
ÆÆ 
assetDetails
ÆÆ 
;
ÆÆ  
}
ØØ 	
public
∞∞ 
async
∞∞ 
Task
∞∞ 
<
∞∞ 
PagedResultSet
∞∞ (
<
∞∞( )
EmployeeProfile
∞∞) 8
>
∞∞8 9
>
∞∞9 :(
SearchEmployeeInformations
∞∞; U
(
∞∞U V/
!EmployeeInformationSearchCriteria
∞∞V w
searchCriteria∞∞x Ü
)∞∞Ü á
{
±± 	
List
≤≤ 
<
≤≤ 
EmployeeProfile
≤≤  
>
≤≤  !
mappedScreens
≤≤" /
=
≤≤0 1
null
≤≤2 6
;
≤≤6 7
PagedResultSet
≥≥ 
<
≥≥ 
EmployeeProfile
≥≥ *
>
≥≥* +
	menuItems
≥≥, 5
=
≥≥6 7
null
≥≥8 <
;
≥≥< =
int
¥¥ 
totalRecords
¥¥ 
=
¥¥ 
$num
¥¥  
;
¥¥  !
using
µµ 
(
µµ 
IDbConnection
µµ  

connection
µµ! +
=
µµ, -
await
µµ. 3
CreateConnection
µµ4 D
(
µµD E
DbSchema
µµE M
.
µµM N
PORTAL
µµN T
)
µµT U
)
µµU V
{
∂∂ %
OracleDynamicParameters
∑∑ '

parameters
∑∑( 2
=
∑∑3 4
new
∑∑5 8%
OracleDynamicParameters
∑∑9 P
(
∑∑P Q
)
∑∑Q R
;
∑∑R S
string
∏∏ 

templateid
∏∏ !
=
∏∏" #!
ApplicationSettings
∏∏$ 7
.
∏∏7 8
Current
∏∏8 ?
.
∏∏? @
HrmsOtpTemplate
∏∏@ O
;
∏∏O P

parameters
ππ 
.
ππ 
Add
ππ 
(
ππ 
name
ππ #
:
ππ# $
$str
ππ% 3
,
ππ3 4
searchCriteria
ππ5 C
.
ππC D
SearchValue
ππD O
,
ππO P
dbType
ππQ W
:
ππW X
OracleMappingType
ππY j
.
ππj k
Varchar2
ππk s
,
ππs t
	direction
ππu ~
:
ππ~ "
ParameterDirectionππÄ í
.ππí ì
Inputππì ò
)ππò ô
;ππô ö

parameters
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
name
∫∫ #
:
∫∫# $
$str
∫∫% 3
,
∫∫3 4
searchCriteria
∫∫5 C
.
∫∫C D

StartIndex
∫∫D N
,
∫∫N O
dbType
∫∫P V
:
∫∫V W
OracleMappingType
∫∫X i
.
∫∫i j
Int32
∫∫j o
,
∫∫o p
	direction
∫∫q z
:
∫∫z {!
ParameterDirection∫∫| é
.∫∫é è
Input∫∫è î
)∫∫î ï
;∫∫ï ñ

parameters
ªª 
.
ªª 
Add
ªª 
(
ªª 
name
ªª #
:
ªª# $
$str
ªª% 1
,
ªª1 2
searchCriteria
ªª3 A
.
ªªA B
EndIndex
ªªB J
,
ªªJ K
dbType
ªªL R
:
ªªR S
OracleMappingType
ªªT e
.
ªªe f
Int32
ªªf k
,
ªªk l
	direction
ªªm v
:
ªªv w!
ParameterDirectionªªx ä
.ªªä ã
Inputªªã ê
)ªªê ë
;ªªë í

parameters
ºº 
.
ºº 
Add
ºº 
(
ºº 
name
ºº #
:
ºº# $
$str
ºº% 5
,
ºº5 6
dbType
ºº7 =
:
ºº= >
OracleMappingType
ºº? P
.
ººP Q
Int32
ººQ V
,
ººV W
	direction
ººX a
:
ººa b 
ParameterDirection
ººc u
.
ººu v
Output
ººv |
)
ºº| }
;
ºº} ~

parameters
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
name
ΩΩ #
:
ΩΩ# $
$str
ΩΩ% .
,
ΩΩ. /
dbType
ΩΩ0 6
:
ΩΩ6 7
OracleMappingType
ΩΩ8 I
.
ΩΩI J
	RefCursor
ΩΩJ S
,
ΩΩS T
	direction
ΩΩU ^
:
ΩΩ^ _ 
ParameterDirection
ΩΩ` r
.
ΩΩr s
Output
ΩΩs y
)
ΩΩy z
;
ΩΩz {
var
ææ "
dbScreenInformations
ææ (
=
ææ) *
await
ææ+ 0

connection
ææ1 ;
.
ææ; <

QueryAsync
ææ< F
<
ææF G
EmployeeProfile
ææG V
>
ææV W
(
ææW X 
DatabaseProcedures
ææX j
.
ææj k'
P_SEARCH_EMPLOYEE_PORTALææk É
,ææÉ Ñ

parametersææÖ è
,ææè ê
commandTypeææë ú
:ææú ù
CommandTypeææû ©
.ææ© ™
StoredProcedureææ™ π
)ææπ ∫
;ææ∫ ª
totalRecords
øø 
=
øø 

parameters
øø )
.
øø) *
Get
øø* -
<
øø- .
int
øø. 1
>
øø1 2
(
øø2 3
$str
øø3 D
)
øøD E
.
øøE F
ToInt32OrDefault
øøF V
(
øøV W
)
øøW X
;
øøX Y
mappedScreens
¿¿ 
=
¿¿ "
dbScreenInformations
¿¿  4
.
¿¿4 5
ToList
¿¿5 ;
(
¿¿; <
)
¿¿< =
;
¿¿= >
}
¡¡ 
	menuItems
¬¬ 
=
¬¬ 
new
¬¬ 
PagedResultSet
¬¬ *
<
¬¬* +
EmployeeProfile
¬¬+ :
>
¬¬: ;
(
¬¬; <
)
¬¬< =
{
√√ 
Items
ƒƒ 
=
ƒƒ 
mappedScreens
ƒƒ %
,
ƒƒ% &
	PageIndex
≈≈ 
=
≈≈ 
searchCriteria
≈≈ *
.
≈≈* +

StartIndex
≈≈+ 5
,
≈≈5 6
PageSize
∆∆ 
=
∆∆ 
searchCriteria
∆∆ )
.
∆∆) *
EndIndex
∆∆* 2
,
∆∆2 3

TotalItems
«« 
=
«« 
totalRecords
«« )
,
««) *
}
»» 
;
»» 
return
   
	menuItems
   
;
   
}
ÀÀ 	
public
ÕÕ 
async
ÕÕ 
Task
ÕÕ 
<
ÕÕ 
List
ÕÕ 
<
ÕÕ 
BloodRelation
ÕÕ ,
>
ÕÕ, -
>
ÕÕ- .+
GetFamilyBloodRelationDetails
ÕÕ/ L
(
ÕÕL M
)
ÕÕM N
{
ŒŒ 	
List
œœ 
<
œœ 
BloodRelation
œœ 
>
œœ "
familyBloodRelations
œœ  4
=
œœ5 6
new
œœ7 :
List
œœ; ?
<
œœ? @
BloodRelation
œœ@ M
>
œœM N
(
œœN O
)
œœO P
;
œœP Q
using
–– 
(
–– 
var
–– 

connection
–– !
=
––" #
await
––$ )
base
––* .
.
––. /
CreateConnection
––/ ?
(
––? @
DbSchema
––@ H
.
––H I
PORTAL
––I O
)
––O P
)
––P Q
{
—— %
OracleDynamicParameters
““ '
	parmeters
““( 1
=
““2 3
new
““4 7%
OracleDynamicParameters
““8 O
(
““O P
)
““P Q
;
““Q R
	parmeters
”” 
.
”” 
Add
”” 
(
”” 
name
”” "
:
””" #
$str
””$ -
,
””- .
dbType
””/ 5
:
””5 6
OracleMappingType
””7 H
.
””H I
	RefCursor
””I R
,
””R S
	direction
””T ]
:
””] ^ 
ParameterDirection
””_ q
.
””q r
Output
””r x
)
””x y
;
””y z"
familyBloodRelations
‘‘ $
=
‘‘% &
(
‘‘' (
await
‘‘( -

connection
‘‘. 8
.
‘‘8 9

QueryAsync
‘‘9 C
<
‘‘C D
BloodRelation
‘‘D Q
>
‘‘Q R
(
‘‘R S 
DatabaseProcedures
‘‘S e
.
‘‘e f#
SP_M_BLOODRELATION_MT
‘‘f {
,
‘‘{ |
	parmeters‘‘} Ü
,‘‘Ü á
commandType‘‘à ì
:‘‘ì î
CommandType‘‘ï †
.‘‘† °
StoredProcedure‘‘° ∞
)‘‘∞ ±
)‘‘± ≤
.‘‘≤ ≥
ToList‘‘≥ π
(‘‘π ∫
)‘‘∫ ª
;‘‘ª º
}
’’ 
return
÷÷ "
familyBloodRelations
÷÷ '
;
÷÷' (
}
◊◊ 	
public
ŸŸ 
async
ŸŸ 
Task
ŸŸ 
<
ŸŸ 
List
ŸŸ 
<
ŸŸ 
	Education
ŸŸ (
>
ŸŸ( )
>
ŸŸ) *!
GetEducationDetails
ŸŸ+ >
(
ŸŸ> ?
)
ŸŸ? @
{
⁄⁄ 	
List
€€ 
<
€€ 
	Education
€€ 
>
€€ 
educationDetails
€€ ,
=
€€- .
new
€€/ 2
List
€€3 7
<
€€7 8
	Education
€€8 A
>
€€A B
(
€€B C
)
€€C D
;
€€D E
using
‹‹ 
(
‹‹ 
var
‹‹ 

connection
‹‹ !
=
‹‹" #
await
‹‹$ )
base
‹‹* .
.
‹‹. /
CreateConnection
‹‹/ ?
(
‹‹? @
DbSchema
‹‹@ H
.
‹‹H I
PORTAL
‹‹I O
)
‹‹O P
)
‹‹P Q
{
›› %
OracleDynamicParameters
ﬁﬁ '
	parmeters
ﬁﬁ( 1
=
ﬁﬁ2 3
new
ﬁﬁ4 7%
OracleDynamicParameters
ﬁﬁ8 O
(
ﬁﬁO P
)
ﬁﬁP Q
;
ﬁﬁQ R
	parmeters
ﬂﬂ 
.
ﬂﬂ 
Add
ﬂﬂ 
(
ﬂﬂ 
name
ﬂﬂ "
:
ﬂﬂ" #
$str
ﬂﬂ$ -
,
ﬂﬂ- .
dbType
ﬂﬂ/ 5
:
ﬂﬂ5 6
OracleMappingType
ﬂﬂ7 H
.
ﬂﬂH I
	RefCursor
ﬂﬂI R
,
ﬂﬂR S
	direction
ﬂﬂT ]
:
ﬂﬂ] ^ 
ParameterDirection
ﬂﬂ_ q
.
ﬂﬂq r
Output
ﬂﬂr x
)
ﬂﬂx y
;
ﬂﬂy z
educationDetails
‡‡  
=
‡‡! "
(
‡‡# $
await
‡‡$ )

connection
‡‡* 4
.
‡‡4 5

QueryAsync
‡‡5 ?
<
‡‡? @
	Education
‡‡@ I
>
‡‡I J
(
‡‡J K 
DatabaseProcedures
‡‡K ]
.
‡‡] ^
SP_M_EDUCATION_MT
‡‡^ o
,
‡‡o p
	parmeters
‡‡q z
,
‡‡z {
commandType‡‡| á
:‡‡á à
CommandType‡‡â î
.‡‡î ï
StoredProcedure‡‡ï §
)‡‡§ •
)‡‡• ¶
.‡‡¶ ß
ToList‡‡ß ≠
(‡‡≠ Æ
)‡‡Æ Ø
;‡‡Ø ∞
}
·· 
return
‚‚ 
educationDetails
‚‚ #
;
‚‚# $
}
„„ 	
public
ÂÂ 
async
ÂÂ 
Task
ÂÂ 
<
ÂÂ 
List
ÂÂ 
<
ÂÂ 
	Education
ÂÂ (
>
ÂÂ( )
>
ÂÂ) *'
GetEducationCourseDetails
ÂÂ+ D
(
ÂÂD E
)
ÂÂE F
{
ÊÊ 	
List
ÁÁ 
<
ÁÁ 
	Education
ÁÁ 
>
ÁÁ 
courseDetails
ÁÁ )
=
ÁÁ* +
new
ÁÁ, /
List
ÁÁ0 4
<
ÁÁ4 5
	Education
ÁÁ5 >
>
ÁÁ> ?
(
ÁÁ? @
)
ÁÁ@ A
;
ÁÁA B
using
ËË 
(
ËË 
var
ËË 

connection
ËË !
=
ËË" #
await
ËË$ )
base
ËË* .
.
ËË. /
CreateConnection
ËË/ ?
(
ËË? @
DbSchema
ËË@ H
.
ËËH I
PORTAL
ËËI O
)
ËËO P
)
ËËP Q
{
ÈÈ %
OracleDynamicParameters
ÍÍ '
	parmeters
ÍÍ( 1
=
ÍÍ2 3
new
ÍÍ4 7%
OracleDynamicParameters
ÍÍ8 O
(
ÍÍO P
)
ÍÍP Q
;
ÍÍQ R
	parmeters
ÎÎ 
.
ÎÎ 
Add
ÎÎ 
(
ÎÎ 
name
ÎÎ "
:
ÎÎ" #
$str
ÎÎ$ -
,
ÎÎ- .
dbType
ÎÎ/ 5
:
ÎÎ5 6
OracleMappingType
ÎÎ7 H
.
ÎÎH I
	RefCursor
ÎÎI R
,
ÎÎR S
	direction
ÎÎT ]
:
ÎÎ] ^ 
ParameterDirection
ÎÎ_ q
.
ÎÎq r
Output
ÎÎr x
)
ÎÎx y
;
ÎÎy z
courseDetails
ÏÏ 
=
ÏÏ 
(
ÏÏ  !
await
ÏÏ! &

connection
ÏÏ' 1
.
ÏÏ1 2

QueryAsync
ÏÏ2 <
<
ÏÏ< =
	Education
ÏÏ= F
>
ÏÏF G
(
ÏÏG H 
DatabaseProcedures
ÏÏH Z
.
ÏÏZ [$
SP_EDUCATION_COURCE_MT
ÏÏ[ q
,
ÏÏq r
	parmeters
ÏÏs |
,
ÏÏ| }
commandTypeÏÏ~ â
:ÏÏâ ä
CommandTypeÏÏã ñ
.ÏÏñ ó
StoredProcedureÏÏó ¶
)ÏÏ¶ ß
)ÏÏß ®
.ÏÏ® ©
ToListÏÏ© Ø
(ÏÏØ ∞
)ÏÏ∞ ±
;ÏÏ± ≤
}
ÌÌ 
return
ÓÓ 
courseDetails
ÓÓ  
;
ÓÓ  !
}
 	
public
ÚÚ 
async
ÚÚ 
Task
ÚÚ 
<
ÚÚ 
List
ÚÚ 
<
ÚÚ 

BloodGroup
ÚÚ )
>
ÚÚ) *
>
ÚÚ* +
GetBloodGroup
ÚÚ, 9
(
ÚÚ9 :
)
ÚÚ: ;
{
ÛÛ 	
List
ÙÙ 
<
ÙÙ 

BloodGroup
ÙÙ 
>
ÙÙ 

bloodGroup
ÙÙ '
=
ÙÙ( )
new
ÙÙ* -
List
ÙÙ. 2
<
ÙÙ2 3

BloodGroup
ÙÙ3 =
>
ÙÙ= >
(
ÙÙ> ?
)
ÙÙ? @
;
ÙÙ@ A
using
ıı 
(
ıı 
var
ıı 

connection
ıı !
=
ıı" #
await
ıı$ )
base
ıı* .
.
ıı. /
CreateConnection
ıı/ ?
(
ıı? @
DbSchema
ıı@ H
.
ııH I
PORTAL
ııI O
)
ııO P
)
ııP Q
{
ˆˆ %
OracleDynamicParameters
˜˜ '
	parmeters
˜˜( 1
=
˜˜2 3
new
˜˜4 7%
OracleDynamicParameters
˜˜8 O
(
˜˜O P
)
˜˜P Q
;
˜˜Q R
	parmeters
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 
name
¯¯ "
:
¯¯" #
$str
¯¯$ -
,
¯¯- .
dbType
¯¯/ 5
:
¯¯5 6
OracleMappingType
¯¯7 H
.
¯¯H I
	RefCursor
¯¯I R
,
¯¯R S
	direction
¯¯T ]
:
¯¯] ^ 
ParameterDirection
¯¯_ q
.
¯¯q r
Output
¯¯r x
)
¯¯x y
;
¯¯y z

bloodGroup
˘˘ 
=
˘˘ 
(
˘˘ 
await
˘˘ #

connection
˘˘$ .
.
˘˘. /

QueryAsync
˘˘/ 9
<
˘˘9 :

BloodGroup
˘˘: D
>
˘˘D E
(
˘˘E F 
DatabaseProcedures
˘˘F X
.
˘˘X Y#
SP_EMP_BLOOD_GROUP_MT
˘˘Y n
,
˘˘n o
	parmeters
˘˘p y
,
˘˘y z
commandType˘˘{ Ü
:˘˘Ü á
CommandType˘˘à ì
.˘˘ì î
StoredProcedure˘˘î £
)˘˘£ §
)˘˘§ •
.˘˘• ¶
ToList˘˘¶ ¨
(˘˘¨ ≠
)˘˘≠ Æ
;˘˘Æ Ø
}
˙˙ 
return
˚˚ 

bloodGroup
˚˚ 
;
˚˚ 
}
¸¸ 	
public
ˇˇ 
async
ˇˇ 
Task
ˇˇ 
<
ˇˇ 
List
ˇˇ 
<
ˇˇ %
AdditionalQualification
ˇˇ 6
>
ˇˇ6 7
>
ˇˇ7 8(
GetAdditionalQualification
ˇˇ9 S
(
ˇˇS T
)
ˇˇT U
{
ÄÄ 	
List
ÅÅ 
<
ÅÅ %
AdditionalQualification
ÅÅ (
>
ÅÅ( )%
additionalQualification
ÅÅ* A
=
ÅÅB C
new
ÅÅD G
List
ÅÅH L
<
ÅÅL M%
AdditionalQualification
ÅÅM d
>
ÅÅd e
(
ÅÅe f
)
ÅÅf g
;
ÅÅg h
using
ÇÇ 
(
ÇÇ 
var
ÇÇ 

connection
ÇÇ !
=
ÇÇ" #
await
ÇÇ$ )
base
ÇÇ* .
.
ÇÇ. /
CreateConnection
ÇÇ/ ?
(
ÇÇ? @
DbSchema
ÇÇ@ H
.
ÇÇH I
PORTAL
ÇÇI O
)
ÇÇO P
)
ÇÇP Q
{
ÉÉ %
OracleDynamicParameters
ÑÑ '
	parmeters
ÑÑ( 1
=
ÑÑ2 3
new
ÑÑ4 7%
OracleDynamicParameters
ÑÑ8 O
(
ÑÑO P
)
ÑÑP Q
;
ÑÑQ R
	parmeters
ÖÖ 
.
ÖÖ 
Add
ÖÖ 
(
ÖÖ 
name
ÖÖ "
:
ÖÖ" #
$str
ÖÖ$ -
,
ÖÖ- .
dbType
ÖÖ/ 5
:
ÖÖ5 6
OracleMappingType
ÖÖ7 H
.
ÖÖH I
	RefCursor
ÖÖI R
,
ÖÖR S
	direction
ÖÖT ]
:
ÖÖ] ^ 
ParameterDirection
ÖÖ_ q
.
ÖÖq r
Output
ÖÖr x
)
ÖÖx y
;
ÖÖy z%
additionalQualification
ÜÜ '
=
ÜÜ( )
(
ÜÜ* +
await
ÜÜ+ 0

connection
ÜÜ1 ;
.
ÜÜ; <

QueryAsync
ÜÜ< F
<
ÜÜF G%
AdditionalQualification
ÜÜG ^
>
ÜÜ^ _
(
ÜÜ_ ` 
DatabaseProcedures
ÜÜ` r
.
ÜÜr s)
SP_GET_ADDQUALIFICATION_MTÜÜs ç
,ÜÜç é
	parmetersÜÜè ò
,ÜÜò ô
commandTypeÜÜö •
:ÜÜ• ¶
CommandTypeÜÜß ≤
.ÜÜ≤ ≥
StoredProcedureÜÜ≥ ¬
)ÜÜ¬ √
)ÜÜ√ ƒ
.ÜÜƒ ≈
ToListÜÜ≈ À
(ÜÜÀ Ã
)ÜÜÃ Õ
;ÜÜÕ Œ
}
áá 
return
àà %
additionalQualification
àà *
;
àà* +
}
ââ 	
public
ãã 
async
ãã 
Task
ãã 
<
ãã 
List
ãã 
<
ãã 
Courses
ãã &
>
ãã& '
>
ãã' (
CourseFilter
ãã) 5
(
ãã5 6
int
ãã6 9
slno
ãã: >
)
ãã> ?
{
åå 	
List
çç 
<
çç 
Courses
çç 
>
çç 
courses
çç !
=
çç" #
new
çç$ '
List
çç( ,
<
çç, -
Courses
çç- 4
>
çç4 5
(
çç5 6
)
çç6 7
;
çç7 8
using
éé 
(
éé 
var
éé 

connection
éé !
=
éé" #
await
éé$ )
base
éé* .
.
éé. /
CreateConnection
éé/ ?
(
éé? @
DbSchema
éé@ H
.
ééH I
PORTAL
ééI O
)
ééO P
)
ééP Q
{
èè %
OracleDynamicParameters
êê '
	parmeters
êê( 1
=
êê2 3
new
êê4 7%
OracleDynamicParameters
êê8 O
(
êêO P
)
êêP Q
;
êêQ R
	parmeters
ëë 
.
ëë 
Add
ëë 
(
ëë 
name
ëë "
:
ëë" #
$str
ëë$ 4
,
ëë4 5
slno
ëë6 :
,
ëë: ;
dbType
ëë< B
:
ëëB C
OracleMappingType
ëëD U
.
ëëU V
Int32
ëëV [
,
ëë[ \
	direction
ëë] f
:
ëëf g 
ParameterDirection
ëëh z
.
ëëz {
Inputëë{ Ä
)ëëÄ Å
;ëëÅ Ç
	parmeters
íí 
.
íí 
Add
íí 
(
íí 
name
íí "
:
íí" #
$str
íí$ -
,
íí- .
dbType
íí/ 5
:
íí5 6
OracleMappingType
íí7 H
.
ííH I
	RefCursor
ííI R
,
ííR S
	direction
ííT ]
:
íí] ^ 
ParameterDirection
íí_ q
.
ííq r
Output
íír x
)
ííx y
;
ííy z
courses
ìì 
=
ìì 
(
ìì 
await
ìì  

connection
ìì! +
.
ìì+ ,

QueryAsync
ìì, 6
<
ìì6 7
Courses
ìì7 >
>
ìì> ?
(
ìì? @ 
DatabaseProcedures
ìì@ R
.
ììR S#
SP_FILTEREDUCOURSE_MT
ììS h
,
ììh i
	parmeters
ììj s
,
ììs t
commandTypeììu Ä
:ììÄ Å
CommandTypeììÇ ç
.ììç é
StoredProcedureììé ù
)ììù û
)ììû ü
.ììü †
ToListìì† ¶
(ìì¶ ß
)ììß ®
;ìì® ©
}
îî 
return
ïï 
courses
ïï 
;
ïï 
}
ññ 	
public
òò 
async
òò 
Task
òò 
<
òò 
bool
òò 
>
òò .
 GetUpdateEmployeeEmailAddressOtp
òò  @
(
òò@ A"
UpdadteEmployeeEmail
òòA U"
updadteEmployeeEmail
òòV j
)
òòj k
{
ôô 	
bool
öö 
resp
öö 
=
öö 
false
öö 
;
öö 
OtpData
õõ 
otpData
õõ 
=
õõ 
null
õõ "
;
õõ" #
string
úú 
otpValue
úú 
=
úú 
string
úú $
.
úú$ %
Empty
úú% *
;
úú* +
string
ùù 

otpMessage
ùù 
=
ùù 
string
ùù  &
.
ùù& '
Empty
ùù' ,
;
ùù, -
int
üü 
EmailsavedRecords
üü !
=
üü" #
$num
üü$ %
;
üü% &
var
†† 
Subject
†† 
=
†† !
ApplicationSettings
†† -
.
††- .
Current
††. 5
.
††5 6
OTPMailSubject
††6 D
;
††D E
string
¢¢ 
email
¢¢ 
=
¢¢ "
updadteEmployeeEmail
¢¢ /
.
¢¢/ 0
PersonalEmail
¢¢0 =
.
¢¢= >
IsNullOrEmpty
¢¢> K
(
¢¢K L
)
¢¢L M
?
¢¢N O"
updadteEmployeeEmail
¢¢P d
.
¢¢d e
	WorkEmail
¢¢e n
:
¢¢o p#
updadteEmployeeEmail¢¢q Ö
.¢¢Ö Ü
PersonalEmail¢¢Ü ì
;¢¢ì î
using
££ 
(
££ 
var
££ 

connection
££ !
=
££" #
await
££$ )
base
££* .
.
££. /
CreateConnection
££/ ?
(
££? @
DbSchema
££@ H
.
££H I
PORTAL
££I O
)
££O P
)
££P Q
{
§§ 
using
¶¶ 
(
¶¶ 
var
¶¶ 
tran
¶¶ 
=
¶¶  !

connection
¶¶" ,
.
¶¶, -
BeginTransaction
¶¶- =
(
¶¶= >
)
¶¶> ?
)
¶¶? @
{
ßß %
OracleDynamicParameters
®® +

parameters
®®, 6
=
®®7 8
new
®®9 <%
OracleDynamicParameters
®®= T
(
®®T U
)
®®U V
;
®®V W
otpValue
™™ 
=
™™ 
GenerateOtp
™™ *
(
™™* +
)
™™+ ,
;
™™, -
string
´´ 

OTPMessage
´´ %
=
´´& '!
ApplicationSettings
´´( ;
.
´´; <
Current
´´< C
.
´´C D

OTPMessage
´´D N
;
´´N O

otpMessage
¨¨ 
=
¨¨  
string
¨¨! '
.
¨¨' (
Format
¨¨( .
(
¨¨. /

OTPMessage
¨¨/ 9
,
¨¨9 :
Environment
¨¨; F
.
¨¨F G
NewLine
¨¨G N
,
¨¨N O
otpValue
¨¨P X
,
¨¨X Y!
ApplicationSettings
¨¨Z m
.
¨¨m n
Current
¨¨n u
.
¨¨u v

OtpTimeOut¨¨v Ä
,¨¨Ä Å
Environment¨¨Ç ç
.¨¨ç é
NewLine¨¨é ï
)¨¨ï ñ
;¨¨ñ ó
var
≠≠ 
message
≠≠ 
=
≠≠  !
string
≠≠" (
.
≠≠( )
Format
≠≠) /
(
≠≠/ 0

otpMessage
≠≠0 :
,
≠≠: ;
email
≠≠< A
,
≠≠A B
otpValue
≠≠C K
)
≠≠K L
;
≠≠L M
string
ÆÆ 

templateid
ÆÆ %
=
ÆÆ& '!
ApplicationSettings
ÆÆ( ;
.
ÆÆ; <
Current
ÆÆ< C
.
ÆÆC D
OTPMailTemplateId
ÆÆD U
;
ÆÆU V

parameters
∞∞ 
.
∞∞ 
Add
∞∞ "
(
∞∞" #
name
∞∞# '
:
∞∞' (
$str
∞∞) 8
,
∞∞8 9"
updadteEmployeeEmail
∞∞: N
.
∞∞N O
EmployeeSlno
∞∞O [
,
∞∞[ \
dbType
∞∞] c
:
∞∞c d
OracleMappingType
∞∞e v
.
∞∞v w
Int32
∞∞w |
,
∞∞| }
	direction∞∞~ á
:∞∞á à"
ParameterDirection∞∞â õ
.∞∞õ ú
Input∞∞ú °
)∞∞° ¢
;∞∞¢ £

parameters
±± 
.
±± 
Add
±± "
(
±±" #
name
±±# '
:
±±' (
$str
±±) >
,
±±> ?
MailSettings
±±@ L
.
±±L M
Current
±±M T
.
±±T U
	FromEmail
±±U ^
,
±±^ _
dbType
±±` f
:
±±f g
OracleMappingType
±±h y
.
±±y z
Varchar2±±z Ç
,±±Ç É
	direction±±Ñ ç
:±±ç é"
ParameterDirection±±è °
.±±° ¢
Input±±¢ ß
)±±ß ®
;±±® ©

parameters
≤≤ 
.
≤≤ 
Add
≤≤ "
(
≤≤" #
name
≤≤# '
:
≤≤' (
$str
≤≤) <
,
≤≤< =
email
≤≤> C
,
≤≤C D
dbType
≤≤E K
:
≤≤K L
OracleMappingType
≤≤M ^
.
≤≤^ _
Varchar2
≤≤_ g
,
≤≤g h
	direction
≤≤i r
:
≤≤r s!
ParameterDirection≤≤t Ü
.≤≤Ü á
Input≤≤á å
)≤≤å ç
;≤≤ç é

parameters
≥≥ 
.
≥≥ 
Add
≥≥ "
(
≥≥" #
name
≥≥# '
:
≥≥' (
$str
≥≥) 3
,
≥≥3 4
Subject
≥≥5 <
,
≥≥< =
dbType
≥≥> D
:
≥≥D E
OracleMappingType
≥≥F W
.
≥≥W X
Varchar2
≥≥X `
,
≥≥` a
	direction
≥≥b k
:
≥≥k l 
ParameterDirection
≥≥m 
.≥≥ Ä
Input≥≥Ä Ö
)≥≥Ö Ü
;≥≥Ü á

parameters
¥¥ 
.
¥¥ 
Add
¥¥ "
(
¥¥" #
name
¥¥# '
:
¥¥' (
$str
¥¥) 3
,
¥¥3 4
message
¥¥5 <
,
¥¥< =
dbType
¥¥> D
:
¥¥D E
OracleMappingType
¥¥F W
.
¥¥W X
Varchar2
¥¥X `
,
¥¥` a
	direction
¥¥b k
:
¥¥k l 
ParameterDirection
¥¥m 
.¥¥ Ä
Input¥¥Ä Ö
)¥¥Ö Ü
;¥¥Ü á

parameters
µµ 
.
µµ 
Add
µµ "
(
µµ" #
name
µµ# '
:
µµ' (
$str
µµ) 6
,
µµ6 7

templateid
µµ8 B
,
µµB C
dbType
µµD J
:
µµJ K
OracleMappingType
µµL ]
.
µµ] ^
Varchar2
µµ^ f
,
µµf g
	direction
µµh q
:
µµq r!
ParameterDirectionµµs Ö
.µµÖ Ü
InputµµÜ ã
)µµã å
;µµå ç

parameters
∂∂ 
.
∂∂ 
Add
∂∂ "
(
∂∂" #
name
∂∂# '
:
∂∂' (
$str
∂∂) 8
,
∂∂8 9
otpValue
∂∂: B
,
∂∂B C
dbType
∂∂D J
:
∂∂J K
OracleMappingType
∂∂L ]
.
∂∂] ^
Varchar2
∂∂^ f
,
∂∂f g
	direction
∂∂h q
:
∂∂q r!
ParameterDirection∂∂s Ö
.∂∂Ö Ü
Input∂∂Ü ã
)∂∂ã å
;∂∂å ç
EmailsavedRecords
∑∑ %
=
∑∑& '
await
∑∑( -

connection
∑∑. 8
.
∑∑8 9
ExecuteAsync
∑∑9 E
(
∑∑E F 
DatabaseProcedures
∑∑F X
.
∑∑X Y
SEND_OTP_EMAIL
∑∑Y g
,
∑∑g h

parameters
∑∑i s
,
∑∑s t
commandType∑∑u Ä
:∑∑Ä Å
CommandType∑∑Ç ç
.∑∑ç é
StoredProcedure∑∑é ù
)∑∑ù û
;∑∑û ü
tran
∏∏ 
.
∏∏ 
Commit
∏∏ 
(
∏∏  
)
∏∏  !
;
∏∏! "
}
ππ 
}
ªª 
resp
ºº 
=
ºº 
(
ºº 
EmailsavedRecords
ºº %
*
ºº& '
-
ºº( )
$num
ºº) *
)
ºº* +
>
ºº, -
$num
ºº. /
;
ºº/ 0
return
ΩΩ 
resp
ΩΩ 
;
ΩΩ 
}
ææ 	
public
øø 
async
øø 
Task
øø 
<
øø 
bool
øø 
>
øø 1
#VerifyUpdateEmployeeEmailAddressOtp
øø  C
(
øøC D"
UpdadteEmployeeEmail
øøD X"
updadteEmployeeEmail
øøY m
)
øøm n
{
¿¿ 	
bool
¡¡ 
resp
¡¡ 
=
¡¡ 
false
¡¡ 
;
¡¡ "
EmailOtpVerification
¬¬  !
verificationDetails
¬¬! 4
=
¬¬5 6
null
¬¬7 ;
;
¬¬; <
int
√√ 
updatedRecords
√√ 
=
√√  
$num
√√! "
;
√√" #
string
≈≈ 
email
≈≈ 
=
≈≈ "
updadteEmployeeEmail
≈≈ /
.
≈≈/ 0
PersonalEmail
≈≈0 =
.
≈≈= >
IsNullOrEmpty
≈≈> K
(
≈≈K L
)
≈≈L M
?
≈≈N O"
updadteEmployeeEmail
≈≈P d
.
≈≈d e
	WorkEmail
≈≈e n
:
≈≈o p#
updadteEmployeeEmail≈≈q Ö
.≈≈Ö Ü
PersonalEmail≈≈Ü ì
;≈≈ì î
using
«« 
(
«« 
var
«« 

connection
«« !
=
««" #
await
««$ )
base
««* .
.
««. /
CreateConnection
««/ ?
(
««? @
DbSchema
««@ H
.
««H I
PORTAL
««I O
)
««O P
)
««P Q
{
»» %
OracleDynamicParameters
…… '

parameters
……( 2
=
……3 4
new
……5 8%
OracleDynamicParameters
……9 P
(
……P Q
)
……Q R
;
……R S

parameters
   
.
   
Add
   
(
   
name
   #
:
  # $
$str
  % 4
,
  4 5"
updadteEmployeeEmail
  6 J
.
  J K
GeneratedOtp
  K W
,
  W X
dbType
  Y _
:
  _ `
OracleMappingType
  a r
.
  r s
Varchar2
  s {
,
  { |
	direction  } Ü
:  Ü á"
ParameterDirection  à ö
.  ö õ
Input  õ †
)  † °
;  ° ¢

parameters
ÀÀ 
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ 
name
ÀÀ #
:
ÀÀ# $
$str
ÀÀ% 5
,
ÀÀ5 6
email
ÀÀ7 <
,
ÀÀ< =
dbType
ÀÀ> D
:
ÀÀD E
OracleMappingType
ÀÀF W
.
ÀÀW X
Varchar2
ÀÀX `
,
ÀÀ` a
	direction
ÀÀb k
:
ÀÀk l 
ParameterDirection
ÀÀm 
.ÀÀ Ä
InputÀÀÄ Ö
)ÀÀÖ Ü
;ÀÀÜ á

parameters
ÃÃ 
.
ÃÃ 
Add
ÃÃ 
(
ÃÃ 
name
ÃÃ #
:
ÃÃ# $
$str
ÃÃ% .
,
ÃÃ. /
dbType
ÃÃ0 6
:
ÃÃ6 7
OracleMappingType
ÃÃ8 I
.
ÃÃI J
	RefCursor
ÃÃJ S
,
ÃÃS T
	direction
ÃÃU ^
:
ÃÃ^ _ 
ParameterDirection
ÃÃ` r
.
ÃÃr s
Output
ÃÃs y
)
ÃÃy z
;
ÃÃz {!
verificationDetails
ÕÕ #
=
ÕÕ$ %
(
ÕÕ& '
await
ÕÕ' ,

connection
ÕÕ- 7
.
ÕÕ7 8

QueryAsync
ÕÕ8 B
<
ÕÕB C"
EmailOtpVerification
ÕÕC W
>
ÕÕW X
(
ÕÕX Y 
DatabaseProcedures
ÕÕY k
.
ÕÕk l+
SP_GET_EMAILOTP_VERIFICATIONÕÕl à
,ÕÕà â

parametersÕÕä î
,ÕÕî ï
commandTypeÕÕñ °
:ÕÕ° ¢
CommandTypeÕÕ£ Æ
.ÕÕÆ Ø
StoredProcedureÕÕØ æ
)ÕÕæ ø
)ÕÕø ¿
.ÕÕ¿ ¡
FirstOrDefaultÕÕ¡ œ
(ÕÕœ –
)ÕÕ– —
;ÕÕ— “
if
ŒŒ 
(
ŒŒ !
verificationDetails
ŒŒ '
!=
ŒŒ( *
null
ŒŒ+ /
&&
ŒŒ0 2!
verificationDetails
ŒŒ3 F
.
ŒŒF G
GeneratedOtp
ŒŒG S
==
ŒŒT V"
updadteEmployeeEmail
ŒŒW k
.
ŒŒk l
GeneratedOtp
ŒŒl x
)
ŒŒx y
{
œœ 
DateTime
–– 
d1
–– 
=
––  !!
verificationDetails
––" 5
.
––5 6
GeneratedDate
––6 C
;
––C D
DateTime
—— 
d2
—— 
=
——  !
d1
——" $
.
——$ %

AddMinutes
——% /
(
——/ 0!
ApplicationSettings
——0 C
.
——C D
Current
——D K
.
——K L

OtpTimeOut
——L V
)
——V W
;
——W X
int
““ 
result
““ 
=
““  
DateTime
““! )
.
““) *
Compare
““* 1
(
““1 2
d2
““2 4
,
““4 5
DateTime
““6 >
.
““> ?
Now
““? B
)
““B C
;
““C D
if
”” 
(
”” 
result
”” 
>=
”” !
$num
””" #
)
””# $
{
‘‘ 
using
’’ 
(
’’ 
var
’’ "
tran
’’# '
=
’’( )

connection
’’* 4
.
’’4 5
BeginTransaction
’’5 E
(
’’E F
)
’’F G
)
’’G H
{
÷÷ %
OracleDynamicParameters
◊◊ 3
emailparameters
◊◊4 C
=
◊◊D E
new
◊◊F I%
OracleDynamicParameters
◊◊J a
(
◊◊a b
)
◊◊b c
;
◊◊c d
emailparameters
ÿÿ +
.
ÿÿ+ ,
Add
ÿÿ, /
(
ÿÿ/ 0
name
ÿÿ0 4
:
ÿÿ4 5
$str
ÿÿ6 E
,
ÿÿE F"
updadteEmployeeEmail
ÿÿG [
.
ÿÿ[ \
EmployeeSlno
ÿÿ\ h
,
ÿÿh i
dbType
ÿÿj p
:
ÿÿp q 
OracleMappingTypeÿÿr É
.ÿÿÉ Ñ
Int32ÿÿÑ â
,ÿÿâ ä
	directionÿÿã î
:ÿÿî ï"
ParameterDirectionÿÿñ ®
.ÿÿ® ©
Inputÿÿ© Æ
)ÿÿÆ Ø
;ÿÿØ ∞
emailparameters
ŸŸ +
.
ŸŸ+ ,
Add
ŸŸ, /
(
ŸŸ/ 0
name
ŸŸ0 4
:
ŸŸ4 5
$str
ŸŸ6 >
,
ŸŸ> ?"
updadteEmployeeEmail
ŸŸ@ T
.
ŸŸT U
PersonalEmail
ŸŸU b
,
ŸŸb c
dbType
ŸŸd j
:
ŸŸj k
OracleMappingType
ŸŸl }
.
ŸŸ} ~
Varchar2ŸŸ~ Ü
,ŸŸÜ á
	directionŸŸà ë
:ŸŸë í"
ParameterDirectionŸŸì •
.ŸŸ• ¶
InputŸŸ¶ ´
)ŸŸ´ ¨
;ŸŸ¨ ≠
emailparameters
⁄⁄ +
.
⁄⁄+ ,
Add
⁄⁄, /
(
⁄⁄/ 0
name
⁄⁄0 4
:
⁄⁄4 5
$str
⁄⁄6 B
,
⁄⁄B C"
updadteEmployeeEmail
⁄⁄D X
.
⁄⁄X Y
	WorkEmail
⁄⁄Y b
,
⁄⁄b c
dbType
⁄⁄d j
:
⁄⁄j k
OracleMappingType
⁄⁄l }
.
⁄⁄} ~
Varchar2⁄⁄~ Ü
,⁄⁄Ü á
	direction⁄⁄à ë
:⁄⁄ë í"
ParameterDirection⁄⁄ì •
.⁄⁄• ¶
Input⁄⁄¶ ´
)⁄⁄´ ¨
;⁄⁄¨ ≠
updatedRecords
€€ *
=
€€+ ,
await
€€- 2

connection
€€3 =
.
€€= >
ExecuteAsync
€€> J
(
€€J K 
DatabaseProcedures
€€K ]
.
€€] ^!
SP_POR_UPDATE_EMAIL
€€^ q
,
€€q r
emailparameters€€s Ç
,€€Ç É
commandType€€Ñ è
:€€è ê
CommandType€€ë ú
.€€ú ù
StoredProcedure€€ù ¨
)€€¨ ≠
;€€≠ Æ
tran
‹‹  
.
‹‹  !
Commit
‹‹! '
(
‹‹' (
)
‹‹( )
;
‹‹) *
}
›› 
}
ﬁﬁ 
}
‡‡ 
}
·· 
resp
‚‚ 
=
‚‚ 
(
‚‚ 
updatedRecords
‚‚ "
*
‚‚# $
-
‚‚% &
$num
‚‚& '
)
‚‚' (
>
‚‚) *
$num
‚‚+ ,
;
‚‚, -
return
„„ 
resp
„„ 
;
„„ 
}
‰‰ 	
private
ÂÂ 
string
ÂÂ 
GenerateOtp
ÂÂ "
(
ÂÂ" #
)
ÂÂ# $
{
ÊÊ 	
string
ÁÁ 
	secretKey
ÁÁ 
=
ÁÁ 
$str
ÁÁ a
;
ÁÁa b
Totp
ËË 
otpCalc
ËË 
=
ËË 
new
ËË 
Totp
ËË #
(
ËË# $
Encoding
ËË$ ,
.
ËË, -
UTF8
ËË- 1
.
ËË1 2
GetBytes
ËË2 :
(
ËË: ;
	secretKey
ËË; D
)
ËËD E
,
ËËE F
$num
ËËG I
,
ËËI J
OtpHashMode
ËËK V
.
ËËV W
Sha512
ËËW ]
,
ËË] ^
$num
ËË_ `
)
ËË` a
;
ËËa b
string
ÈÈ 
otp
ÈÈ 
=
ÈÈ 
otpCalc
ÈÈ  
.
ÈÈ  !
ComputeTotp
ÈÈ! ,
(
ÈÈ, -
DateTime
ÈÈ- 5
.
ÈÈ5 6
UtcNow
ÈÈ6 <
)
ÈÈ< =
;
ÈÈ= >
return
ÍÍ 
otp
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
public
ÏÏ 
async
ÏÏ 
Task
ÏÏ 
<
ÏÏ 
bool
ÏÏ 
>
ÏÏ )
UpdateEmployeeFamilyDetails
ÏÏ  ;
(
ÏÏ; <
FamilyDetail
ÏÏ< H
familyDetails
ÏÏI V
)
ÏÏV W
{
ÌÌ 	
bool
ÓÓ 
resp
ÓÓ 
=
ÓÓ 
false
ÓÓ 
;
ÓÓ 
int
ÔÔ 
updatedRecords
ÔÔ 
=
ÔÔ  
$num
ÔÔ! "
;
ÔÔ" #
using
 
(
 
var
 

connection
 !
=
" #
await
$ )
base
* .
.
. /
CreateConnection
/ ?
(
? @
DbSchema
@ H
.
H I
PORTAL
I O
)
O P
)
P Q
{
ÒÒ %
OracleDynamicParameters
ÚÚ '

parameters
ÚÚ( 2
=
ÚÚ3 4
new
ÚÚ5 8%
OracleDynamicParameters
ÚÚ9 P
(
ÚÚP Q
)
ÚÚQ R
;
ÚÚR S
int
ÛÛ 
age
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 

parameters
ÙÙ 
.
ÙÙ 
Add
ÙÙ 
(
ÙÙ 
name
ÙÙ #
:
ÙÙ# $
$str
ÙÙ% 2
,
ÙÙ2 3
familyDetails
ÙÙ4 A
.
ÙÙA B

EmpFamSlno
ÙÙB L
,
ÙÙL M
dbType
ÙÙN T
:
ÙÙT U
OracleMappingType
ÙÙV g
.
ÙÙg h
Int32
ÙÙh m
,
ÙÙm n
	direction
ÙÙo x
:
ÙÙx y!
ParameterDirectionÙÙz å
.ÙÙå ç
InputÙÙç í
)ÙÙí ì
;ÙÙì î

parameters
ıı 
.
ıı 
Add
ıı 
(
ıı 
name
ıı #
:
ıı# $
$str
ıı% /
,
ıı/ 0
familyDetails
ıı1 >
.
ıı> ?
EmployeeSlno
ıı? K
,
ııK L
dbType
ııM S
:
ııS T
OracleMappingType
ııU f
.
ııf g
Int32
ııg l
,
ııl m
	direction
ıın w
:
ııw x!
ParameterDirectionııy ã
.ııã å
Inputııå ë
)ııë í
;ııí ì

parameters
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
name
ˆˆ #
:
ˆˆ# $
$str
ˆˆ% 0
,
ˆˆ0 1
familyDetails
ˆˆ2 ?
.
ˆˆ? @
Uniqueno
ˆˆ@ H
,
ˆˆH I
dbType
ˆˆJ P
:
ˆˆP Q
OracleMappingType
ˆˆR c
.
ˆˆc d
Int32
ˆˆd i
,
ˆˆi j
	direction
ˆˆk t
:
ˆˆt u!
ParameterDirectionˆˆv à
.ˆˆà â
Inputˆˆâ é
)ˆˆé è
;ˆˆè ê

parameters
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
name
˜˜ #
:
˜˜# $
$str
˜˜% 0
,
˜˜0 1
familyDetails
˜˜2 ?
.
˜˜? @
BrelSlno
˜˜@ H
,
˜˜H I
dbType
˜˜J P
:
˜˜P Q
OracleMappingType
˜˜R c
.
˜˜c d
Int32
˜˜d i
,
˜˜i j
	direction
˜˜k t
:
˜˜t u!
ParameterDirection˜˜v à
.˜˜à â
Input˜˜â é
)˜˜é è
;˜˜è ê

parameters
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 
name
¯¯ #
:
¯¯# $
$str
¯¯% ,
,
¯¯, -
familyDetails
¯¯. ;
.
¯¯; <
RelationName
¯¯< H
,
¯¯H I
dbType
¯¯J P
:
¯¯P Q
OracleMappingType
¯¯R c
.
¯¯c d
Varchar2
¯¯d l
,
¯¯l m
	direction
¯¯n w
:
¯¯w x!
ParameterDirection¯¯y ã
.¯¯ã å
Input¯¯å ë
)¯¯ë í
;¯¯í ì

parameters
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
name
˘˘ #
:
˘˘# $
$str
˘˘% +
,
˘˘+ ,
age
˘˘- 0
,
˘˘0 1
dbType
˘˘2 8
:
˘˘8 9
OracleMappingType
˘˘: K
.
˘˘K L
Int32
˘˘L Q
,
˘˘Q R
	direction
˘˘S \
:
˘˘\ ] 
ParameterDirection
˘˘^ p
.
˘˘p q
Input
˘˘q v
)
˘˘v w
;
˘˘w x

parameters
˙˙ 
.
˙˙ 
Add
˙˙ 
(
˙˙ 
name
˙˙ #
:
˙˙# $
$str
˙˙% 3
,
˙˙3 4
$num
˙˙5 6
,
˙˙6 7
dbType
˙˙8 >
:
˙˙> ?
OracleMappingType
˙˙@ Q
.
˙˙Q R
Int32
˙˙R W
,
˙˙W X
	direction
˙˙Y b
:
˙˙b c 
ParameterDirection
˙˙d v
.
˙˙v w
Input
˙˙w |
)
˙˙| }
;
˙˙} ~

parameters
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
name
˚˚ #
:
˚˚# $
$str
˚˚% 3
,
˚˚3 4
familyDetails
˚˚5 B
.
˚˚B C
Description
˚˚C N
,
˚˚N O
dbType
˚˚P V
:
˚˚V W
OracleMappingType
˚˚X i
.
˚˚i j
Varchar2
˚˚j r
,
˚˚r s
	direction
˚˚t }
:
˚˚} ~!
ParameterDirection˚˚ ë
.˚˚ë í
Input˚˚í ó
)˚˚ó ò
;˚˚ò ô

parameters
¸¸ 
.
¸¸ 
Add
¸¸ 
(
¸¸ 
name
¸¸ #
:
¸¸# $
$str
¸¸% 0
,
¸¸0 1
familyDetails
¸¸2 ?
.
¸¸? @
Userslno
¸¸@ H
,
¸¸H I
dbType
¸¸J P
:
¸¸P Q
OracleMappingType
¸¸R c
.
¸¸c d
Int32
¸¸d i
,
¸¸i j
	direction
¸¸k t
:
¸¸t u!
ParameterDirection¸¸v à
.¸¸à â
Input¸¸â é
)¸¸é è
;¸¸è ê

parameters
˝˝ 
.
˝˝ 
Add
˝˝ 
(
˝˝ 
name
˝˝ #
:
˝˝# $
$str
˝˝% 1
,
˝˝1 2
$str
˝˝3 5
,
˝˝5 6
dbType
˝˝7 =
:
˝˝= >
OracleMappingType
˝˝? P
.
˝˝P Q
Varchar2
˝˝Q Y
,
˝˝Y Z
	direction
˝˝[ d
:
˝˝d e 
ParameterDirection
˝˝f x
.
˝˝x y
Input
˝˝y ~
)
˝˝~ 
;˝˝ Ä

parameters
˛˛ 
.
˛˛ 
Add
˛˛ 
(
˛˛ 
name
˛˛ #
:
˛˛# $
$str
˛˛% +
,
˛˛+ ,
familyDetails
˛˛- :
.
˛˛: ;
RelationDOB
˛˛; F
!=
˛˛G I
null
˛˛J N
?
˛˛O P
familyDetails
˛˛Q ^
.
˛˛^ _
RelationDOB
˛˛_ j
.
˛˛j k
Value
˛˛k p
.
˛˛p q
ToOracleDate
˛˛q }
(
˛˛} ~
)
˛˛~ 
:˛˛Ä Å
null˛˛Ç Ü
,˛˛Ü á
dbType˛˛à é
:˛˛é è!
OracleMappingType˛˛ê °
.˛˛° ¢
Date˛˛¢ ¶
,˛˛¶ ß
	direction˛˛® ±
:˛˛± ≤"
ParameterDirection˛˛≥ ≈
.˛˛≈ ∆
Input˛˛∆ À
)˛˛À Ã
;˛˛Ã Õ
updatedRecords
ˇˇ 
=
ˇˇ  
await
ˇˇ! &

connection
ˇˇ' 1
.
ˇˇ1 2
ExecuteAsync
ˇˇ2 >
(
ˇˇ> ? 
DatabaseProcedures
ˇˇ? Q
.
ˇˇQ R%
SP_UPDATE_FAMILYDETAILS
ˇˇR i
,
ˇˇi j

parameters
ˇˇk u
,
ˇˇu v
commandTypeˇˇw Ç
:ˇˇÇ É
CommandTypeˇˇÑ è
.ˇˇè ê
StoredProcedureˇˇê ü
)ˇˇü †
;ˇˇ† °
}
ÄÄ 
resp
ÅÅ 
=
ÅÅ 
(
ÅÅ 
updatedRecords
ÅÅ "
*
ÅÅ# $
-
ÅÅ% &
$num
ÅÅ& '
)
ÅÅ' (
>
ÅÅ) *
$num
ÅÅ+ ,
;
ÅÅ, -
return
ÇÇ 
resp
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
public
ÖÖ 
async
ÖÖ 
Task
ÖÖ 
<
ÖÖ 
bool
ÖÖ 
>
ÖÖ ,
UpdateEmployeeEducationDetails
ÖÖ  >
(
ÖÖ> ?
EducationDetail
ÖÖ? N
educationDetail
ÖÖO ^
)
ÖÖ^ _
{
ÜÜ 	
bool
áá 
resp
áá 
=
áá 
false
áá 
;
áá 
int
àà 
updatedRecords
àà 
=
àà  
$num
àà! "
;
àà" #
using
ää 
(
ää 
var
ää 

connection
ää !
=
ää" #
await
ää$ )
base
ää* .
.
ää. /
CreateConnection
ää/ ?
(
ää? @
DbSchema
ää@ H
.
ääH I
PORTAL
ääI O
)
ääO P
)
ääP Q
{
ãã %
OracleDynamicParameters
åå '

parameters
åå( 2
=
åå3 4
new
åå5 8%
OracleDynamicParameters
åå9 P
(
ååP Q
)
ååQ R
;
ååR S

parameters
éé 
.
éé 
Add
éé 
(
éé 
name
éé #
:
éé# $
$str
éé% 2
,
éé2 3
educationDetail
éé4 C
.
ééC D

Empeduslno
ééD N
,
ééN O
dbType
ééP V
:
ééV W
OracleMappingType
ééX i
.
ééi j
Int32
ééj o
,
ééo p
	direction
ééq z
:
ééz {!
ParameterDirectionéé| é
.ééé è
Inputééè î
)ééî ï
;ééï ñ

parameters
èè 
.
èè 
Add
èè 
(
èè 
name
èè #
:
èè# $
$str
èè% /
,
èè/ 0
educationDetail
èè1 @
.
èè@ A
EmployeeSlno
èèA M
,
èèM N
dbType
èèO U
:
èèU V
OracleMappingType
èèW h
.
èèh i
Int32
èèi n
,
èèn o
	direction
èèp y
:
èèy z!
ParameterDirectionèè{ ç
.èèç é
Inputèèé ì
)èèì î
;èèî ï

parameters
êê 
.
êê 
Add
êê 
(
êê 
name
êê #
:
êê# $
$str
êê% 0
,
êê0 1
educationDetail
êê2 A
.
êêA B
Uniqueno
êêB J
,
êêJ K
dbType
êêL R
:
êêR S
OracleMappingType
êêT e
.
êêe f
Int32
êêf k
,
êêk l
	direction
êêm v
:
êêv w!
ParameterDirectionêêx ä
.êêä ã
Inputêêã ê
)êêê ë
;êêë í

parameters
ëë 
.
ëë 
Add
ëë 
(
ëë 
name
ëë #
:
ëë# $
$str
ëë% 5
,
ëë5 6
educationDetail
ëë7 F
.
ëëF G
EducationSlno
ëëG T
,
ëëT U
dbType
ëëV \
:
ëë\ ]
OracleMappingType
ëë^ o
.
ëëo p
Int32
ëëp u
,
ëëu v
	directionëëw Ä
:ëëÄ Å"
ParameterDirectionëëÇ î
.ëëî ï
Inputëëï ö
)ëëö õ
;ëëõ ú

parameters
íí 
.
íí 
Add
íí 
(
íí 
name
íí #
:
íí# $
$str
íí% 5
,
íí5 6
educationDetail
íí7 F
.
ííF G
EducourseSlno
ííG T
,
ííT U
dbType
ííV \
:
íí\ ]
OracleMappingType
íí^ o
.
íío p
Int32
ííp u
,
ííu v
	directionííw Ä
:ííÄ Å"
ParameterDirectionííÇ î
.ííî ï
Inputííï ö
)ííö õ
;ííõ ú

parameters
ìì 
.
ìì 
Add
ìì 
(
ìì 
name
ìì #
:
ìì# $
$str
ìì% 2
,
ìì2 3
educationDetail
ìì4 C
.
ììC D

Addquaslno
ììD N
,
ììN O
dbType
ììP V
:
ììV W
OracleMappingType
ììX i
.
ììi j
Int32
ììj o
,
ììo p
	direction
ììq z
:
ììz {!
ParameterDirectionìì| é
.ììé è
Inputììè î
)ììî ï
;ììï ñ

parameters
îî 
.
îî 
Add
îî 
(
îî 
name
îî #
:
îî# $
$str
îî% ,
,
îî, -
educationDetail
îî. =
.
îî= >
HtNo
îî> B
,
îîB C
dbType
îîD J
:
îîJ K
OracleMappingType
îîL ]
.
îî] ^
Varchar2
îî^ f
,
îîf g
	direction
îîh q
:
îîq r!
ParameterDirectionîîs Ö
.îîÖ Ü
InputîîÜ ã
)îîã å
;îîå ç

parameters
ïï 
.
ïï 
Add
ïï 
(
ïï 
name
ïï #
:
ïï# $
$str
ïï% 6
,
ïï6 7
educationDetail
ïï8 G
.
ïïG H
Specialization
ïïH V
,
ïïV W
dbType
ïïX ^
:
ïï^ _
OracleMappingType
ïï` q
.
ïïq r
Varchar2
ïïr z
,
ïïz {
	directionïï| Ö
:ïïÖ Ü"
ParameterDirectionïïá ô
.ïïô ö
Inputïïö ü
)ïïü †
;ïï† °

parameters
ññ 
.
ññ 
Add
ññ 
(
ññ 
name
ññ #
:
ññ# $
$str
ññ% 3
,
ññ3 4
educationDetail
ññ5 D
.
ññD E
CollegeName
ññE P
,
ññP Q
dbType
ññR X
:
ññX Y
OracleMappingType
ññZ k
.
ññk l
Varchar2
ññl t
,
ññt u
	direction
ññv 
:ññ Ä"
ParameterDirectionññÅ ì
.ññì î
Inputññî ô
)ññô ö
;ññö õ

parameters
óó 
.
óó 
Add
óó 
(
óó 
name
óó #
:
óó# $
$str
óó% 7
,
óó7 8
educationDetail
óó9 H
.
óóH I
UniversityBoard
óóI X
,
óóX Y
dbType
óóZ `
:
óó` a
OracleMappingType
óób s
.
óós t
Int32
óót y
,
óóy z
	directionóó{ Ñ
:óóÑ Ö"
ParameterDirectionóóÜ ò
.óóò ô
Inputóóô û
)óóû ü
;óóü †

parameters
òò 
.
òò 
Add
òò 
(
òò 
name
òò #
:
òò# $
$str
òò% ;
,
òò; <
educationDetail
òò= L
.
òòL M!
UniversityBoardName
òòM `
,
òò` a
dbType
òòb h
:
òòh i
OracleMappingType
òòj {
.
òò{ |
Varchar2òò| Ñ
,òòÑ Ö
	directionòòÜ è
:òòè ê"
ParameterDirectionòòë £
.òò£ §
Inputòò§ ©
)òò© ™
;òò™ ´

parameters
ôô 
.
ôô 
Add
ôô 
(
ôô 
name
ôô #
:
ôô# $
$str
ôô% 5
,
ôô5 6
educationDetail
ôô7 F
.
ôôF G
YearOfPassing
ôôG T
,
ôôT U
dbType
ôôV \
:
ôô\ ]
OracleMappingType
ôô^ o
.
ôôo p
Int32
ôôp u
,
ôôu v
	directionôôw Ä
:ôôÄ Å"
ParameterDirectionôôÇ î
.ôôî ï
Inputôôï ö
)ôôö õ
;ôôõ ú

parameters
öö 
.
öö 
Add
öö 
(
öö 
name
öö #
:
öö# $
$str
öö% 3
,
öö3 4
educationDetail
öö5 D
.
ööD E

Percentage
ööE O
,
ööO P
dbType
ööQ W
:
ööW X
OracleMappingType
ööY j
.
ööj k
Decimal
öök r
,
öör s
	direction
ööt }
:
öö} ~!
ParameterDirectionöö ë
.ööë í
Inputööí ó
)ööó ò
;ööò ô

parameters
õõ 
.
õõ 
Add
õõ 
(
õõ 
name
õõ #
:
õõ# $
$str
õõ% 5
,
õõ5 6
educationDetail
õõ7 F
.
õõF G
Marksobtained
õõG T
,
õõT U
dbType
õõV \
:
õõ\ ]
OracleMappingType
õõ^ o
.
õõo p
Int32
õõp u
,
õõu v
	directionõõw Ä
:õõÄ Å"
ParameterDirectionõõÇ î
.õõî ï
Inputõõï ö
)õõö õ
;õõõ ú

parameters
úú 
.
úú 
Add
úú 
(
úú 
name
úú #
:
úú# $
$str
úú% 4
,
úú4 5
educationDetail
úú6 E
.
úúE F
Reasonforgap
úúF R
,
úúR S
dbType
úúT Z
:
úúZ [
OracleMappingType
úú\ m
.
úúm n
Varchar2
úún v
,
úúv w
	directionúúx Å
:úúÅ Ç"
ParameterDirectionúúÉ ï
.úúï ñ
Inputúúñ õ
)úúõ ú
;úúú ù

parameters
ùù 
.
ùù 
Add
ùù 
(
ùù 
name
ùù #
:
ùù# $
$str
ùù% 7
,
ùù7 8
educationDetail
ùù9 H
.
ùùH I
ExtraActivities
ùùI X
,
ùùX Y
dbType
ùùZ `
:
ùù` a
OracleMappingType
ùùb s
.
ùùs t
Varchar2
ùùt |
,
ùù| }
	directionùù~ á
:ùùá à"
ParameterDirectionùùâ õ
.ùùõ ú
Inputùùú °
)ùù° ¢
;ùù¢ £

parameters
ûû 
.
ûû 
Add
ûû 
(
ûû 
name
ûû #
:
ûû# $
$str
ûû% 0
,
ûû0 1
educationDetail
ûû2 A
.
ûûA B
UserSlno
ûûB J
,
ûûJ K
dbType
ûûL R
:
ûûR S
OracleMappingType
ûûT e
.
ûûe f
Int32
ûûf k
,
ûûk l
	direction
ûûm v
:
ûûv w!
ParameterDirectionûûx ä
.ûûä ã
Inputûûã ê
)ûûê ë
;ûûë í

parameters
üü 
.
üü 
Add
üü 
(
üü 
name
üü #
:
üü# $
$str
üü% 1
,
üü1 2
$str
üü3 B
,
üüB C
dbType
üüD J
:
üüJ K
OracleMappingType
üüL ]
.
üü] ^
Varchar2
üü^ f
,
üüf g
	direction
üüh q
:
üüq r!
ParameterDirectionüüs Ö
.üüÖ Ü
InputüüÜ ã
)üüã å
;üüå ç
updatedRecords
°° 
=
°°  
await
°°! &

connection
°°' 1
.
°°1 2
ExecuteAsync
°°2 >
(
°°> ? 
DatabaseProcedures
°°? Q
.
°°Q R(
SP_UPDATE_EDUCATIONDETAILS
°°R l
,
°°l m

parameters
°°n x
,
°°x y
commandType°°z Ö
:°°Ö Ü
CommandType°°á í
.°°í ì
StoredProcedure°°ì ¢
)°°¢ £
;°°£ §
}
¢¢ 
resp
§§ 
=
§§ 
(
§§ 
updatedRecords
§§ "
*
§§# $
-
§§% &
$num
§§& '
)
§§' (
>
§§) *
$num
§§+ ,
;
§§, -
return
•• 
resp
•• 
;
•• 
}
¶¶ 	
public
®® 
async
®® 
Task
®® 
<
®® 
bool
®® 
>
®® -
UpdateEmployeeExperienceDetails
®®  ?
(
®®? @
ExperienceDetail
®®@ P
experienceDetail
®®Q a
)
®®a b
{
©© 	
bool
™™ 
resp
™™ 
=
™™ 
false
™™ 
;
™™ 
int
´´ 
updatedRecords
´´ 
=
´´  
$num
´´! "
;
´´" #
using
≠≠ 
(
≠≠ 
var
≠≠ 

connection
≠≠ !
=
≠≠" #
await
≠≠$ )
base
≠≠* .
.
≠≠. /
CreateConnection
≠≠/ ?
(
≠≠? @
DbSchema
≠≠@ H
.
≠≠H I
PORTAL
≠≠I O
)
≠≠O P
)
≠≠P Q
{
ÆÆ %
OracleDynamicParameters
∞∞ '

parameters
∞∞( 2
=
∞∞3 4
new
∞∞5 8%
OracleDynamicParameters
∞∞9 P
(
∞∞P Q
)
∞∞Q R
;
∞∞R S

parameters
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
name
≤≤ #
:
≤≤# $
$str
≤≤% 0
,
≤≤0 1
experienceDetail
≤≤2 B
.
≤≤B C
Oldempno
≤≤C K
,
≤≤K L
dbType
≤≤M S
:
≤≤S T
OracleMappingType
≤≤U f
.
≤≤f g
Varchar2
≤≤g o
,
≤≤o p
	direction
≤≤q z
:
≤≤z {!
ParameterDirection≤≤| é
.≤≤é è
Input≤≤è î
)≤≤î ï
;≤≤ï ñ

parameters
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
name
≥≥ #
:
≥≥# $
$str
≥≥% -
,
≥≥- .
experienceDetail
≥≥/ ?
.
≥≥? @
Place
≥≥@ E
,
≥≥E F
dbType
≥≥G M
:
≥≥M N
OracleMappingType
≥≥O `
.
≥≥` a
Varchar2
≥≥a i
,
≥≥i j
	direction
≥≥k t
:
≥≥t u!
ParameterDirection≥≥v à
.≥≥à â
Input≥≥â é
)≥≥é è
;≥≥è ê

parameters
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
name
¥¥ #
:
¥¥# $
$str
¥¥% /
,
¥¥/ 0
experienceDetail
¥¥1 A
.
¥¥A B
RefName
¥¥B I
,
¥¥I J
dbType
¥¥K Q
:
¥¥Q R
OracleMappingType
¥¥S d
.
¥¥d e
Varchar2
¥¥e m
,
¥¥m n
	direction
¥¥o x
:
¥¥x y!
ParameterDirection¥¥z å
.¥¥å ç
Input¥¥ç í
)¥¥í ì
;¥¥ì î

parameters
µµ 
.
µµ 
Add
µµ 
(
µµ 
name
µµ #
:
µµ# $
$str
µµ% 2
,
µµ2 3
experienceDetail
µµ4 D
.
µµD E

Refphoneno
µµE O
,
µµO P
dbType
µµQ W
:
µµW X
OracleMappingType
µµY j
.
µµj k
Varchar2
µµk s
,
µµs t
	direction
µµu ~
:
µµ~ "
ParameterDirectionµµÄ í
.µµí ì
Inputµµì ò
)µµò ô
;µµô ö

parameters
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
name
∂∂ #
:
∂∂# $
$str
∂∂% 0
,
∂∂0 1
experienceDetail
∂∂2 B
.
∂∂B C
Refemail
∂∂C K
,
∂∂K L
dbType
∂∂M S
:
∂∂S T
OracleMappingType
∂∂U f
.
∂∂f g
Varchar2
∂∂g o
,
∂∂o p
	direction
∂∂q z
:
∂∂z {!
ParameterDirection∂∂| é
.∂∂é è
Input∂∂è î
)∂∂î ï
;∂∂ï ñ

parameters
∑∑ 
.
∑∑ 
Add
∑∑ 
(
∑∑ 
name
∑∑ #
:
∑∑# $
$str
∑∑% 3
,
∑∑3 4
experienceDetail
∑∑5 E
.
∑∑E F
Description
∑∑F Q
,
∑∑Q R
dbType
∑∑S Y
:
∑∑Y Z
OracleMappingType
∑∑[ l
.
∑∑l m
Varchar2
∑∑m u
,
∑∑u v
	direction∑∑w Ä
:∑∑Ä Å"
ParameterDirection∑∑Ç î
.∑∑î ï
Input∑∑ï ö
)∑∑ö õ
;∑∑õ ú

parameters
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
name
∏∏ #
:
∏∏# $
$str
∏∏% 1
,
∏∏1 2
$str
∏∏3 5
,
∏∏5 6
dbType
∏∏7 =
:
∏∏= >
OracleMappingType
∏∏? P
.
∏∏P Q
Varchar2
∏∏Q Y
,
∏∏Y Z
	direction
∏∏[ d
:
∏∏d e 
ParameterDirection
∏∏f x
.
∏∏x y
Input
∏∏y ~
)
∏∏~ 
;∏∏ Ä

parameters
ππ 
.
ππ 
Add
ππ 
(
ππ 
name
ππ #
:
ππ# $
$str
ππ% 0
,
ππ0 1
experienceDetail
ππ2 B
.
ππB C
Uniqueno
ππC K
,
ππK L
dbType
ππM S
:
ππS T
OracleMappingType
ππU f
.
ππf g
Int32
ππg l
,
ππl m
	direction
ππn w
:
ππw x!
ParameterDirectionππy ã
.ππã å
Inputππå ë
)ππë í
;ππí ì

parameters
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
name
∫∫ #
:
∫∫# $
$str
∫∫% .
,
∫∫. /
experienceDetail
∫∫0 @
.
∫∫@ A
Salary
∫∫A G
,
∫∫G H
dbType
∫∫I O
:
∫∫O P
OracleMappingType
∫∫Q b
.
∫∫b c
Int32
∫∫c h
,
∫∫h i
	direction
∫∫j s
:
∫∫s t!
ParameterDirection∫∫u á
.∫∫á à
Input∫∫à ç
)∫∫ç é
;∫∫é è

parameters
ªª 
.
ªª 
Add
ªª 
(
ªª 
name
ªª #
:
ªª# $
$str
ªª% 2
,
ªª2 3
experienceDetail
ªª4 D
.
ªªD E

SalaryUnit
ªªE O
,
ªªO P
dbType
ªªQ W
:
ªªW X
OracleMappingType
ªªY j
.
ªªj k
Int32
ªªk p
,
ªªp q
	direction
ªªr {
:
ªª{ |!
ParameterDirectionªª} è
.ªªè ê
Inputªªê ï
)ªªï ñ
;ªªñ ó

parameters
ºº 
.
ºº 
Add
ºº 
(
ºº 
name
ºº #
:
ºº# $
$str
ºº% 3
,
ºº3 4
experienceDetail
ºº5 E
.
ººE F
Refmobileno
ººF Q
,
ººQ R
dbType
ººS Y
:
ººY Z
OracleMappingType
ºº[ l
.
ººl m
Int64
ººm r
,
ººr s
	direction
ººt }
:
ºº} ~!
ParameterDirectionºº ë
.ººë í
Inputººí ó
)ººó ò
;ººò ô

parameters
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
name
ΩΩ #
:
ΩΩ# $
$str
ΩΩ% 0
,
ΩΩ0 1
experienceDetail
ΩΩ2 B
.
ΩΩB C
Userslno
ΩΩC K
,
ΩΩK L
dbType
ΩΩM S
:
ΩΩS T
OracleMappingType
ΩΩU f
.
ΩΩf g
Int32
ΩΩg l
,
ΩΩl m
	direction
ΩΩn w
:
ΩΩw x!
ParameterDirectionΩΩy ã
.ΩΩã å
InputΩΩå ë
)ΩΩë í
;ΩΩí ì

parameters
ææ 
.
ææ 
Add
ææ 
(
ææ 
name
ææ #
:
ææ# $
$str
ææ% 1
,
ææ1 2
experienceDetail
ææ3 C
.
ææC D
	EmpExSlno
ææD M
,
ææM N
dbType
ææO U
:
ææU V
OracleMappingType
ææW h
.
ææh i
Int32
ææi n
,
ææn o
	direction
ææp y
:
ææy z!
ParameterDirectionææ{ ç
.ææç é
Inputææé ì
)ææì î
;ææî ï

parameters
øø 
.
øø 
Add
øø 
(
øø 
name
øø #
:
øø# $
$str
øø% /
,
øø/ 0
experienceDetail
øø1 A
.
øøA B
EmployeeSlno
øøB N
,
øøN O
dbType
øøP V
:
øøV W
OracleMappingType
øøX i
.
øøi j
Int32
øøj o
,
øøo p
	direction
øøq z
:
øøz {!
ParameterDirectionøø| é
.øøé è
Inputøøè î
)øøî ï
;øøï ñ

parameters
¿¿ 
.
¿¿ 
Add
¿¿ 
(
¿¿ 
name
¿¿ #
:
¿¿# $
$str
¿¿% 4
,
¿¿4 5
experienceDetail
¿¿6 F
.
¿¿F G
Organisation
¿¿G S
,
¿¿S T
dbType
¿¿U [
:
¿¿[ \
OracleMappingType
¿¿] n
.
¿¿n o
Varchar2
¿¿o w
,
¿¿w x
	direction¿¿y Ç
:¿¿Ç É"
ParameterDirection¿¿Ñ ñ
.¿¿ñ ó
Input¿¿ó ú
)¿¿ú ù
;¿¿ù û

parameters
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡ 
name
¡¡ #
:
¡¡# $
$str
¡¡% 3
,
¡¡3 4
experienceDetail
¡¡5 E
.
¡¡E F
Designation
¡¡F Q
,
¡¡Q R
dbType
¡¡S Y
:
¡¡Y Z
OracleMappingType
¡¡[ l
.
¡¡l m
Varchar2
¡¡m u
,
¡¡u v
	direction¡¡w Ä
:¡¡Ä Å"
ParameterDirection¡¡Ç î
.¡¡î ï
Input¡¡ï ö
)¡¡ö õ
;¡¡õ ú

parameters
¬¬ 
.
¬¬ 
Add
¬¬ 
(
¬¬ 
name
¬¬ #
:
¬¬# $
$str
¬¬% 0
,
¬¬0 1
experienceDetail
¬¬2 B
.
¬¬B C
FromDate
¬¬C K
!=
¬¬L N
null
¬¬O S
?
¬¬T U
experienceDetail
¬¬V f
.
¬¬f g
FromDate
¬¬g o
.
¬¬o p
Value
¬¬p u
.
¬¬u v
ToOracleDate¬¬v Ç
(¬¬Ç É
)¬¬É Ñ
:¬¬Ö Ü
null¬¬á ã
,¬¬ã å
dbType¬¬ç ì
:¬¬ì î!
OracleMappingType¬¬ï ¶
.¬¬¶ ß
Date¬¬ß ´
,¬¬´ ¨
	direction¬¬≠ ∂
:¬¬∂ ∑"
ParameterDirection¬¬∏  
.¬¬  À
Input¬¬À –
)¬¬– —
;¬¬— “

parameters
√√ 
.
√√ 
Add
√√ 
(
√√ 
name
√√ #
:
√√# $
$str
√√% .
,
√√. /
experienceDetail
√√0 @
.
√√@ A
ToDate
√√A G
!=
√√H J
null
√√K O
?
√√P Q
experienceDetail
√√R b
.
√√b c
ToDate
√√c i
.
√√i j
Value
√√j o
.
√√o p
ToOracleDate
√√p |
(
√√| }
)
√√} ~
:√√ Ä
null√√Å Ö
,√√Ö Ü
dbType√√á ç
:√√ç é!
OracleMappingType√√è †
.√√† °
Date√√° •
,√√• ¶
	direction√√ß ∞
:√√∞ ±"
ParameterDirection√√≤ ƒ
.√√ƒ ≈
Input√√≈  
)√√  À
;√√À Ã

parameters
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
name
ƒƒ #
:
ƒƒ# $
$str
ƒƒ% 5
,
ƒƒ5 6
experienceDetail
ƒƒ7 G
.
ƒƒG H
IsNarayanaEmp
ƒƒH U
,
ƒƒU V
dbType
ƒƒW ]
:
ƒƒ] ^
OracleMappingType
ƒƒ_ p
.
ƒƒp q
Int32
ƒƒq v
,
ƒƒv w
	directionƒƒx Å
:ƒƒÅ Ç"
ParameterDirectionƒƒÉ ï
.ƒƒï ñ
Inputƒƒñ õ
)ƒƒõ ú
;ƒƒú ù
updatedRecords
∆∆ 
=
∆∆  
await
∆∆! &

connection
∆∆' 1
.
∆∆1 2
ExecuteAsync
∆∆2 >
(
∆∆> ? 
DatabaseProcedures
∆∆? Q
.
∆∆Q R)
SP_UPDATE_EXPERIENCEDETAILS
∆∆R m
,
∆∆m n

parameters
∆∆o y
,
∆∆y z
commandType∆∆{ Ü
:∆∆Ü á
CommandType∆∆à ì
.∆∆ì î
StoredProcedure∆∆î £
)∆∆£ §
;∆∆§ •
}
«« 
resp
…… 
=
…… 
(
…… 
updatedRecords
…… "
*
……# $
-
……% &
$num
……& '
)
……' (
>
……) *
$num
……+ ,
;
……, -
return
   
resp
   
;
   
}
ÀÀ 	
public
ŒŒ 
async
ŒŒ 
Task
ŒŒ 
<
ŒŒ 
bool
ŒŒ 
>
ŒŒ )
DeleteEmployeeFamilyDetails
ŒŒ  ;
(
ŒŒ; <
int
ŒŒ< ?

empFamSlno
ŒŒ@ J
)
ŒŒJ K
{
œœ 	
bool
–– 
resp
–– 
=
–– 
false
–– 
;
–– 
int
—— 
deletedRecords
—— 
=
——  
$num
——! "
;
——" #
using
““ 
(
““ 
var
““ 

connection
““ !
=
““" #
await
““$ )
base
““* .
.
““. /
CreateConnection
““/ ?
(
““? @
DbSchema
““@ H
.
““H I
PORTAL
““I O
)
““O P
)
““P Q
{
”” %
OracleDynamicParameters
‘‘ '

parameters
‘‘( 2
=
‘‘3 4
new
‘‘5 8%
OracleDynamicParameters
‘‘9 P
(
‘‘P Q
)
‘‘Q R
;
‘‘R S

parameters
÷÷ 
.
÷÷ 
Add
÷÷ 
(
÷÷ 
name
÷÷ #
:
÷÷# $
$str
÷÷% 2
,
÷÷2 3

empFamSlno
÷÷4 >
,
÷÷> ?
dbType
÷÷@ F
:
÷÷F G
OracleMappingType
÷÷H Y
.
÷÷Y Z
Int32
÷÷Z _
,
÷÷_ `
	direction
÷÷a j
:
÷÷j k 
ParameterDirection
÷÷l ~
.
÷÷~ 
Input÷÷ Ñ
)÷÷Ñ Ö
;÷÷Ö Ü
deletedRecords
◊◊ 
=
◊◊  
await
◊◊! &

connection
◊◊' 1
.
◊◊1 2
ExecuteAsync
◊◊2 >
(
◊◊> ? 
DatabaseProcedures
◊◊? Q
.
◊◊Q R$
SP_DELETE_EMPFAMILY_DT
◊◊R h
,
◊◊h i

parameters
◊◊j t
,
◊◊t u
commandType◊◊v Å
:◊◊Å Ç
CommandType◊◊É é
.◊◊é è
StoredProcedure◊◊è û
)◊◊û ü
;◊◊ü †
}
ÿÿ 
resp
ŸŸ 
=
ŸŸ 
(
ŸŸ 
deletedRecords
ŸŸ "
*
ŸŸ# $
-
ŸŸ% &
$num
ŸŸ& '
)
ŸŸ' (
>
ŸŸ) *
$num
ŸŸ+ ,
;
ŸŸ, -
return
⁄⁄ 
resp
⁄⁄ 
;
⁄⁄ 
}
€€ 	
public
›› 
async
›› 
Task
›› 
<
›› 
bool
›› 
>
›› ,
DeleteEmployeeEducationDetails
››  >
(
››> ?
int
››? B

empEduSlno
››C M
)
››M N
{
ﬁﬁ 	
bool
ﬂﬂ 
resp
ﬂﬂ 
=
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
int
‡‡ 
deletedRecords
‡‡ 
=
‡‡  
$num
‡‡! "
;
‡‡" #
using
·· 
(
·· 
var
·· 

connection
·· !
=
··" #
await
··$ )
base
··* .
.
··. /
CreateConnection
··/ ?
(
··? @
DbSchema
··@ H
.
··H I
PORTAL
··I O
)
··O P
)
··P Q
{
‚‚ %
OracleDynamicParameters
„„ '

parameters
„„( 2
=
„„3 4
new
„„5 8%
OracleDynamicParameters
„„9 P
(
„„P Q
)
„„Q R
;
„„R S

parameters
ÂÂ 
.
ÂÂ 
Add
ÂÂ 
(
ÂÂ 
name
ÂÂ #
:
ÂÂ# $
$str
ÂÂ% 2
,
ÂÂ2 3

empEduSlno
ÂÂ4 >
,
ÂÂ> ?
dbType
ÂÂ@ F
:
ÂÂF G
OracleMappingType
ÂÂH Y
.
ÂÂY Z
Int32
ÂÂZ _
,
ÂÂ_ `
	direction
ÂÂa j
:
ÂÂj k 
ParameterDirection
ÂÂl ~
.
ÂÂ~ 
InputÂÂ Ñ
)ÂÂÑ Ö
;ÂÂÖ Ü
deletedRecords
ÊÊ 
=
ÊÊ  
await
ÊÊ! &

connection
ÊÊ' 1
.
ÊÊ1 2
ExecuteAsync
ÊÊ2 >
(
ÊÊ> ? 
DatabaseProcedures
ÊÊ? Q
.
ÊÊQ R'
SP_DELETE_EMPEDUCATION_DT
ÊÊR k
,
ÊÊk l

parameters
ÊÊm w
,
ÊÊw x
commandTypeÊÊy Ñ
:ÊÊÑ Ö
CommandTypeÊÊÜ ë
.ÊÊë í
StoredProcedureÊÊí °
)ÊÊ° ¢
;ÊÊ¢ £
}
ÁÁ 
resp
ËË 
=
ËË 
(
ËË 
deletedRecords
ËË "
*
ËË# $
-
ËË% &
$num
ËË& '
)
ËË' (
>
ËË) *
$num
ËË+ ,
;
ËË, -
return
ÈÈ 
resp
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
public
ÏÏ 
async
ÏÏ 
Task
ÏÏ 
<
ÏÏ 
bool
ÏÏ 
>
ÏÏ -
DeleteEmployeeExperienceDetails
ÏÏ  ?
(
ÏÏ? @
int
ÏÏ@ C
	empExSlno
ÏÏD M
)
ÏÏM N
{
ÌÌ 	
bool
ÓÓ 
resp
ÓÓ 
=
ÓÓ 
false
ÓÓ 
;
ÓÓ 
int
ÔÔ 
deletedRecords
ÔÔ 
=
ÔÔ  
$num
ÔÔ! "
;
ÔÔ" #
using
 
(
 
var
 

connection
 !
=
" #
await
$ )
base
* .
.
. /
CreateConnection
/ ?
(
? @
DbSchema
@ H
.
H I
PORTAL
I O
)
O P
)
P Q
{
ÒÒ %
OracleDynamicParameters
ÚÚ '

parameters
ÚÚ( 2
=
ÚÚ3 4
new
ÚÚ5 8%
OracleDynamicParameters
ÚÚ9 P
(
ÚÚP Q
)
ÚÚQ R
;
ÚÚR S

parameters
ÙÙ 
.
ÙÙ 
Add
ÙÙ 
(
ÙÙ 
name
ÙÙ #
:
ÙÙ# $
$str
ÙÙ% 1
,
ÙÙ1 2
	empExSlno
ÙÙ3 <
,
ÙÙ< =
dbType
ÙÙ> D
:
ÙÙD E
OracleMappingType
ÙÙF W
.
ÙÙW X
Int32
ÙÙX ]
,
ÙÙ] ^
	direction
ÙÙ_ h
:
ÙÙh i 
ParameterDirection
ÙÙj |
.
ÙÙ| }
InputÙÙ} Ç
)ÙÙÇ É
;ÙÙÉ Ñ
deletedRecords
ıı 
=
ıı  
await
ıı! &

connection
ıı' 1
.
ıı1 2
ExecuteAsync
ıı2 >
(
ıı> ? 
DatabaseProcedures
ıı? Q
.
ııQ R(
SP_DELETE_EMPEXPERIENCE_DT
ııR l
,
ııl m

parameters
ıın x
,
ııx y
commandTypeıız Ö
:ııÖ Ü
CommandTypeııá í
.ııí ì
StoredProcedureııì ¢
)ıı¢ £
;ıı£ §
}
ˆˆ 
resp
˜˜ 
=
˜˜ 
(
˜˜ 
deletedRecords
˜˜ "
*
˜˜# $
-
˜˜% &
$num
˜˜& '
)
˜˜' (
>
˜˜) *
$num
˜˜+ ,
;
˜˜, -
return
¯¯ 
resp
¯¯ 
;
¯¯ 
}
˘˘ 	
public
˚˚ 
async
˚˚ 
Task
˚˚ 
<
˚˚ 
PagedResultSet
˚˚ (
<
˚˚( )
EmployeeProfile
˚˚) 8
>
˚˚8 9
>
˚˚9 :
GetMyTeamMembers
˚˚; K
(
˚˚K L/
!EmployeeInformationSearchCriteria
˚˚L m
searchCriteria
˚˚n |
)
˚˚| }
{
¸¸ 	
List
˝˝ 
<
˝˝ 
EmployeeProfile
˝˝  
>
˝˝  !
mappedScreens
˝˝" /
=
˝˝0 1
null
˝˝2 6
;
˝˝6 7
PagedResultSet
˛˛ 
<
˛˛ 
EmployeeProfile
˛˛ *
>
˛˛* +
	menuItems
˛˛, 5
=
˛˛6 7
null
˛˛8 <
;
˛˛< =
int
ˇˇ 
totalRecords
ˇˇ 
=
ˇˇ 
$num
ˇˇ  
;
ˇˇ  !
using
ÄÄ 
(
ÄÄ 
IDbConnection
ÄÄ  

connection
ÄÄ! +
=
ÄÄ, -
await
ÄÄ. 3
CreateConnection
ÄÄ4 D
(
ÄÄD E
DbSchema
ÄÄE M
.
ÄÄM N
PORTAL
ÄÄN T
)
ÄÄT U
)
ÄÄU V
{
ÅÅ %
OracleDynamicParameters
ÇÇ '

parameters
ÇÇ( 2
=
ÇÇ3 4
new
ÇÇ5 8%
OracleDynamicParameters
ÇÇ9 P
(
ÇÇP Q
)
ÇÇQ R
;
ÇÇR S
string
ÉÉ 

templateid
ÉÉ !
=
ÉÉ" #!
ApplicationSettings
ÉÉ$ 7
.
ÉÉ7 8
Current
ÉÉ8 ?
.
ÉÉ? @
HrmsOtpTemplate
ÉÉ@ O
;
ÉÉO P

parameters
ÑÑ 
.
ÑÑ 
Add
ÑÑ 
(
ÑÑ 
name
ÑÑ #
:
ÑÑ# $
$str
ÑÑ% 2
,
ÑÑ2 3
searchCriteria
ÑÑ4 B
.
ÑÑB C
	ManagerId
ÑÑC L
,
ÑÑL M
dbType
ÑÑN T
:
ÑÑT U
OracleMappingType
ÑÑV g
.
ÑÑg h
Int32
ÑÑh m
,
ÑÑm n
	direction
ÑÑo x
:
ÑÑx y!
ParameterDirectionÑÑz å
.ÑÑå ç
InputÑÑç í
)ÑÑí ì
;ÑÑì î

parameters
ÖÖ 
.
ÖÖ 
Add
ÖÖ 
(
ÖÖ 
name
ÖÖ #
:
ÖÖ# $
$str
ÖÖ% 4
,
ÖÖ4 5
searchCriteria
ÖÖ6 D
.
ÖÖD E
IncludeSelf
ÖÖE P
,
ÖÖP Q
dbType
ÖÖR X
:
ÖÖX Y
OracleMappingType
ÖÖZ k
.
ÖÖk l
Int32
ÖÖl q
,
ÖÖq r
	direction
ÖÖs |
:
ÖÖ| }!
ParameterDirectionÖÖ~ ê
.ÖÖê ë
InputÖÖë ñ
)ÖÖñ ó
;ÖÖó ò

parameters
ÜÜ 
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
name
ÜÜ #
:
ÜÜ# $
$str
ÜÜ% 5
,
ÜÜ5 6
dbType
ÜÜ7 =
:
ÜÜ= >
OracleMappingType
ÜÜ? P
.
ÜÜP Q
Int32
ÜÜQ V
,
ÜÜV W
	direction
ÜÜX a
:
ÜÜa b 
ParameterDirection
ÜÜc u
.
ÜÜu v
Output
ÜÜv |
)
ÜÜ| }
;
ÜÜ} ~

parameters
áá 
.
áá 
Add
áá 
(
áá 
name
áá #
:
áá# $
$str
áá% .
,
áá. /
dbType
áá0 6
:
áá6 7
OracleMappingType
áá8 I
.
ááI J
	RefCursor
ááJ S
,
ááS T
	direction
ááU ^
:
áá^ _ 
ParameterDirection
áá` r
.
áár s
Output
áás y
)
ááy z
;
ááz {
var
àà "
dbScreenInformations
àà (
=
àà) *
await
àà+ 0

connection
àà1 ;
.
àà; <

QueryAsync
àà< F
<
ààF G
EmployeeProfile
ààG V
>
ààV W
(
ààW X 
DatabaseProcedures
ààX j
.
ààj k!
SP_GET_TEAM_MEMBERS
ààk ~
,
àà~ 

parametersààÄ ä
,ààä ã
commandTypeààå ó
:ààó ò
CommandTypeààô §
.àà§ •
StoredProcedureàà• ¥
)àà¥ µ
;ààµ ∂
totalRecords
ââ 
=
ââ 

parameters
ââ )
.
ââ) *
Get
ââ* -
<
ââ- .
int
ââ. 1
>
ââ1 2
(
ââ2 3
$str
ââ3 D
)
ââD E
.
ââE F
ToInt32OrDefault
ââF V
(
ââV W
)
ââW X
;
ââX Y
mappedScreens
ää 
=
ää "
dbScreenInformations
ää  4
.
ää4 5
ToList
ää5 ;
(
ää; <
)
ää< =
;
ää= >
}
ãã 
	menuItems
åå 
=
åå 
new
åå 
PagedResultSet
åå *
<
åå* +
EmployeeProfile
åå+ :
>
åå: ;
(
åå; <
)
åå< =
{
çç 
Items
éé 
=
éé 
mappedScreens
éé %
,
éé% &
	PageIndex
èè 
=
èè 
searchCriteria
èè *
.
èè* +

StartIndex
èè+ 5
,
èè5 6
PageSize
êê 
=
êê 
searchCriteria
êê )
.
êê) *
EndIndex
êê* 2
,
êê2 3

TotalItems
ëë 
=
ëë 
totalRecords
ëë )
,
ëë) *
}
íí 
;
íí 
return
îî 
	menuItems
îî 
;
îî 
}
ïï 	
public
óó 
async
óó 
Task
óó 
<
óó 
List
óó 
<
óó 
AppointmentLetter
óó 0
>
óó0 1
>
óó1 2)
GetPendingAppointmentLetter
óó3 N
(
óóN O
)
óóO P
{
òò 	
List
ôô 
<
ôô 
AppointmentLetter
ôô "
>
ôô" # 
appointmentLetters
ôô$ 6
=
ôô7 8
null
ôô9 =
;
ôô= >
IEnumerable
öö 
<
öö 
AppointmentLetter
öö )
>
öö) *'
pendingAppointmentLetters
öö+ D
=
ööE F
null
ööG K
;
ööK L
using
úú 
(
úú 
IDbConnection
úú  

connection
úú! +
=
úú, -
await
úú. 3
CreateConnection
úú4 D
(
úúD E
DbSchema
úúE M
.
úúM N
PORTAL
úúN T
)
úúT U
)
úúU V
{
ùù %
OracleDynamicParameters
ûû '

parameters
ûû( 2
=
ûû3 4
new
ûû5 8%
OracleDynamicParameters
ûû9 P
(
ûûP Q
)
ûûQ R
;
ûûR S
string
üü 

templateid
üü !
=
üü" #!
ApplicationSettings
üü$ 7
.
üü7 8
Current
üü8 ?
.
üü? @
HrmsOtpTemplate
üü@ O
;
üüO P

parameters
†† 
.
†† 
Add
†† 
(
†† 
name
†† #
:
††# $
$str
††% .
,
††. /
dbType
††0 6
:
††6 7
OracleMappingType
††8 I
.
††I J
	RefCursor
††J S
,
††S T
	direction
††U ^
:
††^ _ 
ParameterDirection
††` r
.
††r s
Output
††s y
)
††y z
;
††z {'
pendingAppointmentLetters
°° )
=
°°* +
await
°°, 1

connection
°°2 <
.
°°< =

QueryAsync
°°= G
<
°°G H
AppointmentLetter
°°H Y
>
°°Y Z
(
°°Z [ 
DatabaseProcedures
°°[ m
.
°°m n&
GET_APPOINTMENT_LETTERS°°n Ö
,°°Ö Ü

parameters°°á ë
,°°ë í
commandType°°ì û
:°°û ü
CommandType°°† ´
.°°´ ¨
StoredProcedure°°¨ ª
)°°ª º
;°°º Ω
}
¢¢ 
if
££ 
(
££ '
pendingAppointmentLetters
££ )
!=
££* ,
null
££- 1
)
££1 2
{
§§  
appointmentLetters
•• "
=
••# $'
pendingAppointmentLetters
••% >
.
••> ?
ToList
••? E
(
••E F
)
••F G
;
••G H
}
¶¶ 
else
ßß 
{
®®  
appointmentLetters
©© "
=
©©# $
new
©©% (
List
©©) -
<
©©- .
AppointmentLetter
©©. ?
>
©©? @
(
©©@ A
)
©©A B
;
©©B C
}
™™ 
return
ÏÏ  
appointmentLetters
ÏÏ %
;
ÏÏ% &
}
ÌÌ 	
public
ÔÔ 
async
ÔÔ 
Task
ÔÔ +
UpdateAppointmentLetterStatus
ÔÔ 7
(
ÔÔ7 8
int
ÔÔ8 ;
employeeNumber
ÔÔ< J
)
ÔÔJ K
{
 	
using
ÒÒ 
(
ÒÒ 
IDbConnection
ÒÒ  

connection
ÒÒ! +
=
ÒÒ, -
await
ÒÒ. 3
CreateConnection
ÒÒ4 D
(
ÒÒD E
DbSchema
ÒÒE M
.
ÒÒM N
PORTAL
ÒÒN T
)
ÒÒT U
)
ÒÒU V
{
ÚÚ %
OracleDynamicParameters
ÛÛ '

parameters
ÛÛ( 2
=
ÛÛ3 4
new
ÛÛ5 8%
OracleDynamicParameters
ÛÛ9 P
(
ÛÛP Q
)
ÛÛQ R
;
ÛÛR S
string
ÙÙ 

templateid
ÙÙ !
=
ÙÙ" #!
ApplicationSettings
ÙÙ$ 7
.
ÙÙ7 8
Current
ÙÙ8 ?
.
ÙÙ? @
HrmsOtpTemplate
ÙÙ@ O
;
ÙÙO P

parameters
ıı 
.
ıı 
Add
ıı 
(
ıı 
name
ıı #
:
ıı# $
$str
ıı% 4
,
ıı4 5
employeeNumber
ıı6 D
,
ııD E
dbType
ııF L
:
ııL M
OracleMappingType
ııN _
.
ıı_ `
Int32
ıı` e
,
ııe f
	direction
ııg p
:
ııp q!
ParameterDirectionıır Ñ
.ııÑ Ö
InputııÖ ä
)ııä ã
;ııã å
await
ˆˆ 

connection
ˆˆ  
.
ˆˆ  !
ExecuteAsync
ˆˆ! -
(
ˆˆ- . 
DatabaseProcedures
ˆˆ. @
.
ˆˆ@ A'
UPDATE_APPT_LETTER_STATUS
ˆˆA Z
,
ˆˆZ [

parameters
ˆˆ\ f
,
ˆˆf g
commandType
ˆˆh s
:
ˆˆs t
CommandTypeˆˆu Ä
.ˆˆÄ Å
StoredProcedureˆˆÅ ê
)ˆˆê ë
;ˆˆë í
}
˜˜ 
}
¯¯ 	
public
˙˙ 
async
˙˙ 
Task
˙˙ 
<
˙˙ 
List
˙˙ 
<
˙˙ 
EmployeeProfile
˙˙ .
>
˙˙. /
>
˙˙/ 0
SearchEmployee
˙˙1 ?
(
˙˙? @
string
˙˙@ F
searchValue
˙˙G R
)
˙˙R S
{
˚˚ 	
List
¸¸ 
<
¸¸ 
EmployeeProfile
¸¸  
>
¸¸  !
employeeProfiles
¸¸" 2
=
¸¸3 4
null
¸¸5 9
;
¸¸9 :
using
˝˝ 
(
˝˝ 
IDbConnection
˝˝  

connection
˝˝! +
=
˝˝, -
await
˝˝. 3
CreateConnection
˝˝4 D
(
˝˝D E
DbSchema
˝˝E M
.
˝˝M N
PORTAL
˝˝N T
)
˝˝T U
)
˝˝U V
{
˛˛ %
OracleDynamicParameters
ˇˇ '

parameters
ˇˇ( 2
=
ˇˇ3 4
new
ˇˇ5 8%
OracleDynamicParameters
ˇˇ9 P
(
ˇˇP Q
)
ˇˇQ R
;
ˇˇR S

parameters
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ 
$str
ÄÄ &
,
ÄÄ& '
searchValue
ÄÄ( 3
,
ÄÄ3 4
OracleMappingType
ÄÄ5 F
.
ÄÄF G
Varchar2
ÄÄG O
,
ÄÄO P 
ParameterDirection
ÄÄQ c
.
ÄÄc d
Input
ÄÄd i
)
ÄÄi j
;
ÄÄj k

parameters
ÅÅ 
.
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
$str
ÅÅ (
,
ÅÅ( )
null
ÅÅ* .
,
ÅÅ. /
OracleMappingType
ÅÅ0 A
.
ÅÅA B
	RefCursor
ÅÅB K
,
ÅÅK L 
ParameterDirection
ÅÅM _
.
ÅÅ_ `
Output
ÅÅ` f
)
ÅÅf g
;
ÅÅg h
var
ÉÉ 
dbEmployees
ÉÉ 
=
ÉÉ  !
await
ÉÉ" '

connection
ÉÉ( 2
.
ÉÉ2 3

QueryAsync
ÉÉ3 =
<
ÉÉ= >
EmployeeProfile
ÉÉ> M
>
ÉÉM N
(
ÉÉN O 
DatabaseProcedures
ÉÉO a
.
ÉÉa b"
P_GETEMPDATA_FOR_API
ÉÉb v
,
ÉÉv w

parametersÉÉx Ç
,ÉÉÇ É
commandTypeÉÉÑ è
:ÉÉè ê
CommandTypeÉÉë ú
.ÉÉú ù
StoredProcedureÉÉù ¨
)ÉÉ¨ ≠
;ÉÉ≠ Æ
employeeProfiles
ÑÑ  
=
ÑÑ! "
dbEmployees
ÑÑ# .
.
ÑÑ. /
ToList
ÑÑ/ 5
(
ÑÑ5 6
)
ÑÑ6 7
;
ÑÑ7 8
}
ÖÖ 
return
ÜÜ 
employeeProfiles
ÜÜ #
;
ÜÜ# $
}
áá 	
}
àà 
}ââ Ã;
TF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Form16\Form16Repository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Form16& ,
{ 
public 

class 
Form16Repository !
:! "
BaseRepository# 1
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
Form16Repository 
(  
IConfiguration  .
configuration/ <
)< =
:> ?
base@ D
(D E
configurationE R
)R S
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
TaxDocuments +
>+ ,
>, -
	GetForm16. 7
(7 8
string8 >
panNo? D
)D E
{ 	
string 
	imagePath 
= 
string %
.% &
Empty& +
;+ ,
List 
< 
YearWiseTaxDocument $
>$ %
form16Documents& 5
=6 7
null8 <
;< =
List 
< 
TaxDocuments 
> 
taxDouments *
=+ ,
null- 1
;1 2
using   
(   
var   

connection   !
=  " #
await  $ )
base  * .
.  . /
CreateConnection  / ?
(  ? @
DbSchema  @ H
.  H I
PORTAL  I O
)  O P
)  P Q
{!! #
OracleDynamicParameters"" '
	parmeters""( 1
=""2 3
new""4 7#
OracleDynamicParameters""8 O
(""O P
)""P Q
;""Q R
	parmeters## 
.## 
Add## 
(## 
name## "
:##" #
$str##$ ,
,##, -
panNo##. 3
,##3 4
dbType##5 ;
:##; <
OracleMappingType##= N
.##N O
Varchar2##O W
,##W X
	direction##Y b
:##b c
ParameterDirection##d v
.##v w
Input##w |
)##| }
;##} ~
	parmeters$$ 
.$$ 
Add$$ 
($$ 
name$$ "
:$$" #
$str$$$ -
,$$- .
dbType$$/ 5
:$$5 6
OracleMappingType$$7 H
.$$H I
	RefCursor$$I R
,$$R S
	direction$$T ]
:$$] ^
ParameterDirection$$_ q
.$$q r
Output$$r x
)$$x y
;$$y z
form16Documents&& 
=&&  !
(&&" #
await&&# (

connection&&) 3
.&&3 4

QueryAsync&&4 >
<&&> ?
YearWiseTaxDocument&&? R
>&&R S
(&&S T
DatabaseProcedures&&T f
.&&f g
FORM_16_DOWNLOAD&&g w
,&&w x
	parmeters	&&y Ç
,
&&Ç É
commandType
&&Ñ è
:
&&è ê
CommandType
&&ë ú
.
&&ú ù
StoredProcedure
&&ù ¨
)
&&¨ ≠
)
&&≠ Æ
.
&&Æ Ø
ToList
&&Ø µ
(
&&µ ∂
)
&&∂ ∑
;
&&∑ ∏
}'' 
	imagePath)) 
=)) 
ApplicationSettings)) +
.))+ ,
Current)), 3
.))3 4
	ImagePath))4 =
.))= >
ToString))> F
())F G
)))G H
;))H I
if++ 
(++ 
form16Documents++ 
.++  
Any++  #
(++# $
)++$ %
)++% &
{,, 
taxDouments-- 
=-- 
new-- !
List--" &
<--& '
TaxDocuments--' 3
>--3 4
(--4 5
)--5 6
;--6 7
var// 
results// 
=// 
from// "
p//# $
in//% '
form16Documents//( 7
group00 #
p00$ %
by00& (
p00) *
.00* +
FinYear00+ 2
into003 7
g008 9
select11 $
new11% (
{11) *
Year11+ /
=110 1
g112 3
.113 4
Key114 7
,117 8
TaxDocuments119 E
=11F G
g11H I
.11I J
ToList11J P
(11P Q
)11Q R
}11S T
;11T U
foreach33 
(33 
var33 
item33 !
in33" $
results33% ,
)33, -
{44 
TaxDocuments55  
taxDocument55! ,
=55- .
new55/ 2
TaxDocuments553 ?
(55? @
)55@ A
;55A B
taxDocument66 
.66  
FinYear66  '
=66( )
item66* .
.66. /
Year66/ 3
;663 4
taxDocument77 
.77   
YearWiseTaxDocuments77  4
=775 6
item777 ;
.77; <
TaxDocuments77< H
;77H I
taxDouments88 
.88  
Add88  #
(88# $
taxDocument88$ /
)88/ 0
;880 1
}99 
}:: 
return;; 
taxDouments;; 
;;; 
}<< 	
public>> 
async>> 
Task>> 
<>> 
byte>> 
[>> 
]>>  
>>>  !
DownLoadForm16>>" 0
(>>0 1
YearWiseTaxDocument>>1 D
taxDocument>>E P
)>>P Q
{?? 	
string@@ 
	imagePath@@ 
=@@ 
ApplicationSettings@@ 2
.@@2 3
Current@@3 :
.@@: ;
ProfilePath@@; F
.@@F G
ToString@@G O
(@@O P
)@@P Q
;@@Q R
stringAA 
[AA 
]AA 
fileDataAA 
=AA 
taxDocumentAA  +
.AA+ ,
FilePathAA, 4
.AA4 5
SplitAA5 :
(AA: ;
$charAA; ?
)AA? @
;AA@ A
ifBB 
(BB 
fileDataBB 
!=BB 
nullBB 
&&BB  "
fileDataBB# +
.BB+ ,
LengthBB, 2
>BB3 4
$numBB5 6
)BB6 7
{CC 
fileDataDD 
[DD 
$numDD 
]DD 
=DD 
	imagePathDD '
;DD' (
}EE 
stringFF 
filePathFF 
=FF 
stringFF $
.FF$ %
JoinFF% )
(FF) *
$charFF* -
,FF- .
fileDataFF/ 7
)FF7 8
;FF8 9
StringBuilderGG 

strBuilderGG $
=GG% &
newGG' *
StringBuilderGG+ 8
(GG8 9
)GG9 :
;GG: ;

strBuilderHH 
.HH 
AppendHH 
(HH 
filePathHH &
)HH& '
;HH' (
UriII 
uriII 
=II 
newII 
UriII 
(II 

strBuilderII (
.II( )
ToStringII) 1
(II1 2
)II2 3
)II3 4
;II4 5
byteJJ 
[JJ 
]JJ 
responseJJ 
=JJ 
newJJ !
	WebClientJJ" +
(JJ+ ,
)JJ, -
.JJ- .
DownloadDataJJ. :
(JJ: ;
uriJJ; >
.JJ> ?
AbsoluteUriJJ? J
)JJJ K
;JJK L
returnKK 
responseKK 
;KK 
}LL 	
}MM 
}NN ñA
bF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\HelpDocuments\HelpDocumentsRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
HelpDocuments& 3
{ 
public 

class #
HelpDocumentsRepository (
:) *
BaseRepository+ 9
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public #
HelpDocumentsRepository &
(& '
IConfiguration' 5
configuration6 C
)C D
:E F
baseG K
(K L
configurationL Y
)Y Z
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
HelpDocument +
>+ ,
>, -
GetActiveHelpDocs. ?
(? @
int@ C
officeTypeSLNOD R
)R S
{ 	
List 
< 
HelpDocument 
> 
helpDocuments ,
=- .
null/ 3
;3 4
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{   #
OracleDynamicParameters!! '

parameters!!( 2
=!!3 4
new!!5 8#
OracleDynamicParameters!!9 P
(!!P Q
)!!Q R
;!!R S

parameters"" 
."" 
Add"" 
("" 
name"" #
:""# $
$str""% 6
,""6 7
officeTypeSLNO""8 F
,""F G
dbType""H N
:""N O
OracleMappingType""P a
.""a b
Int32""b g
,""g h
	direction""i r
:""r s
ParameterDirection	""t Ü
.
""Ü á
Input
""á å
)
""å ç
;
""ç é

parameters## 
.## 
Add## 
(## 
name## #
:### $
$str##% .
,##. /
dbType##0 6
:##6 7
OracleMappingType##8 I
.##I J
	RefCursor##J S
,##S T
	direction##U ^
:##^ _
ParameterDirection##` r
.##r s
Output##s y
)##y z
;##z {
helpDocuments$$ 
=$$ 
($$  !
await$$! &

connection$$' 1
.$$1 2

QueryAsync$$2 <
<$$< =
HelpDocument$$= I
>$$I J
($$J K
DatabaseProcedures$$K ]
.$$] ^!
SP_GET_HELP_DOCUMENTS$$^ s
,$$s t

parameters$$u 
,	$$ Ä
commandType
$$Å å
:
$$å ç
CommandType
$$é ô
.
$$ô ö
StoredProcedure
$$ö ©
)
$$© ™
)
$$™ ´
.
$$´ ¨
ToList
$$¨ ≤
(
$$≤ ≥
)
$$≥ ¥
;
$$¥ µ
helpDocuments%% 
=%% 
helpDocuments%%  -
.%%- .
OrderByDescending%%. ?
(%%? @
x%%@ A
=>%%B D
x%%E F
.%%F G
HelpDocumentSlno%%G W
)%%W X
.%%X Y
ToList%%Y _
(%%_ `
)%%` a
;%%a b
}&& 
return'' 
helpDocuments''  
;''  !
}(( 	
public** 
async** 
Task** 
<** 
bool** 
>** 
SaveHelpDocHistory**  2
(**2 3
HelpDocument**3 ?
helpDocument**@ L
)**L M
{++ 	
int,, 
EmailsavedRecords,, !
=,," #
$num,,$ %
;,,% &#
OracleDynamicParameters-- #

parameters--$ .
=--/ 0
null--1 5
;--5 6
using.. 
(.. 
IDbConnection..  

connection..! +
=.., -
await... 3
base..4 8
...8 9
CreateConnection..9 I
(..I J
DbSchema..J R
...R S
PORTAL..S Y
)..Y Z
)..Z [
{// 
using00 
(00 
var00 
tran00 
=00  !

connection00" ,
.00, -
BeginTransaction00- =
(00= >
)00> ?
)00? @
{11 

parameters22 
=22  
new22! $#
OracleDynamicParameters22% <
(22< =
)22= >
;22> ?

parameters33 
.33 
Add33 "
(33" #
name33# '
:33' (
$str33) 8
,338 9
helpDocument33: F
.33F G
EmployeeSlno33G S
,33S T
dbType33U [
:33[ \
OracleMappingType33] n
.33n o
Int3233o t
,33t u
	direction33v 
:	33 Ä 
ParameterDirection
33Å ì
.
33ì î
Input
33î ô
)
33ô ö
;
33ö õ

parameters44 
.44 
Add44 "
(44" #
name44# '
:44' (
$str44) 7
,447 8
helpDocument449 E
.44E F
HelpDocumentSlno44F V
,44V W
dbType44X ^
:44^ _
OracleMappingType44` q
.44q r
Int3244r w
,44w x
	direction	44y Ç
:
44Ç É 
ParameterDirection
44Ñ ñ
.
44ñ ó
Input
44ó ú
)
44ú ù
;
44ù û

parameters55 
.55 
Add55 "
(55" #
name55# '
:55' (
$str55) 9
,559 :
DateTime55; C
.55C D
Now55D G
,55G H
dbType55I O
:55O P
OracleMappingType55Q b
.55b c
Date55c g
,55g h
	direction55i r
:55r s
ParameterDirection	55t Ü
.
55Ü á
Input
55á å
)
55å ç
;
55ç é
EmailsavedRecords77 %
=77& '
await77( -

connection77. 8
.778 9
ExecuteAsync779 E
(77E F
DatabaseProcedures77F X
.77X Y#
INSERT_DOWNLOAD_HISTORY77Y p
,77p q

parameters77r |
,77| }
commandType	77~ â
:
77â ä
CommandType
77ã ñ
.
77ñ ó
StoredProcedure
77ó ¶
)
77¶ ß
;
77ß ®
tran99 
.99 
Commit99 
(99  
)99  !
;99! "
}:: 
};; 
return== 
true== 
;== 
}>> 	
public@@ 
async@@ 
Task@@ 
<@@ 
byte@@ 
[@@ 
]@@  
>@@  !
DownloadDocument@@" 2
(@@2 3
HelpDocument@@3 ?
helpDocument@@@ L
)@@L M
{AA 	
byteBB 
[BB 
]BB 
responseBB 
=BB 
nullBB "
;BB" #
ifCC 
(CC 
helpDocumentCC 
!=CC 
nullCC  $
)CC$ %
{DD 
awaitEE 
SaveHelpDocHistoryEE (
(EE( )
helpDocumentEE) 5
)EE5 6
;EE6 7
stringFF 
filenameFF 
=FF  !
stringFF" (
.FF( )
FormatFF) /
(FF/ 0
$strFF0 :
,FF: ;
helpDocumentFF< H
.FFH I
FilePathFFI Q
)FFQ R
;FFR S
UriGG 
uriGG 
=GG 
newGG 
UriGG !
(GG! "
filenameGG" *
)GG* +
;GG+ ,
usingHH 
(HH 

HttpClientHH !
clientHH" (
=HH) *
newHH+ .

HttpClientHH/ 9
(HH9 :
)HH: ;
)HH; <
{II 
responseJJ 
=JJ 
awaitJJ $
clientJJ% +
.JJ+ ,
GetByteArrayAsyncJJ, =
(JJ= >
uriJJ> A
.JJA B
AbsoluteUriJJB M
)JJM N
;JJN O
}KK 
}LL 
returnMM 
responseMM 
;MM 
}NN 	
}RR 
}SS ã¬
hF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\InvestmentProofs\InvestmentProofsRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
InvestmentProofs& 6
{ 
public 

class &
InvestmentProofsRepository +
:, -
BaseRepository. <
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public &
InvestmentProofsRepository )
() *
IConfiguration* 8
configuration9 F
)F G
:H I
baseJ N
(N O
configurationO \
)\ ]
{ 	
this   
.   
configuration   
=    
configuration  ! .
;  . /
}!! 	
public%% 
async%% 
Task%% 
<%% 
List%% 
<%% "
HouseRentAllowanceFile%% 5
>%%5 6
>%%6 7%
GetHouseRentAllowancFiles%%8 Q
(%%Q R
int%%R U
rentPaymentId%%V c
)%%c d
{&& 	
List'' 
<'' "
HouseRentAllowanceFile'' '
>''' (!
tdsEmployeeHRADetails'') >
=''? @
null''A E
;''E F
using(( 
((( 
var(( 

connection(( !
=((" #
await(($ )
base((* .
.((. /
CreateConnection((/ ?
(((? @
DbSchema((@ H
.((H I
PORTAL((I O
)((O P
)((P Q
{)) #
OracleDynamicParameters** '
	parmeters**( 1
=**2 3
new**4 7#
OracleDynamicParameters**8 O
(**O P
)**P Q
;**Q R
	parmeters++ 
.++ 
Add++ 
(++ 
name++ "
:++" #
$str++$ 1
,++1 2
rentPaymentId++3 @
,++@ A
dbType++B H
:++H I
OracleMappingType++J [
.++[ \
Int32++\ a
,++a b
	direction++c l
:++l m
ParameterDirection	++n Ä
.
++Ä Å
Input
++Å Ü
)
++Ü á
;
++á à
	parmeters,, 
.,, 
Add,, 
(,, 
name,, "
:,," #
$str,,$ -
,,,- .
dbType,,/ 5
:,,5 6
OracleMappingType,,7 H
.,,H I
	RefCursor,,I R
,,,R S
	direction,,T ]
:,,] ^
ParameterDirection,,_ q
.,,q r
Output,,r x
),,x y
;,,y z!
tdsEmployeeHRADetails-- %
=--& '
(--( )
await--) .

connection--/ 9
.--9 :

QueryAsync--: D
<--D E"
HouseRentAllowanceFile--E [
>--[ \
(--\ ]
DatabaseProcedures--] o
.--o p'
P_TDS_EMP_HRA_FILE_DETAILS	--p ä
,
--ä ã
	parmeters
--å ï
,
--ï ñ
commandType
--ó ¢
:
--¢ £
CommandType
--§ Ø
.
--Ø ∞
StoredProcedure
--∞ ø
)
--ø ¿
)
--¿ ¡
.
--¡ ¬
ToList
--¬ »
(
--» …
)
--…  
;
--  À
}.. 
foreach// 
(// 
var// 
item// 
in//  !
tdsEmployeeHRADetails//! 6
)//6 7
{00 
StringBuilder11 

imagesPath11 (
=11) *
new11+ .
StringBuilder11/ <
(11< =
)11= >
;11> ?

imagesPath22 
.22 
Clear22  
(22  !
)22! "
;22" #
string44 
[44 
]44 
	imagePath44 "
=44# $
item44% )
.44) *
FilePath44* 2
.442 3
Split443 8
(448 9
$char449 =
)44= >
;44> ?

imagesPath55 
.55 
AppendFormat55 '
(55' (
$str55( G
,55G H
ApplicationSettings55I \
.55\ ]
Current55] d
.55d e
ProfilePath55e p
,55p q
	imagePath55r {
[55{ | 
ApplicationSettings	55| è
.
55è ê
Current
55ê ó
.
55ó ò
Environment
55ò £
==
55§ ¶
$str
55ß ¨
?
55≠ Æ
$num
55Ø ∞
:
55± ≤
$num
55≥ ¥
]
55¥ µ
)
55µ ∂
;
55∂ ∑
item66 
.66 
FilePath66 
=66 

imagesPath66  *
.66* +
ToString66+ 3
(663 4
)664 5
;665 6
}77 
return88 !
tdsEmployeeHRADetails88 (
;88( )
}99 	
public;; 
async;; 
Task;; 
<;; 
List;; 
<;; 
Chapter6FileDetails;; 2
>;;2 3
>;;3 4
GetChapter6Files;;5 E
(;;E F
int;;F I
chapter6DetailId;;J Z
);;Z [
{<< 	
List== 
<== 
Chapter6FileDetails== $
>==$ %
chapter6FileDetails==& 9
===: ;
null==< @
;==@ A
using>> 
(>> 
var>> 

connection>> !
=>>" #
await>>$ )
base>>* .
.>>. /
CreateConnection>>/ ?
(>>? @
DbSchema>>@ H
.>>H I
PORTAL>>I O
)>>O P
)>>P Q
{?? #
OracleDynamicParameters@@ '
	parmeters@@( 1
=@@2 3
new@@4 7#
OracleDynamicParameters@@8 O
(@@O P
)@@P Q
;@@Q R
	parmetersAA 
.AA 
AddAA 
(AA 
nameAA "
:AA" #
$strAA$ 3
,AA3 4
chapter6DetailIdAA5 E
,AAE F
dbTypeAAG M
:AAM N
OracleMappingTypeAAO `
.AA` a
Int32AAa f
,AAf g
	directionAAh q
:AAq r
ParameterDirection	AAs Ö
.
AAÖ Ü
Input
AAÜ ã
)
AAã å
;
AAå ç
	parmetersBB 
.BB 
AddBB 
(BB 
nameBB "
:BB" #
$strBB$ -
,BB- .
dbTypeBB/ 5
:BB5 6
OracleMappingTypeBB7 H
.BBH I
	RefCursorBBI R
,BBR S
	directionBBT ]
:BB] ^
ParameterDirectionBB_ q
.BBq r
OutputBBr x
)BBx y
;BBy z
chapter6FileDetailsCC #
=CC$ %
(CC& '
awaitCC' ,

connectionCC- 7
.CC7 8

QueryAsyncCC8 B
<CCB C
Chapter6FileDetailsCCC V
>CCV W
(CCW X
DatabaseProceduresCCX j
.CCj k+
P_EMP_TDS_SUBHEAD_FILE_DETAILS	CCk â
,
CCâ ä
	parmeters
CCã î
,
CCî ï
commandType
CCñ °
:
CC° ¢
CommandType
CC£ Æ
.
CCÆ Ø
StoredProcedure
CCØ æ
)
CCæ ø
)
CCø ¿
.
CC¿ ¡
ToList
CC¡ «
(
CC« »
)
CC» …
;
CC…  
}DD 
foreachEE 
(EE 
varEE 
itemEE 
inEE  
chapter6FileDetailsEE! 4
)EE4 5
{FF 
StringBuilderGG 

imagesPathGG (
=GG) *
newGG+ .
StringBuilderGG/ <
(GG< =
)GG= >
;GG> ?

imagesPathHH 
.HH 
ClearHH  
(HH  !
)HH! "
;HH" #
stringJJ 
[JJ 
]JJ 
	imagePathJJ "
=JJ# $
itemJJ% )
.JJ) *
FilePathJJ* 2
.JJ2 3
SplitJJ3 8
(JJ8 9
$charJJ9 =
)JJ= >
;JJ> ?

imagesPathKK 
.KK 
AppendFormatKK '
(KK' (
$strKK( M
,KKM N
ApplicationSettingsKKO b
.KKb c
CurrentKKc j
.KKj k
ProfilePathKKk v
,KKv w
	imagePath	KKx Å
[
KKÅ Ç!
ApplicationSettings
KKÇ ï
.
KKï ñ
Current
KKñ ù
.
KKù û
Environment
KKû ©
==
KK™ ¨
$str
KK≠ ≤
?
KK≤ ≥
$num
KK≥ ¥
:
KK¥ µ
$num
KKµ ∂
]
KK∂ ∑
)
KK∑ ∏
;
KK∏ π
itemLL 
.LL 
FilePathLL 
=LL 

imagesPathLL  *
.LL* +
ToStringLL+ 3
(LL3 4
)LL4 5
;LL5 6
}MM 
returnOO 
chapter6FileDetailsOO &
;OO& '
}PP 	
publicRR 
asyncRR 
TaskRR 
<RR 
ListRR 
<RR "
HouseIncomeFileDetailsRR 5
>RR5 6
>RR6 7
GetHouseIncomeFilesRR8 K
(RRK L
intRRL O
houseIncomeDetailIdRRP c
)RRc d
{SS 	
ListTT 
<TT "
HouseIncomeFileDetailsTT '
>TT' ("
houseIncomeFileDetailsTT) ?
=TT@ A
nullTTB F
;TTF G
usingUU 
(UU 
varUU 

connectionUU !
=UU" #
awaitUU$ )
baseUU* .
.UU. /
CreateConnectionUU/ ?
(UU? @
DbSchemaUU@ H
.UUH I
PORTALUUI O
)UUO P
)UUP Q
{VV #
OracleDynamicParametersWW '
	parmetersWW( 1
=WW2 3
newWW4 7#
OracleDynamicParametersWW8 O
(WWO P
)WWP Q
;WWQ R
	parmetersXX 
.XX 
AddXX 
(XX 
nameXX "
:XX" #
$strXX$ 3
,XX3 4
houseIncomeDetailIdXX5 H
,XXH I
dbTypeXXJ P
:XXP Q
OracleMappingTypeXXR c
.XXc d
Int32XXd i
,XXi j
	directionXXk t
:XXt u
ParameterDirection	XXv à
.
XXà â
Input
XXâ é
)
XXé è
;
XXè ê
	parmetersYY 
.YY 
AddYY 
(YY 
nameYY "
:YY" #
$strYY$ -
,YY- .
dbTypeYY/ 5
:YY5 6
OracleMappingTypeYY7 H
.YYH I
	RefCursorYYI R
,YYR S
	directionYYT ]
:YY] ^
ParameterDirectionYY_ q
.YYq r
OutputYYr x
)YYx y
;YYy z"
houseIncomeFileDetailsZZ &
=ZZ' (
(ZZ) *
awaitZZ* /

connectionZZ0 :
.ZZ: ;

QueryAsyncZZ; E
<ZZE F"
HouseIncomeFileDetailsZZF \
>ZZ\ ]
(ZZ] ^
DatabaseProceduresZZ^ p
.ZZp q+
P_EMP_HOUSEINCOME_FILE_DETAILS	ZZq è
,
ZZè ê
	parmeters
ZZë ö
,
ZZö õ
commandType
ZZú ß
:
ZZß ®
CommandType
ZZ© ¥
.
ZZ¥ µ
StoredProcedure
ZZµ ƒ
)
ZZƒ ≈
)
ZZ≈ ∆
.
ZZ∆ «
ToList
ZZ« Õ
(
ZZÕ Œ
)
ZZŒ œ
;
ZZœ –
}[[ 
foreach\\ 
(\\ 
var\\ 
item\\ 
in\\  "
houseIncomeFileDetails\\! 7
)\\7 8
{]] 
StringBuilder^^ 

imagesPath^^ (
=^^) *
new^^+ .
StringBuilder^^/ <
(^^< =
)^^= >
;^^> ?

imagesPath__ 
.__ 
Clear__  
(__  !
)__! "
;__" #
stringaa 
[aa 
]aa 
	imagePathaa "
=aa# $
itemaa% )
.aa) *
FilePathaa* 2
.aa2 3
Splitaa3 8
(aa8 9
$charaa9 =
)aa= >
;aa> ?

imagesPathbb 
.bb 
AppendFormatbb '
(bb' (
$strbb( O
,bbO P
ApplicationSettingsbbQ d
.bbd e
Currentbbe l
.bbl m
ProfilePathbbm x
,bbx y
	imagePath	bbz É
[
bbÉ Ñ!
ApplicationSettings
bbÑ ó
.
bbó ò
Current
bbò ü
.
bbü †
Environment
bb† ´
==
bb¨ Æ
$str
bbØ ¥
?
bbµ ∂
$num
bb∑ ∏
:
bbπ ∫
$num
bbª º
]
bbº Ω
)
bbΩ æ
;
bbæ ø
itemcc 
.cc 
FilePathcc 
=cc 

imagesPathcc  *
.cc* +
ToStringcc+ 3
(cc3 4
)cc4 5
;cc5 6
}dd 
returnff "
houseIncomeFileDetailsff )
;ff) *
}gg 	
publicii 
asyncii 
Taskii 
<ii 
Listii 
<ii "
OtherIncomeFileDetailsii 5
>ii5 6
>ii6 7
GetOtherIncomeFilesii8 K
(iiK L
intiiL O
otherIncomeDetailIdiiP c
)iic d
{jj 	
Listkk 
<kk "
OtherIncomeFileDetailskk '
>kk' ("
otherIncomeFileDetailskk) ?
=kk@ A
nullkkB F
;kkF G
usingll 
(ll 
varll 

connectionll !
=ll" #
awaitll$ )
basell* .
.ll. /
CreateConnectionll/ ?
(ll? @
DbSchemall@ H
.llH I
PORTALllI O
)llO P
)llP Q
{mm #
OracleDynamicParametersnn '
	parmetersnn( 1
=nn2 3
newnn4 7#
OracleDynamicParametersnn8 O
(nnO P
)nnP Q
;nnQ R
	parmetersoo 
.oo 
Addoo 
(oo 
nameoo "
:oo" #
$stroo$ 3
,oo3 4
otherIncomeDetailIdoo5 H
,ooH I
dbTypeooJ P
:ooP Q
OracleMappingTypeooR c
.ooc d
Int32ood i
,ooi j
	directionook t
:oot u
ParameterDirection	oov à
.
ooà â
Input
ooâ é
)
ooé è
;
ooè ê
	parmeterspp 
.pp 
Addpp 
(pp 
namepp "
:pp" #
$strpp$ -
,pp- .
dbTypepp/ 5
:pp5 6
OracleMappingTypepp7 H
.ppH I
	RefCursorppI R
,ppR S
	directionppT ]
:pp] ^
ParameterDirectionpp_ q
.ppq r
Outputppr x
)ppx y
;ppy z"
otherIncomeFileDetailsqq &
=qq' (
(qq) *
awaitqq* /

connectionqq0 :
.qq: ;

QueryAsyncqq; E
<qqE F"
OtherIncomeFileDetailsqqF \
>qq\ ]
(qq] ^
DatabaseProceduresqq^ p
.qqp q+
P_EMP_OTHERINCOME_FILE_DETAILS	qqq è
,
qqè ê
	parmeters
qqë ö
,
qqö õ
commandType
qqú ß
:
qqß ®
CommandType
qq© ¥
.
qq¥ µ
StoredProcedure
qqµ ƒ
)
qqƒ ≈
)
qq≈ ∆
.
qq∆ «
ToList
qq« Õ
(
qqÕ Œ
)
qqŒ œ
;
qqœ –
}rr 
foreachss 
(ss 
varss 
itemss 
inss  "
otherIncomeFileDetailsss! 7
)ss7 8
{tt 
StringBuilderuu 

imagesPathuu (
=uu) *
newuu+ .
StringBuilderuu/ <
(uu< =
)uu= >
;uu> ?

imagesPathvv 
.vv 
Clearvv  
(vv  !
)vv! "
;vv" #
stringxx 
[xx 
]xx 
	imagePathxx "
=xx# $
itemxx% )
.xx) *
FilePathxx* 2
.xx2 3
Splitxx3 8
(xx8 9
$charxx9 =
)xx= >
;xx> ?

imagesPathyy 
.yy 
AppendFormatyy '
(yy' (
$stryy( O
,yyO P
ApplicationSettingsyyQ d
.yyd e
Currentyye l
.yyl m
ProfilePathyym x
,yyx y
	imagePath	yyz É
[
yyÉ Ñ!
ApplicationSettings
yyÑ ó
.
yyó ò
Current
yyò ü
.
yyü †
Environment
yy† ´
==
yy¨ Æ
$str
yyØ ¥
?
yyµ ∂
$num
yy∑ ∏
:
yyπ ∫
$num
yyª º
]
yyº Ω
)
yyΩ æ
;
yyæ ø
itemzz 
.zz 
FilePathzz 
=zz 

imagesPathzz  *
.zz* +
ToStringzz+ 3
(zz3 4
)zz4 5
;zz5 6
}{{ 
return|| "
otherIncomeFileDetails|| )
;||) *
}}} 	
public
ÇÇ 
async
ÇÇ 
Task
ÇÇ 
<
ÇÇ 
bool
ÇÇ 
>
ÇÇ *
UploadHouseRentAllowanceFile
ÇÇ  <
(
ÇÇ< =$
HouseRentAllowanceFile
ÇÇ= S$
houseRentAllowanceFile
ÇÇT j
)
ÇÇj k
{
ÉÉ 	
bool
ÑÑ 
resp
ÑÑ 
=
ÑÑ 
false
ÑÑ 
;
ÑÑ 
int
ÖÖ 
recordsUpdated
ÖÖ 
=
ÖÖ  
$num
ÖÖ! "
;
ÖÖ" #
using
ÜÜ 
(
ÜÜ 
var
ÜÜ 

connection
ÜÜ !
=
ÜÜ" #
await
ÜÜ$ )
base
ÜÜ* .
.
ÜÜ. /
CreateConnection
ÜÜ/ ?
(
ÜÜ? @
DbSchema
ÜÜ@ H
.
ÜÜH I
PORTAL
ÜÜI O
)
ÜÜO P
)
ÜÜP Q
{
áá 
bool
àà 
filsUploadStatus
àà %
=
àà& '
await
àà( -&
UploadHRAFileToDirectory
àà. F
(
ààF G$
houseRentAllowanceFile
ààG ]
)
àà] ^
;
àà^ _
if
ââ 
(
ââ 
filsUploadStatus
ââ $
)
ââ$ %
{
ää %
OracleDynamicParameters
ãã +
param
ãã, 1
=
ãã2 3
new
ãã4 7
(
ãã7 8
)
ãã8 9
;
ãã9 :
param
åå 
.
åå 
Add
åå 
(
åå 
name
åå "
:
åå" #
$str
åå$ 1
,
åå1 2$
houseRentAllowanceFile
åå3 I
.
ååI J

TdsHRASLNo
ååJ T
,
ååT U
dbType
ååV \
:
åå\ ]
OracleMappingType
åå^ o
.
ååo p
Int32
ååp u
,
ååu v
	directionååw Ä
:ååÄ Å"
ParameterDirectionååÇ î
.ååî ï
Inputååï ö
)ååö õ
;ååõ ú
param
çç 
.
çç 
Add
çç 
(
çç 
name
çç "
:
çç" #
$str
çç$ /
,
çç/ 0$
houseRentAllowanceFile
çç1 G
.
ççG H
FileName
ççH P
,
ççP Q
dbType
ççR X
:
ççX Y
OracleMappingType
ççZ k
.
ççk l
Varchar2
ççl t
,
ççt u
	direction
ççv 
:çç Ä"
ParameterDirectionççÅ ì
.ççì î
Inputççî ô
)ççô ö
;ççö õ
param
éé 
.
éé 
Add
éé 
(
éé 
name
éé "
:
éé" #
$str
éé$ 8
,
éé8 9$
houseRentAllowanceFile
éé: P
.
ééP Q
FileName_Original
ééQ b
,
ééb c
dbType
ééd j
:
ééj k
OracleMappingType
éél }
.
éé} ~
Varchar2éé~ Ü
,ééÜ á
	directionééà ë
:ééë í"
ParameterDirectionééì •
.éé• ¶
Inputéé¶ ´
)éé´ ¨
;éé¨ ≠
param
èè 
.
èè 
Add
èè 
(
èè 
name
èè "
:
èè" #
$str
èè$ /
,
èè/ 0$
houseRentAllowanceFile
èè1 G
.
èèG H
FilePath
èèH P
,
èèP Q
dbType
èèR X
:
èèX Y
OracleMappingType
èèZ k
.
èèk l
Varchar2
èèl t
,
èèt u
	direction
èèv 
:èè Ä"
ParameterDirectionèèÅ ì
.èèì î
Inputèèî ô
)èèô ö
;èèö õ
recordsUpdated
êê "
=
êê# $
await
êê% *

connection
êê+ 5
.
êê5 6
ExecuteAsync
êê6 B
(
êêB C 
DatabaseProcedures
êêC U
.
êêU V&
SP_TDS_EMP_HRAFILEUPLOAD
êêV n
,
êên o
param
êêp u
,
êêu v
commandTypeêêw Ç
:êêÇ É
CommandTypeêêÑ è
.êêè ê
StoredProcedureêêê ü
)êêü †
;êê† °
}
ëë 
resp
íí 
=
íí 
(
íí 
recordsUpdated
íí &
*
íí' (
-
íí) *
$num
íí* +
)
íí+ ,
>
íí- .
$num
íí/ 0
;
íí0 1
}
ìì 
return
îî 
resp
îî 
;
îî 
}
ïï 	
public
óó 
async
óó 
Task
óó 
<
óó 
bool
óó 
>
óó  
UploadChapter6File
óó  2
(
óó2 3!
Chapter6FileDetails
óó3 F!
chapter6FileDetails
óóG Z
)
óóZ [
{
òò 	
bool
ôô 
resp
ôô 
=
ôô 
false
ôô 
;
ôô 
int
öö 
recordsUpdated
öö 
=
öö  
$num
öö! "
;
öö" #
using
õõ 
(
õõ 
var
õõ 

connection
õõ !
=
õõ" #
await
õõ$ )
base
õõ* .
.
õõ. /
CreateConnection
õõ/ ?
(
õõ? @
DbSchema
õõ@ H
.
õõH I
PORTAL
õõI O
)
õõO P
)
õõP Q
{
úú 
bool
ùù 
filsUploadStatus
ùù %
=
ùù& '
await
ùù( -+
UploadChapter6FileToDirectory
ùù. K
(
ùùK L!
chapter6FileDetails
ùùL _
)
ùù_ `
;
ùù` a
if
ûû 
(
ûû 
filsUploadStatus
ûû $
)
ûû$ %
{
üü %
OracleDynamicParameters
†† +
param
††, 1
=
††2 3
new
††4 7
(
††7 8
)
††8 9
;
††9 :
param
°° 
.
°° 
Add
°° 
(
°° 
name
°° "
:
°°" #
$str
°°$ 3
,
°°3 4!
chapter6FileDetails
°°5 H
.
°°H I
TdsEmpSHSLNo
°°I U
,
°°U V
dbType
°°W ]
:
°°] ^
OracleMappingType
°°_ p
.
°°p q
Int32
°°q v
,
°°v w
	direction°°x Å
:°°Å Ç"
ParameterDirection°°É ï
.°°ï ñ
Input°°ñ õ
)°°õ ú
;°°ú ù
param
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
name
¢¢ "
:
¢¢" #
$str
¢¢$ /
,
¢¢/ 0!
chapter6FileDetails
¢¢1 D
.
¢¢D E
FileName
¢¢E M
,
¢¢M N
dbType
¢¢O U
:
¢¢U V
OracleMappingType
¢¢W h
.
¢¢h i
Varchar2
¢¢i q
,
¢¢q r
	direction
¢¢s |
:
¢¢| }!
ParameterDirection¢¢~ ê
.¢¢ê ë
Input¢¢ë ñ
)¢¢ñ ó
;¢¢ó ò
param
££ 
.
££ 
Add
££ 
(
££ 
name
££ "
:
££" #
$str
££$ 8
,
££8 9!
chapter6FileDetails
££: M
.
££M N
FileName_Original
££N _
,
££_ `
dbType
££a g
:
££g h
OracleMappingType
££i z
.
££z {
Varchar2££{ É
,££É Ñ
	direction££Ö é
:££é è"
ParameterDirection££ê ¢
.££¢ £
Input£££ ®
)££® ©
;££© ™
param
§§ 
.
§§ 
Add
§§ 
(
§§ 
name
§§ "
:
§§" #
$str
§§$ /
,
§§/ 0!
chapter6FileDetails
§§1 D
.
§§D E
FilePath
§§E M
,
§§M N
dbType
§§O U
:
§§U V
OracleMappingType
§§W h
.
§§h i
Varchar2
§§i q
,
§§q r
	direction
§§s |
:
§§| }!
ParameterDirection§§~ ê
.§§ê ë
Input§§ë ñ
)§§ñ ó
;§§ó ò
recordsUpdated
¶¶ "
=
¶¶# $
await
¶¶% *

connection
¶¶+ 5
.
¶¶5 6
ExecuteAsync
¶¶6 B
(
¶¶B C 
DatabaseProcedures
¶¶C U
.
¶¶U V,
SP_TDS_EMP_CHAPTER6_FILEUPLOAD
¶¶V t
,
¶¶t u
param
¶¶v {
,
¶¶{ |
commandType¶¶} à
:¶¶à â
CommandType¶¶ä ï
.¶¶ï ñ
StoredProcedure¶¶ñ •
)¶¶• ¶
;¶¶¶ ß
}
ßß 
resp
®® 
=
®® 
(
®® 
recordsUpdated
®® &
*
®®' (
-
®®) *
$num
®®* +
)
®®+ ,
>
®®- .
$num
®®/ 0
;
®®0 1
}
©© 
return
™™ 
resp
™™ 
;
™™ 
}
´´ 	
public
≠≠ 
async
≠≠ 
Task
≠≠ 
<
≠≠ 
bool
≠≠ 
>
≠≠ #
UploadHouseIncomeFile
≠≠  5
(
≠≠5 6$
HouseIncomeFileDetails
≠≠6 L$
houseIncomeFileDetails
≠≠M c
)
≠≠c d
{
ÆÆ 	
bool
ØØ 
resp
ØØ 
=
ØØ 
false
ØØ 
;
ØØ 
int
∞∞ 
recordsUpdated
∞∞ 
=
∞∞  
$num
∞∞! "
;
∞∞" #
using
±± 
(
±± 
var
±± 

connection
±± !
=
±±" #
await
±±$ )
base
±±* .
.
±±. /
CreateConnection
±±/ ?
(
±±? @
DbSchema
±±@ H
.
±±H I
PORTAL
±±I O
)
±±O P
)
±±P Q
{
≤≤ 
bool
≥≥ 
filsUploadStatus
≥≥ %
=
≥≥& '
await
≥≥( -.
 UploadHouseIncomeFileToDirectory
≥≥. N
(
≥≥N O$
houseIncomeFileDetails
≥≥O e
)
≥≥e f
;
≥≥f g
if
¥¥ 
(
¥¥ 
filsUploadStatus
¥¥ $
)
¥¥$ %
{
µµ %
OracleDynamicParameters
∂∂ +
param
∂∂, 1
=
∂∂2 3
new
∂∂4 7
(
∂∂7 8
)
∂∂8 9
;
∂∂9 :
param
∑∑ 
.
∑∑ 
Add
∑∑ 
(
∑∑ 
name
∑∑ "
:
∑∑" #
$str
∑∑$ 3
,
∑∑3 4$
houseIncomeFileDetails
∑∑5 K
.
∑∑K L
TdsEmpHISLNo
∑∑L X
,
∑∑X Y
dbType
∑∑Z `
:
∑∑` a
OracleMappingType
∑∑b s
.
∑∑s t
Int32
∑∑t y
,
∑∑y z
	direction∑∑{ Ñ
:∑∑Ñ Ö"
ParameterDirection∑∑Ü ò
.∑∑ò ô
Input∑∑ô û
)∑∑û ü
;∑∑ü †
param
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
name
∏∏ "
:
∏∏" #
$str
∏∏$ /
,
∏∏/ 0$
houseIncomeFileDetails
∏∏1 G
.
∏∏G H
FileName
∏∏H P
,
∏∏P Q
dbType
∏∏R X
:
∏∏X Y
OracleMappingType
∏∏Z k
.
∏∏k l
Varchar2
∏∏l t
,
∏∏t u
	direction
∏∏v 
:∏∏ Ä"
ParameterDirection∏∏Å ì
.∏∏ì î
Input∏∏î ô
)∏∏ô ö
;∏∏ö õ
param
ππ 
.
ππ 
Add
ππ 
(
ππ 
name
ππ "
:
ππ" #
$str
ππ$ 8
,
ππ8 9$
houseIncomeFileDetails
ππ: P
.
ππP Q
FileName_Original
ππQ b
,
ππb c
dbType
ππd j
:
ππj k
OracleMappingType
ππl }
.
ππ} ~
Varchar2ππ~ Ü
,ππÜ á
	directionππà ë
:ππë í"
ParameterDirectionππì •
.ππ• ¶
Inputππ¶ ´
)ππ´ ¨
;ππ¨ ≠
param
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
name
∫∫ "
:
∫∫" #
$str
∫∫$ /
,
∫∫/ 0$
houseIncomeFileDetails
∫∫1 G
.
∫∫G H
FilePath
∫∫H P
,
∫∫P Q
dbType
∫∫R X
:
∫∫X Y
OracleMappingType
∫∫Z k
.
∫∫k l
Varchar2
∫∫l t
,
∫∫t u
	direction
∫∫v 
:∫∫ Ä"
ParameterDirection∫∫Å ì
.∫∫ì î
Input∫∫î ô
)∫∫ô ö
;∫∫ö õ
recordsUpdated
ªª "
=
ªª# $
await
ªª% *

connection
ªª+ 5
.
ªª5 6
ExecuteAsync
ªª6 B
(
ªªB C 
DatabaseProcedures
ªªC U
.
ªªU V+
SP_TDS_EMP_HINCOME_FILEUPLOAD
ªªV s
,
ªªs t
param
ªªu z
,
ªªz {
commandTypeªª| á
:ªªá à
CommandTypeªªâ î
.ªªî ï
StoredProcedureªªï §
)ªª§ •
;ªª• ¶
}
ºº 
resp
ΩΩ 
=
ΩΩ 
(
ΩΩ 
recordsUpdated
ΩΩ &
*
ΩΩ' (
-
ΩΩ) *
$num
ΩΩ* +
)
ΩΩ+ ,
>
ΩΩ- .
$num
ΩΩ/ 0
;
ΩΩ0 1
}
ææ 
return
øø 
resp
øø 
;
øø 
}
¿¿ 	
public
¬¬ 
async
¬¬ 
Task
¬¬ 
<
¬¬ 
bool
¬¬ 
>
¬¬ #
UploadOtherIncomeFile
¬¬  5
(
¬¬5 6$
OtherIncomeFileDetails
¬¬6 L$
otherIncomeFileDetails
¬¬M c
)
¬¬c d
{
√√ 	
bool
≈≈ 
resp
≈≈ 
=
≈≈ 
false
≈≈ 
;
≈≈ 
int
∆∆ 
recordsUpdated
∆∆ 
=
∆∆  
$num
∆∆! "
;
∆∆" #
using
«« 
(
«« 
var
«« 

connection
«« !
=
««" #
await
««$ )
base
««* .
.
««. /
CreateConnection
««/ ?
(
««? @
DbSchema
««@ H
.
««H I
PORTAL
««I O
)
««O P
)
««P Q
{
»» 
bool
…… 
filsUploadStatus
…… %
=
……& '
await
……( -.
 UploadOtherIncomeFileToDirectory
……. N
(
……N O$
otherIncomeFileDetails
……O e
)
……e f
;
……f g
if
   
(
   
filsUploadStatus
   $
)
  $ %
{
ÀÀ %
OracleDynamicParameters
ÃÃ +
param
ÃÃ, 1
=
ÃÃ2 3
new
ÃÃ4 7
(
ÃÃ7 8
)
ÃÃ8 9
;
ÃÃ9 :
param
ÕÕ 
.
ÕÕ 
Add
ÕÕ 
(
ÕÕ 
name
ÕÕ "
:
ÕÕ" #
$str
ÕÕ$ 3
,
ÕÕ3 4$
otherIncomeFileDetails
ÕÕ5 K
.
ÕÕK L
TdsEmpOISLNo
ÕÕL X
,
ÕÕX Y
dbType
ÕÕZ `
:
ÕÕ` a
OracleMappingType
ÕÕb s
.
ÕÕs t
Int32
ÕÕt y
,
ÕÕy z
	directionÕÕ{ Ñ
:ÕÕÑ Ö"
ParameterDirectionÕÕÜ ò
.ÕÕò ô
InputÕÕô û
)ÕÕû ü
;ÕÕü †
param
ŒŒ 
.
ŒŒ 
Add
ŒŒ 
(
ŒŒ 
name
ŒŒ "
:
ŒŒ" #
$str
ŒŒ$ /
,
ŒŒ/ 0$
otherIncomeFileDetails
ŒŒ1 G
.
ŒŒG H
FileName
ŒŒH P
,
ŒŒP Q
dbType
ŒŒR X
:
ŒŒX Y
OracleMappingType
ŒŒZ k
.
ŒŒk l
Varchar2
ŒŒl t
,
ŒŒt u
	direction
ŒŒv 
:ŒŒ Ä"
ParameterDirectionŒŒÅ ì
.ŒŒì î
InputŒŒî ô
)ŒŒô ö
;ŒŒö õ
param
œœ 
.
œœ 
Add
œœ 
(
œœ 
name
œœ "
:
œœ" #
$str
œœ$ 8
,
œœ8 9$
otherIncomeFileDetails
œœ: P
.
œœP Q
FileName_Original
œœQ b
,
œœb c
dbType
œœd j
:
œœj k
OracleMappingType
œœl }
.
œœ} ~
Varchar2œœ~ Ü
,œœÜ á
	directionœœà ë
:œœë í"
ParameterDirectionœœì •
.œœ• ¶
Inputœœ¶ ´
)œœ´ ¨
;œœ¨ ≠
param
–– 
.
–– 
Add
–– 
(
–– 
name
–– "
:
––" #
$str
––$ /
,
––/ 0$
otherIncomeFileDetails
––1 G
.
––G H
FilePath
––H P
,
––P Q
dbType
––R X
:
––X Y
OracleMappingType
––Z k
.
––k l
Varchar2
––l t
,
––t u
	direction
––v 
:–– Ä"
ParameterDirection––Å ì
.––ì î
Input––î ô
)––ô ö
;––ö õ
recordsUpdated
—— "
=
——# $
await
——% *

connection
——+ 5
.
——5 6
ExecuteAsync
——6 B
(
——B C 
DatabaseProcedures
——C U
.
——U V+
SP_TDS_EMP_OINCOME_FILEUPLOAD
——V s
,
——s t
param
——u z
,
——z {
commandType——| á
:——á à
CommandType——â î
.——î ï
StoredProcedure——ï §
)——§ •
;——• ¶
}
““ 
resp
”” 
=
”” 
(
”” 
recordsUpdated
”” &
*
””' (
-
””) *
$num
””* +
)
””+ ,
>
””- .
$num
””/ 0
;
””0 1
}
‘‘ 
return
’’ 
resp
’’ 
;
’’ 
}
÷÷ 	
private
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
<
ÿÿ 
bool
ÿÿ 
>
ÿÿ  &
UploadHRAFileToDirectory
ÿÿ! 9
(
ÿÿ9 :$
HouseRentAllowanceFile
ÿÿ: P$
houseRentAllowanceFile
ÿÿQ g
)
ÿÿg h
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ $
houseRentAllowanceFile
⁄⁄ &
!=
⁄⁄' )
null
⁄⁄* .
)
⁄⁄. /
{
€€ 
string
‹‹ 
filePath
‹‹ 
=
‹‹  !
Path
‹‹" &
.
‹‹& '
Combine
‹‹' .
(
‹‹. /!
ApplicationSettings
‹‹/ B
.
‹‹B C
Current
‹‹C J
.
‹‹J K%
HRAInvestmentProofsPath
‹‹K b
)
‹‹b c
;
‹‹c d
if
›› 
(
›› 
!
›› 
	Directory
›› 
.
›› 
Exists
›› %
(
››% &
filePath
››& .
)
››. /
)
››/ 0
{
ﬁﬁ 
	Directory
ﬂﬂ 
.
ﬂﬂ 
CreateDirectory
ﬂﬂ -
(
ﬂﬂ- .
filePath
ﬂﬂ. 6
)
ﬂﬂ6 7
;
ﬂﬂ7 8
}
‡‡ 
string
·· 
fileType
·· 
=
··  !
Path
··" &
.
··& '
GetExtension
··' 3
(
··3 4$
houseRentAllowanceFile
··4 J
.
··J K
FileToUpload
··K W
.
··W X
FileName
··X `
)
··` a
.
··a b
ToString
··b j
(
··j k
)
··k l
.
··l m
ToLower
··m t
(
··t u
)
··u v
;
··v w
string
‚‚ 
fileName
‚‚ 
=
‚‚  !
string
‚‚" (
.
‚‚( )
Format
‚‚) /
(
‚‚/ 0
$str
‚‚0 ;
,
‚‚; <$
houseRentAllowanceFile
‚‚= S
.
‚‚S T

TdsHRASLNo
‚‚T ^
,
‚‚^ _
DateTime
‚‚` h
.
‚‚h i
Now
‚‚i l
.
‚‚l m
Ticks
‚‚m r
,
‚‚r s
fileType
‚‚t |
)
‚‚| }
;
‚‚} ~
filePath
„„ 
=
„„ 
Path
„„ 
.
„„  
Combine
„„  '
(
„„' (
filePath
„„( 0
,
„„0 1
fileName
„„2 :
)
„„: ;
;
„„; <
if
ÂÂ 
(
ÂÂ 
!
ÂÂ 
File
ÂÂ 
.
ÂÂ 
Exists
ÂÂ  
(
ÂÂ  !
filePath
ÂÂ! )
)
ÂÂ) *
)
ÂÂ* +
{
ÊÊ 
string
ÁÁ 
base64String
ÁÁ '
=
ÁÁ( )$
houseRentAllowanceFile
ÁÁ* @
.
ÁÁ@ A
FileToUpload
ÁÁA M
.
ÁÁM N
FileAsBase64
ÁÁN Z
.
ÁÁZ [
	Substring
ÁÁ[ d
(
ÁÁd e$
houseRentAllowanceFile
ÁÁe {
.
ÁÁ{ |
FileToUploadÁÁ| à
.ÁÁà â
FileAsBase64ÁÁâ ï
.ÁÁï ñ
IndexOfÁÁñ ù
(ÁÁù û
$charÁÁû °
)ÁÁ° ¢
+ÁÁ£ §
$numÁÁ• ¶
)ÁÁ¶ ß
;ÁÁß ®
byte
ËË 
[
ËË 
]
ËË 

imageBytes
ËË %
=
ËË& '
Convert
ËË( /
.
ËË/ 0
FromBase64String
ËË0 @
(
ËË@ A
base64String
ËËA M
)
ËËM N
;
ËËN O
File
ÈÈ 
.
ÈÈ 
WriteAllBytes
ÈÈ &
(
ÈÈ& '
filePath
ÈÈ' /
,
ÈÈ/ 0

imageBytes
ÈÈ1 ;
)
ÈÈ; <
;
ÈÈ< =$
houseRentAllowanceFile
ÍÍ *
.
ÍÍ* +
FilePath
ÍÍ+ 3
=
ÍÍ4 5
filePath
ÍÍ6 >
;
ÍÍ> ?$
houseRentAllowanceFile
ÎÎ *
.
ÎÎ* +
FileName
ÎÎ+ 3
=
ÎÎ4 5
fileName
ÎÎ6 >
;
ÎÎ> ?
}
ÏÏ 
}
ÌÌ 
return
ÓÓ 
true
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
private
ÒÒ 
async
ÒÒ 
Task
ÒÒ 
<
ÒÒ 
bool
ÒÒ 
>
ÒÒ  +
UploadChapter6FileToDirectory
ÒÒ! >
(
ÒÒ> ?!
Chapter6FileDetails
ÒÒ? R!
chapter6FileDetails
ÒÒS f
)
ÒÒf g
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ !
chapter6FileDetails
ÛÛ #
!=
ÛÛ$ &
null
ÛÛ' +
)
ÛÛ+ ,
{
ÙÙ 
string
ıı 
filePath
ıı 
=
ıı  !
Path
ıı" &
.
ıı& '
Combine
ıı' .
(
ıı. /!
ApplicationSettings
ıı/ B
.
ııB C
Current
ııC J
.
ııJ K*
Chapter6InvestmentProofsPath
ııK g
)
ııg h
;
ııh i
if
ˆˆ 
(
ˆˆ 
!
ˆˆ 
	Directory
ˆˆ 
.
ˆˆ 
Exists
ˆˆ %
(
ˆˆ% &
filePath
ˆˆ& .
)
ˆˆ. /
)
ˆˆ/ 0
{
˜˜ 
	Directory
¯¯ 
.
¯¯ 
CreateDirectory
¯¯ -
(
¯¯- .
filePath
¯¯. 6
)
¯¯6 7
;
¯¯7 8
}
˘˘ 
string
˙˙ 
fileType
˙˙ 
=
˙˙  !
Path
˙˙" &
.
˙˙& '
GetExtension
˙˙' 3
(
˙˙3 4!
chapter6FileDetails
˙˙4 G
.
˙˙G H
FileToUpload
˙˙H T
.
˙˙T U
FileName
˙˙U ]
)
˙˙] ^
.
˙˙^ _
ToString
˙˙_ g
(
˙˙g h
)
˙˙h i
.
˙˙i j
ToLower
˙˙j q
(
˙˙q r
)
˙˙r s
;
˙˙s t
string
˚˚ 
fileName
˚˚ 
=
˚˚  !
string
˚˚" (
.
˚˚( )
Format
˚˚) /
(
˚˚/ 0
$str
˚˚0 ;
,
˚˚; <!
chapter6FileDetails
˚˚= P
.
˚˚P Q
TdsEmpSHSLNo
˚˚Q ]
,
˚˚] ^
DateTime
˚˚_ g
.
˚˚g h
Now
˚˚h k
.
˚˚k l
Ticks
˚˚l q
,
˚˚q r
fileType
˚˚s {
)
˚˚{ |
;
˚˚| }
filePath
¸¸ 
=
¸¸ 
Path
¸¸ 
.
¸¸  
Combine
¸¸  '
(
¸¸' (
filePath
¸¸( 0
,
¸¸0 1
fileName
¸¸2 :
)
¸¸: ;
;
¸¸; <
if
˛˛ 
(
˛˛ 
!
˛˛ 
File
˛˛ 
.
˛˛ 
Exists
˛˛  
(
˛˛  !
filePath
˛˛! )
)
˛˛) *
)
˛˛* +
{
ˇˇ 
string
ÄÄ 
base64String
ÄÄ '
=
ÄÄ( )!
chapter6FileDetails
ÄÄ* =
.
ÄÄ= >
FileToUpload
ÄÄ> J
.
ÄÄJ K
FileAsBase64
ÄÄK W
.
ÄÄW X
	Substring
ÄÄX a
(
ÄÄa b!
chapter6FileDetails
ÄÄb u
.
ÄÄu v
FileToUploadÄÄv Ç
.ÄÄÇ É
FileAsBase64ÄÄÉ è
.ÄÄè ê
IndexOfÄÄê ó
(ÄÄó ò
$charÄÄò õ
)ÄÄõ ú
+ÄÄù û
$numÄÄü †
)ÄÄ† °
;ÄÄ° ¢
byte
ÅÅ 
[
ÅÅ 
]
ÅÅ 

imageBytes
ÅÅ %
=
ÅÅ& '
Convert
ÅÅ( /
.
ÅÅ/ 0
FromBase64String
ÅÅ0 @
(
ÅÅ@ A
base64String
ÅÅA M
)
ÅÅM N
;
ÅÅN O
File
ÇÇ 
.
ÇÇ 
WriteAllBytes
ÇÇ &
(
ÇÇ& '
filePath
ÇÇ' /
,
ÇÇ/ 0

imageBytes
ÇÇ1 ;
)
ÇÇ; <
;
ÇÇ< =!
chapter6FileDetails
ÉÉ '
.
ÉÉ' (
FilePath
ÉÉ( 0
=
ÉÉ1 2
filePath
ÉÉ3 ;
;
ÉÉ; <!
chapter6FileDetails
ÑÑ '
.
ÑÑ' (
FileName
ÑÑ( 0
=
ÑÑ1 2
fileName
ÑÑ3 ;
;
ÑÑ; <
}
ÖÖ 
}
ÜÜ 
return
áá 
true
áá 
;
áá 
}
àà 	
private
ää 
async
ää 
Task
ää 
<
ää 
bool
ää 
>
ää  .
 UploadHouseIncomeFileToDirectory
ää! A
(
ääA B$
HouseIncomeFileDetails
ääB X$
houseIncomeFileDetails
ääY o
)
ääo p
{
ãã 	
if
åå 
(
åå $
houseIncomeFileDetails
åå &
!=
åå' )
null
åå* .
)
åå. /
{
çç 
string
éé 
filePath
éé 
=
éé  !
Path
éé" &
.
éé& '
Combine
éé' .
(
éé. /!
ApplicationSettings
éé/ B
.
ééB C
Current
ééC J
.
ééJ K.
 HouseIncomeInvestmentProofsfPath
ééK k
)
éék l
;
éél m
if
èè 
(
èè 
!
èè 
	Directory
èè 
.
èè 
Exists
èè %
(
èè% &
filePath
èè& .
)
èè. /
)
èè/ 0
{
êê 
	Directory
ëë 
.
ëë 
CreateDirectory
ëë -
(
ëë- .
filePath
ëë. 6
)
ëë6 7
;
ëë7 8
}
íí 
string
ìì 
fileType
ìì 
=
ìì  !
Path
ìì" &
.
ìì& '
GetExtension
ìì' 3
(
ìì3 4$
houseIncomeFileDetails
ìì4 J
.
ììJ K
FileToUpload
ììK W
.
ììW X
FileName
ììX `
)
ìì` a
.
ììa b
ToString
ììb j
(
ììj k
)
ììk l
.
ììl m
ToLower
ììm t
(
ììt u
)
ììu v
;
ììv w
string
îî 
fileName
îî 
=
îî  !
string
îî" (
.
îî( )
Format
îî) /
(
îî/ 0
$str
îî0 ;
,
îî; <$
houseIncomeFileDetails
îî= S
.
îîS T
TdsEmpHISLNo
îîT `
,
îî` a
DateTime
îîb j
.
îîj k
Now
îîk n
.
îîn o
Ticks
îîo t
,
îît u
fileType
îîv ~
)
îî~ 
;îî Ä
filePath
ïï 
=
ïï 
Path
ïï 
.
ïï  
Combine
ïï  '
(
ïï' (
filePath
ïï( 0
,
ïï0 1
fileName
ïï2 :
)
ïï: ;
;
ïï; <
if
óó 
(
óó 
!
óó 
File
óó 
.
óó 
Exists
óó  
(
óó  !
filePath
óó! )
)
óó) *
)
óó* +
{
òò 
string
ôô 
base64String
ôô '
=
ôô( )$
houseIncomeFileDetails
ôô* @
.
ôô@ A
FileToUpload
ôôA M
.
ôôM N
FileAsBase64
ôôN Z
.
ôôZ [
	Substring
ôô[ d
(
ôôd e$
houseIncomeFileDetails
ôôe {
.
ôô{ |
FileToUploadôô| à
.ôôà â
FileAsBase64ôôâ ï
.ôôï ñ
IndexOfôôñ ù
(ôôù û
$charôôû °
)ôô° ¢
+ôô£ §
$numôô• ¶
)ôô¶ ß
;ôôß ®
byte
öö 
[
öö 
]
öö 

imageBytes
öö %
=
öö& '
Convert
öö( /
.
öö/ 0
FromBase64String
öö0 @
(
öö@ A
base64String
ööA M
)
ööM N
;
ööN O
File
õõ 
.
õõ 
WriteAllBytes
õõ &
(
õõ& '
filePath
õõ' /
,
õõ/ 0

imageBytes
õõ1 ;
)
õõ; <
;
õõ< =$
houseIncomeFileDetails
úú *
.
úú* +
FilePath
úú+ 3
=
úú4 5
filePath
úú6 >
;
úú> ?$
houseIncomeFileDetails
ùù *
.
ùù* +
FileName
ùù+ 3
=
ùù4 5
fileName
ùù6 >
;
ùù> ?
}
ûû 
}
üü 
return
†† 
true
†† 
;
†† 
}
°° 	
private
££ 
Task
££ 
<
££ 
bool
££ 
>
££ .
 UploadOtherIncomeFileToDirectory
££ ;
(
££; <$
OtherIncomeFileDetails
££< R$
otherIncomeFileDetails
££S i
)
££i j
{
§§ 	
if
•• 
(
•• $
otherIncomeFileDetails
•• &
!=
••' )
null
••* .
)
••. /
{
¶¶ 
string
ßß 
filePath
ßß 
=
ßß  !
Path
ßß" &
.
ßß& '
Combine
ßß' .
(
ßß. /!
ApplicationSettings
ßß/ B
.
ßßB C
Current
ßßC J
.
ßßJ K-
OtherIncomeInvestmentProofsPath
ßßK j
)
ßßj k
;
ßßk l
if
®® 
(
®® 
!
®® 
	Directory
®® 
.
®® 
Exists
®® %
(
®®% &
filePath
®®& .
)
®®. /
)
®®/ 0
{
©© 
	Directory
™™ 
.
™™ 
CreateDirectory
™™ -
(
™™- .
filePath
™™. 6
)
™™6 7
;
™™7 8
}
´´ 
string
¨¨ 
fileType
¨¨ 
=
¨¨  !
Path
¨¨" &
.
¨¨& '
GetExtension
¨¨' 3
(
¨¨3 4$
otherIncomeFileDetails
¨¨4 J
.
¨¨J K
FileToUpload
¨¨K W
.
¨¨W X
FileName
¨¨X `
)
¨¨` a
.
¨¨a b
ToString
¨¨b j
(
¨¨j k
)
¨¨k l
.
¨¨l m
ToLower
¨¨m t
(
¨¨t u
)
¨¨u v
;
¨¨v w
string
≠≠ 
fileName
≠≠ 
=
≠≠  !
string
≠≠" (
.
≠≠( )
Format
≠≠) /
(
≠≠/ 0
$str
≠≠0 ;
,
≠≠; <$
otherIncomeFileDetails
≠≠= S
.
≠≠S T
TdsEmpOISLNo
≠≠T `
,
≠≠` a
DateTime
≠≠b j
.
≠≠j k
Now
≠≠k n
.
≠≠n o
Ticks
≠≠o t
,
≠≠t u
fileType
≠≠v ~
)
≠≠~ 
;≠≠ Ä
filePath
ÆÆ 
=
ÆÆ 
Path
ÆÆ 
.
ÆÆ  
Combine
ÆÆ  '
(
ÆÆ' (
filePath
ÆÆ( 0
,
ÆÆ0 1
fileName
ÆÆ2 :
)
ÆÆ: ;
;
ÆÆ; <
if
∞∞ 
(
∞∞ 
!
∞∞ 
File
∞∞ 
.
∞∞ 
Exists
∞∞  
(
∞∞  !
filePath
∞∞! )
)
∞∞) *
)
∞∞* +
{
±± 
string
≤≤ 
base64String
≤≤ '
=
≤≤( )$
otherIncomeFileDetails
≤≤* @
.
≤≤@ A
FileToUpload
≤≤A M
.
≤≤M N
FileAsBase64
≤≤N Z
.
≤≤Z [
	Substring
≤≤[ d
(
≤≤d e$
otherIncomeFileDetails
≤≤e {
.
≤≤{ |
FileToUpload≤≤| à
.≤≤à â
FileAsBase64≤≤â ï
.≤≤ï ñ
IndexOf≤≤ñ ù
(≤≤ù û
$char≤≤û °
)≤≤° ¢
+≤≤£ §
$num≤≤• ¶
)≤≤¶ ß
;≤≤ß ®
byte
≥≥ 
[
≥≥ 
]
≥≥ 

imageBytes
≥≥ %
=
≥≥& '
Convert
≥≥( /
.
≥≥/ 0
FromBase64String
≥≥0 @
(
≥≥@ A
base64String
≥≥A M
)
≥≥M N
;
≥≥N O
File
¥¥ 
.
¥¥ 
WriteAllBytes
¥¥ &
(
¥¥& '
filePath
¥¥' /
,
¥¥/ 0

imageBytes
¥¥1 ;
)
¥¥; <
;
¥¥< =$
otherIncomeFileDetails
µµ *
.
µµ* +
FilePath
µµ+ 3
=
µµ4 5
filePath
µµ6 >
;
µµ> ?$
otherIncomeFileDetails
∂∂ *
.
∂∂* +
FileName
∂∂+ 3
=
∂∂4 5
fileName
∂∂6 >
;
∂∂> ?
}
∑∑ 
}
∏∏ 
return
ππ 
Task
ππ 
.
ππ 

FromResult
ππ "
(
ππ" #
true
ππ# '
)
ππ' (
;
ππ( )
}
∫∫ 	
public
øø 
async
øø 
Task
øø 
<
øø 
bool
øø 
>
øø *
RemoveHouseRentAllowanceFile
øø  <
(
øø< =
int
øø= @
	hraFileId
øøA J
)
øøJ K
{
¿¿ 	
bool
¡¡ 
	isDeleted
¡¡ 
=
¡¡ 
false
¡¡ "
;
¡¡" #
int
¬¬ 
updatedRecords
¬¬ 
=
¬¬  
$num
¬¬! "
;
¬¬" #
using
√√ 
(
√√ 
var
√√ 

connection
√√ !
=
√√" #
await
√√$ )
base
√√* .
.
√√. /
CreateConnection
√√/ ?
(
√√? @
DbSchema
√√@ H
.
√√H I
PORTAL
√√I O
)
√√O P
)
√√P Q
{
ƒƒ %
OracleDynamicParameters
≈≈ '
	parmeters
≈≈( 1
=
≈≈2 3
new
≈≈4 7%
OracleDynamicParameters
≈≈8 O
(
≈≈O P
)
≈≈P Q
;
≈≈Q R
	parmeters
∆∆ 
.
∆∆ 
Add
∆∆ 
(
∆∆ 
name
∆∆ "
:
∆∆" #
$str
∆∆$ 5
,
∆∆5 6
	hraFileId
∆∆7 @
,
∆∆@ A
dbType
∆∆B H
:
∆∆H I
OracleMappingType
∆∆J [
.
∆∆[ \
Int32
∆∆\ a
,
∆∆a b
	direction
∆∆c l
:
∆∆l m!
ParameterDirection∆∆n Ä
.∆∆Ä Å
Input∆∆Å Ü
)∆∆Ü á
;∆∆á à
updatedRecords
«« 
=
««  
await
««! &

connection
««' 1
.
««1 2
ExecuteAsync
««2 >
(
««> ? 
DatabaseProcedures
««? Q
.
««Q R'
SP_TDS_EMP_DELETE_HRAFILE
««R k
,
««k l
	parmeters
««m v
,
««v w
commandType««x É
:««É Ñ
CommandType««Ö ê
.««ê ë
StoredProcedure««ë †
)««† °
;««° ¢
}
»» 
	isDeleted
…… 
=
…… 
(
…… 
updatedRecords
…… '
*
……( )
-
……* +
$num
……+ ,
)
……, -
>
……. /
$num
……0 1
;
……1 2
return
   
	isDeleted
   
;
   
}
ÀÀ 	
public
ÃÃ 
async
ÃÃ 
Task
ÃÃ 
<
ÃÃ 
bool
ÃÃ 
>
ÃÃ  
RemoveChapter6File
ÃÃ  2
(
ÃÃ2 3
int
ÃÃ3 6
chapter6FileId
ÃÃ7 E
)
ÃÃE F
{
ÕÕ 	
bool
ŒŒ 
	isDeleted
ŒŒ 
=
ŒŒ 
false
ŒŒ "
;
ŒŒ" #
int
œœ 
updatedRecords
œœ 
=
œœ  
$num
œœ! "
;
œœ" #
using
–– 
(
–– 
var
–– 

connection
–– !
=
––" #
await
––$ )
base
––* .
.
––. /
CreateConnection
––/ ?
(
––? @
DbSchema
––@ H
.
––H I
PORTAL
––I O
)
––O P
)
––P Q
{
—— %
OracleDynamicParameters
““ '
	parmeters
““( 1
=
““2 3
new
““4 7%
OracleDynamicParameters
““8 O
(
““O P
)
““P Q
;
““Q R
	parmeters
”” 
.
”” 
Add
”” 
(
”” 
name
”” "
:
””" #
$str
””$ 7
,
””7 8
chapter6FileId
””9 G
,
””G H
dbType
””I O
:
””O P
OracleMappingType
””Q b
.
””b c
Int32
””c h
,
””h i
	direction
””j s
:
””s t!
ParameterDirection””u á
.””á à
Input””à ç
)””ç é
;””é è
updatedRecords
‘‘ 
=
‘‘  
await
‘‘! &

connection
‘‘' 1
.
‘‘1 2
ExecuteAsync
‘‘2 >
(
‘‘> ? 
DatabaseProcedures
‘‘? Q
.
‘‘Q R,
SP_TDS_EMP_DELETE_CHAPTER6FILE
‘‘R p
,
‘‘p q
	parmeters
‘‘r {
,
‘‘{ |
commandType‘‘} à
:‘‘à â
CommandType‘‘ä ï
.‘‘ï ñ
StoredProcedure‘‘ñ •
)‘‘• ¶
;‘‘¶ ß
}
’’ 
	isDeleted
÷÷ 
=
÷÷ 
(
÷÷ 
updatedRecords
÷÷ '
*
÷÷( )
-
÷÷* +
$num
÷÷+ ,
)
÷÷, -
>
÷÷. /
$num
÷÷0 1
;
÷÷1 2
return
◊◊ 
	isDeleted
◊◊ 
;
◊◊ 
}
ÿÿ 	
public
ŸŸ 
async
ŸŸ 
Task
ŸŸ 
<
ŸŸ 
bool
ŸŸ 
>
ŸŸ #
RemoveHouseIncomeFile
ŸŸ  5
(
ŸŸ5 6
int
ŸŸ6 9
houseIncomeFileId
ŸŸ: K
)
ŸŸK L
{
⁄⁄ 	
bool
€€ 
	isDeleted
€€ 
=
€€ 
false
€€ "
;
€€" #
int
‹‹ 
updatedRecords
‹‹ 
=
‹‹  
$num
‹‹! "
;
‹‹" #
using
›› 
(
›› 
var
›› 

connection
›› !
=
››" #
await
››$ )
base
››* .
.
››. /
CreateConnection
››/ ?
(
››? @
DbSchema
››@ H
.
››H I
PORTAL
››I O
)
››O P
)
››P Q
{
ﬁﬁ %
OracleDynamicParameters
ﬂﬂ '
	parmeters
ﬂﬂ( 1
=
ﬂﬂ2 3
new
ﬂﬂ4 7%
OracleDynamicParameters
ﬂﬂ8 O
(
ﬂﬂO P
)
ﬂﬂP Q
;
ﬂﬂQ R
	parmeters
‡‡ 
.
‡‡ 
Add
‡‡ 
(
‡‡ 
name
‡‡ "
:
‡‡" #
$str
‡‡$ 7
,
‡‡7 8
houseIncomeFileId
‡‡9 J
,
‡‡J K
dbType
‡‡L R
:
‡‡R S
OracleMappingType
‡‡T e
.
‡‡e f
Int32
‡‡f k
,
‡‡k l
	direction
‡‡m v
:
‡‡v w!
ParameterDirection‡‡x ä
.‡‡ä ã
Input‡‡ã ê
)‡‡ê ë
;‡‡ë í
updatedRecords
·· 
=
··  
await
··! &

connection
··' 1
.
··1 2
ExecuteAsync
··2 >
(
··> ? 
DatabaseProcedures
··? Q
.
··Q R+
SP_TDS_EMP_DELETE_HINCOMEFILE
··R o
,
··o p
	parmeters
··q z
,
··z {
commandType··| á
:··á à
CommandType··â î
.··î ï
StoredProcedure··ï §
)··§ •
;··• ¶
}
‚‚ 
	isDeleted
„„ 
=
„„ 
(
„„ 
updatedRecords
„„ '
*
„„( )
-
„„* +
$num
„„+ ,
)
„„, -
>
„„. /
$num
„„0 1
;
„„1 2
return
‰‰ 
	isDeleted
‰‰ 
;
‰‰ 
}
ÂÂ 	
public
ÊÊ 
async
ÊÊ 
Task
ÊÊ 
<
ÊÊ 
bool
ÊÊ 
>
ÊÊ #
RemoveOtherIncomeFile
ÊÊ  5
(
ÊÊ5 6
int
ÊÊ6 9
otherIncomeFileId
ÊÊ: K
)
ÊÊK L
{
ÁÁ 	
bool
ËË 
	isDeleted
ËË 
=
ËË 
false
ËË "
;
ËË" #
int
ÈÈ 
updatedRecords
ÈÈ 
=
ÈÈ  
$num
ÈÈ! "
;
ÈÈ" #
using
ÍÍ 
(
ÍÍ 
var
ÍÍ 

connection
ÍÍ !
=
ÍÍ" #
await
ÍÍ$ )
base
ÍÍ* .
.
ÍÍ. /
CreateConnection
ÍÍ/ ?
(
ÍÍ? @
DbSchema
ÍÍ@ H
.
ÍÍH I
PORTAL
ÍÍI O
)
ÍÍO P
)
ÍÍP Q
{
ÎÎ %
OracleDynamicParameters
ÏÏ '
	parmeters
ÏÏ( 1
=
ÏÏ2 3
new
ÏÏ4 7%
OracleDynamicParameters
ÏÏ8 O
(
ÏÏO P
)
ÏÏP Q
;
ÏÏQ R
	parmeters
ÌÌ 
.
ÌÌ 
Add
ÌÌ 
(
ÌÌ 
name
ÌÌ "
:
ÌÌ" #
$str
ÌÌ$ 7
,
ÌÌ7 8
otherIncomeFileId
ÌÌ9 J
,
ÌÌJ K
dbType
ÌÌL R
:
ÌÌR S
OracleMappingType
ÌÌT e
.
ÌÌe f
Int32
ÌÌf k
,
ÌÌk l
	direction
ÌÌm v
:
ÌÌv w!
ParameterDirectionÌÌx ä
.ÌÌä ã
InputÌÌã ê
)ÌÌê ë
;ÌÌë í
updatedRecords
ÓÓ 
=
ÓÓ  
await
ÓÓ! &

connection
ÓÓ' 1
.
ÓÓ1 2
ExecuteAsync
ÓÓ2 >
(
ÓÓ> ? 
DatabaseProcedures
ÓÓ? Q
.
ÓÓQ R+
SP_TDS_EMP_DELETE_OINCOMEFILE
ÓÓR o
,
ÓÓo p
	parmeters
ÓÓq z
,
ÓÓz {
commandTypeÓÓ| á
:ÓÓá à
CommandTypeÓÓâ î
.ÓÓî ï
StoredProcedureÓÓï §
)ÓÓ§ •
;ÓÓ• ¶
}
ÔÔ 
	isDeleted
 
=
 
(
 
updatedRecords
 '
*
( )
-
* +
$num
+ ,
)
, -
>
. /
$num
0 1
;
1 2
return
ÒÒ 
	isDeleted
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
}
ÙÙ 
}ıı æ…
\F:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Investment\InvestmentRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &

Investment& 0
{ 
public 

class  
InvestmentRepository %
:& '
BaseRepository( 6
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
ILoggerManager '
logger( .
;. /
private   
readonly   
IDistributedCache   *

redisCache  + 5
;  5 6
public!!  
InvestmentRepository!! #
(!!# $
IConfiguration!!$ 2
configuration!!3 @
,!!@ A
ILoggerManager!!B P
logger!!Q W
)!!W X
:!!Y Z
base!![ _
(!!_ `
configuration!!` m
)!!m n
{"" 	
this## 
.## 
configuration## 
=##  
configuration##! .
;##. /
this$$ 
.$$ 
logger$$ 
=$$ 
logger$$  
;$$  !
}%% 	
public(( 
async(( 
Task(( 
<(( !
InvestmentDeclaration(( /
>((/ 0$
GetInvestmentDeclaration((1 I
(((I J
int((J M
finSLNo((N U
,((U V
int((W Z
employeeSLNo(([ g
)((g h
{)) 	!
InvestmentDeclaration** !!
investmentDeclaration**" 7
=**8 9
new**: =!
InvestmentDeclaration**> S
(**S T
)**T U
;**U V
var++ 
employeeDetails++ 
=++  !
await++" '
GetTDSEmpDetails++( 8
(++8 9
finSLNo++9 @
,++@ A
employeeSLNo++B N
)++N O
;++O P
var,, !
tdsEmployeeHRADetails,, %
=,,& '
await,,( -
GetTDSEmpHRADetails,,. A
(,,A B
finSLNo,,B I
,,,I J
employeeSLNo,,K W
),,W X
;,,X Y
var-- (
tdsEmployeeSubHeadingDetails-- ,
=--- .
await--/ 4#
GetTDSEmpSubHeadDetails--5 L
(--L M
finSLNo--M T
,--T U
employeeSLNo--V b
)--b c
;--c d
var.. )
tdsEmployeeHouseIncomeDetails.. -
=... /
await..0 5$
GetEmpHouseIncomeDetails..6 N
(..N O
finSLNo..O V
,..V W
employeeSLNo..X d
)..d e
;..e f
var// &
employeeOtherIncomeDetails// *
=//+ ,
await//- 2$
GetEmpOtherIncomeDetails//3 K
(//K L
finSLNo//L S
,//S T
employeeSLNo//U a
)//a b
;//b c
if00 
(00 
employeeDetails00 
!=00  "
null00# '
)00' (
{11 !
investmentDeclaration22 %
=22& '
new22( +!
InvestmentDeclaration22, A
{33 
EmployeeTdsId44 !
=44" #
employeeDetails44$ 3
.443 4

TDSEmpSLNo444 >
,44> ?

EmployeeId55 
=55  
employeeDetails55! 0
.550 1
EmployeeSLNo551 =
,55= >
FinancialYearId66 #
=66$ %
employeeDetails66& 5
.665 6
FinSLNo666 =
,66= >
UniqueNumber77  
=77! "
employeeDetails77# 2
.772 3
UniqueNo773 ;
,77; <
InvestmentDetail88 $
=88% & 
MapInvestmentDetails88' ;
(88; <
employeeDetails88< K
)88K L
,88L M
Chapter6Detail99 "
=99# $
MapChapter6Details99% 7
(997 8(
tdsEmployeeSubHeadingDetails998 T
)99T U
,99U V
HouseRentAllowance:: &
=::' (!
MapHouseRentAllowence::) >
(::> ?
employeeDetails::? N
,::N O!
tdsEmployeeHRADetails::P e
)::e f
,::f g
HouseIncomeDetail;; %
=;;& '!
MapHouseIncomeDetails;;( =
(;;= >)
tdsEmployeeHouseIncomeDetails;;> [
);;[ \
,;;\ ]
OtherIncomeDetail<< %
=<<& '!
MapOtherIncomedetails<<( =
(<<= >&
employeeOtherIncomeDetails<<> X
)<<X Y
}== 
;== 
}>> 
return?? !
investmentDeclaration?? (
;??( )
}@@ 	
privateBB 
ListBB 
<BB 
OtherIncomeDetailBB &
>BB& '!
MapOtherIncomedetailsBB( =
(BB= >
ListBB> B
<BBB C%
EmployeeOtherIncomeDetailBBC \
>BB\ ]&
employeeOtherIncomeDetailsBB^ x
)BBx y
{CC 	
ListDD 
<DD 
OtherIncomeDetailDD "
>DD" #
OtherIncomeDetailsDD$ 6
=DD7 8
nullDD9 =
;DD= >
ifEE 
(EE &
employeeOtherIncomeDetailsEE *
!=EE+ -
nullEE. 2
)EE2 3
{FF 
OtherIncomeDetailsGG "
=GG# $
newGG% (
ListGG) -
<GG- .
OtherIncomeDetailGG. ?
>GG? @
(GG@ A
)GGA B
;GGB C
foreachHH 
(HH 
varHH 
itemHH !
inHH" $&
employeeOtherIncomeDetailsHH% ?
)HH? @
{II 
OtherIncomeDetailJJ %
houseIncomeJJ& 1
=JJ2 3
newJJ4 7
OtherIncomeDetailJJ8 I
{KK 
OtherIncomeDetailIdLL +
=LL, -
itemLL. 2
.LL2 3
TdsEmpOISlNoLL3 ?
,LL? @
AmountMM 
=MM  
itemMM! %
.MM% &
AmountMM& ,
,MM, -
DescriptionNN #
=NN$ %
itemNN& *
.NN* +
DescriptionNN+ 6
,NN6 7
OthIncomeHeadIdOO '
=OO( )
itemOO* .
.OO. /
OthIncomeHeadSlNoOO/ @
,OO@ A
	TdsAmountPP !
=PP" #
itemPP$ (
.PP( )
Tds_AmtPP) 0
,PP0 1
VerifiedAmountQQ &
=QQ' (
itemQQ) -
.QQ- .
VerifiedAmountQQ. <
,QQ< =
VerifiedRemarksRR '
=RR( )
itemRR* .
.RR. /
VerifiedRemarksRR/ >
,RR> ?
	FileCountSS !
=SS" #
itemSS$ (
.SS( )
	FileCountSS) 2
,SS2 3
VerifiedUserSlNoTT (
=TT) *
itemTT+ /
.TT/ 0
VerifiedUserSlNoTT0 @
}UU 
;UU 
OtherIncomeDetailsVV &
.VV& '
AddVV' *
(VV* +
houseIncomeVV+ 6
)VV6 7
;VV7 8
}WW 
}XX 
returnYY 
OtherIncomeDetailsYY %
;YY% &
}ZZ 	
privaterr 
Listrr 
<rr %
HousePropertyIncomeDetailrr .
>rr. /!
MapHouseIncomeDetailsrr0 E
(rrE F
ListrrF J
<rrJ K%
EmployeeHouseIncomeDetailrrK d
>rrd e'
employeeHouseIncomeDetails	rrf Ä
)
rrÄ Å
{ss 	
Listtt 
<tt %
HousePropertyIncomeDetailtt *
>tt* +&
HousePropertyIncomeDetailstt, F
=ttG H
nullttI M
;ttM N
ifuu 
(uu &
employeeHouseIncomeDetailsuu *
!=uu+ -
nulluu. 2
)uu2 3
{vv &
HousePropertyIncomeDetailsww *
=ww+ ,
newww- 0
Listww1 5
<ww5 6%
HousePropertyIncomeDetailww6 O
>wwO P
(wwP Q
)wwQ R
;wwR S
foreachxx 
(xx 
varxx 
itemxx !
inxx" $&
employeeHouseIncomeDetailsxx% ?
)xx? @
{yy %
HousePropertyIncomeDetailzz -
houseIncomezz. 9
=zz: ;
newzz< ?%
HousePropertyIncomeDetailzz@ Y
{{{ 
HouseIncomeDetailId|| +
=||, -
item||. 2
.||2 3
TdsEmpHISlNo||3 ?
,||? @
Amount}} 
=}}  
item}}! %
.}}% &
Amount}}& ,
,}}, -
Description~~ #
=~~$ %
item~~& *
.~~* +
Description~~+ 6
,~~6 7
HouseIncomeHeadId )
=* +
item, 0
.0 1
HouseIncomeHeadSlNo1 D
,D E
	PanNumber
ÄÄ !
=
ÄÄ" #
item
ÄÄ$ (
.
ÄÄ( )!
HouseIncomeHeadSlNo
ÄÄ) <
==
ÄÄ= ?
$num
ÄÄ@ A
?
ÄÄB C
(
ÄÄD E
item
ÄÄE I
.
ÄÄI J

BANK_PANNO
ÄÄJ T
.
ÄÄT U
IsNullOrEmpty
ÄÄU b
(
ÄÄb c
)
ÄÄc d
?
ÄÄe f
$str
ÄÄg p
:
ÄÄq r
item
ÄÄs w
.
ÄÄw x

BANK_PANNOÄÄx Ç
)ÄÄÇ É
:ÄÄÑ Ö
$strÄÄÜ é
,ÄÄé è
VerifiedAmount
ÅÅ &
=
ÅÅ' (
item
ÅÅ) -
.
ÅÅ- .
VerifiedAmount
ÅÅ. <
,
ÅÅ< =
VerifiedRemarks
ÇÇ '
=
ÇÇ( )
item
ÇÇ* .
.
ÇÇ. /
VerifiedRemarks
ÇÇ/ >
,
ÇÇ> ?
	FileCount
ÉÉ !
=
ÉÉ" #
item
ÉÉ$ (
.
ÉÉ( )
	FileCount
ÉÉ) 2
,
ÉÉ2 3
VerifiedUserSlNo
ÑÑ (
=
ÑÑ) *
item
ÑÑ+ /
.
ÑÑ/ 0
VerifiedUserSlNo
ÑÑ0 @
}
ÖÖ 
;
ÖÖ (
HousePropertyIncomeDetails
ÜÜ .
.
ÜÜ. /
Add
ÜÜ/ 2
(
ÜÜ2 3
houseIncome
ÜÜ3 >
)
ÜÜ> ?
;
ÜÜ? @
}
áá 
}
àà 
return
ââ (
HousePropertyIncomeDetails
ââ -
;
ââ- .
}
ää 	
private
££  
HouseRentAllowance
££ "#
MapHouseRentAllowence
££# 8
(
££8 9
EmployeeDetails
££9 H
employeeDetails
££I X
,
££X Y
List
££Z ^
<
££^ _#
TdsEmployeeHRADetails
££_ t
>
££t u$
tdsEmployeeHRADetails££v ã
)££ã å
{
§§ 	 
HouseRentAllowance
••  
houseRentAllowance
•• 1
=
••2 3
new
••4 7 
HouseRentAllowance
••8 J
{
¶¶ 

LocationId
ßß 
=
ßß 
employeeDetails
ßß ,
.
ßß, -
HRALocationSLNo
ßß- <
,
ßß< =
IsRentHouse
®® 
=
®® 
employeeDetails
®® -
.
®®- .
IsRentHouse
®®. 9
,
®®9 :

StreetName
©© 
=
©© 
employeeDetails
©© ,
.
©©, -
Street_Vill
©©- 8
,
©©8 9
HouseNumber
™™ 
=
™™ 
employeeDetails
™™ -
.
™™- .
Hno
™™. 1
,
™™1 2
MandalId
´´ 
=
´´ 
employeeDetails
´´ *
.
´´* +

MandalSLNo
´´+ 5
,
´´5 6

DistrictId
¨¨ 
=
¨¨ 
employeeDetails
¨¨ ,
.
¨¨, -
DistrictSLNo
¨¨- 9
,
¨¨9 :
StateId
≠≠ 
=
≠≠ 
employeeDetails
≠≠ )
.
≠≠) *
	StateSLNo
≠≠* 3
,
≠≠3 4
PhoneNumber
ÆÆ 
=
ÆÆ 
employeeDetails
ÆÆ -
.
ÆÆ- .
PhoneNo
ÆÆ. 5
,
ÆÆ5 6
Pincode
ØØ 
=
ØØ 
employeeDetails
ØØ )
.
ØØ) *
Pin
ØØ* -
}
∞∞ 
;
∞∞ 
foreach
≤≤ 
(
≤≤ 
var
≤≤ 
item
≤≤ 
in
≤≤  #
tdsEmployeeHRADetails
≤≤! 6
)
≤≤6 7
{
≥≥ 
RentPayment
¥¥ 
rentPayment
¥¥ '
=
¥¥( )
new
¥¥* -
RentPayment
¥¥. 9
{
µµ 
RentPaymentId
∂∂ !
=
∂∂" #
item
∂∂$ (
.
∂∂( )

TdsHraSLNo
∂∂) 3
,
∂∂3 4
	OwnerName
∑∑ 
=
∑∑ 
item
∑∑  $
.
∑∑$ %
	OwnerName
∑∑% .
,
∑∑. /
OwnerPan
∏∏ 
=
∏∏ 
item
∏∏ #
.
∏∏# $
OwnerPan
∏∏$ ,
,
∏∏, -

NoOfMonths
ππ 
=
ππ  
item
ππ! %
.
ππ% &

NoOfMonths
ππ& 0
,
ππ0 1
Amount
∫∫ 
=
∫∫ 
item
∫∫ !
.
∫∫! "
Amount
∫∫" (
,
∫∫( )
VerifiedAmount
ªª "
=
ªª# $
item
ªª% )
.
ªª) *
VerifiedAmount
ªª* 8
,
ªª8 9
VerifiedRemarks
ºº #
=
ºº$ %
item
ºº& *
.
ºº* +
VerifiedRemarks
ºº+ :
,
ºº: ;
	FileCount
ΩΩ 
=
ΩΩ 
item
ΩΩ  $
.
ΩΩ$ %
	FileCount
ΩΩ% .
}
ææ 
;
ææ  
houseRentAllowance
øø "
.
øø" # 
RentPaymentDetails
øø# 5
.
øø5 6
Add
øø6 9
(
øø9 :
rentPayment
øø: E
)
øøE F
;
øøF G
}
¿¿ 
return
¡¡  
houseRentAllowance
¡¡ %
;
¡¡% &
}
¬¬ 	
private
ƒƒ 
List
ƒƒ 
<
ƒƒ $
EmployeeChapter6Detail
ƒƒ +
>
ƒƒ+ , 
MapChapter6Details
ƒƒ- ?
(
ƒƒ? @
List
ƒƒ@ D
<
ƒƒD E'
TdsEmployeeSubHeadDetails
ƒƒE ^
>
ƒƒ^ _*
tdsEmployeeSubHeadingDetails
ƒƒ` |
)
ƒƒ| }
{
≈≈ 	
List
∆∆ 
<
∆∆ $
EmployeeChapter6Detail
∆∆ '
>
∆∆' (
chapter6Details
∆∆) 8
=
∆∆9 :
null
∆∆; ?
;
∆∆? @
if
«« 
(
«« *
tdsEmployeeSubHeadingDetails
«« ,
!=
««- /
null
««0 4
)
««4 5
{
»» 
chapter6Details
…… 
=
……  !
new
……" %
List
……& *
<
……* +$
EmployeeChapter6Detail
……+ A
>
……A B
(
……B C
)
……C D
;
……D E
foreach
   
(
   
var
   
item
   !
in
  " $*
tdsEmployeeSubHeadingDetails
  % A
)
  A B
{
ÀÀ 
var
ÃÃ 

itemDetail
ÃÃ "
=
ÃÃ# $
new
ÃÃ% ($
EmployeeChapter6Detail
ÃÃ) ?
{
ÕÕ 
SectionName
ŒŒ #
=
ŒŒ$ %
item
ŒŒ& *
.
ŒŒ* +
Section1
ŒŒ+ 3
,
ŒŒ3 4
Chapter6DetailId
œœ (
=
œœ) *
item
œœ+ /
.
œœ/ 0
TdsEmpSHSLNo
œœ0 <
,
œœ< =
	SubHeadId
–– !
=
––" #
item
––$ (
.
––( )
SubHeadSLNo
––) 4
,
––4 5
Particulars
—— #
=
——$ %
item
——& *
.
——* +
PARTICULARS
——+ 6
,
——6 7
Amount
““ 
=
““  
item
““! %
.
““% &
Amount
““& ,
,
““, -
VerifiedAmount
”” &
=
””' (
item
””) -
.
””- .
VerifiedAmount
””. <
,
””< =
VerifiedRemarks
‘‘ '
=
‘‘( )
item
‘‘* .
.
‘‘. /
VerifiedRemarks
‘‘/ >
,
‘‘> ?
VerifiedUserSlNo
’’ (
=
’’) *
item
’’+ /
.
’’/ 0
VerifiedUserSlNo
’’0 @
,
’’@ A
	FileCount
÷÷ !
=
÷÷" #
item
÷÷$ (
.
÷÷( )
	FileCount
÷÷) 2
}
ÿÿ 
;
ÿÿ 
chapter6Details
ŸŸ #
.
ŸŸ# $
Add
ŸŸ$ '
(
ŸŸ' (

itemDetail
ŸŸ( 2
)
ŸŸ2 3
;
ŸŸ3 4
}
⁄⁄ 
}
€€ 
return
‹‹ 
chapter6Details
‹‹ "
;
‹‹" #
}
›› 	
private
ﬂﬂ 
InvestmentDetail
ﬂﬂ  "
MapInvestmentDetails
ﬂﬂ! 5
(
ﬂﬂ5 6
EmployeeDetails
ﬂﬂ6 E
employeeDetails
ﬂﬂF U
)
ﬂﬂU V
{
‡‡ 	
InvestmentDetail
·· 
investmentDetail
·· -
=
··. /
new
··0 3
InvestmentDetail
··4 D
{
‚‚ 
AssesseeTypeId
„„ 
=
„„  
employeeDetails
„„! 0
.
„„0 1
AssesseeTypeSLNo
„„1 A
,
„„A B
Is_NewRegime
‰‰ 
=
‰‰ 
employeeDetails
‰‰ .
.
‰‰. /
Is_NewRegime
‰‰/ ;
,
‰‰; <
Is_Senior_Citizen
ÂÂ !
=
ÂÂ" #
employeeDetails
ÂÂ$ 3
.
ÂÂ3 4
Is_Senior_Citizen
ÂÂ4 E
}
ÊÊ 
;
ÊÊ 
return
ÁÁ 
investmentDetail
ÁÁ #
;
ÁÁ# $
}
ËË 	
public
ÓÓ 
async
ÓÓ 
Task
ÓÓ 
<
ÓÓ #
InvestmentDeclaration
ÓÓ /
>
ÓÓ/ 0(
SaveInvestmentDeclarations
ÓÓ1 K
(
ÓÓK L#
InvestmentDeclaration
ÓÓL a#
investmentDeclaration
ÓÓb w
)
ÓÓw x
{
ÔÔ 	
bool
 
allDataSaved
 
=
 
false
  %
;
% &#
InvestmentDeclaration
ÒÒ !(
savedInvestmentDeclaration
ÒÒ" <
=
ÒÒ= >
null
ÒÒ? C
;
ÒÒC D
using
ÚÚ 
(
ÚÚ 
var
ÚÚ 

connection
ÚÚ !
=
ÚÚ" #
await
ÚÚ$ )
base
ÚÚ* .
.
ÚÚ. /
CreateConnection
ÚÚ/ ?
(
ÚÚ? @
DbSchema
ÚÚ@ H
.
ÚÚH I
PORTAL
ÚÚI O
)
ÚÚO P
)
ÚÚP Q
{
ÛÛ 
using
ÙÙ 
(
ÙÙ 
var
ÙÙ 
tran
ÙÙ 
=
ÙÙ  !

connection
ÙÙ" ,
.
ÙÙ, -
BeginTransaction
ÙÙ- =
(
ÙÙ= >
)
ÙÙ> ?
)
ÙÙ? @
{
ıı 
if
ˆˆ 
(
ˆˆ #
investmentDeclaration
ˆˆ -
!=
ˆˆ. 0
null
ˆˆ1 5
&&
ˆˆ6 8#
investmentDeclaration
ˆˆ9 N
.
ˆˆN O

IsVerified
ˆˆO Y
)
ˆˆY Z
{
˜˜ 
bool
¯¯  
isRentPaymentSaved
¯¯ /
=
¯¯0 1
await
¯¯2 7 
VerifyRentPayments
¯¯8 J
(
¯¯J K

connection
¯¯K U
,
¯¯U V#
investmentDeclaration
¯¯W l
,
¯¯l m$
investmentDeclaration¯¯n É
.¯¯É Ñ"
HouseRentAllowance¯¯Ñ ñ
.¯¯ñ ó"
RentPaymentDetails¯¯ó ©
)¯¯© ™
;¯¯™ ´
bool
˘˘ $
isChapter6DetailsSaved
˘˘ 3
=
˘˘4 5
await
˘˘6 ;#
VerifyChapter6Details
˘˘< Q
(
˘˘Q R

connection
˘˘R \
,
˘˘\ ]#
investmentDeclaration
˘˘^ s
,
˘˘s t$
investmentDeclaration˘˘u ä
.˘˘ä ã
Chapter6Detail˘˘ã ô
)˘˘ô ö
;˘˘ö õ
bool
˙˙ '
isHouseIncomeDetailsSaved
˙˙ 6
=
˙˙7 8
await
˙˙9 >&
VerifyHouseIncomeDetails
˙˙? W
(
˙˙W X

connection
˙˙X b
,
˙˙b c#
investmentDeclaration
˙˙d y
,
˙˙y z$
investmentDeclaration˙˙{ ê
.˙˙ê ë!
HouseIncomeDetail˙˙ë ¢
)˙˙¢ £
;˙˙£ §
bool
˚˚ '
isOtherIncomeDetailsSaved
˚˚ 6
=
˚˚7 8
await
˚˚9 >&
VerifyOtherIncomeDetails
˚˚? W
(
˚˚W X

connection
˚˚X b
,
˚˚b c#
investmentDeclaration
˚˚d y
,
˚˚y z$
investmentDeclaration˚˚{ ê
.˚˚ê ë!
OtherIncomeDetail˚˚ë ¢
)˚˚¢ £
;˚˚£ §
allDataSaved
¸¸ $
=
¸¸% & 
isRentPaymentSaved
¸¸' 9
&&
¸¸: <$
isChapter6DetailsSaved
¸¸= S
&&
¸¸T V'
isHouseIncomeDetailsSaved
¸¸W p
&&
¸¸q s(
isOtherIncomeDetailsSaved¸¸t ç
;¸¸ç é
if
˝˝ 
(
˝˝ 
allDataSaved
˝˝ (
)
˝˝( )
{
˛˛ 
tran
ˇˇ  
.
ˇˇ  !
Commit
ˇˇ! '
(
ˇˇ' (
)
ˇˇ( )
;
ˇˇ) *
await
ÄÄ !%
VerifyProofsSendMessage
ÄÄ" 9
(
ÄÄ9 :#
investmentDeclaration
ÄÄ: O
.
ÄÄO P

EmployeeId
ÄÄP Z
)
ÄÄZ [
;
ÄÄ[ \
}
ÅÅ 
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 
bool
ÖÖ &
isInvestmentDetailsSaved
ÖÖ 5
=
ÖÖ6 7
await
ÖÖ8 =#
SaveInvestmentDetails
ÖÖ> S
(
ÖÖS T

connection
ÖÖT ^
,
ÖÖ^ _#
investmentDeclaration
ÖÖ` u
,
ÖÖu v$
investmentDeclarationÖÖw å
.ÖÖå ç 
InvestmentDetailÖÖç ù
,ÖÖù û%
investmentDeclarationÖÖü ¥
.ÖÖ¥ µ"
HouseRentAllowanceÖÖµ «
)ÖÖ« »
;ÖÖ» …
bool
ÜÜ  
isRentPaymentSaved
ÜÜ /
=
ÜÜ0 1
await
ÜÜ2 7
SaveRentPayments
ÜÜ8 H
(
ÜÜH I

connection
ÜÜI S
,
ÜÜS T#
investmentDeclaration
ÜÜU j
,
ÜÜj k$
investmentDeclarationÜÜl Å
.ÜÜÅ Ç"
HouseRentAllowanceÜÜÇ î
.ÜÜî ï"
RentPaymentDetailsÜÜï ß
)ÜÜß ®
;ÜÜ® ©
bool
áá $
isChapter6DetailsSaved
áá 3
=
áá4 5
await
áá6 ;!
SaveChapter6Details
áá< O
(
ááO P

connection
ááP Z
,
ááZ [#
investmentDeclaration
áá\ q
.
ááq r
Chapter6Detailáár Ä
)ááÄ Å
;ááÅ Ç
bool
àà '
isHouseIncomeDetailsSaved
àà 6
=
àà7 8
await
àà9 >$
SaveHouseIncomeDetails
àà? U
(
ààU V

connection
ààV `
,
àà` a#
investmentDeclaration
ààb w
.
ààw x 
HouseIncomeDetailààx â
)ààâ ä
;ààä ã
bool
ââ '
isOtherIncomeDetailsSaved
ââ 6
=
ââ7 8
await
ââ9 >$
SaveOtherIncomeDetails
ââ? U
(
ââU V

connection
ââV `
,
ââ` a#
investmentDeclaration
ââb w
.
ââw x 
OtherIncomeDetailââx â
)âââ ä
;ââä ã
allDataSaved
ää $
=
ää% &&
isInvestmentDetailsSaved
ää' ?
&&
ää@ B 
isRentPaymentSaved
ääC U
&&
ääV X$
isChapter6DetailsSaved
ääY o
&&
ääp r(
isHouseIncomeDetailsSavedääs å
&&ääç è)
isOtherIncomeDetailsSavedääê ©
;ää© ™
if
ãã 
(
ãã 
allDataSaved
ãã (
)
ãã( )
{
åå 
tran
çç  
.
çç  !
Commit
çç! '
(
çç' (
)
çç( )
;
çç) *
}
éé 
}
èè 
}
ëë 
}
íí 
if
ìì 
(
ìì 
allDataSaved
ìì 
)
ìì 
{
îî (
savedInvestmentDeclaration
ïï *
=
ïï+ ,
await
ïï- 2&
GetInvestmentDeclaration
ïï3 K
(
ïïK L#
investmentDeclaration
ïïL a
.
ïïa b
FinancialYearId
ïïb q
.
ïïq r
ToInt32OrDefaultïïr Ç
(ïïÇ É
)ïïÉ Ñ
,ïïÑ Ö%
investmentDeclarationïïÜ õ
.ïïõ ú

EmployeeIdïïú ¶
.ïï¶ ß 
ToInt32OrDefaultïïß ∑
(ïï∑ ∏
)ïï∏ π
)ïïπ ∫
;ïï∫ ª
}
ññ 
return
òò (
savedInvestmentDeclaration
òò -
;
òò- .
}
ôô 	
private
õõ 
async
õõ 
Task
õõ 
<
õõ 
bool
õõ 
>
õõ  $
SaveOtherIncomeDetails
õõ! 7
(
õõ7 8
IDbConnection
õõ8 E

connection
õõF P
,
õõP Q
List
õõR V
<
õõV W
OtherIncomeDetail
õõW h
>
õõh i 
otherIncomeDetails
õõj |
)
õõ| }
{
úú 	
List
ùù 
<
ùù %
OracleDynamicParameters
ùù (
>
ùù( )
	parmeters
ùù* 3
=
ùù4 5
new
ùù6 9
(
ùù9 :
)
ùù: ;
;
ùù; < 
otherIncomeDetails
üü 
.
üü 
ForEach
üü &
(
üü& '
otherIncome
üü' 2
=>
üü3 5
{
†† %
OracleDynamicParameters
°° '
param
°°( -
=
°°. /
new
°°0 3
(
°°3 4
)
°°4 5
;
°°5 6
param
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
name
¢¢ 
:
¢¢ 
$str
¢¢  4
,
¢¢4 5
otherIncome
¢¢6 A
.
¢¢A B
OthIncomeHeadId
¢¢B Q
,
¢¢Q R
dbType
¢¢S Y
:
¢¢Y Z
OracleMappingType
¢¢[ l
.
¢¢l m
Int32
¢¢m r
,
¢¢r s
	direction
¢¢t }
:
¢¢} ~!
ParameterDirection¢¢ ë
.¢¢ë í
Input¢¢í ó
)¢¢ó ò
;¢¢ò ô
param
££ 
.
££ 
Add
££ 
(
££ 
name
££ 
:
££ 
$str
££  )
,
££) *
otherIncome
££+ 6
.
££6 7
Amount
££7 =
.
££= >
ToInt64OrDefault
££> N
(
££N O
)
££O P
,
££P Q
dbType
££R X
:
££X Y
OracleMappingType
££Z k
.
££k l
Int32
££l q
,
££q r
	direction
££s |
:
££| }!
ParameterDirection££~ ê
.££ê ë
Input££ë ñ
)££ñ ó
;££ó ò
param
§§ 
.
§§ 
Add
§§ 
(
§§ 
name
§§ 
:
§§ 
$str
§§  ,
,
§§, -
otherIncome
§§. 9
.
§§9 :
	TdsAmount
§§: C
.
§§C D
ToInt64OrDefault
§§D T
(
§§T U
)
§§U V
,
§§V W
dbType
§§X ^
:
§§^ _
OracleMappingType
§§` q
.
§§q r
Int32
§§r w
,
§§w x
	direction§§y Ç
:§§Ç É"
ParameterDirection§§Ñ ñ
.§§ñ ó
Input§§ó ú
)§§ú ù
;§§ù û
param
•• 
.
•• 
Add
•• 
(
•• 
name
•• 
:
•• 
$str
••  /
,
••/ 0
otherIncome
••1 <
.
••< =!
OtherIncomeDetailId
••= P
.
••P Q
ToInt64OrDefault
••Q a
(
••a b
)
••b c
,
••c d
dbType
••e k
:
••k l
OracleMappingType
••m ~
.
••~ 
Int32•• Ñ
,••Ñ Ö
	direction••Ü è
:••è ê"
ParameterDirection••ë £
.••£ §
Input••§ ©
)••© ™
;••™ ´
	parmeters
¶¶ 
.
¶¶ 
Add
¶¶ 
(
¶¶ 
param
¶¶ #
)
¶¶# $
;
¶¶$ %
}
ßß 
)
ßß 
;
ßß 
int
®® 
savedRecords
®® 
=
®® 
await
®® $

connection
®®% /
.
®®/ 0
ExecuteAsync
®®0 <
(
®®< =
$str
®®= [
,
®®[ \
	parmeters
®®] f
,
®®f g
commandType
®®h s
:
®®s t
CommandType®®u Ä
.®®Ä Å
StoredProcedure®®Å ê
)®®ê ë
;®®ë í
return
©© 
(
©© 
savedRecords
©©  
*
©©! "
-
©©# $
$num
©©$ %
)
©©% &
>
©©' (
$num
©©) *
;
©©* +
}
™™ 	
private
´´ 
async
´´ 
Task
´´ 
<
´´ 
bool
´´ 
>
´´  &
VerifyOtherIncomeDetails
´´! 9
(
´´9 :
IDbConnection
´´: G

connection
´´H R
,
´´R S#
InvestmentDeclaration
´´T i#
investmentDeclaration
´´j 
,´´ Ä
List´´Å Ö
<´´Ö Ü!
OtherIncomeDetail´´Ü ó
>´´ó ò"
otherIncomeDetails´´ô ´
)´´´ ¨
{
¨¨ 	
List
≠≠ 
<
≠≠ %
OracleDynamicParameters
≠≠ (
>
≠≠( )
	parmeters
≠≠* 3
=
≠≠4 5
new
≠≠6 9
(
≠≠9 :
)
≠≠: ;
;
≠≠; < 
otherIncomeDetails
ØØ 
.
ØØ 
ForEach
ØØ &
(
ØØ& '
otherIncome
ØØ' 2
=>
ØØ3 5
{
∞∞ %
OracleDynamicParameters
±± '
param
±±( -
=
±±. /
new
±±0 3
(
±±3 4
)
±±4 5
;
±±5 6
param
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
name
≤≤ 
:
≤≤ 
$str
≤≤  1
,
≤≤1 2
otherIncome
≤≤3 >
.
≤≤> ?
VerifiedAmount
≤≤? M
.
≤≤M N
ToInt64OrDefault
≤≤N ^
(
≤≤^ _
)
≤≤_ `
,
≤≤` a
dbType
≤≤b h
:
≤≤h i
OracleMappingType
≤≤j {
.
≤≤{ |
Int32≤≤| Å
,≤≤Å Ç
	direction≤≤É å
:≤≤å ç"
ParameterDirection≤≤é †
.≤≤† °
Input≤≤° ¶
)≤≤¶ ß
;≤≤ß ®
param
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
name
≥≥ 
:
≥≥ 
$str
≥≥  2
,
≥≥2 3
otherIncome
≥≥4 ?
.
≥≥? @
VerifiedRemarks
≥≥@ O
,
≥≥O P
dbType
≥≥Q W
:
≥≥W X
OracleMappingType
≥≥Y j
.
≥≥j k
Varchar2
≥≥k s
,
≥≥s t
	direction
≥≥u ~
:
≥≥~ "
ParameterDirection≥≥Ä í
.≥≥í ì
Input≥≥ì ò
)≥≥ò ô
;≥≥ô ö
param
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
name
¥¥ 
:
¥¥ 
$str
¥¥  3
,
¥¥3 4#
investmentDeclaration
¥¥5 J
.
¥¥J K&
VerificationEmployeeSlno
¥¥K c
.
¥¥c d
ToInt64OrDefault
¥¥d t
(
¥¥t u
)
¥¥u v
,
¥¥v w
dbType
¥¥x ~
:
¥¥~ !
OracleMappingType¥¥Ä ë
.¥¥ë í
Int32¥¥í ó
,¥¥ó ò
	direction¥¥ô ¢
:¥¥¢ £"
ParameterDirection¥¥§ ∂
.¥¥∂ ∑
Input¥¥∑ º
)¥¥º Ω
;¥¥Ω æ
param
µµ 
.
µµ 
Add
µµ 
(
µµ 
name
µµ 
:
µµ 
$str
µµ  /
,
µµ/ 0
otherIncome
µµ1 <
.
µµ< =!
OtherIncomeDetailId
µµ= P
.
µµP Q
ToInt64OrDefault
µµQ a
(
µµa b
)
µµb c
,
µµc d
dbType
µµe k
:
µµk l
OracleMappingType
µµm ~
.
µµ~ 
Int32µµ Ñ
,µµÑ Ö
	directionµµÜ è
:µµè ê"
ParameterDirectionµµë £
.µµ£ §
Inputµµ§ ©
)µµ© ™
;µµ™ ´
	parmeters
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
param
∂∂ #
)
∂∂# $
;
∂∂$ %
}
∑∑ 
)
∑∑ 
;
∑∑ 
int
∏∏ 
savedRecords
∏∏ 
=
∏∏ 
await
∏∏ $

connection
∏∏% /
.
∏∏/ 0
ExecuteAsync
∏∏0 <
(
∏∏< =
$str
∏∏= Y
,
∏∏Y Z
	parmeters
∏∏[ d
,
∏∏d e
commandType
∏∏f q
:
∏∏q r
CommandType
∏∏s ~
.
∏∏~ 
StoredProcedure∏∏ é
)∏∏é è
;∏∏è ê
return
ππ 
(
ππ 
savedRecords
ππ  
*
ππ! "
-
ππ# $
$num
ππ$ %
)
ππ% &
>
ππ' (
$num
ππ) *
;
ππ* +
}
∫∫ 	
private
ºº 
async
ºº 
Task
ºº 
<
ºº 
bool
ºº 
>
ºº  $
SaveHouseIncomeDetails
ºº! 7
(
ºº7 8
IDbConnection
ºº8 E

connection
ººF P
,
ººP Q
List
ººR V
<
ººV W'
HousePropertyIncomeDetail
ººW p
>
ººp q!
houseIncomeDetailsººr Ñ
)ººÑ Ö
{
ΩΩ 	
List
ææ 
<
ææ %
OracleDynamicParameters
ææ (
>
ææ( )
	parmeters
ææ* 3
=
ææ4 5
new
ææ6 9
(
ææ9 :
)
ææ: ;
;
ææ; < 
houseIncomeDetails
¿¿ 
.
¿¿ 
ForEach
¿¿ &
(
¿¿& '
houseIncome
¿¿' 2
=>
¿¿3 5
{
¡¡  
ConvertToUpparCase
¬¬ "
.
¬¬" #
StringToUpparCase
¬¬# 4
(
¬¬4 5
houseIncome
¬¬5 @
)
¬¬@ A
;
¬¬A B%
OracleDynamicParameters
√√ '
param
√√( -
=
√√. /
new
√√0 3
(
√√3 4
)
√√4 5
;
√√5 6
param
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ  )
,
ƒƒ) *
houseIncome
ƒƒ+ 6
.
ƒƒ6 7
Amount
ƒƒ7 =
.
ƒƒ= >
ToInt64OrDefault
ƒƒ> N
(
ƒƒN O
)
ƒƒO P
,
ƒƒP Q
dbType
ƒƒR X
:
ƒƒX Y
OracleMappingType
ƒƒZ k
.
ƒƒk l
Int32
ƒƒl q
,
ƒƒq r
	direction
ƒƒs |
:
ƒƒ| }!
ParameterDirectionƒƒ~ ê
.ƒƒê ë
Inputƒƒë ñ
)ƒƒñ ó
;ƒƒó ò
param
≈≈ 
.
≈≈ 
Add
≈≈ 
(
≈≈ 
name
≈≈ 
:
≈≈ 
$str
≈≈  6
,
≈≈6 7
houseIncome
≈≈8 C
.
≈≈C D
HouseIncomeHeadId
≈≈D U
,
≈≈U V
dbType
≈≈W ]
:
≈≈] ^
OracleMappingType
≈≈_ p
.
≈≈p q
Int32
≈≈q v
,
≈≈v w
	direction≈≈x Å
:≈≈Å Ç"
ParameterDirection≈≈É ï
.≈≈ï ñ
Input≈≈ñ õ
)≈≈õ ú
;≈≈ú ù
param
∆∆ 
.
∆∆ 
Add
∆∆ 
(
∆∆ 
name
∆∆ 
:
∆∆ 
$str
∆∆  -
,
∆∆- .
houseIncome
∆∆/ :
.
∆∆: ;
	PanNumber
∆∆; D
,
∆∆D E
dbType
∆∆F L
:
∆∆L M
OracleMappingType
∆∆N _
.
∆∆_ `
Varchar2
∆∆` h
,
∆∆h i
	direction
∆∆j s
:
∆∆s t!
ParameterDirection∆∆u á
.∆∆á à
Input∆∆à ç
)∆∆ç é
;∆∆é è
param
«« 
.
«« 
Add
«« 
(
«« 
name
«« 
:
«« 
$str
««  /
,
««/ 0
houseIncome
««1 <
.
««< =!
HouseIncomeDetailId
««= P
,
««P Q
dbType
««R X
:
««X Y
OracleMappingType
««Z k
.
««k l
Int32
««l q
,
««q r
	direction
««s |
:
««| }!
ParameterDirection««~ ê
.««ê ë
Input««ë ñ
)««ñ ó
;««ó ò
	parmeters
»» 
.
»» 
Add
»» 
(
»» 
param
»» #
)
»»# $
;
»»$ %
}
…… 
)
…… 
;
…… 
int
   
savedRecords
   
=
   
await
   $

connection
  % /
.
  / 0
ExecuteAsync
  0 <
(
  < =
$str
  = [
,
  [ \
	parmeters
  ] f
,
  f g
commandType
  h s
:
  s t
CommandType  u Ä
.  Ä Å
StoredProcedure  Å ê
)  ê ë
;  ë í
return
ÀÀ 
(
ÀÀ 
savedRecords
ÀÀ  
*
ÀÀ! "
-
ÀÀ# $
$num
ÀÀ$ %
)
ÀÀ% &
>
ÀÀ' (
$num
ÀÀ) *
;
ÀÀ* +
}
ÃÃ 	
private
ÕÕ 
async
ÕÕ 
Task
ÕÕ 
<
ÕÕ 
bool
ÕÕ 
>
ÕÕ  &
VerifyHouseIncomeDetails
ÕÕ! 9
(
ÕÕ9 :
IDbConnection
ÕÕ: G

connection
ÕÕH R
,
ÕÕR S#
InvestmentDeclaration
ÕÕT i#
investmentDeclaration
ÕÕj 
,ÕÕ Ä
ListÕÕÅ Ö
<ÕÕÖ Ü)
HousePropertyIncomeDetailÕÕÜ ü
>ÕÕü †"
houseIncomeDetailsÕÕ° ≥
)ÕÕ≥ ¥
{
ŒŒ 	
List
œœ 
<
œœ %
OracleDynamicParameters
œœ (
>
œœ( )
	parmeters
œœ* 3
=
œœ4 5
new
œœ6 9
(
œœ9 :
)
œœ: ;
;
œœ; < 
houseIncomeDetails
—— 
.
—— 
ForEach
—— &
(
——& '
houseIncome
——' 2
=>
——3 5
{
““  
ConvertToUpparCase
”” "
.
””" #
StringToUpparCase
””# 4
(
””4 5
houseIncome
””5 @
)
””@ A
;
””A B%
OracleDynamicParameters
‘‘ '
param
‘‘( -
=
‘‘. /
new
‘‘0 3
(
‘‘3 4
)
‘‘4 5
;
‘‘5 6
param
’’ 
.
’’ 
Add
’’ 
(
’’ 
name
’’ 
:
’’ 
$str
’’  1
,
’’1 2
houseIncome
’’3 >
.
’’> ?
VerifiedAmount
’’? M
.
’’M N
ToInt64OrDefault
’’N ^
(
’’^ _
)
’’_ `
,
’’` a
dbType
’’b h
:
’’h i
OracleMappingType
’’j {
.
’’{ |
Int32’’| Å
,’’Å Ç
	direction’’É å
:’’å ç"
ParameterDirection’’é †
.’’† °
Input’’° ¶
)’’¶ ß
;’’ß ®
param
÷÷ 
.
÷÷ 
Add
÷÷ 
(
÷÷ 
name
÷÷ 
:
÷÷ 
$str
÷÷  2
,
÷÷2 3
houseIncome
÷÷4 ?
.
÷÷? @
VerifiedRemarks
÷÷@ O
,
÷÷O P
dbType
÷÷Q W
:
÷÷W X
OracleMappingType
÷÷Y j
.
÷÷j k
Varchar2
÷÷k s
,
÷÷s t
	direction
÷÷u ~
:
÷÷~ "
ParameterDirection÷÷Ä í
.÷÷í ì
Input÷÷ì ò
)÷÷ò ô
;÷÷ô ö
param
◊◊ 
.
◊◊ 
Add
◊◊ 
(
◊◊ 
name
◊◊ 
:
◊◊ 
$str
◊◊  3
,
◊◊3 4#
investmentDeclaration
◊◊5 J
.
◊◊J K&
VerificationEmployeeSlno
◊◊K c
.
◊◊c d
ToInt64OrDefault
◊◊d t
(
◊◊t u
)
◊◊u v
,
◊◊v w
dbType
◊◊x ~
:
◊◊~ !
OracleMappingType◊◊Ä ë
.◊◊ë í
Int32◊◊í ó
,◊◊ó ò
	direction◊◊ô ¢
:◊◊¢ £"
ParameterDirection◊◊§ ∂
.◊◊∂ ∑
Input◊◊∑ º
)◊◊º Ω
;◊◊Ω æ
param
ÿÿ 
.
ÿÿ 
Add
ÿÿ 
(
ÿÿ 
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ  /
,
ÿÿ/ 0
houseIncome
ÿÿ1 <
.
ÿÿ< =!
HouseIncomeDetailId
ÿÿ= P
,
ÿÿP Q
dbType
ÿÿR X
:
ÿÿX Y
OracleMappingType
ÿÿZ k
.
ÿÿk l
Int32
ÿÿl q
,
ÿÿq r
	direction
ÿÿs |
:
ÿÿ| }!
ParameterDirectionÿÿ~ ê
.ÿÿê ë
Inputÿÿë ñ
)ÿÿñ ó
;ÿÿó ò
	parmeters
ŸŸ 
.
ŸŸ 
Add
ŸŸ 
(
ŸŸ 
param
ŸŸ #
)
ŸŸ# $
;
ŸŸ$ %
}
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
int
€€ 
savedRecords
€€ 
=
€€ 
await
€€ $

connection
€€% /
.
€€/ 0
ExecuteAsync
€€0 <
(
€€< =
$str
€€= Y
,
€€Y Z
	parmeters
€€[ d
,
€€d e
commandType
€€f q
:
€€q r
CommandType
€€s ~
.
€€~ 
StoredProcedure€€ é
)€€é è
;€€è ê
return
‹‹ 
(
‹‹ 
savedRecords
‹‹  
*
‹‹! "
-
‹‹# $
$num
‹‹$ %
)
‹‹% &
>
‹‹' (
$num
‹‹) *
;
‹‹* +
}
›› 	
private
ﬂﬂ 
async
ﬂﬂ 
Task
ﬂﬂ 
<
ﬂﬂ 
bool
ﬂﬂ 
>
ﬂﬂ  !
SaveChapter6Details
ﬂﬂ! 4
(
ﬂﬂ4 5
IDbConnection
ﬂﬂ5 B

connection
ﬂﬂC M
,
ﬂﬂM N
List
ﬂﬂO S
<
ﬂﬂS T$
EmployeeChapter6Detail
ﬂﬂT j
>
ﬂﬂj k
chapter6Details
ﬂﬂl {
)
ﬂﬂ{ |
{
‡‡ 	
List
·· 
<
·· %
OracleDynamicParameters
·· (
>
··( )
	parmeters
··* 3
=
··4 5
new
··6 9
(
··9 :
)
··: ;
;
··; <
chapter6Details
„„ 
.
„„ 
ForEach
„„ #
(
„„# $
sections
„„$ ,
=>
„„- /
{
‰‰ %
OracleDynamicParameters
ÂÂ '
param
ÂÂ( -
=
ÂÂ. /
new
ÂÂ0 3
(
ÂÂ3 4
)
ÂÂ4 5
;
ÂÂ5 6
param
ÊÊ 
.
ÊÊ 
Add
ÊÊ 
(
ÊÊ 
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ  )
,
ÊÊ) *
sections
ÊÊ+ 3
.
ÊÊ3 4
Amount
ÊÊ4 :
.
ÊÊ: ;
ToInt64OrDefault
ÊÊ; K
(
ÊÊK L
)
ÊÊL M
,
ÊÊM N
dbType
ÊÊO U
:
ÊÊU V
OracleMappingType
ÊÊW h
.
ÊÊh i
Int64
ÊÊi n
,
ÊÊn o
	direction
ÊÊp y
:
ÊÊy z!
ParameterDirectionÊÊ{ ç
.ÊÊç é
InputÊÊé ì
)ÊÊì î
;ÊÊî ï
param
ÁÁ 
.
ÁÁ 
Add
ÁÁ 
(
ÁÁ 
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ  .
,
ÁÁ. /
sections
ÁÁ0 8
.
ÁÁ8 9
	SubHeadId
ÁÁ9 B
,
ÁÁB C
dbType
ÁÁD J
:
ÁÁJ K
OracleMappingType
ÁÁL ]
.
ÁÁ] ^
Int64
ÁÁ^ c
,
ÁÁc d
	direction
ÁÁe n
:
ÁÁn o!
ParameterDirectionÁÁp Ç
.ÁÁÇ É
InputÁÁÉ à
)ÁÁà â
;ÁÁâ ä
param
ËË 
.
ËË 
Add
ËË 
(
ËË 
name
ËË 
:
ËË 
$str
ËË  /
,
ËË/ 0
sections
ËË1 9
.
ËË9 :
Chapter6DetailId
ËË: J
,
ËËJ K
dbType
ËËL R
:
ËËR S
OracleMappingType
ËËT e
.
ËËe f
Int64
ËËf k
,
ËËk l
	direction
ËËm v
:
ËËv w!
ParameterDirectionËËx ä
.ËËä ã
InputËËã ê
)ËËê ë
;ËËë í
	parmeters
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ 
param
ÈÈ #
)
ÈÈ# $
;
ÈÈ$ %
}
ÍÍ 
)
ÍÍ 
;
ÍÍ 
int
ÎÎ 
savedRecords
ÎÎ 
=
ÎÎ 
await
ÎÎ $

connection
ÎÎ% /
.
ÎÎ/ 0
ExecuteAsync
ÎÎ0 <
(
ÎÎ< =
$str
ÎÎ= [
,
ÎÎ[ \
	parmeters
ÎÎ] f
,
ÎÎf g
commandType
ÎÎh s
:
ÎÎs t
CommandTypeÎÎu Ä
.ÎÎÄ Å
StoredProcedureÎÎÅ ê
)ÎÎê ë
;ÎÎë í
return
ÏÏ 
(
ÏÏ 
savedRecords
ÏÏ  
*
ÏÏ! "
-
ÏÏ# $
$num
ÏÏ$ %
)
ÏÏ% &
>
ÏÏ' (
$num
ÏÏ) *
;
ÏÏ* +
}
ÌÌ 	
private
ÓÓ 
async
ÓÓ 
Task
ÓÓ 
<
ÓÓ 
bool
ÓÓ 
>
ÓÓ  #
VerifyChapter6Details
ÓÓ! 6
(
ÓÓ6 7
IDbConnection
ÓÓ7 D

connection
ÓÓE O
,
ÓÓO P#
InvestmentDeclaration
ÓÓQ f#
investmentDeclaration
ÓÓg |
,
ÓÓ| }
ListÓÓ~ Ç
<ÓÓÇ É&
EmployeeChapter6DetailÓÓÉ ô
>ÓÓô ö
chapter6DetailsÓÓõ ™
)ÓÓ™ ´
{
ÔÔ 	
List
 
<
 %
OracleDynamicParameters
 (
>
( )
	parmeters
* 3
=
4 5
new
6 9
(
9 :
)
: ;
;
; <
chapter6Details
ÚÚ 
.
ÚÚ 
ForEach
ÚÚ #
(
ÚÚ# $
sections
ÚÚ$ ,
=>
ÚÚ- /
{
ÛÛ %
OracleDynamicParameters
ÙÙ '
param
ÙÙ( -
=
ÙÙ. /
new
ÙÙ0 3
(
ÙÙ3 4
)
ÙÙ4 5
;
ÙÙ5 6
param
ıı 
.
ıı 
Add
ıı 
(
ıı 
name
ıı 
:
ıı 
$str
ıı  1
,
ıı1 2
sections
ıı3 ;
.
ıı; <
VerifiedAmount
ıı< J
.
ııJ K
ToInt64OrDefault
ııK [
(
ıı[ \
)
ıı\ ]
,
ıı] ^
dbType
ıı_ e
:
ııe f
OracleMappingType
ııg x
.
ııx y
Int32
ııy ~
,
ıı~ 
	directionııÄ â
:ııâ ä"
ParameterDirectionııã ù
.ııù û
Inputııû £
)ıı£ §
;ıı§ •
param
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
name
ˆˆ 
:
ˆˆ 
$str
ˆˆ  2
,
ˆˆ2 3
sections
ˆˆ4 <
.
ˆˆ< =
VerifiedRemarks
ˆˆ= L
,
ˆˆL M
dbType
ˆˆN T
:
ˆˆT U
OracleMappingType
ˆˆV g
.
ˆˆg h
Varchar2
ˆˆh p
,
ˆˆp q
	direction
ˆˆr {
:
ˆˆ{ |!
ParameterDirectionˆˆ} è
.ˆˆè ê
Inputˆˆê ï
)ˆˆï ñ
;ˆˆñ ó
param
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
name
˜˜ 
:
˜˜ 
$str
˜˜  3
,
˜˜3 4#
investmentDeclaration
˜˜5 J
.
˜˜J K&
VerificationEmployeeSlno
˜˜K c
.
˜˜c d
ToInt64OrDefault
˜˜d t
(
˜˜t u
)
˜˜u v
,
˜˜v w
dbType
˜˜x ~
:
˜˜~ !
OracleMappingType˜˜Ä ë
.˜˜ë í
Int32˜˜í ó
,˜˜ó ò
	direction˜˜ô ¢
:˜˜¢ £"
ParameterDirection˜˜§ ∂
.˜˜∂ ∑
Input˜˜∑ º
)˜˜º Ω
;˜˜Ω æ
param
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 
name
¯¯ 
:
¯¯ 
$str
¯¯  /
,
¯¯/ 0
sections
¯¯1 9
.
¯¯9 :
Chapter6DetailId
¯¯: J
,
¯¯J K
dbType
¯¯L R
:
¯¯R S
OracleMappingType
¯¯T e
.
¯¯e f
Int64
¯¯f k
,
¯¯k l
	direction
¯¯m v
:
¯¯v w!
ParameterDirection¯¯x ä
.¯¯ä ã
Input¯¯ã ê
)¯¯ê ë
;¯¯ë í
	parmeters
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
param
˘˘ #
)
˘˘# $
;
˘˘$ %
}
˙˙ 
)
˙˙ 
;
˙˙ 
int
˚˚ 
savedRecords
˚˚ 
=
˚˚ 
await
˚˚ $

connection
˚˚% /
.
˚˚/ 0
ExecuteAsync
˚˚0 <
(
˚˚< =
$str
˚˚= [
,
˚˚[ \
	parmeters
˚˚] f
,
˚˚f g
commandType
˚˚h s
:
˚˚s t
CommandType˚˚u Ä
.˚˚Ä Å
StoredProcedure˚˚Å ê
)˚˚ê ë
;˚˚ë í
return
¸¸ 
(
¸¸ 
savedRecords
¸¸  
*
¸¸! "
-
¸¸# $
$num
¸¸$ %
)
¸¸% &
>
¸¸' (
$num
¸¸) *
;
¸¸* +
}
˝˝ 	
private
ˇˇ 
async
ˇˇ 
Task
ˇˇ 
<
ˇˇ 
bool
ˇˇ 
>
ˇˇ  
SaveRentPayments
ˇˇ! 1
(
ˇˇ1 2
IDbConnection
ˇˇ2 ?

connection
ˇˇ@ J
,
ˇˇJ K#
InvestmentDeclaration
ˇˇL a#
investmentDeclaration
ˇˇb w
,
ˇˇw x
List
ˇˇy }
<
ˇˇ} ~
RentPaymentˇˇ~ â
>ˇˇâ ä"
rentPaymentDetailsˇˇã ù
)ˇˇù û
{
ÄÄ 	
List
ÅÅ 
<
ÅÅ %
OracleDynamicParameters
ÅÅ (
>
ÅÅ( )
	parmeters
ÅÅ* 3
=
ÅÅ4 5
new
ÅÅ6 9
(
ÅÅ9 :
)
ÅÅ: ;
;
ÅÅ; < 
rentPaymentDetails
ÇÇ 
.
ÇÇ 
ForEach
ÇÇ &
(
ÇÇ& '
hr
ÇÇ' )
=>
ÇÇ* ,
{
ÉÉ  
ConvertToUpparCase
ÑÑ "
.
ÑÑ" #
StringToUpparCase
ÑÑ# 4
(
ÑÑ4 5
hr
ÑÑ5 7
)
ÑÑ7 8
;
ÑÑ8 9%
OracleDynamicParameters
ÖÖ '
param
ÖÖ( -
=
ÖÖ. /
new
ÖÖ0 3
(
ÖÖ3 4
)
ÖÖ4 5
;
ÖÖ5 6
param
ÜÜ 
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ  ,
,
ÜÜ, -
hr
ÜÜ. 0
.
ÜÜ0 1
	OwnerName
ÜÜ1 :
,
ÜÜ: ;
dbType
ÜÜ< B
:
ÜÜB C
OracleMappingType
ÜÜD U
.
ÜÜU V
Varchar2
ÜÜV ^
,
ÜÜ^ _
	direction
ÜÜ` i
:
ÜÜi j 
ParameterDirection
ÜÜk }
.
ÜÜ} ~
InputÜÜ~ É
)ÜÜÉ Ñ
;ÜÜÑ Ö
param
áá 
.
áá 
Add
áá 
(
áá 
name
áá 
:
áá 
$str
áá  +
,
áá+ ,
hr
áá- /
.
áá/ 0
OwnerPan
áá0 8
,
áá8 9
dbType
áá: @
:
áá@ A
OracleMappingType
ááB S
.
ááS T
Varchar2
ááT \
,
áá\ ]
	direction
áá^ g
:
áág h 
ParameterDirection
áái {
.
áá{ |
Inputáá| Å
)ááÅ Ç
;ááÇ É
param
àà 
.
àà 
Add
àà 
(
àà 
name
àà 
:
àà 
$str
àà  )
,
àà) *
hr
àà+ -
.
àà- .
Amount
àà. 4
.
àà4 5
ToInt64OrDefault
àà5 E
(
ààE F
)
ààF G
,
ààG H
dbType
ààI O
:
ààO P
OracleMappingType
ààQ b
.
ààb c
Int32
ààc h
,
ààh i
	direction
ààj s
:
ààs t!
ParameterDirectionààu á
.ààá à
Inputààà ç
)ààç é
;ààé è
param
ââ 
.
ââ 
Add
ââ 
(
ââ 
name
ââ 
:
ââ 
$str
ââ  -
,
ââ- .
hr
ââ/ 1
.
ââ1 2

NoOfMonths
ââ2 <
,
ââ< =
dbType
ââ> D
:
ââD E
OracleMappingType
ââF W
.
ââW X
Int32
ââX ]
,
ââ] ^
	direction
ââ_ h
:
ââh i 
ParameterDirection
ââj |
.
ââ| }
Inputââ} Ç
)ââÇ É
;ââÉ Ñ
param
ää 
.
ää 
Add
ää 
(
ää 
name
ää 
:
ää 
$str
ää  +
,
ää+ ,#
investmentDeclaration
ää- B
.
ääB C

EmployeeId
ääC M
,
ääM N
dbType
ääO U
:
ääU V
OracleMappingType
ääW h
.
ääh i
Varchar2
ääi q
,
ääq r
	direction
ääs |
:
ää| }!
ParameterDirectionää~ ê
.ääê ë
Inputääë ñ
)ääñ ó
;ääó ò
param
ãã 
.
ãã 
Add
ãã 
(
ãã 
name
ãã 
:
ãã 
$str
ãã  -
,
ãã- .
hr
ãã/ 1
.
ãã1 2
RentPaymentId
ãã2 ?
,
ãã? @
dbType
ããA G
:
ããG H
OracleMappingType
ããI Z
.
ããZ [
Int32
ãã[ `
,
ãã` a
	direction
ããb k
:
ããk l 
ParameterDirection
ããm 
.ãã Ä
InputããÄ Ö
)ããÖ Ü
;ããÜ á
	parmeters
åå 
.
åå 
Add
åå 
(
åå 
param
åå #
)
åå# $
;
åå$ %
}
éé 
)
éé 
;
éé 
int
èè 
savedRecords
èè 
=
èè 
await
èè $

connection
èè% /
.
èè/ 0
ExecuteAsync
èè0 <
(
èè< =
$str
èè= Z
,
èèZ [
	parmeters
èè\ e
,
èèe f
commandType
èèg r
:
èèr s
CommandType
èèt 
.èè Ä
StoredProcedureèèÄ è
)èèè ê
;èèê ë
return
êê 
(
êê 
savedRecords
êê  
*
êê! "
-
êê# $
$num
êê$ %
)
êê% &
>
êê' (
$num
êê) *
;
êê* +
}
ëë 	
private
íí 
async
íí 
Task
íí 
<
íí 
bool
íí 
>
íí   
VerifyRentPayments
íí! 3
(
íí3 4
IDbConnection
íí4 A

connection
ííB L
,
ííL M#
InvestmentDeclaration
ííN c#
investmentDeclaration
ííd y
,
ííy z
List
íí{ 
<íí Ä
RentPaymentííÄ ã
>ííã å"
rentPaymentDetailsííç ü
)ííü †
{
ìì 	
try
îî 
{
ïï 
List
òò 
<
òò %
OracleDynamicParameters
òò ,
>
òò, -
	parmeters
òò. 7
=
òò8 9
new
òò: =
(
òò= >
)
òò> ?
;
òò? @ 
rentPaymentDetails
ôô "
.
ôô" #
ForEach
ôô# *
(
ôô* +
hr
ôô+ -
=>
ôô. 0
{
öö  
ConvertToUpparCase
õõ &
.
õõ& '
StringToUpparCase
õõ' 8
(
õõ8 9
hr
õõ9 ;
)
õõ; <
;
õõ< =%
OracleDynamicParameters
úú +
param
úú, 1
=
úú2 3
new
úú4 7
(
úú7 8
)
úú8 9
;
úú9 :
param
ùù 
.
ùù 
Add
ùù 
(
ùù 
name
ùù "
:
ùù" #
$str
ùù$ 5
,
ùù5 6
hr
ùù7 9
.
ùù9 :
VerifiedAmount
ùù: H
.
ùùH I
ToInt64OrDefault
ùùI Y
(
ùùY Z
)
ùùZ [
,
ùù[ \
dbType
ùù] c
:
ùùc d
OracleMappingType
ùùe v
.
ùùv w
Int32
ùùw |
,
ùù| }
	directionùù~ á
:ùùá à"
ParameterDirectionùùâ õ
.ùùõ ú
Inputùùú °
)ùù° ¢
;ùù¢ £
param
ûû 
.
ûû 
Add
ûû 
(
ûû 
name
ûû "
:
ûû" #
$str
ûû$ 6
,
ûû6 7
hr
ûû8 :
.
ûû: ;
VerifiedRemarks
ûû; J
,
ûûJ K
dbType
ûûL R
:
ûûR S
OracleMappingType
ûûT e
.
ûûe f
Varchar2
ûûf n
,
ûûn o
	direction
ûûp y
:
ûûy z!
ParameterDirectionûû{ ç
.ûûç é
Inputûûé ì
)ûûì î
;ûûî ï
param
üü 
.
üü 
Add
üü 
(
üü 
name
üü "
:
üü" #
$str
üü$ 7
,
üü7 8#
investmentDeclaration
üü9 N
.
üüN O&
VerificationEmployeeSlno
üüO g
.
üüg h
ToInt64OrDefault
üüh x
(
üüx y
)
üüy z
,
üüz {
dbTypeüü| Ç
:üüÇ É!
OracleMappingTypeüüÑ ï
.üüï ñ
Int32üüñ õ
,üüõ ú
	directionüüù ¶
:üü¶ ß"
ParameterDirectionüü® ∫
.üü∫ ª
Inputüüª ¿
)üü¿ ¡
;üü¡ ¬
param
†† 
.
†† 
Add
†† 
(
†† 
name
†† "
:
††" #
$str
††$ 1
,
††1 2
hr
††3 5
.
††5 6
RentPaymentId
††6 C
,
††C D
dbType
††E K
:
††K L
OracleMappingType
††M ^
.
††^ _
Int32
††_ d
,
††d e
	direction
††f o
:
††o p!
ParameterDirection††q É
.††É Ñ
Input††Ñ â
)††â ä
;††ä ã
	parmeters
°° 
.
°° 
Add
°° !
(
°°! "
param
°°" '
)
°°' (
;
°°( )
}
££ 
)
££ 
;
££ 
int
§§ 
savedRecords
§§  
=
§§! "
await
§§# (

connection
§§) 3
.
§§3 4
ExecuteAsync
§§4 @
(
§§@ A
$str
§§A _
,
§§_ `
	parmeters
§§a j
,
§§j k
commandType
§§l w
:
§§w x
CommandType§§y Ñ
.§§Ñ Ö
StoredProcedure§§Ö î
)§§î ï
;§§ï ñ
return
•• 
(
•• 
savedRecords
•• $
*
••% &
-
••' (
$num
••( )
)
••) *
>
••+ ,
$num
••- .
;
••. /
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
ex
ßß 
)
ßß  
{
®® 
throw
™™ 
;
™™ 
}
´´ 
}
¨¨ 	
private
ÆÆ 
async
ÆÆ 
Task
ÆÆ 
<
ÆÆ 
bool
ÆÆ 
>
ÆÆ  #
SaveInvestmentDetails
ÆÆ! 6
(
ÆÆ6 7
IDbConnection
ÆÆ7 D

connection
ÆÆE O
,
ÆÆO P#
InvestmentDeclaration
ÆÆQ f#
investmentDeclaration
ÆÆg |
,
ÆÆ| }
InvestmentDetailÆÆ~ é 
investmentDetailÆÆè ü
,ÆÆü †"
HouseRentAllowanceÆÆ° ≥"
houseRentAllowanceÆÆ¥ ∆
)ÆÆ∆ «
{
ØØ 	 
ConvertToUpparCase
±± 
.
±± 
StringToUpparCase
±± 0
(
±±0 1 
houseRentAllowance
±±1 C
)
±±C D
;
±±D E%
OracleDynamicParameters
≤≤ #
	parmeters
≤≤$ -
=
≤≤. /
new
≤≤0 3
(
≤≤3 4
)
≤≤4 5
;
≤≤5 6
	parmeters
≥≥ 
.
≥≥ 
Add
≥≥ 
(
≥≥ 
name
≥≥ 
:
≥≥ 
$str
≥≥  3
,
≥≥3 4
investmentDetail
≥≥5 E
.
≥≥E F
AssesseeTypeId
≥≥F T
,
≥≥T U
dbType
≥≥V \
:
≥≥\ ]
OracleMappingType
≥≥^ o
.
≥≥o p
Int32
≥≥p u
,
≥≥u v
	direction≥≥w Ä
:≥≥Ä Å"
ParameterDirection≥≥Ç î
.≥≥î ï
Input≥≥ï ö
)≥≥ö õ
;≥≥õ ú
	parmeters
¥¥ 
.
¥¥ 
Add
¥¥ 
(
¥¥ 
name
¥¥ 
:
¥¥ 
$str
¥¥  /
,
¥¥/ 0
investmentDetail
¥¥1 A
.
¥¥A B
Is_NewRegime
¥¥B N
,
¥¥N O
dbType
¥¥P V
:
¥¥V W
OracleMappingType
¥¥X i
.
¥¥i j
Int32
¥¥j o
,
¥¥o p
	direction
¥¥q z
:
¥¥z {!
ParameterDirection¥¥| é
.¥¥é è
Input¥¥è î
)¥¥î ï
;¥¥ï ñ
	parmeters
µµ 
.
µµ 
Add
µµ 
(
µµ 
name
µµ 
:
µµ 
$str
µµ  4
,
µµ4 5
investmentDetail
µµ6 F
.
µµF G
Is_Senior_Citizen
µµG X
,
µµX Y
dbType
µµZ `
:
µµ` a
OracleMappingType
µµb s
.
µµs t
Int32
µµt y
,
µµy z
	directionµµ{ Ñ
:µµÑ Ö"
ParameterDirectionµµÜ ò
.µµò ô
Inputµµô û
)µµû ü
;µµü †
	parmeters
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
name
∂∂ 
:
∂∂ 
$str
∂∂  .
,
∂∂. / 
houseRentAllowance
∂∂0 B
.
∂∂B C
IsRentHouse
∂∂C N
,
∂∂N O
dbType
∂∂P V
:
∂∂V W
OracleMappingType
∂∂X i
.
∂∂i j
Int32
∂∂j o
,
∂∂o p
	direction
∂∂q z
:
∂∂z {!
ParameterDirection∂∂| é
.∂∂é è
Input∂∂è î
)∂∂î ï
;∂∂ï ñ
	parmeters
∑∑ 
.
∑∑ 
Add
∑∑ 
(
∑∑ 
name
∑∑ 
:
∑∑ 
$str
∑∑  2
,
∑∑2 3 
houseRentAllowance
∑∑4 F
.
∑∑F G

LocationId
∑∑G Q
,
∑∑Q R
dbType
∑∑S Y
:
∑∑Y Z
OracleMappingType
∑∑[ l
.
∑∑l m
Int32
∑∑m r
,
∑∑r s
	direction
∑∑t }
:
∑∑} ~!
ParameterDirection∑∑ ë
.∑∑ë í
Input∑∑í ó
)∑∑ó ò
;∑∑ò ô
	parmeters
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
name
∏∏ 
:
∏∏ 
$str
∏∏  &
,
∏∏& ' 
houseRentAllowance
∏∏( :
.
∏∏: ;
HouseNumber
∏∏; F
,
∏∏F G
dbType
∏∏H N
:
∏∏N O
OracleMappingType
∏∏P a
.
∏∏a b
Varchar2
∏∏b j
,
∏∏j k
	direction
∏∏l u
:
∏∏u v!
ParameterDirection∏∏w â
.∏∏â ä
Input∏∏ä è
)∏∏è ê
;∏∏ê ë
	parmeters
ππ 
.
ππ 
Add
ππ 
(
ππ 
name
ππ 
:
ππ 
$str
ππ  .
,
ππ. / 
houseRentAllowance
ππ0 B
.
ππB C

StreetName
ππC M
,
ππM N
dbType
ππO U
:
ππU V
OracleMappingType
ππW h
.
ππh i
Varchar2
ππi q
,
ππq r
	direction
ππs |
:
ππ| }!
ParameterDirectionππ~ ê
.ππê ë
Inputππë ñ
)ππñ ó
;ππó ò
	parmeters
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
name
∫∫ 
:
∫∫ 
$str
∫∫  -
,
∫∫- . 
houseRentAllowance
∫∫/ A
.
∫∫A B
MandalId
∫∫B J
==
∫∫K M
$num
∫∫N O
?
∫∫P Q
null
∫∫R V
:
∫∫W X 
houseRentAllowance
∫∫Y k
.
∫∫k l
MandalId
∫∫l t
.
∫∫t u'
ToNullableInt32OrDefault∫∫u ç
(∫∫ç é
)∫∫é è
,∫∫è ê
dbType∫∫ë ó
:∫∫ó ò!
OracleMappingType∫∫ô ™
.∫∫™ ´
Int32∫∫´ ∞
,∫∫∞ ±
	direction∫∫≤ ª
:∫∫ª º"
ParameterDirection∫∫Ω œ
.∫∫œ –
Input∫∫– ’
)∫∫’ ÷
;∫∫÷ ◊
	parmeters
ªª 
.
ªª 
Add
ªª 
(
ªª 
name
ªª 
:
ªª 
$str
ªª  /
,
ªª/ 0 
houseRentAllowance
ªª1 C
.
ªªC D

DistrictId
ªªD N
==
ªªO Q
$num
ªªR S
?
ªªT U
null
ªªV Z
:
ªª[ \ 
houseRentAllowance
ªª] o
.
ªªo p

DistrictId
ªªp z
.
ªªz {'
ToNullableInt32OrDefaultªª{ ì
(ªªì î
)ªªî ï
,ªªï ñ
dbTypeªªó ù
:ªªù û!
OracleMappingTypeªªü ∞
.ªª∞ ±
Int32ªª± ∂
,ªª∂ ∑
	directionªª∏ ¡
:ªª¡ ¬"
ParameterDirectionªª√ ’
.ªª’ ÷
Inputªª÷ €
)ªª€ ‹
;ªª‹ ›
	parmeters
ºº 
.
ºº 
Add
ºº 
(
ºº 
name
ºº 
:
ºº 
$str
ºº  ,
,
ºº, - 
houseRentAllowance
ºº. @
.
ºº@ A
StateId
ººA H
==
ººI K
$num
ººL M
?
ººN O
null
ººP T
:
ººU V 
houseRentAllowance
ººW i
.
ººi j
StateId
ººj q
.
ººq r'
ToNullableInt32OrDefaultººr ä
(ººä ã
)ººã å
,ººå ç
dbTypeººé î
:ººî ï!
OracleMappingTypeººñ ß
.ººß ®
Int32ºº® ≠
,ºº≠ Æ
	directionººØ ∏
:ºº∏ π"
ParameterDirectionºº∫ Ã
.ººÃ Õ
InputººÕ “
)ºº“ ”
;ºº” ‘
	parmeters
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
name
ΩΩ 
:
ΩΩ 
$str
ΩΩ  &
,
ΩΩ& ' 
houseRentAllowance
ΩΩ( :
.
ΩΩ: ;
Pincode
ΩΩ; B
,
ΩΩB C
dbType
ΩΩD J
:
ΩΩJ K
OracleMappingType
ΩΩL ]
.
ΩΩ] ^
Varchar2
ΩΩ^ f
,
ΩΩf g
	direction
ΩΩh q
:
ΩΩq r!
ParameterDirectionΩΩs Ö
.ΩΩÖ Ü
InputΩΩÜ ã
)ΩΩã å
;ΩΩå ç
	parmeters
ææ 
.
ææ 
Add
ææ 
(
ææ 
name
ææ 
:
ææ 
$str
ææ  *
,
ææ* + 
houseRentAllowance
ææ, >
.
ææ> ?
PhoneNumber
ææ? J
,
ææJ K
dbType
ææL R
:
ææR S
OracleMappingType
ææT e
.
ææe f
Varchar2
ææf n
,
ææn o
	direction
ææp y
:
ææy z!
ParameterDirectionææ{ ç
.ææç é
Inputææé ì
)ææì î
;ææî ï
	parmeters
øø 
.
øø 
Add
øø 
(
øø 
name
øø 
:
øø 
$str
øø  -
,
øø- .#
investmentDeclaration
øø/ D
.
øøD E
EmployeeTdsId
øøE R
,
øøR S
dbType
øøT Z
:
øøZ [
OracleMappingType
øø\ m
.
øøm n
Int32
øøn s
,
øøs t
	direction
øøu ~
:
øø~ "
ParameterDirectionøøÄ í
.øøí ì
Inputøøì ò
)øøò ô
;øøô ö
int
¿¿ 
savedRecords
¿¿ 
=
¿¿ 
await
¿¿ $

connection
¿¿% /
.
¿¿/ 0
ExecuteAsync
¿¿0 <
(
¿¿< =
$str
¿¿= Z
,
¿¿Z [
	parmeters
¿¿\ e
,
¿¿e f
commandType
¿¿g r
:
¿¿r s
CommandType
¿¿t 
.¿¿ Ä
StoredProcedure¿¿Ä è
)¿¿è ê
;¿¿ê ë
return
¡¡ 
(
¡¡ 
savedRecords
¡¡  
*
¡¡! "
-
¡¡# $
$num
¡¡$ %
)
¡¡% &
>
¡¡' (
$num
¡¡) *
;
¡¡* +
}
¬¬ 	
public
≈≈ 
async
≈≈ 
Task
≈≈ 
<
≈≈ !
TaxDeductionDetails
≈≈ -
>
≈≈- .(
GetIncomeTaxPaymentDetails
≈≈/ I
(
≈≈I J
int
≈≈J M
employeeSLNo
≈≈N Z
)
≈≈Z [
{
∆∆ 	!
TaxDeductionDetails
«« !
taxDeductionDetails
««  3
=
««4 5
null
««6 :
;
««: ;
using
»» 
(
»» 
var
»» 

connection
»» !
=
»»" #
await
»»$ )
base
»»* .
.
»». /
CreateConnection
»»/ ?
(
»»? @
DbSchema
»»@ H
.
»»H I
PORTAL
»»I O
)
»»O P
)
»»P Q
{
…… %
OracleDynamicParameters
   '
	parmeters
  ( 1
=
  2 3
new
  4 7%
OracleDynamicParameters
  8 O
(
  O P
)
  P Q
;
  Q R
string
ÀÀ 
query
ÀÀ 
=
ÀÀ 
$"
ÀÀ !
$str
ÀÀ! A
{
ÀÀA B
employeeSLNo
ÀÀB N
}
ÀÀN O
$str
ÀÀO Z
"
ÀÀZ [
;
ÀÀ[ \
string
ÃÃ 
response
ÃÃ 
=
ÃÃ  !
await
ÃÃ" '

connection
ÃÃ( 2
.
ÃÃ2 3 
ExecuteScalarAsync
ÃÃ3 E
<
ÃÃE F
dynamic
ÃÃF M
>
ÃÃM N
(
ÃÃN O
query
ÃÃO T
)
ÃÃT U
;
ÃÃU V
if
ÕÕ 
(
ÕÕ 
response
ÕÕ 
!=
ÕÕ 
null
ÕÕ  $
&&
ÕÕ% '
response
ÕÕ( 0
!=
ÕÕ1 3
String
ÕÕ4 :
.
ÕÕ: ;
Empty
ÕÕ; @
)
ÕÕ@ A
{
ŒŒ 
string
œœ 
[
œœ 
]
œœ 
responseSplit
œœ *
=
œœ+ ,
response
œœ- 5
.
œœ5 6
Split
œœ6 ;
(
œœ; <
new
œœ< ?
Char
œœ@ D
[
œœD E
]
œœE F
{
œœG H
$char
œœI L
}
œœM N
)
œœN O
;
œœO P
if
–– 
(
–– 
responseSplit
–– %
.
––% &
Length
––& ,
>
––- .
$num
––/ 0
)
––0 1
{
—— !
taxDeductionDetails
““ +
=
““, -
new
““. 1!
TaxDeductionDetails
““2 E
(
““E F
)
““F G
;
““G H!
taxDeductionDetails
”” +
.
””+ ,
TdsForFinYear
””, 9
=
””: ;
responseSplit
””< I
[
””I J
$num
””J K
]
””K L
;
””L M!
taxDeductionDetails
‘‘ +
.
‘‘+ , 
TdsDeductedTillNow
‘‘, >
=
‘‘? @
responseSplit
‘‘A N
[
‘‘N O
$num
‘‘O P
]
‘‘P Q
;
‘‘Q R!
taxDeductionDetails
’’ +
.
’’+ ,

BalanceTds
’’, 6
=
’’7 8
responseSplit
’’9 F
[
’’F G
$num
’’G H
]
’’H I
;
’’I J!
taxDeductionDetails
÷÷ +
.
÷÷+ , 
BalanceTdsPerMonth
÷÷, >
=
÷÷? @
responseSplit
÷÷A N
[
÷÷N O
$num
÷÷O P
]
÷÷P Q
;
÷÷Q R
}
◊◊ 
}
ÿÿ 
}
⁄⁄ 
return
€€ !
taxDeductionDetails
€€ &
;
€€& '
}
‹‹ 	
public
‡‡ 
async
‡‡ 
Task
‡‡ 
<
‡‡ 
List
‡‡ 
<
‡‡ #
AssessmentTypeDetails
‡‡ 4
>
‡‡4 5
>
‡‡5 6$
GetAssesseeTypeDetails
‡‡7 M
(
‡‡M N
)
‡‡N O
{
·· 	
List
‚‚ 
<
‚‚ #
AssessmentTypeDetails
‚‚ &
>
‚‚& '#
assessmentTypeDetails
‚‚( =
=
‚‚> ?
null
‚‚@ D
;
‚‚D E
using
„„ 
(
„„ 
var
„„ 

connection
„„ !
=
„„" #
await
„„$ )
base
„„* .
.
„„. /
CreateConnection
„„/ ?
(
„„? @
DbSchema
„„@ H
.
„„H I
PORTAL
„„I O
)
„„O P
)
„„P Q
{
‰‰ %
OracleDynamicParameters
ÂÂ '
	parmeters
ÂÂ( 1
=
ÂÂ2 3
new
ÂÂ4 7%
OracleDynamicParameters
ÂÂ8 O
(
ÂÂO P
)
ÂÂP Q
;
ÂÂQ R
	parmeters
ÊÊ 
.
ÊÊ 
Add
ÊÊ 
(
ÊÊ 
name
ÊÊ "
:
ÊÊ" #
$str
ÊÊ$ -
,
ÊÊ- .
dbType
ÊÊ/ 5
:
ÊÊ5 6
OracleMappingType
ÊÊ7 H
.
ÊÊH I
	RefCursor
ÊÊI R
,
ÊÊR S
	direction
ÊÊT ]
:
ÊÊ] ^ 
ParameterDirection
ÊÊ_ q
.
ÊÊq r
Output
ÊÊr x
)
ÊÊx y
;
ÊÊy z#
assessmentTypeDetails
ÁÁ %
=
ÁÁ& '
(
ÁÁ( )
await
ÁÁ) .

connection
ÁÁ/ 9
.
ÁÁ9 :

QueryAsync
ÁÁ: D
<
ÁÁD E#
AssessmentTypeDetails
ÁÁE Z
>
ÁÁZ [
(
ÁÁ[ \ 
DatabaseProcedures
ÁÁ\ n
.
ÁÁn o$
ASSESSEE_TYPE_DETAILSÁÁo Ñ
,ÁÁÑ Ö
	parmetersÁÁÜ è
,ÁÁè ê
commandTypeÁÁë ú
:ÁÁú ù
CommandTypeÁÁû ©
.ÁÁ© ™
StoredProcedureÁÁ™ π
)ÁÁπ ∫
)ÁÁ∫ ª
.ÁÁª º
ToListÁÁº ¬
(ÁÁ¬ √
)ÁÁ√ ƒ
;ÁÁƒ ≈
}
ËË 
return
ÈÈ #
assessmentTypeDetails
ÈÈ (
;
ÈÈ( )
}
ÍÍ 	
public
ÏÏ 
async
ÏÏ 
Task
ÏÏ 
<
ÏÏ 
List
ÏÏ 
<
ÏÏ 
HRALocations
ÏÏ +
>
ÏÏ+ ,
>
ÏÏ, -
GetHRALocations
ÏÏ. =
(
ÏÏ= >
)
ÏÏ> ?
{
ÌÌ 	
List
ÓÓ 
<
ÓÓ 
HRALocations
ÓÓ 
>
ÓÓ 
hRALocations
ÓÓ +
=
ÓÓ, -
null
ÓÓ. 2
;
ÓÓ2 3
using
ÔÔ 
(
ÔÔ 
var
ÔÔ 

connection
ÔÔ !
=
ÔÔ" #
await
ÔÔ$ )
base
ÔÔ* .
.
ÔÔ. /
CreateConnection
ÔÔ/ ?
(
ÔÔ? @
DbSchema
ÔÔ@ H
.
ÔÔH I
PORTAL
ÔÔI O
)
ÔÔO P
)
ÔÔP Q
{
 %
OracleDynamicParameters
ÒÒ '
	parmeters
ÒÒ( 1
=
ÒÒ2 3
new
ÒÒ4 7%
OracleDynamicParameters
ÒÒ8 O
(
ÒÒO P
)
ÒÒP Q
;
ÒÒQ R
	parmeters
ÚÚ 
.
ÚÚ 
Add
ÚÚ 
(
ÚÚ 
name
ÚÚ "
:
ÚÚ" #
$str
ÚÚ$ -
,
ÚÚ- .
dbType
ÚÚ/ 5
:
ÚÚ5 6
OracleMappingType
ÚÚ7 H
.
ÚÚH I
	RefCursor
ÚÚI R
,
ÚÚR S
	direction
ÚÚT ]
:
ÚÚ] ^ 
ParameterDirection
ÚÚ_ q
.
ÚÚq r
Output
ÚÚr x
)
ÚÚx y
;
ÚÚy z
hRALocations
ÛÛ 
=
ÛÛ 
(
ÛÛ  
await
ÛÛ  %

connection
ÛÛ& 0
.
ÛÛ0 1

QueryAsync
ÛÛ1 ;
<
ÛÛ; <
HRALocations
ÛÛ< H
>
ÛÛH I
(
ÛÛI J 
DatabaseProcedures
ÛÛJ \
.
ÛÛ\ ]"
HRA_LOCATION_DETAILS
ÛÛ] q
,
ÛÛq r
	parmeters
ÛÛs |
,
ÛÛ| }
commandTypeÛÛ~ â
:ÛÛâ ä
CommandTypeÛÛã ñ
.ÛÛñ ó
StoredProcedureÛÛó ¶
)ÛÛ¶ ß
)ÛÛß ®
.ÛÛ® ©
ToListÛÛ© Ø
(ÛÛØ ∞
)ÛÛ∞ ±
;ÛÛ± ≤
}
ÙÙ 
return
ˆˆ 
hRALocations
ˆˆ 
;
ˆˆ  
}
˜˜ 	
private
˘˘ 
async
˘˘ 
Task
˘˘ 
<
˘˘ 
EmployeeDetails
˘˘ *
>
˘˘* +
GetTDSEmpDetails
˘˘, <
(
˘˘< =
int
˘˘= @
finSLNo
˘˘A H
,
˘˘H I
int
˘˘J M
employeeSLNo
˘˘N Z
)
˘˘Z [
{
˙˙ 	
EmployeeDetails
˚˚  
tdsEmployeeDetails
˚˚ .
=
˚˚/ 0
null
˚˚1 5
;
˚˚5 6
using
¸¸ 
(
¸¸ 
var
¸¸ 

connection
¸¸ !
=
¸¸" #
await
¸¸$ )
base
¸¸* .
.
¸¸. /
CreateConnection
¸¸/ ?
(
¸¸? @
DbSchema
¸¸@ H
.
¸¸H I
PORTAL
¸¸I O
)
¸¸O P
)
¸¸P Q
{
˝˝ %
OracleDynamicParameters
˛˛ '
	parmeters
˛˛( 1
=
˛˛2 3
new
˛˛4 7%
OracleDynamicParameters
˛˛8 O
(
˛˛O P
)
˛˛P Q
;
˛˛Q R
	parmeters
ˇˇ 
.
ˇˇ 
Add
ˇˇ 
(
ˇˇ 
name
ˇˇ "
:
ˇˇ" #
$str
ˇˇ$ 3
,
ˇˇ3 4
employeeSLNo
ˇˇ5 A
,
ˇˇA B
dbType
ˇˇC I
:
ˇˇI J
OracleMappingType
ˇˇK \
.
ˇˇ\ ]
Int32
ˇˇ] b
,
ˇˇb c
	direction
ˇˇd m
:
ˇˇm n!
ParameterDirectionˇˇo Å
.ˇˇÅ Ç
InputˇˇÇ á
)ˇˇá à
;ˇˇà â
	parmeters
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ 
name
ÄÄ "
:
ÄÄ" #
$str
ÄÄ$ .
,
ÄÄ. /
finSLNo
ÄÄ0 7
,
ÄÄ7 8
dbType
ÄÄ9 ?
:
ÄÄ? @
OracleMappingType
ÄÄA R
.
ÄÄR S
Int32
ÄÄS X
,
ÄÄX Y
	direction
ÄÄZ c
:
ÄÄc d 
ParameterDirection
ÄÄe w
.
ÄÄw x
Input
ÄÄx }
)
ÄÄ} ~
;
ÄÄ~ 
	parmeters
ÅÅ 
.
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
name
ÅÅ "
:
ÅÅ" #
$str
ÅÅ$ -
,
ÅÅ- .
dbType
ÅÅ/ 5
:
ÅÅ5 6
OracleMappingType
ÅÅ7 H
.
ÅÅH I
	RefCursor
ÅÅI R
,
ÅÅR S
	direction
ÅÅT ]
:
ÅÅ] ^ 
ParameterDirection
ÅÅ_ q
.
ÅÅq r
Output
ÅÅr x
)
ÅÅx y
;
ÅÅy z 
tdsEmployeeDetails
ÇÇ "
=
ÇÇ# $
(
ÇÇ% &
await
ÇÇ& +

connection
ÇÇ, 6
.
ÇÇ6 7

QueryAsync
ÇÇ7 A
<
ÇÇA B
EmployeeDetails
ÇÇB Q
>
ÇÇQ R
(
ÇÇR S 
DatabaseProcedures
ÇÇS e
.
ÇÇe f
TDS_EMP_DETAILS
ÇÇf u
,
ÇÇu v
	parmetersÇÇw Ä
,ÇÇÄ Å
commandTypeÇÇÇ ç
:ÇÇç é
CommandTypeÇÇè ö
.ÇÇö õ
StoredProcedureÇÇõ ™
)ÇÇ™ ´
)ÇÇ´ ¨
.ÇÇ¨ ≠
FirstOrDefaultÇÇ≠ ª
(ÇÇª º
)ÇÇº Ω
;ÇÇΩ æ
}
ÉÉ 
return
ÖÖ  
tdsEmployeeDetails
ÖÖ %
;
ÖÖ% &
}
ÜÜ 	
private
àà 
async
àà 
Task
àà 
<
àà 
List
àà 
<
àà  #
TdsEmployeeHRADetails
àà  5
>
àà5 6
>
àà6 7!
GetTDSEmpHRADetails
àà8 K
(
ààK L
int
ààL O
finSLNo
ààP W
,
ààW X
int
ààY \
employeeSLNo
àà] i
)
àài j
{
ââ 	
List
ää 
<
ää #
TdsEmployeeHRADetails
ää &
>
ää& '#
tdsEmployeeHRADetails
ää( =
=
ää> ?
null
ää@ D
;
ääD E
using
ãã 
(
ãã 
var
ãã 

connection
ãã !
=
ãã" #
await
ãã$ )
base
ãã* .
.
ãã. /
CreateConnection
ãã/ ?
(
ãã? @
DbSchema
ãã@ H
.
ããH I
PORTAL
ããI O
)
ããO P
)
ããP Q
{
åå %
OracleDynamicParameters
çç '
	parmeters
çç( 1
=
çç2 3
new
çç4 7%
OracleDynamicParameters
çç8 O
(
ççO P
)
ççP Q
;
ççQ R
	parmeters
éé 
.
éé 
Add
éé 
(
éé 
name
éé "
:
éé" #
$str
éé$ 3
,
éé3 4
employeeSLNo
éé5 A
,
ééA B
dbType
ééC I
:
ééI J
OracleMappingType
ééK \
.
éé\ ]
Int32
éé] b
,
ééb c
	direction
ééd m
:
éém n!
ParameterDirectionééo Å
.ééÅ Ç
InputééÇ á
)ééá à
;ééà â
	parmeters
èè 
.
èè 
Add
èè 
(
èè 
name
èè "
:
èè" #
$str
èè$ .
,
èè. /
finSLNo
èè0 7
,
èè7 8
dbType
èè9 ?
:
èè? @
OracleMappingType
èèA R
.
èèR S
Int32
èèS X
,
èèX Y
	direction
èèZ c
:
èèc d 
ParameterDirection
èèe w
.
èèw x
Input
èèx }
)
èè} ~
;
èè~ 
	parmeters
êê 
.
êê 
Add
êê 
(
êê 
name
êê "
:
êê" #
$str
êê$ -
,
êê- .
dbType
êê/ 5
:
êê5 6
OracleMappingType
êê7 H
.
êêH I
	RefCursor
êêI R
,
êêR S
	direction
êêT ]
:
êê] ^ 
ParameterDirection
êê_ q
.
êêq r
Output
êêr x
)
êêx y
;
êêy z#
tdsEmployeeHRADetails
ëë %
=
ëë& '
(
ëë( )
await
ëë) .

connection
ëë/ 9
.
ëë9 :

QueryAsync
ëë: D
<
ëëD E#
TdsEmployeeHRADetails
ëëE Z
>
ëëZ [
(
ëë[ \ 
DatabaseProcedures
ëë\ n
.
ëën o"
TDS_EMP_HRA_DETAILSëëo Ç
,ëëÇ É
	parmetersëëÑ ç
,ëëç é
commandTypeëëè ö
:ëëö õ
CommandTypeëëú ß
.ëëß ®
StoredProcedureëë® ∑
)ëë∑ ∏
)ëë∏ π
.ëëπ ∫
ToListëë∫ ¿
(ëë¿ ¡
)ëë¡ ¬
;ëë¬ √
}
íí 
return
îî #
tdsEmployeeHRADetails
îî (
;
îî( )
}
ïï 	
private
óó 
async
óó 
Task
óó 
<
óó 
List
óó 
<
óó  
TdsSectionDetails
óó  1
>
óó1 2
>
óó2 3"
GetTdsSectionDetails
óó4 H
(
óóH I
)
óóI J
{
òò 	
List
ôô 
<
ôô 
TdsSectionDetails
ôô "
>
ôô" #
tdsSectionDetails
ôô$ 5
=
ôô6 7
null
ôô8 <
;
ôô< =
using
öö 
(
öö 
var
öö 

connection
öö !
=
öö" #
await
öö$ )
base
öö* .
.
öö. /
CreateConnection
öö/ ?
(
öö? @
DbSchema
öö@ H
.
ööH I
PORTAL
ööI O
)
ööO P
)
ööP Q
{
õõ %
OracleDynamicParameters
úú '
	parmeters
úú( 1
=
úú2 3
new
úú4 7%
OracleDynamicParameters
úú8 O
(
úúO P
)
úúP Q
;
úúQ R
	parmeters
ùù 
.
ùù 
Add
ùù 
(
ùù 
name
ùù "
:
ùù" #
$str
ùù$ -
,
ùù- .
dbType
ùù/ 5
:
ùù5 6
OracleMappingType
ùù7 H
.
ùùH I
	RefCursor
ùùI R
,
ùùR S
	direction
ùùT ]
:
ùù] ^ 
ParameterDirection
ùù_ q
.
ùùq r
Output
ùùr x
)
ùùx y
;
ùùy z
tdsSectionDetails
ûû !
=
ûû" #
(
ûû$ %
await
ûû% *

connection
ûû+ 5
.
ûû5 6

QueryAsync
ûû6 @
<
ûû@ A
TdsSectionDetails
ûûA R
>
ûûR S
(
ûûS T 
DatabaseProcedures
ûûT f
.
ûûf g!
TDS_SECTION_DETAILS
ûûg z
,
ûûz {
	parmetersûû| Ö
,ûûÖ Ü
commandTypeûûá í
:ûûí ì
CommandTypeûûî ü
.ûûü †
StoredProcedureûû† Ø
)ûûØ ∞
)ûû∞ ±
.ûû± ≤
OrderByûû≤ π
(ûûπ ∫
itemûû∫ æ
=>ûûø ¡
itemûû¬ ∆
.ûû∆ «
SectionSlNoûû« “
)ûû“ ”
.ûû” ‘
ToListûû‘ ⁄
(ûû⁄ €
)ûû€ ‹
;ûû‹ ›
}
üü 
return
†† 
tdsSectionDetails
†† $
;
††$ %
}
°° 	
private
££ 
async
££ 
Task
££ 
<
££ 
List
££ 
<
££  "
TdsSubHeadingDetails
££  4
>
££4 5
>
££5 6"
GetTDSSubHeadDetails
££7 K
(
££K L
int
££L O
finSLNo
££P W
)
££W X
{
§§ 	
List
•• 
<
•• "
TdsSubHeadingDetails
•• %
>
••% &"
tdsSubHeadingDetails
••' ;
=
••< =
null
••> B
;
••B C
using
¶¶ 
(
¶¶ 
var
¶¶ 

connection
¶¶ !
=
¶¶" #
await
¶¶$ )
base
¶¶* .
.
¶¶. /
CreateConnection
¶¶/ ?
(
¶¶? @
DbSchema
¶¶@ H
.
¶¶H I
PORTAL
¶¶I O
)
¶¶O P
)
¶¶P Q
{
ßß %
OracleDynamicParameters
®® '
	parmeters
®®( 1
=
®®2 3
new
®®4 7%
OracleDynamicParameters
®®8 O
(
®®O P
)
®®P Q
;
®®Q R
	parmeters
©© 
.
©© 
Add
©© 
(
©© 
name
©© "
:
©©" #
$str
©©$ .
,
©©. /
finSLNo
©©0 7
,
©©7 8
dbType
©©9 ?
:
©©? @
OracleMappingType
©©A R
.
©©R S
Int32
©©S X
,
©©X Y
	direction
©©Z c
:
©©c d 
ParameterDirection
©©e w
.
©©w x
Input
©©x }
)
©©} ~
;
©©~ 
	parmeters
™™ 
.
™™ 
Add
™™ 
(
™™ 
name
™™ "
:
™™" #
$str
™™$ -
,
™™- .
dbType
™™/ 5
:
™™5 6
OracleMappingType
™™7 H
.
™™H I
	RefCursor
™™I R
,
™™R S
	direction
™™T ]
:
™™] ^ 
ParameterDirection
™™_ q
.
™™q r
Output
™™r x
)
™™x y
;
™™y z"
tdsSubHeadingDetails
´´ $
=
´´% &
(
´´' (
await
´´( -

connection
´´. 8
.
´´8 9

QueryAsync
´´9 C
<
´´C D"
TdsSubHeadingDetails
´´D X
>
´´X Y
(
´´Y Z 
DatabaseProcedures
´´Z l
.
´´l m"
TDS_SUBHEAD_DETAILS´´m Ä
,´´Ä Å
	parmeters´´Ç ã
,´´ã å
commandType´´ç ò
:´´ò ô
CommandType´´ö •
.´´• ¶
StoredProcedure´´¶ µ
)´´µ ∂
)´´∂ ∑
.´´∑ ∏
ToList´´∏ æ
(´´æ ø
)´´ø ¿
;´´¿ ¡
}
¨¨ 
return
≠≠ "
tdsSubHeadingDetails
≠≠ '
;
≠≠' (
}
ÆÆ 	
private
∞∞ 
async
∞∞ 
Task
∞∞ 
<
∞∞ 
List
∞∞ 
<
∞∞  '
TdsEmployeeSubHeadDetails
∞∞  9
>
∞∞9 :
>
∞∞: ;%
GetTDSEmpSubHeadDetails
∞∞< S
(
∞∞S T
int
∞∞T W
finSLNo
∞∞X _
,
∞∞_ `
int
∞∞a d
employeeSLNo
∞∞e q
)
∞∞q r
{
±± 	
List
≤≤ 
<
≤≤ '
TdsEmployeeSubHeadDetails
≤≤ *
>
≤≤* +#
tdsEmployeeHRADetails
≤≤, A
=
≤≤B C
null
≤≤D H
;
≤≤H I
using
≥≥ 
(
≥≥ 
var
≥≥ 

connection
≥≥ !
=
≥≥" #
await
≥≥$ )
base
≥≥* .
.
≥≥. /
CreateConnection
≥≥/ ?
(
≥≥? @
DbSchema
≥≥@ H
.
≥≥H I
PORTAL
≥≥I O
)
≥≥O P
)
≥≥P Q
{
¥¥ %
OracleDynamicParameters
µµ '
	parmeters
µµ( 1
=
µµ2 3
new
µµ4 7%
OracleDynamicParameters
µµ8 O
(
µµO P
)
µµP Q
;
µµQ R
	parmeters
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 
name
∂∂ "
:
∂∂" #
$str
∂∂$ 3
,
∂∂3 4
employeeSLNo
∂∂5 A
,
∂∂A B
dbType
∂∂C I
:
∂∂I J
OracleMappingType
∂∂K \
.
∂∂\ ]
Int32
∂∂] b
,
∂∂b c
	direction
∂∂d m
:
∂∂m n!
ParameterDirection∂∂o Å
.∂∂Å Ç
Input∂∂Ç á
)∂∂á à
;∂∂à â
	parmeters
∑∑ 
.
∑∑ 
Add
∑∑ 
(
∑∑ 
name
∑∑ "
:
∑∑" #
$str
∑∑$ .
,
∑∑. /
finSLNo
∑∑0 7
,
∑∑7 8
dbType
∑∑9 ?
:
∑∑? @
OracleMappingType
∑∑A R
.
∑∑R S
Int32
∑∑S X
,
∑∑X Y
	direction
∑∑Z c
:
∑∑c d 
ParameterDirection
∑∑e w
.
∑∑w x
Input
∑∑x }
)
∑∑} ~
;
∑∑~ 
	parmeters
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
name
∏∏ "
:
∏∏" #
$str
∏∏$ -
,
∏∏- .
dbType
∏∏/ 5
:
∏∏5 6
OracleMappingType
∏∏7 H
.
∏∏H I
	RefCursor
∏∏I R
,
∏∏R S
	direction
∏∏T ]
:
∏∏] ^ 
ParameterDirection
∏∏_ q
.
∏∏q r
Output
∏∏r x
)
∏∏x y
;
∏∏y z#
tdsEmployeeHRADetails
ππ %
=
ππ& '
(
ππ( )
await
ππ) .

connection
ππ/ 9
.
ππ9 :

QueryAsync
ππ: D
<
ππD E'
TdsEmployeeSubHeadDetails
ππE ^
>
ππ^ _
(
ππ_ ` 
DatabaseProcedures
ππ` r
.
ππr s&
EMP_TDS_SUBHEAD_DETAILSππs ä
,ππä ã
	parmetersππå ï
,ππï ñ
commandTypeππó ¢
:ππ¢ £
CommandTypeππ§ Ø
.ππØ ∞
StoredProcedureππ∞ ø
)ππø ¿
)ππ¿ ¡
.ππ¡ ¬
ToListππ¬ »
(ππ» …
)ππ…  
;ππ  À
}
∫∫ 
return
ªª #
tdsEmployeeHRADetails
ªª (
;
ªª( )
}
ºº 	
private
ææ 
async
ææ 
Task
ææ 
<
ææ 
List
ææ 
<
ææ   
HouseIncomeDetails
ææ  2
>
ææ2 3
>
ææ3 4#
GetHouseIncomeDetails
ææ5 J
(
ææJ K
)
ææK L
{
øø 	
List
¿¿ 
<
¿¿  
HouseIncomeDetails
¿¿ #
>
¿¿# $ 
houseIncomeDetails
¿¿% 7
=
¿¿8 9
null
¿¿: >
;
¿¿> ?
using
¡¡ 
(
¡¡ 
var
¡¡ 

connection
¡¡ !
=
¡¡" #
await
¡¡$ )
base
¡¡* .
.
¡¡. /
CreateConnection
¡¡/ ?
(
¡¡? @
DbSchema
¡¡@ H
.
¡¡H I
PORTAL
¡¡I O
)
¡¡O P
)
¡¡P Q
{
¬¬ %
OracleDynamicParameters
√√ '
	parmeters
√√( 1
=
√√2 3
new
√√4 7%
OracleDynamicParameters
√√8 O
(
√√O P
)
√√P Q
;
√√Q R
	parmeters
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ 
name
ƒƒ "
:
ƒƒ" #
$str
ƒƒ$ -
,
ƒƒ- .
dbType
ƒƒ/ 5
:
ƒƒ5 6
OracleMappingType
ƒƒ7 H
.
ƒƒH I
	RefCursor
ƒƒI R
,
ƒƒR S
	direction
ƒƒT ]
:
ƒƒ] ^ 
ParameterDirection
ƒƒ_ q
.
ƒƒq r
Output
ƒƒr x
)
ƒƒx y
;
ƒƒy z 
houseIncomeDetails
≈≈ "
=
≈≈# $
(
≈≈% &
await
≈≈& +

connection
≈≈, 6
.
≈≈6 7

QueryAsync
≈≈7 A
<
≈≈A B 
HouseIncomeDetails
≈≈B T
>
≈≈T U
(
≈≈U V 
DatabaseProcedures
≈≈V h
.
≈≈h i"
HOUSE_INCOME_DETAILS
≈≈i }
,
≈≈} ~
	parmeters≈≈ à
,≈≈à â
commandType≈≈ä ï
:≈≈ï ñ
CommandType≈≈ó ¢
.≈≈¢ £
StoredProcedure≈≈£ ≤
)≈≈≤ ≥
)≈≈≥ ¥
.≈≈¥ µ
ToList≈≈µ ª
(≈≈ª º
)≈≈º Ω
;≈≈Ω æ
}
∆∆ 
return
««  
houseIncomeDetails
«« %
;
««% &
}
»» 	
private
   
async
   
Task
   
<
   
List
   
<
    '
EmployeeHouseIncomeDetail
    9
>
  9 :
>
  : ;&
GetEmpHouseIncomeDetails
  < T
(
  T U
int
  U X
finSLNo
  Y `
,
  ` a
int
  b e
employeeSLNo
  f r
)
  r s
{
ÀÀ 	
List
ÃÃ 
<
ÃÃ '
EmployeeHouseIncomeDetail
ÃÃ *
>
ÃÃ* ++
tdsEmployeeHouseIncomeDetails
ÃÃ, I
=
ÃÃJ K
null
ÃÃL P
;
ÃÃP Q
using
ÕÕ 
(
ÕÕ 
var
ÕÕ 

connection
ÕÕ !
=
ÕÕ" #
await
ÕÕ$ )
base
ÕÕ* .
.
ÕÕ. /
CreateConnection
ÕÕ/ ?
(
ÕÕ? @
DbSchema
ÕÕ@ H
.
ÕÕH I
PORTAL
ÕÕI O
)
ÕÕO P
)
ÕÕP Q
{
ŒŒ %
OracleDynamicParameters
œœ '
	parmeters
œœ( 1
=
œœ2 3
new
œœ4 7%
OracleDynamicParameters
œœ8 O
(
œœO P
)
œœP Q
;
œœQ R
	parmeters
–– 
.
–– 
Add
–– 
(
–– 
name
–– "
:
––" #
$str
––$ 3
,
––3 4
employeeSLNo
––5 A
,
––A B
dbType
––C I
:
––I J
OracleMappingType
––K \
.
––\ ]
Int32
––] b
,
––b c
	direction
––d m
:
––m n!
ParameterDirection––o Å
.––Å Ç
Input––Ç á
)––á à
;––à â
	parmeters
—— 
.
—— 
Add
—— 
(
—— 
name
—— "
:
——" #
$str
——$ .
,
——. /
finSLNo
——0 7
,
——7 8
dbType
——9 ?
:
——? @
OracleMappingType
——A R
.
——R S
Int32
——S X
,
——X Y
	direction
——Z c
:
——c d 
ParameterDirection
——e w
.
——w x
Input
——x }
)
——} ~
;
——~ 
	parmeters
““ 
.
““ 
Add
““ 
(
““ 
name
““ "
:
““" #
$str
““$ -
,
““- .
dbType
““/ 5
:
““5 6
OracleMappingType
““7 H
.
““H I
	RefCursor
““I R
,
““R S
	direction
““T ]
:
““] ^ 
ParameterDirection
““_ q
.
““q r
Output
““r x
)
““x y
;
““y z+
tdsEmployeeHouseIncomeDetails
”” -
=
””. /
(
””0 1
await
””1 6

connection
””7 A
.
””A B

QueryAsync
””B L
<
””L M'
EmployeeHouseIncomeDetail
””M f
>
””f g
(
””g h 
DatabaseProcedures
””h z
.
””z {'
EMP_HOUSE_INCOME_DETAILS””{ ì
,””ì î
	parmeters””ï û
,””û ü
commandType””† ´
:””´ ¨
CommandType””≠ ∏
.””∏ π
StoredProcedure””π »
)””» …
)””…  
.””  À
ToList””À —
(””— “
)””“ ”
;””” ‘
}
‘‘ 
return
’’ +
tdsEmployeeHouseIncomeDetails
’’ 0
;
’’0 1
}
÷÷ 	
private
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
<
ÿÿ 
List
ÿÿ 
<
ÿÿ   
OtherIncomeDetails
ÿÿ  2
>
ÿÿ2 3
>
ÿÿ3 4#
GetOtherIncomeDetails
ÿÿ5 J
(
ÿÿJ K
)
ÿÿK L
{
ŸŸ 	
List
⁄⁄ 
<
⁄⁄  
OtherIncomeDetails
⁄⁄ #
>
⁄⁄# $ 
otherIncomeDetails
⁄⁄% 7
=
⁄⁄8 9
null
⁄⁄: >
;
⁄⁄> ?
using
€€ 
(
€€ 
var
€€ 

connection
€€ !
=
€€" #
await
€€$ )
base
€€* .
.
€€. /
CreateConnection
€€/ ?
(
€€? @
DbSchema
€€@ H
.
€€H I
PORTAL
€€I O
)
€€O P
)
€€P Q
{
‹‹ %
OracleDynamicParameters
›› '
	parmeters
››( 1
=
››2 3
new
››4 7%
OracleDynamicParameters
››8 O
(
››O P
)
››P Q
;
››Q R
	parmeters
ﬁﬁ 
.
ﬁﬁ 
Add
ﬁﬁ 
(
ﬁﬁ 
name
ﬁﬁ "
:
ﬁﬁ" #
$str
ﬁﬁ$ -
,
ﬁﬁ- .
dbType
ﬁﬁ/ 5
:
ﬁﬁ5 6
OracleMappingType
ﬁﬁ7 H
.
ﬁﬁH I
	RefCursor
ﬁﬁI R
,
ﬁﬁR S
	direction
ﬁﬁT ]
:
ﬁﬁ] ^ 
ParameterDirection
ﬁﬁ_ q
.
ﬁﬁq r
Output
ﬁﬁr x
)
ﬁﬁx y
;
ﬁﬁy z 
otherIncomeDetails
ﬂﬂ "
=
ﬂﬂ# $
(
ﬂﬂ% &
await
ﬂﬂ& +

connection
ﬂﬂ, 6
.
ﬂﬂ6 7

QueryAsync
ﬂﬂ7 A
<
ﬂﬂA B 
OtherIncomeDetails
ﬂﬂB T
>
ﬂﬂT U
(
ﬂﬂU V 
DatabaseProcedures
ﬂﬂV h
.
ﬂﬂh i"
OTHER_INCOME_DETAILS
ﬂﬂi }
,
ﬂﬂ} ~
	parmetersﬂﬂ à
,ﬂﬂà â
commandTypeﬂﬂä ï
:ﬂﬂï ñ
CommandTypeﬂﬂó ¢
.ﬂﬂ¢ £
StoredProcedureﬂﬂ£ ≤
)ﬂﬂ≤ ≥
)ﬂﬂ≥ ¥
.ﬂﬂ¥ µ
ToListﬂﬂµ ª
(ﬂﬂª º
)ﬂﬂº Ω
;ﬂﬂΩ æ
}
‡‡ 
return
··  
otherIncomeDetails
·· %
;
··% &
}
‚‚ 	
private
‰‰ 
async
‰‰ 
Task
‰‰ 
<
‰‰ 
List
‰‰ 
<
‰‰  '
EmployeeOtherIncomeDetail
‰‰  9
>
‰‰9 :
>
‰‰: ;&
GetEmpOtherIncomeDetails
‰‰< T
(
‰‰T U
int
‰‰U X
finSLNo
‰‰Y `
,
‰‰` a
int
‰‰b e
employeeSLNo
‰‰f r
)
‰‰r s
{
ÂÂ 	
List
ÊÊ 
<
ÊÊ '
EmployeeOtherIncomeDetail
ÊÊ *
>
ÊÊ* +#
empOtherIncomeDetails
ÊÊ, A
=
ÊÊB C
null
ÊÊD H
;
ÊÊH I
using
ÁÁ 
(
ÁÁ 
var
ÁÁ 

connection
ÁÁ !
=
ÁÁ" #
await
ÁÁ$ )
base
ÁÁ* .
.
ÁÁ. /
CreateConnection
ÁÁ/ ?
(
ÁÁ? @
DbSchema
ÁÁ@ H
.
ÁÁH I
PORTAL
ÁÁI O
)
ÁÁO P
)
ÁÁP Q
{
ËË %
OracleDynamicParameters
ÈÈ '
	parmeters
ÈÈ( 1
=
ÈÈ2 3
new
ÈÈ4 7%
OracleDynamicParameters
ÈÈ8 O
(
ÈÈO P
)
ÈÈP Q
;
ÈÈQ R
	parmeters
ÍÍ 
.
ÍÍ 
Add
ÍÍ 
(
ÍÍ 
name
ÍÍ "
:
ÍÍ" #
$str
ÍÍ$ 3
,
ÍÍ3 4
employeeSLNo
ÍÍ5 A
,
ÍÍA B
dbType
ÍÍC I
:
ÍÍI J
OracleMappingType
ÍÍK \
.
ÍÍ\ ]
Int32
ÍÍ] b
,
ÍÍb c
	direction
ÍÍd m
:
ÍÍm n!
ParameterDirectionÍÍo Å
.ÍÍÅ Ç
InputÍÍÇ á
)ÍÍá à
;ÍÍà â
	parmeters
ÎÎ 
.
ÎÎ 
Add
ÎÎ 
(
ÎÎ 
name
ÎÎ "
:
ÎÎ" #
$str
ÎÎ$ .
,
ÎÎ. /
finSLNo
ÎÎ0 7
,
ÎÎ7 8
dbType
ÎÎ9 ?
:
ÎÎ? @
OracleMappingType
ÎÎA R
.
ÎÎR S
Int32
ÎÎS X
,
ÎÎX Y
	direction
ÎÎZ c
:
ÎÎc d 
ParameterDirection
ÎÎe w
.
ÎÎw x
Input
ÎÎx }
)
ÎÎ} ~
;
ÎÎ~ 
	parmeters
ÏÏ 
.
ÏÏ 
Add
ÏÏ 
(
ÏÏ 
name
ÏÏ "
:
ÏÏ" #
$str
ÏÏ$ -
,
ÏÏ- .
dbType
ÏÏ/ 5
:
ÏÏ5 6
OracleMappingType
ÏÏ7 H
.
ÏÏH I
	RefCursor
ÏÏI R
,
ÏÏR S
	direction
ÏÏT ]
:
ÏÏ] ^ 
ParameterDirection
ÏÏ_ q
.
ÏÏq r
Output
ÏÏr x
)
ÏÏx y
;
ÏÏy z#
empOtherIncomeDetails
ÌÌ %
=
ÌÌ& '
(
ÌÌ( )
await
ÌÌ) .

connection
ÌÌ/ 9
.
ÌÌ9 :

QueryAsync
ÌÌ: D
<
ÌÌD E'
EmployeeOtherIncomeDetail
ÌÌE ^
>
ÌÌ^ _
(
ÌÌ_ ` 
DatabaseProcedures
ÌÌ` r
.
ÌÌr s'
EMP_OTHER_INCOME_DETAILSÌÌs ã
,ÌÌã å
	parmetersÌÌç ñ
,ÌÌñ ó
commandTypeÌÌò £
:ÌÌ£ §
CommandTypeÌÌ• ∞
.ÌÌ∞ ±
StoredProcedureÌÌ± ¿
)ÌÌ¿ ¡
)ÌÌ¡ ¬
.ÌÌ¬ √
ToListÌÌ√ …
(ÌÌ…  
)ÌÌ  À
;ÌÌÀ Ã
}
ÓÓ 
return
ÔÔ #
empOtherIncomeDetails
ÔÔ (
;
ÔÔ( )
}
 	
public
ˆˆ 
async
ˆˆ 
Task
ˆˆ %
VerifyProofsSendMessage
ˆˆ 1
(
ˆˆ1 2
long
ˆˆ2 6
EmployeeLSNO
ˆˆ7 C
)
ˆˆC D
{
˜˜ 	
string
¯¯ 
VerifyMessage
¯¯  
=
¯¯! "
string
¯¯# )
.
¯¯) *
Empty
¯¯* /
;
¯¯/ 0
string
˘˘ 
VerifyProofsValue
˘˘ $
=
˘˘% &
string
˘˘' -
.
˘˘- .
Empty
˘˘. 3
;
˘˘3 4
string
˙˙ !
VerifyProofsMessage
˙˙ &
=
˙˙' (!
ApplicationSettings
˙˙) <
.
˙˙< =
Current
˙˙= D
.
˙˙D E!
VerifyProofsMessage
˙˙E X
;
˙˙X Y
string
˚˚ 

templateid
˚˚ 
=
˚˚ !
ApplicationSettings
˚˚  3
.
˚˚3 4
Current
˚˚4 ;
.
˚˚; <"
VerifyProofsTemplate
˚˚< P
;
˚˚P Q
if
¸¸ 
(
¸¸ 
!
¸¸ 
string
¸¸ 
.
¸¸ 
IsNullOrEmpty
¸¸ %
(
¸¸% &!
VerifyProofsMessage
¸¸& 9
)
¸¸9 :
)
¸¸: ;
{
˝˝ 
using
˛˛ 
(
˛˛ 
IDbConnection
˛˛ $

connection
˛˛% /
=
˛˛0 1
await
˛˛2 7
CreateConnection
˛˛8 H
(
˛˛H I
DbSchema
˛˛I Q
.
˛˛Q R
PORTAL
˛˛R X
)
˛˛X Y
)
˛˛Y Z
{
ˇˇ 
EmployeeProfile
ÄÄ #
employeeProfile
ÄÄ$ 3
=
ÄÄ4 5
await
ÄÄ6 ;'
GetEmployeeMinimalProfile
ÄÄ< U
(
ÄÄU V
EmployeeLSNO
ÄÄV b
.
ÄÄb c
ToInt32
ÄÄc j
(
ÄÄj k
)
ÄÄk l
)
ÄÄl m
;
ÄÄm n
this
ÅÅ 
.
ÅÅ 
logger
ÅÅ 
.
ÅÅ  
LogInfo
ÅÅ  '
(
ÅÅ' (!
VerifyProofsMessage
ÅÅ( ;
)
ÅÅ; <
;
ÅÅ< =
this
ÇÇ 
.
ÇÇ 
logger
ÇÇ 
.
ÇÇ  
LogInfo
ÇÇ  '
(
ÇÇ' (

templateid
ÇÇ( 2
)
ÇÇ2 3
;
ÇÇ3 4
this
ÉÉ 
.
ÉÉ 
logger
ÉÉ 
.
ÉÉ  
LogInfo
ÉÉ  '
(
ÉÉ' (
employeeProfile
ÉÉ( 7
.
ÉÉ7 8
EmployeeName
ÉÉ8 D
)
ÉÉD E
;
ÉÉE F
if
ÑÑ 
(
ÑÑ 
employeeProfile
ÑÑ '
.
ÑÑ' (
EmployeeName
ÑÑ( 4
.
ÑÑ4 5
Length
ÑÑ5 ;
>
ÑÑ< =
$num
ÑÑ> @
)
ÑÑ@ A
{
ÖÖ 
VerifyMessage
ÜÜ %
=
ÜÜ& '
string
ÜÜ( .
.
ÜÜ. /
Format
ÜÜ/ 5
(
ÜÜ5 6!
VerifyProofsMessage
ÜÜ6 I
,
ÜÜI J
Environment
ÜÜK V
.
ÜÜV W
NewLine
ÜÜW ^
,
ÜÜ^ _
employeeProfile
ÜÜ` o
.
ÜÜo p
EmployeeName
ÜÜp |
.
ÜÜ| }
	SubstringÜÜ} Ü
(ÜÜÜ á
$numÜÜá à
,ÜÜà â
$numÜÜä å
)ÜÜå ç
)ÜÜç é
;ÜÜé è
}
áá 
else
àà 
{
ââ 
VerifyMessage
ää %
=
ää& '
string
ää( .
.
ää. /
Format
ää/ 5
(
ää5 6!
VerifyProofsMessage
ää6 I
,
ääI J
Environment
ääK V
.
ääV W
NewLine
ääW ^
,
ää^ _
employeeProfile
ää` o
.
ääo p
EmployeeName
ääp |
)
ää| }
;
ää} ~
}
ãã %
OracleDynamicParameters
åå +
	parmeters
åå, 5
=
åå6 7
new
åå8 ;%
OracleDynamicParameters
åå< S
(
ååS T
)
ååT U
;
ååU V
	parmeters
çç 
.
çç 
Add
çç !
(
çç! "
name
çç" &
:
çç& '
$str
çç( 7
,
çç7 8
employeeProfile
çç9 H
.
ççH I
Mobile
ççI O
,
ççO P
dbType
ççQ W
:
ççW X
OracleMappingType
ççY j
.
ççj k
Int64
ççk p
,
ççp q
	direction
ççr {
:
çç{ |!
ParameterDirectionçç} è
.ççè ê
Inputççê ï
)ççï ñ
;ççñ ó
	parmeters
éé 
.
éé 
Add
éé !
(
éé! "
name
éé" &
:
éé& '
$str
éé( 2
,
éé2 3
VerifyMessage
éé4 A
,
ééA B
dbType
ééC I
:
ééI J
OracleMappingType
ééK \
.
éé\ ]
Varchar2
éé] e
,
éée f
	direction
éég p
:
éép q!
ParameterDirectionéér Ñ
.ééÑ Ö
InputééÖ ä
)ééä ã
;ééã å
	parmeters
èè 
.
èè 
Add
èè !
(
èè! "
name
èè" &
:
èè& '
$str
èè( <
,
èè< =
$num
èè> ?
,
èè? @
dbType
èèA G
:
èèG H
OracleMappingType
èèI Z
.
èèZ [
Int32
èè[ `
,
èè` a
	direction
èèb k
:
èèk l 
ParameterDirection
èèm 
.èè Ä
InputèèÄ Ö
)èèÖ Ü
;èèÜ á
	parmeters
êê 
.
êê 
Add
êê !
(
êê! "
name
êê" &
:
êê& '
$str
êê( 9
,
êê9 :
$num
êê; <
,
êê< =
dbType
êê> D
:
êêD E
OracleMappingType
êêF W
.
êêW X
Int32
êêX ]
,
êê] ^
	direction
êê_ h
:
êêh i 
ParameterDirection
êêj |
.
êê| }
Inputêê} Ç
)êêÇ É
;êêÉ Ñ
	parmeters
ëë 
.
ëë 
Add
ëë !
(
ëë! "
name
ëë" &
:
ëë& '
$str
ëë( 1
,
ëë1 2
$str
ëë3 ;
,
ëë; <
dbType
ëë= C
:
ëëC D
OracleMappingType
ëëE V
.
ëëV W
Varchar2
ëëW _
,
ëë_ `
	direction
ëëa j
:
ëëj k 
ParameterDirection
ëël ~
.
ëë~ 
Inputëë Ñ
)ëëÑ Ö
;ëëÖ Ü
	parmeters
íí 
.
íí 
Add
íí !
(
íí! "
name
íí" &
:
íí& '
$str
íí( 9
,
íí9 :

templateid
íí; E
,
ííE F
dbType
ííG M
:
ííM N
OracleMappingType
ííO `
.
íí` a
Varchar2
íía i
,
ííi j
	direction
íík t
:
íít u!
ParameterDirectioníív à
.ííà â
Inputííâ é
)ííé è
;ííè ê
await
ìì 

connection
ìì $
.
ìì$ %
ExecuteAsync
ìì% 1
(
ìì1 2 
DatabaseProcedures
ìì2 D
.
ììD E
SEND_SMS
ììE M
,
ììM N
	parmeters
ììO X
,
ììX Y
commandType
ììZ e
:
ììe f
CommandType
ììg r
.
ììr s
StoredProcedureììs Ç
)ììÇ É
;ììÉ Ñ
}
îî 
}
ïï 
}
ññ 	
private
òò 
async
òò 
Task
òò 
<
òò 
EmployeeProfile
òò *
>
òò* +'
GetEmployeeMinimalProfile
òò, E
(
òòE F
int
òòF I
employeeSlno
òòJ V
)
òòV W
{
ôô 	
EmployeeProfile
öö 
employeeProfile
öö +
=
öö, -
null
öö. 2
;
öö2 3
using
õõ 
(
õõ +
EmployeeInformationRepository
õõ 0
profileRepository
õõ1 B
=
õõC D
new
õõE H+
EmployeeInformationRepository
õõI f
(
õõf g
configuration
õõg t
,
õõt u
this
õõv z
.
õõz {

redisCacheõõ{ Ö
)õõÖ Ü
)õõÜ á
{
úú 
employeeProfile
ùù 
=
ùù  !
await
ùù" '
profileRepository
ùù( 9
.
ùù9 :'
GetEmployeeMinimumProfile
ùù: S
(
ùùS T
employeeSlno
ùùT `
)
ùù` a
;
ùùa b
}
ûû 
return
üü 
employeeProfile
üü "
;
üü" #
}
†† 	
}
¢¢ 
}££ ˙‘
eF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\LeaveManagementReports\ReportsRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &"
LeaveManagementReports& <
{ 
public 

class 
ReportsRepository "
:# $
BaseRepository% 3
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
ILoggerManager '
logger( .
;. /
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public 
ReportsRepository  
(  !
IConfiguration! /
configuration0 =
,= >
ILoggerManager? M
loggerN T
)T U
:V W
baseX \
(\ ]
configuration] j
)j k
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 
logger 
= 
logger  
;  !
} 	
public 
async 
Task 
< 
List 
< 
LeaveDetailReport 0
>0 1
>1 2
GetLeaveReport3 A
(A B
GetLeaveReportReqB S
getLeaveReportReqT e
)e f
{ 	
List 
< 
LeaveDetailReport "
>" #
employeeLeaves$ 2
=3 4
null5 9
;9 :
List   
<   
LeaveWorkFlowReport   $
>  $ %
leaveWorkFlowReport  & 9
=  : ;
null  < @
;  @ A
List!! 
<!! "
LeaveFileUploadReports!! '
>!!' ("
leaveFileUploadReports!!) ?
=!!@ A
null!!B F
;!!F G
using## 
(## 
var## 

connection## !
=##" #
await##$ )
base##* .
.##. /
CreateConnection##/ ?
(##? @
DbSchema##@ H
.##H I
PORTAL##I O
)##O P
)##P Q
{$$ #
OracleDynamicParameters%% '

parameters%%( 2
=%%3 4
new%%5 8#
OracleDynamicParameters%%9 P
(%%P Q
)%%Q R
;%%R S

parameters&& 
.&& 
Add&& 
(&& 
name&& #
:&&# $
$str&&% 3
,&&3 4
getLeaveReportReq&&5 F
.&&F G
pBranchSlno&&G R
,&&R S
dbType&&T Z
:&&Z [
OracleMappingType&&\ m
.&&m n
Varchar2&&n v
,&&v w
	direction	&&x Å
:
&&Å Ç 
ParameterDirection
&&É ï
.
&&ï ñ
Input
&&ñ õ
)
&&õ ú
;
&&ú ù

parameters'' 
.'' 
Add'' 
('' 
name'' #
:''# $
$str''% 1
,''1 2
getLeaveReportReq''3 D
.''D E
fromDate''E M
,''M N
dbType''O U
:''U V
OracleMappingType''W h
.''h i
Date''i m
,''m n
	direction''o x
:''x y
ParameterDirection	''z å
.
''å ç
Input
''ç í
)
''í ì
;
''ì î

parameters(( 
.(( 
Add(( 
((( 
name(( #
:((# $
$str((% /
,((/ 0
getLeaveReportReq((1 B
.((B C
toDate((C I
,((I J
dbType((K Q
:((Q R
OracleMappingType((S d
.((d e
Date((e i
,((i j
	direction((k t
:((t u
ParameterDirection	((v à
.
((à â
Input
((â é
)
((é è
;
((è ê

parameters)) 
.)) 
Add)) 
()) 
name)) #
:))# $
$str))% 4
,))4 5
getLeaveReportReq))6 G
.))G H
statusId))H P
,))P Q
dbType))R X
:))X Y
OracleMappingType))Z k
.))k l
Int32))l q
,))q r
	direction))s |
:))| }
ParameterDirection	))~ ê
.
))ê ë
Input
))ë ñ
)
))ñ ó
;
))ó ò

parameters** 
.** 
Add** 
(** 
name** #
:**# $
$str**% 2
,**2 3
dbType**4 :
:**: ;
OracleMappingType**< M
.**M N
	RefCursor**N W
,**W X
	direction**Y b
:**b c
ParameterDirection**d v
.**v w
Output**w }
)**} ~
;**~ 

parameters++ 
.++ 
Add++ 
(++ 
name++ #
:++# $
$str++% 9
,++9 :
dbType++; A
:++A B
OracleMappingType++C T
.++T U
	RefCursor++U ^
,++^ _
	direction++` i
:++i j
ParameterDirection++k }
.++} ~
Output	++~ Ñ
)
++Ñ Ö
;
++Ö Ü

parameters,, 
.,, 
Add,, 
(,, 
name,, #
:,,# $
$str,,% 7
,,,7 8
dbType,,9 ?
:,,? @
OracleMappingType,,A R
.,,R S
	RefCursor,,S \
,,,\ ]
	direction,,^ g
:,,g h
ParameterDirection,,i {
.,,{ |
Output	,,| Ç
)
,,Ç É
;
,,É Ñ
var-- 
results-- 
=-- 
await-- #

connection--$ .
.--. /
QueryMultipleAsync--/ A
(--A B
DatabaseProcedures--B T
.--T U
SP_LEAVE_REPORT--U d
,--d e

parameters--f p
,--p q
commandType--r }
:--} ~
CommandType	-- ä
.
--ä ã
StoredProcedure
--ã ö
)
--ö õ
;
--õ ú
employeeLeaves.. 
=..  
results..! (
...( )
Read..) -
<..- .
LeaveDetailReport... ?
>..? @
(..@ A
)..A B
...B C
ToList..C I
(..I J
)..J K
;..K L
leaveWorkFlowReport// #
=//$ %
results//& -
.//- .
Read//. 2
<//2 3
LeaveWorkFlowReport//3 F
>//F G
(//G H
)//H I
.//I J
ToList//J P
(//P Q
)//Q R
;//R S"
leaveFileUploadReports00 &
=00' (
results00) 0
.000 1
Read001 5
<005 6"
LeaveFileUploadReports006 L
>00L M
(00M N
)00N O
.00O P
ToList00P V
(00V W
)00W X
;00X Y
foreach11 
(11 
var11 
item11 "
in11# %
employeeLeaves11& 4
)114 5
{22 
item33 
.33 
leaveWorkFlowReport33 ,
=33- .
leaveWorkFlowReport33/ B
.33B C
Where33C H
(33H I
x33I J
=>33K M
(33N O
x33O P
.33P Q
RLeaveId33Q Y
==33Z \
item33] a
.33a b
LeaveId33b i
)33i j
)33j k
.33k l
ToList33l r
(33r s
)33s t
;33t u
item44 
.44 "
leaveFileUploadReports44 /
=440 1"
leaveFileUploadReports442 H
.44H I
Where44I N
(44N O
x44O P
=>44Q S
(44T U
x44U V
.44V W
FLeaveId44W _
==44` b
item44c g
.44g h
LeaveId44h o
)44o p
)44p q
.44q r
ToList44r x
(44x y
)44y z
;44z {
}55 
}66 
return77 
employeeLeaves77 !
;77! "
}88 	
public99 
async99 
Task99 
<99 
List99 
<99 
LeaveDetailReport99 0
>990 1
>991 2
GetAllLeaves993 ?
(99? @
GetLeaveReportReq99@ Q
getLeaveReportReq99R c
)99c d
{:: 	
List;; 
<;; 
LeaveDetailReport;; "
>;;" #
employeeLeaves;;$ 2
=;;3 4
null;;5 9
;;;9 :
List== 
<== "
LeaveFileUploadReports== '
>==' ("
leaveFileUploadReports==) ?
===@ A
null==B F
;==F G
using?? 
(?? 
var?? 

connection?? !
=??" #
await??$ )
base??* .
.??. /
CreateConnection??/ ?
(??? @
DbSchema??@ H
.??H I
PORTAL??I O
)??O P
)??P Q
{@@ #
OracleDynamicParametersAA '

parametersAA( 2
=AA3 4
newAA5 8#
OracleDynamicParametersAA9 P
(AAP Q
)AAQ R
;AAR S

parametersBB 
.BB 
AddBB 
(BB 
nameBB #
:BB# $
$strBB% 3
,BB3 4
getLeaveReportReqBB5 F
.BBF G
pBranchSlnoBBG R
,BBR S
dbTypeBBT Z
:BBZ [
OracleMappingTypeBB\ m
.BBm n
Varchar2BBn v
,BBv w
	direction	BBx Å
:
BBÅ Ç 
ParameterDirection
BBÉ ï
.
BBï ñ
Input
BBñ õ
)
BBõ ú
;
BBú ù

parametersCC 
.CC 
AddCC 
(CC 
nameCC #
:CC# $
$strCC% 1
,CC1 2
getLeaveReportReqCC3 D
.CCD E
fromDateCCE M
,CCM N
dbTypeCCO U
:CCU V
OracleMappingTypeCCW h
.CCh i
DateCCi m
,CCm n
	directionCCo x
:CCx y
ParameterDirection	CCz å
.
CCå ç
Input
CCç í
)
CCí ì
;
CCì î

parametersDD 
.DD 
AddDD 
(DD 
nameDD #
:DD# $
$strDD% /
,DD/ 0
getLeaveReportReqDD1 B
.DDB C
toDateDDC I
,DDI J
dbTypeDDK Q
:DDQ R
OracleMappingTypeDDS d
.DDd e
DateDDe i
,DDi j
	directionDDk t
:DDt u
ParameterDirection	DDv à
.
DDà â
Input
DDâ é
)
DDé è
;
DDè ê

parametersEE 
.EE 
AddEE 
(EE 
nameEE #
:EE# $
$strEE% 4
,EE4 5
nullEE6 :
,EE: ;
dbTypeEE< B
:EEB C
OracleMappingTypeEED U
.EEU V
Int32EEV [
,EE[ \
	directionEE] f
:EEf g
ParameterDirectionEEh z
.EEz {
Input	EE{ Ä
)
EEÄ Å
;
EEÅ Ç

parametersFF 
.FF 
AddFF 
(FF 
nameFF #
:FF# $
$strFF% 2
,FF2 3
dbTypeFF4 :
:FF: ;
OracleMappingTypeFF< M
.FFM N
	RefCursorFFN W
,FFW X
	directionFFY b
:FFb c
ParameterDirectionFFd v
.FFv w
OutputFFw }
)FF} ~
;FF~ 

parametersGG 
.GG 
AddGG 
(GG 
nameGG #
:GG# $
$strGG% 9
,GG9 :
dbTypeGG; A
:GGA B
OracleMappingTypeGGC T
.GGT U
	RefCursorGGU ^
,GG^ _
	directionGG` i
:GGi j
ParameterDirectionGGk }
.GG} ~
Output	GG~ Ñ
)
GGÑ Ö
;
GGÖ Ü

parametersHH 
.HH 
AddHH 
(HH 
nameHH #
:HH# $
$strHH% 7
,HH7 8
dbTypeHH9 ?
:HH? @
OracleMappingTypeHHA R
.HHR S
	RefCursorHHS \
,HH\ ]
	directionHH^ g
:HHg h
ParameterDirectionHHi {
.HH{ |
Output	HH| Ç
)
HHÇ É
;
HHÉ Ñ
varII 
resultsII 
=II 
awaitII #

connectionII$ .
.II. /
QueryMultipleAsyncII/ A
(IIA B
DatabaseProceduresIIB T
.IIT U#
SP_GET_ALL_LEAVE_REPORTIIU l
,IIl m

parametersIIn x
,IIx y
commandType	IIz Ö
:
IIÖ Ü
CommandType
IIá í
.
IIí ì
StoredProcedure
IIì ¢
)
II¢ £
;
II£ §
employeeLeavesJJ 
=JJ  
resultsJJ! (
.JJ( )
ReadJJ) -
<JJ- .
LeaveDetailReportJJ. ?
>JJ? @
(JJ@ A
)JJA B
.JJB C
ToListJJC I
(JJI J
)JJJ K
;JJK L
}RR 
returnSS 
employeeLeavesSS !
;SS! "
}TT 	
publicVV 
asyncVV 
TaskVV 
<VV 
ListVV 
<VV 
AutoApprovalReportVV 1
>VV1 2
>VV2 3!
GetAutoApprovalReportVV4 I
(VVI J
GetLeaveReportReqVVJ [
getLeaveReportReqVV\ m
)VVm n
{WW 	
ListXX 
<XX 
AutoApprovalReportXX #
>XX# $
employeeLeavesXX% 3
=XX4 5
nullXX6 :
;XX: ;
usingZZ 
(ZZ 
varZZ 

connectionZZ !
=ZZ" #
awaitZZ$ )
baseZZ* .
.ZZ. /
CreateConnectionZZ/ ?
(ZZ? @
DbSchemaZZ@ H
.ZZH I
PORTALZZI O
)ZZO P
)ZZP Q
{[[ #
OracleDynamicParameters\\ '

parameters\\( 2
=\\3 4
new\\5 8#
OracleDynamicParameters\\9 P
(\\P Q
)\\Q R
;\\R S

parameters]] 
.]] 
Add]] 
(]] 
name]] #
:]]# $
$str]]% 3
,]]3 4
getLeaveReportReq]]5 F
.]]F G
pBranchSlno]]G R
,]]R S
dbType]]T Z
:]]Z [
OracleMappingType]]\ m
.]]m n
Varchar2]]n v
,]]v w
	direction	]]x Å
:
]]Å Ç 
ParameterDirection
]]É ï
.
]]ï ñ
Input
]]ñ õ
)
]]õ ú
;
]]ú ù

parameters^^ 
.^^ 
Add^^ 
(^^ 
name^^ #
:^^# $
$str^^% 1
,^^1 2
getLeaveReportReq^^3 D
.^^D E
fromDate^^E M
,^^M N
dbType^^O U
:^^U V
OracleMappingType^^W h
.^^h i
Date^^i m
,^^m n
	direction^^o x
:^^x y
ParameterDirection	^^z å
.
^^å ç
Input
^^ç í
)
^^í ì
;
^^ì î

parameters__ 
.__ 
Add__ 
(__ 
name__ #
:__# $
$str__% /
,__/ 0
getLeaveReportReq__1 B
.__B C
toDate__C I
,__I J
dbType__K Q
:__Q R
OracleMappingType__S d
.__d e
Date__e i
,__i j
	direction__k t
:__t u
ParameterDirection	__v à
.
__à â
Input
__â é
)
__é è
;
__è ê

parameters`` 
.`` 
Add`` 
(`` 
name`` #
:``# $
$str``% 4
,``4 5
getLeaveReportReq``6 G
.``G H
statusId``H P
,``P Q
dbType``R X
:``X Y
OracleMappingType``Z k
.``k l
Int32``l q
,``q r
	direction``s |
:``| }
ParameterDirection	``~ ê
.
``ê ë
Input
``ë ñ
)
``ñ ó
;
``ó ò

parametersaa 
.aa 
Addaa 
(aa 
nameaa #
:aa# $
$straa% :
,aa: ;
dbTypeaa< B
:aaB C
OracleMappingTypeaaD U
.aaU V
	RefCursoraaV _
,aa_ `
	directionaaa j
:aaj k
ParameterDirectionaal ~
.aa~ 
Output	aa Ö
)
aaÖ Ü
;
aaÜ á
varbb 
resultsbb 
=bb 
awaitbb #

connectionbb$ .
.bb. /
QueryMultipleAsyncbb/ A
(bbA B
DatabaseProceduresbbB T
.bbT U)
SP_AUTO_APPROVAL_LEAVE_REPORTbbU r
,bbr s

parametersbbt ~
,bb~ 
commandType
bbÄ ã
:
bbã å
CommandType
bbç ò
.
bbò ô
StoredProcedure
bbô ®
)
bb® ©
;
bb© ™
employeeLeavescc 
=cc  
resultscc! (
.cc( )
Readcc) -
<cc- .
AutoApprovalReportcc. @
>cc@ A
(ccA B
)ccB C
.ccC D
ToListccD J
(ccJ K
)ccK L
;ccL M
}dd 
returnee 
employeeLeavesee !
;ee! "
}ff 	
publichh 
asynchh 
Taskhh 
<hh 
Listhh 
<hh 
LeaveDetailReporthh 0
>hh0 1
>hh1 2 
GetLeaveTransactionshh3 G
(hhG H"
GetLeaveTransactionReqhhH ^"
getLeaveTransactionReqhh_ u
)hhu v
{ii 	
Listjj 
<jj 
LeaveDetailReportjj "
>jj" #
employeeLeavesjj$ 2
=jj3 4
nulljj5 9
;jj9 :
Listkk 
<kk 
LeaveWorkFlowReportkk $
>kk$ %
leaveWorkFlowReportkk& 9
=kk: ;
nullkk< @
;kk@ A
Listll 
<ll "
LeaveFileUploadReportsll '
>ll' ("
leaveFileUploadReportsll) ?
=ll@ A
nullllB F
;llF G
usingnn 
(nn 
varnn 

connectionnn !
=nn" #
awaitnn$ )
basenn* .
.nn. /
CreateConnectionnn/ ?
(nn? @
DbSchemann@ H
.nnH I
PORTALnnI O
)nnO P
)nnP Q
{oo #
OracleDynamicParameterspp '

parameterspp( 2
=pp3 4
newpp5 8#
OracleDynamicParameterspp9 P
(ppP Q
)ppQ R
;ppR S

parametersqq 
.qq 
Addqq 
(qq 
nameqq #
:qq# $
$strqq% 4
,qq4 5"
getLeaveTransactionReqqq6 L
.qqL M
employeeSLNoqqM Y
,qqY Z
dbTypeqq[ a
:qqa b
OracleMappingTypeqqc t
.qqt u
Varchar2qqu }
,qq} ~
	direction	qq à
:
qqà â 
ParameterDirection
qqä ú
.
qqú ù
Input
qqù ¢
)
qq¢ £
;
qq£ §

parametersrr 
.rr 
Addrr 
(rr 
namerr #
:rr# $
$strrr% =
,rr= >"
getLeaveTransactionReqrr? U
.rrU V 
reportingManagerSlnorrV j
,rrj k
dbTyperrl r
:rrr s
OracleMappingType	rrt Ö
.
rrÖ Ü
Varchar2
rrÜ é
,
rré è
	direction
rrê ô
:
rrô ö 
ParameterDirection
rrõ ≠
.
rr≠ Æ
Input
rrÆ ≥
)
rr≥ ¥
;
rr¥ µ

parametersss 
.ss 
Addss 
(ss 
namess #
:ss# $
$strss% 4
,ss4 5"
getLeaveTransactionReqss6 L
.ssL M
statusIdssM U
,ssU V
dbTypessW ]
:ss] ^
OracleMappingTypess_ p
.ssp q
Int32ssq v
,ssv w
	direction	ssx Å
:
ssÅ Ç 
ParameterDirection
ssÉ ï
.
ssï ñ
Input
ssñ õ
)
ssõ ú
;
ssú ù

parameterstt 
.tt 
Addtt 
(tt 
namett #
:tt# $
$strtt% 2
,tt2 3
dbTypett4 :
:tt: ;
OracleMappingTypett< M
.ttM N
	RefCursorttN W
,ttW X
	directionttY b
:ttb c
ParameterDirectionttd v
.ttv w
Outputttw }
)tt} ~
;tt~ 

parametersuu 
.uu 
Adduu 
(uu 
nameuu #
:uu# $
$struu% 9
,uu9 :
dbTypeuu; A
:uuA B
OracleMappingTypeuuC T
.uuT U
	RefCursoruuU ^
,uu^ _
	directionuu` i
:uui j
ParameterDirectionuuk }
.uu} ~
Output	uu~ Ñ
)
uuÑ Ö
;
uuÖ Ü

parametersvv 
.vv 
Addvv 
(vv 
namevv #
:vv# $
$strvv% 7
,vv7 8
dbTypevv9 ?
:vv? @
OracleMappingTypevvA R
.vvR S
	RefCursorvvS \
,vv\ ]
	directionvv^ g
:vvg h
ParameterDirectionvvi {
.vv{ |
Output	vv| Ç
)
vvÇ É
;
vvÉ Ñ
varww 
resultsww 
=ww 
awaitww #

connectionww$ .
.ww. /
QueryMultipleAsyncww/ A
(wwA B
DatabaseProcedureswwB T
.wwT U%
SP_GET_LEAVE_TRANSACTIONSwwU n
,wwn o

parameterswwp z
,wwz {
commandType	ww| á
:
wwá à
CommandType
wwâ î
.
wwî ï
StoredProcedure
wwï §
)
ww§ •
;
ww• ¶
employeeLeavesxx 
=xx  
resultsxx! (
.xx( )
Readxx) -
<xx- .
LeaveDetailReportxx. ?
>xx? @
(xx@ A
)xxA B
.xxB C
ToListxxC I
(xxI J
)xxJ K
;xxK L
leaveWorkFlowReportyy #
=yy$ %
resultsyy& -
.yy- .
Readyy. 2
<yy2 3
LeaveWorkFlowReportyy3 F
>yyF G
(yyG H
)yyH I
.yyI J
ToListyyJ P
(yyP Q
)yyQ R
;yyR S"
leaveFileUploadReportszz &
=zz' (
resultszz) 0
.zz0 1
Readzz1 5
<zz5 6"
LeaveFileUploadReportszz6 L
>zzL M
(zzM N
)zzN O
.zzO P
ToListzzP V
(zzV W
)zzW X
;zzX Y
foreach{{ 
({{ 
var{{ 
item{{ !
in{{" $
employeeLeaves{{% 3
){{3 4
{|| 
item}} 
.}} 
leaveWorkFlowReport}} ,
=}}- .
leaveWorkFlowReport}}/ B
.}}B C
Where}}C H
(}}H I
x}}I J
=>}}K M
(}}N O
x}}O P
.}}P Q
RLeaveId}}Q Y
==}}Z \
item}}] a
.}}a b
LeaveId}}b i
)}}i j
)}}j k
.}}k l
ToList}}l r
(}}r s
)}}s t
;}}t u
item~~ 
.~~ "
leaveFileUploadReports~~ /
=~~0 1"
leaveFileUploadReports~~2 H
.~~H I
Where~~I N
(~~N O
x~~O P
=>~~Q S
(~~T U
x~~U V
.~~V W
FLeaveId~~W _
==~~` b
item~~c g
.~~g h
LeaveId~~h o
)~~o p
)~~p q
.~~q r
ToList~~r x
(~~x y
)~~y z
;~~z {
} 
}
ÄÄ 
return
ÅÅ 
employeeLeaves
ÅÅ !
;
ÅÅ! "
}
ÇÇ 	
public
ÑÑ 
async
ÑÑ 
Task
ÑÑ 
<
ÑÑ 
List
ÑÑ 
<
ÑÑ .
 EmployeeVerificationDetailReport
ÑÑ ?
>
ÑÑ? @
>
ÑÑ@ A+
GetEmployeeVerificationReport
ÑÑB _
(
ÑÑ_ `+
EmployeeVerificationReportReq
ÑÑ` }
	reportReqÑÑ~ á
)ÑÑá à
{
ÖÖ 	
List
ÜÜ 
<
ÜÜ .
 EmployeeVerificationDetailReport
ÜÜ 1
>
ÜÜ1 2
reports
ÜÜ3 :
=
ÜÜ; <
null
ÜÜ= A
;
ÜÜA B
using
àà 
(
àà 
var
àà 

connection
àà !
=
àà" #
await
àà$ )
base
àà* .
.
àà. /
CreateConnection
àà/ ?
(
àà? @
DbSchema
àà@ H
.
ààH I
PORTAL
ààI O
)
ààO P
)
ààP Q
{
ââ %
OracleDynamicParameters
ää '

parameters
ää( 2
=
ää3 4
new
ää5 8%
OracleDynamicParameters
ää9 P
(
ääP Q
)
ääQ R
;
ääR S

parameters
ãã 
.
ãã 
Add
ãã 
(
ãã 
name
ãã #
:
ãã# $
$str
ãã% 3
,
ãã3 4
	reportReq
ãã5 >
.
ãã> ?
pBranchSlno
ãã? J
,
ããJ K
dbType
ããL R
:
ããR S
OracleMappingType
ããT e
.
ããe f
Varchar2
ããf n
,
ããn o
	direction
ããp y
:
ããy z!
ParameterDirectionãã{ ç
.ããç é
Inputããé ì
)ããì î
;ããî ï

parameters
åå 
.
åå 
Add
åå 
(
åå 
name
åå #
:
åå# $
$str
åå% 1
,
åå1 2
	reportReq
åå3 <
.
åå< =
fromDate
åå= E
,
ååE F
dbType
ååG M
:
ååM N
OracleMappingType
ååO `
.
åå` a
Date
ååa e
,
ååe f
	direction
ååg p
:
ååp q!
ParameterDirectionåår Ñ
.ååÑ Ö
InputååÖ ä
)ååä ã
;ååã å

parameters
çç 
.
çç 
Add
çç 
(
çç 
name
çç #
:
çç# $
$str
çç% /
,
çç/ 0
	reportReq
çç1 :
.
çç: ;
toDate
çç; A
,
ççA B
dbType
ççC I
:
ççI J
OracleMappingType
ççK \
.
çç\ ]
Date
çç] a
,
çça b
	direction
ççc l
:
ççl m!
ParameterDirectionççn Ä
.ççÄ Å
InputççÅ Ü
)ççÜ á
;ççá à

parameters
éé 
.
éé 
Add
éé 
(
éé 
name
éé #
:
éé# $
$str
éé% .
,
éé. /
dbType
éé0 6
:
éé6 7
OracleMappingType
éé8 I
.
ééI J
	RefCursor
ééJ S
,
ééS T
	direction
ééU ^
:
éé^ _ 
ParameterDirection
éé` r
.
éér s
Output
éés y
)
ééy z
;
ééz {
reports
èè 
=
èè 
(
èè 
await
èè  

connection
èè! +
.
èè+ ,

QueryAsync
èè, 6
<
èè6 7.
 EmployeeVerificationDetailReport
èè7 W
>
èèW X
(
èèX Y 
DatabaseProcedures
èèY k
.
èèk l)
SP_EMP_VERIFICATION_REPORTèèl Ü
,èèÜ á

parametersèèà í
,èèí ì
commandTypeèèî ü
:èèü †
CommandTypeèè° ¨
.èè¨ ≠
StoredProcedureèè≠ º
)èèº Ω
)èèΩ æ
.èèæ ø
ToListèèø ≈
(èè≈ ∆
)èè∆ «
;èè« »
}
êê 
return
ëë 
reports
ëë 
;
ëë 
}
íí 	
}
îî 
}ïï ¶î
fF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\LeaveManagement\LeaveEncashmentRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
LeaveManagement& 5
{ 
public 

class %
LeaveEncashmentRepository *
:+ ,
BaseRepository- ;
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public %
LeaveEncashmentRepository (
(( )
IConfiguration) 7
configuration8 E
)E F
:G H
baseI M
(M N
configurationN [
)[ \
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
LeaveEncashment .
>. /
>/ 0
GetLeaveEncashment1 C
(C D
intD G
employeeSlnoH T
)T U
{ 	
List   
<   
LeaveEncashment    
>    !

leavesInfo  " ,
=  - .
null  / 3
;  3 4
using!! 
(!! 
var!! 

connection!! !
=!!" #
await!!$ )
CreateConnection!!* :
(!!: ;
DbSchema!!; C
.!!C D
PORTAL!!D J
)!!J K
)!!K L
{"" #
OracleDynamicParameters## '

parameters##( 2
=##3 4
new##5 8#
OracleDynamicParameters##9 P
(##P Q
)##Q R
;##R S

parameters$$ 
.$$ 
Add$$ 
($$ 
name$$ #
:$$# $
$str$$% 4
,$$4 5
employeeSlno$$6 B
,$$B C
dbType$$D J
:$$J K
OracleMappingType$$L ]
.$$] ^
Int32$$^ c
,$$c d
	direction$$e n
:$$n o
ParameterDirection	$$p Ç
.
$$Ç É
Input
$$É à
)
$$à â
;
$$â ä

parameters%% 
.%% 
Add%% 
(%% 
name%% #
:%%# $
$str%%% .
,%%. /
dbType%%0 6
:%%6 7
OracleMappingType%%8 I
.%%I J
	RefCursor%%J S
,%%S T
	direction%%U ^
:%%^ _
ParameterDirection%%` r
.%%r s
Output%%s y
)%%y z
;%%z {

parameters&& 
.&& 
Add&& 
(&& 
name&& #
:&&# $
$str&&% /
,&&/ 0
dbType&&1 7
:&&7 8
OracleMappingType&&9 J
.&&J K
	RefCursor&&K T
,&&T U
	direction&&V _
:&&_ `
ParameterDirection&&a s
.&&s t
Output&&t z
)&&z {
;&&{ |
var)) 
results)) 
=)) 
await)) #

connection))$ .
.)). /
QueryMultipleAsync))/ A
())A B
DatabaseProcedures))B T
.))T U#
SP_GET_LEAVE_ENCASHMENT))U l
,))l m

parameters))n x
,))x y
commandType	))z Ö
:
))Ö Ü
CommandType
))á í
.
))í ì
StoredProcedure
))ì ¢
)
))¢ £
;
))£ §

leavesInfo** 
=** 
results** $
.**$ %
Read**% )
<**) *
LeaveEncashment*** 9
>**9 :
(**: ;
)**; <
.**< =
ToList**= C
(**C D
)**D E
;**E F
var++ 
encashmentWorkFlows++ '
=++( )
results++* 1
.++1 2
Read++2 6
<++6 7
EncashmentWorkFlow++7 I
>++I J
(++J K
)++K L
.++L M
ToList++M S
(++S T
)++T U
;++U V
foreach-- 
(-- 
var-- 
item-- !
in--" $

leavesInfo--% /
)--/ 0
{.. 
item// 
.// 
EncashmentWorkFlows// ,
=//- .
encashmentWorkFlows/// B
.//B C
Where//C H
(//H I
x//I J
=>//K M
x//N O
.//O P
EncashmentId//P \
==//] _
item//` d
.//d e
EncashmentId//e q
)//q r
.//r s
ToList//s y
(//y z
)//z {
;//{ |
}00 
}11 
return22 

leavesInfo22 
;22 
}33 	
public55 
async55 
Task55 
<55 
bool55 
>55 
SaveLeaveEncashment55  3
(553 4
LeaveEncashmentReq554 F&
employeeLeaveEncashmentReq55G a
)55a b
{66 	
bool77 
resp77 
=77 
false77 
;77 
int88 
updatedRecords88 
=88  
$num88! "
;88" #
bool99 
isSaveWorkFlow99 
=99  !
false99" '
;99' (
using;; 
(;; 
var;; 

connection;; !
=;;" #
await;;$ )
CreateConnection;;* :
(;;: ;
DbSchema;;; C
.;;C D
PORTAL;;D J
);;J K
);;K L
{<< 
WorkFlowType== 
leaveWorkFlowType== .
===/ 0
WorkFlowType==1 =
.=== >

Encashment==> H
;==H I
List>> 
<>> 
WorkFlowInformation>> (
>>>( )
mappedWorkflows>>* 9
=>>: ;
await>>< A"
GetEncashmentWorkFlows>>B X
(>>X Y&
employeeLeaveEncashmentReq>>Y s
.>>s t
EmployeeSlno	>>t Ä
,
>>Ä Å
leaveWorkFlowType
>>Ç ì
)
>>ì î
;
>>î ï
mappedWorkflows?? 
=??  !
mappedWorkflows??" 1
.??1 2
OrderBy??2 9
(??9 :
x??: ;
=>??< >
x??? @
.??@ A
StepMasterId??A M
)??M N
.??N O
ToList??O U
(??U V
)??V W
;??W X
WorkFlowInformation@@ #
workFlow@@$ ,
=@@- .
mappedWorkflows@@/ >
.@@> ?
FirstOrDefault@@? M
(@@M N
)@@N O
;@@O P
ifAA 
(AA 
workFlowAA 
!=AA 
nullAA  $
)AA$ %
{BB #
OracleDynamicParametersCC +

parametersCC, 6
=CC7 8
newCC9 <#
OracleDynamicParametersCC= T
(CCT U
)CCU V
;CCV W

parametersDD 
.DD 
AddDD "
(DD" #
nameDD# '
:DD' (
$strDD) 8
,DD8 9&
employeeLeaveEncashmentReqDD: T
.DDT U
EmployeeSlnoDDU a
,DDa b
dbTypeDDc i
:DDi j
OracleMappingTypeDDk |
.DD| }
Int32	DD} Ç
,
DDÇ É
	direction
DDÑ ç
:
DDç é 
ParameterDirection
DDè °
.
DD° ¢
Input
DD¢ ß
)
DDß ®
;
DD® ©

parametersEE 
.EE 
AddEE "
(EE" #
nameEE# '
:EE' (
$strEE) 7
,EE7 8&
employeeLeaveEncashmentReqEE9 S
.EES T

BranchSlnoEET ^
,EE^ _
dbTypeEE` f
:EEf g
OracleMappingTypeEEh y
.EEy z
Int32EEz 
,	EE Ä
	direction
EEÅ ä
:
EEä ã 
ParameterDirection
EEå û
.
EEû ü
Input
EEü §
)
EE§ •
;
EE• ¶

parametersFF 
.FF 
AddFF "
(FF" #
nameFF# '
:FF' (
$strFF) 4
,FF4 5&
employeeLeaveEncashmentReqFF6 P
.FFP Q
EmpSlnoFFQ X
,FFX Y
dbTypeFFZ `
:FF` a
OracleMappingTypeFFb s
.FFs t
Int32FFt y
,FFy z
	direction	FF{ Ñ
:
FFÑ Ö 
ParameterDirection
FFÜ ò
.
FFò ô
Input
FFô û
)
FFû ü
;
FFü †

parametersGG 
.GG 
AddGG "
(GG" #
nameGG# '
:GG' (
$strGG) 4
,GG4 5&
employeeLeaveEncashmentReqGG6 P
.GGP Q
UniqueNoGGQ Y
,GGY Z
dbTypeGG[ a
:GGa b
OracleMappingTypeGGc t
.GGt u
Int32GGu z
,GGz {
	direction	GG| Ö
:
GGÖ Ü 
ParameterDirection
GGá ô
.
GGô ö
Input
GGö ü
)
GGü †
;
GG† °

parametersHH 
.HH 
AddHH "
(HH" #
nameHH# '
:HH' (
$strHH) 3
,HH3 4&
employeeLeaveEncashmentReqHH5 O
.HHO P
FinSlnoHHP W
,HHW X
dbTypeHHY _
:HH_ `
OracleMappingTypeHHa r
.HHr s
Int32HHs x
,HHx y
	direction	HHz É
:
HHÉ Ñ 
ParameterDirection
HHÖ ó
.
HHó ò
Input
HHò ù
)
HHù û
;
HHû ü

parametersII 
.II 
AddII "
(II" #
nameII# '
:II' (
$strII) <
,II< =&
employeeLeaveEncashmentReqII> X
.IIX Y
TotalDaysTakenIIY g
,IIg h
dbTypeIIi o
:IIo p
OracleMappingType	IIq Ç
.
IIÇ É
Int32
IIÉ à
,
IIà â
	direction
IIä ì
:
IIì î 
ParameterDirection
IIï ß
.
IIß ®
Input
II® ≠
)
II≠ Æ
;
IIÆ Ø

parametersJJ 
.JJ 
AddJJ "
(JJ" #
nameJJ# '
:JJ' (
$strJJ) =
,JJ= >&
employeeLeaveEncashmentReqJJ? Y
.JJY Z
EncashmentAmountJJZ j
,JJj k
dbTypeJJl r
:JJr s
OracleMappingType	JJt Ö
.
JJÖ Ü
Decimal
JJÜ ç
,
JJç é
	direction
JJè ò
:
JJò ô 
ParameterDirection
JJö ¨
.
JJ¨ ≠
Input
JJ≠ ≤
)
JJ≤ ≥
;
JJ≥ ¥

parametersKK 
.KK 
AddKK "
(KK" #
nameKK# '
:KK' (
$strKK) :
,KK: ;&
employeeLeaveEncashmentReqKK< V
.KKV W
TaxbleAmountKKW c
,KKc d
dbTypeKKe k
:KKk l
OracleMappingTypeKKm ~
.KK~ 
Decimal	KK Ü
,
KKÜ á
	direction
KKà ë
:
KKë í 
ParameterDirection
KKì •
.
KK• ¶
Input
KK¶ ´
)
KK´ ¨
;
KK¨ ≠

parametersLL 
.LL 
AddLL "
(LL" #
nameLL# '
:LL' (
$strLL) 8
,LL8 9&
employeeLeaveEncashmentReqLL: T
.LLT U
TotalAmountLLU `
,LL` a
dbTypeLLb h
:LLh i
OracleMappingTypeLLj {
.LL{ |
Decimal	LL| É
,
LLÉ Ñ
	direction
LLÖ é
:
LLé è 
ParameterDirection
LLê ¢
.
LL¢ £
Input
LL£ ®
)
LL® ©
;
LL© ™

parametersMM 
.MM 
AddMM "
(MM" #
nameMM# '
:MM' (
$strMM) 3
,MM3 4&
employeeLeaveEncashmentReqMM5 O
.MMO P
RemarksMMP W
,MMW X
dbTypeMMY _
:MM_ `
OracleMappingTypeMMa r
.MMr s
Varchar2MMs {
,MM{ |
	direction	MM} Ü
:
MMÜ á 
ParameterDirection
MMà ö
.
MMö õ
Input
MMõ †
)
MM† °
;
MM° ¢

parametersOO 
.OO 
AddOO "
(OO" #
nameOO# '
:OO' (
$strOO) <
,OO< =
workFlowOO> F
.OOF G
WorkFlowTypeIdOOG U
,OOU V
dbTypeOOW ]
:OO] ^
OracleMappingTypeOO_ p
.OOp q
Int32OOq v
,OOv w
	direction	OOx Å
:
OOÅ Ç 
ParameterDirection
OOÉ ï
.
OOï ñ
Input
OOñ õ
)
OOõ ú
;
OOú ù

parametersPP 
.PP 
AddPP "
(PP" #
namePP# '
:PP' (
$strPP) 8
,PP8 9
workFlowPP: B
.PPB C

StepTypeIdPPC M
,PPM N
dbTypePPO U
:PPU V
OracleMappingTypePPW h
.PPh i
Int32PPi n
,PPn o
	directionPPp y
:PPy z
ParameterDirection	PP{ ç
.
PPç é
Input
PPé ì
)
PPì î
;
PPî ï

parametersQQ 
.QQ 
AddQQ "
(QQ" #
nameQQ# '
:QQ' (
$strQQ) :
,QQ: ;
workFlowQQ< D
.QQD E
StepMasterIdQQE Q
,QQQ R
dbTypeQQS Y
:QQY Z
OracleMappingTypeQQ[ l
.QQl m
Int32QQm r
,QQr s
	directionQQt }
:QQ} ~
ParameterDirection	QQ ë
.
QQë í
Input
QQí ó
)
QQó ò
;
QQò ô

parametersRR 
.RR 
AddRR "
(RR" #
nameRR# '
:RR' (
$strRR) ?
,RR? @
LeaveStatusNamesRRA Q
.RRQ R
PendingForApprovalRRR d
.RRd e
ToInt32OrDefaultRRe u
(RRu v
)RRv w
,RRw x
dbTypeRRy 
:	RR Ä
OracleMappingType
RRÅ í
.
RRí ì
Int32
RRì ò
,
RRò ô
	direction
RRö £
:
RR£ § 
ParameterDirection
RR• ∑
.
RR∑ ∏
Input
RR∏ Ω
)
RRΩ æ
;
RRæ ø

parametersSS 
.SS 
AddSS "
(SS" #
nameSS# '
:SS' (
$strSS) 7
,SS7 8
workFlowSS9 A
.SSA B"
Reporting_EmployeeSlnoSSB X
,SSX Y
dbTypeSSZ `
:SS` a
OracleMappingTypeSSb s
.SSs t
Int32SSt y
,SSy z
	direction	SS{ Ñ
:
SSÑ Ö 
ParameterDirection
SSÜ ò
.
SSò ô
Input
SSô û
)
SSû ü
;
SSü †

parametersTT 
.TT 
AddTT "
(TT" #
nameTT# '
:TT' (
$strTT) :
,TT: ;&
employeeLeaveEncashmentReqTT< V
.TTV W
EntitlementIdTTW d
,TTd e
dbTypeTTf l
:TTl m
OracleMappingTypeTTn 
.	TT Ä
Int32
TTÄ Ö
,
TTÖ Ü
	direction
TTá ê
:
TTê ë 
ParameterDirection
TTí §
.
TT§ •
Input
TT• ™
)
TT™ ´
;
TT´ ¨
updatedRecordsVV "
=VV# $
awaitVV% *

connectionVV+ 5
.VV5 6
ExecuteAsyncVV6 B
(VVB C
DatabaseProceduresVVC U
.VVU V&
SP_INSERT_LEAVE_ENCASHMENTVVV p
,VVp q

parametersVVr |
,VV| }
commandType	VV~ â
:
VVâ ä
CommandType
VVã ñ
.
VVñ ó
StoredProcedure
VVó ¶
)
VV¶ ß
;
VVß ®
}XX 
}ZZ 
resp[[ 
=[[ 
updatedRecords[[ !
*[[" #
-[[$ %
$num[[% &
>[[' (
$num[[) *
;[[* +
return\\ 
resp\\ 
;\\ 
}]] 	
public__ 
async__ 
Task__ 
<__ 
bool__ 
>__ !
DeleteLeaveEncashment__  5
(__5 6
DeleteEncashmentReq__6 I
deleteEncashmentReq__J ]
)__] ^
{`` 	
boolaa 
respaa 
=aa 
falseaa 
;aa 
intbb 
updatedRecordsbb 
=bb  
$numbb! "
;bb" #
usingcc 
(cc 
varcc 

connectioncc !
=cc" #
awaitcc$ )
CreateConnectioncc* :
(cc: ;
DbSchemacc; C
.ccC D
PORTALccD J
)ccJ K
)ccK L
{dd #
OracleDynamicParametersee '

parametersee( 2
=ee3 4
newee5 8#
OracleDynamicParametersee9 P
(eeP Q
)eeQ R
;eeR S

parametersff 
.ff 
Addff 
(ff 
nameff #
:ff# $
$strff% 5
,ff5 6
deleteEncashmentReqff7 J
.ffJ K
EncashmentIdffK W
,ffW X
dbTypeffY _
:ff_ `
OracleMappingTypeffa r
.ffr s
Int32ffs x
,ffx y
	direction	ffz É
:
ffÉ Ñ 
ParameterDirection
ffÖ ó
.
ffó ò
Input
ffò ù
)
ffù û
;
ffû ü

parametersgg 
.gg 
Addgg 
(gg 
namegg #
:gg# $
$strgg% 1
,gg1 2
deleteEncashmentReqgg3 F
.ggF G
	UpdatedByggG P
,ggP Q
dbTypeggR X
:ggX Y
OracleMappingTypeggZ k
.ggk l
Int32ggl q
,ggq r
	directionggs |
:gg| }
ParameterDirection	gg~ ê
.
ggê ë
Input
ggë ñ
)
ggñ ó
;
ggó ò

parametershh 
.hh 
Addhh 
(hh 
namehh #
:hh# $
$strhh% 6
,hh6 7
deleteEncashmentReqhh8 K
.hhK L
EntitlementIdhhL Y
,hhY Z
dbTypehh[ a
:hha b
OracleMappingTypehhc t
.hht u
Int32hhu z
,hhz {
	direction	hh| Ö
:
hhÖ Ü 
ParameterDirection
hhá ô
.
hhô ö
Input
hhö ü
)
hhü †
;
hh† °

parametersii 
.ii 
Addii 
(ii 
nameii #
:ii# $
$strii% 8
,ii8 9
deleteEncashmentReqii: M
.iiM N
TotalDaysTakeniiN \
,ii\ ]
dbTypeii^ d
:iid e
OracleMappingTypeiif w
.iiw x
Int32iix }
,ii} ~
	direction	ii à
:
iià â 
ParameterDirection
iiä ú
.
iiú ù
Input
iiù ¢
)
ii¢ £
;
ii£ §
updatedRecordskk 
=kk  
awaitkk! &

connectionkk' 1
.kk1 2
ExecuteAsynckk2 >
(kk> ?
DatabaseProcedureskk? Q
.kkQ R&
SP_DELETE_LEAVE_ENCASHMENTkkR l
,kkl m

parameterskkn x
,kkx y
commandType	kkz Ö
:
kkÖ Ü
CommandType
kká í
.
kkí ì
StoredProcedure
kkì ¢
)
kk¢ £
;
kk£ §
}ll 
respmm 
=mm 
updatedRecordsmm !
*mm" #
-mm$ %
$nummm% &
>mm' (
$nummm) *
;mm* +
returnnn 
respnn 
;nn 
}oo 	
publicpp 
asyncpp 
Taskpp 
<pp 
decimalpp !
>pp! "'
GetEmployeeTDSAmountDetailspp# >
(pp> ?#
EmployeeTDSMountDetailspp? V#
employeeTDSMountDetailsppW n
)ppn o
{qq 	
decimalrr 
	tdsAmountrr 
=rr 
$numrr  !
;rr! "#
EmployeeTDSMountDetailsss #
tdsEmployeeDetailsss$ 6
=ss7 8
nullss9 =
;ss= >
usingtt 
(tt 
vartt 

connectiontt !
=tt" #
awaittt$ )
basett* .
.tt. /
CreateConnectiontt/ ?
(tt? @
DbSchematt@ H
.ttH I
PORTALttI O
)ttO P
)ttP Q
{uu #
OracleDynamicParametersvv '
	parmetersvv( 1
=vv2 3
newvv4 7#
OracleDynamicParametersvv8 O
(vvO P
)vvP Q
;vvQ R
	parmetersww 
.ww 
Addww 
(ww 
nameww "
:ww" #
$strww$ /
,ww/ 0#
employeeTDSMountDetailsww1 H
.wwH I
EmpSlnowwI P
,wwP Q
dbTypewwR X
:wwX Y
OracleMappingTypewwZ k
.wwk l
Int32wwl q
,wwq r
	directionwws |
:ww| }
ParameterDirection	ww~ ê
.
wwê ë
Input
wwë ñ
)
wwñ ó
;
wwó ò
	parmetersxx 
.xx 
Addxx 
(xx 
namexx "
:xx" #
$strxx$ /
,xx/ 0#
employeeTDSMountDetailsxx1 H
.xxH I
UniquenoxxI Q
,xxQ R
dbTypexxS Y
:xxY Z
OracleMappingTypexx[ l
.xxl m
Int32xxm r
,xxr s
	directionxxt }
:xx} ~
ParameterDirection	xx ë
.
xxë í
Input
xxí ó
)
xxó ò
;
xxò ô
	parmetersyy 
.yy 
Addyy 
(yy 
nameyy "
:yy" #
$stryy$ 2
,yy2 3#
employeeTDSMountDetailsyy4 K
.yyK L

BranchSlnoyyL V
,yyV W
dbTypeyyX ^
:yy^ _
OracleMappingTypeyy` q
.yyq r
Int32yyr w
,yyw x
	direction	yyy Ç
:
yyÇ É 
ParameterDirection
yyÑ ñ
.
yyñ ó
Input
yyó ú
)
yyú ù
;
yyù û
	parmeterszz 
.zz 
Addzz 
(zz 
namezz "
:zz" #
$strzz$ .
,zz. /#
employeeTDSMountDetailszz0 G
.zzG H
FinSlnozzH O
,zzO P
dbTypezzQ W
:zzW X
OracleMappingTypezzY j
.zzj k
Int32zzk p
,zzp q
	directionzzr {
:zz{ |
ParameterDirection	zz} è
.
zzè ê
Input
zzê ï
)
zzï ñ
;
zzñ ó
	parmeters{{ 
.{{ 
Add{{ 
({{ 
name{{ "
:{{" #
$str{{$ 5
,{{5 6#
employeeTDSMountDetails{{7 N
.{{N O
AppliedAmount{{O \
,{{\ ]
dbType{{^ d
:{{d e
OracleMappingType{{f w
.{{w x
Int32{{x }
,{{} ~
	direction	{{ à
:
{{à â 
ParameterDirection
{{ä ú
.
{{ú ù
Input
{{ù ¢
)
{{¢ £
;
{{£ §
	parmeters}} 
.}} 
Add}} 
(}} 
name}} "
:}}" #
$str}}$ 1
,}}1 2
dbType}}3 9
:}}9 :
OracleMappingType}}; L
.}}L M
Decimal}}M T
,}}T U
	direction}}V _
:}}_ `
ParameterDirection}}a s
.}}s t
Output}}t z
)}}z {
;}}{ |
	tdsAmount~~ 
=~~ 
await~~ !

connection~~" ,
.~~, -
ExecuteScalarAsync~~- ?
<~~? @
decimal~~@ G
>~~G H
(~~H I
DatabaseProcedures~~I [
.~~[ \#
GET_EMPLOYEE_TDS_AMOUNT~~\ s
,~~s t
	parmeters~~u ~
,~~~ 
commandType
~~Ä ã
:
~~ã å
CommandType
~~ç ò
.
~~ò ô
StoredProcedure
~~ô ®
)
~~® ©
;
~~© ™
} 
return
ÅÅ 
	tdsAmount
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
async
ÑÑ 
Task
ÑÑ 
<
ÑÑ 
bool
ÑÑ 
>
ÑÑ ,
UpdateEmployeeEncashmentStatus
ÑÑ  >
(
ÑÑ> ?!
UpdateEncashmentReq
ÑÑ? R
leaveDetail
ÑÑS ^
)
ÑÑ^ _
{
ÖÖ 	
bool
ÜÜ 
resp
ÜÜ 
=
ÜÜ 
false
ÜÜ 
;
ÜÜ 
int
áá 
updatedRecords
áá 
=
áá  
$num
áá! "
;
áá" #
using
àà 
(
àà 
var
àà 

connection
àà !
=
àà" #
await
àà$ )
base
àà* .
.
àà. /
CreateConnection
àà/ ?
(
àà? @
DbSchema
àà@ H
.
ààH I
PORTAL
ààI O
)
ààO P
)
ààP Q
{
ââ %
OracleDynamicParameters
ää '
param
ää( -
=
ää. /
new
ää0 3
(
ää3 4
)
ää4 5
;
ää5 6
param
ãã 
.
ãã 
Add
ãã 
(
ãã 
name
ãã 
:
ãã 
$str
ãã  0
,
ãã0 1
leaveDetail
ãã2 =
.
ãã= >
EncashmentId
ãã> J
,
ããJ K
dbType
ããL R
:
ããR S
OracleMappingType
ããT e
.
ããe f
Int32
ããf k
,
ããk l
	direction
ããm v
:
ããv w!
ParameterDirectionããx ä
.ããä ã
Inputããã ê
)ããê ë
;ããë í
param
åå 
.
åå 
Add
åå 
(
åå 
name
åå 
:
åå 
$str
åå  1
,
åå1 2
leaveDetail
åå3 >
.
åå> ?
LeaveStatusId
åå? L
,
ååL M
dbType
ååN T
:
ååT U
OracleMappingType
ååV g
.
ååg h
Int32
ååh m
,
ååm n
	direction
ååo x
:
ååx y!
ParameterDirectionååz å
.ååå ç
Inputååç í
)ååí ì
;ååì î
param
çç 
.
çç 
Add
çç 
(
çç 
name
çç 
:
çç 
$str
çç  0
,
çç0 1
leaveDetail
çç2 =
.
çç= >
EmployeeSlno
çç> J
,
ççJ K
dbType
ççL R
:
ççR S
OracleMappingType
ççT e
.
ççe f
Int32
ççf k
,
ççk l
	direction
ççm v
:
ççv w!
ParameterDirectionççx ä
.ççä ã
Inputççã ê
)ççê ë
;ççë í
param
éé 
.
éé 
Add
éé 
(
éé 
name
éé 
:
éé 
$str
éé  3
,
éé3 4
leaveDetail
éé5 @
.
éé@ A
WorkFlowTypeId
ééA O
,
ééO P
dbType
ééQ W
:
ééW X
OracleMappingType
ééY j
.
ééj k
Int32
éék p
,
éép q
	direction
éér {
:
éé{ |!
ParameterDirectionéé} è
.ééè ê
Inputééê ï
)ééï ñ
;ééñ ó
param
èè 
.
èè 
Add
èè 
(
èè 
name
èè 
:
èè 
$str
èè  /
,
èè/ 0
leaveDetail
èè1 <
.
èè< =

StepTypeId
èè= G
,
èèG H
dbType
èèI O
:
èèO P
OracleMappingType
èèQ b
.
èèb c
Int32
èèc h
,
èèh i
	direction
èèj s
:
èès t!
ParameterDirectionèèu á
.èèá à
Inputèèà ç
)èèç é
;èèé è
param
êê 
.
êê 
Add
êê 
(
êê 
name
êê 
:
êê 
$str
êê  1
,
êê1 2
leaveDetail
êê3 >
.
êê> ?
StepMasterId
êê? K
,
êêK L
dbType
êêM S
:
êêS T
OracleMappingType
êêU f
.
êêf g
Int32
êêg l
,
êêl m
	direction
êên w
:
êêw x!
ParameterDirectionêêy ã
.êêã å
Inputêêå ë
)êêë í
;êêí ì
param
ëë 
.
ëë 
Add
ëë 
(
ëë 
name
ëë 
:
ëë 
$str
ëë  *
,
ëë* +
leaveDetail
ëë, 7
.
ëë7 8
ApprovedRemarks
ëë8 G
,
ëëG H
dbType
ëëI O
:
ëëO P
OracleMappingType
ëëQ b
.
ëëb c
Varchar2
ëëc k
,
ëëk l
	direction
ëëm v
:
ëëv w!
ParameterDirectionëëx ä
.ëëä ã
Inputëëã ê
)ëëê ë
;ëëë í
updatedRecords
ìì 
=
ìì  
await
ìì! &

connection
ìì' 1
.
ìì1 2
ExecuteAsync
ìì2 >
(
ìì> ? 
DatabaseProcedures
ìì? Q
.
ììQ R)
PROCESS_ENCASHMENT_WORKFLOW
ììR m
,
ììm n
param
ììo t
,
ììt u
commandTypeììv Å
:ììÅ Ç
CommandTypeììÉ é
.ììé è
StoredProcedureììè û
)ììû ü
;ììü †
resp
ïï 
=
ïï 
(
ïï 
updatedRecords
ïï &
*
ïï' (
-
ïï) *
$num
ïï* +
)
ïï+ ,
>
ïï- .
$num
ïï/ 0
;
ïï0 1
}
ññ 
return
òò 
resp
òò 
;
òò 
}
öö 	
private
úú 
async
úú 
Task
úú 
<
úú 
List
úú 
<
úú  !
WorkFlowInformation
úú  3
>
úú3 4
>
úú4 5$
GetEncashmentWorkFlows
úú6 L
(
úúL M
int
úúM P
employeeSlno
úúQ ]
,
úú] ^
WorkFlowType
úú_ k
leaveWorkFlowType
úúl }
)
úú} ~
{
ùù 	
List
ûû 
<
ûû !
WorkFlowInformation
ûû $
>
ûû$ %!
workFlowInformation
ûû& 9
=
ûû: ;
null
ûû< @
;
ûû@ A
using
üü 
(
üü 
var
üü 

connection
üü !
=
üü" #
await
üü$ )
base
üü* .
.
üü. /
CreateConnection
üü/ ?
(
üü? @
DbSchema
üü@ H
.
üüH I
PORTAL
üüI O
)
üüO P
)
üüP Q
{
†† %
OracleDynamicParameters
°° '

parameters
°°( 2
=
°°3 4
new
°°5 8%
OracleDynamicParameters
°°9 P
(
°°P Q
)
°°Q R
;
°°R S

parameters
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
name
¢¢ #
:
¢¢# $
$str
¢¢% 5
,
¢¢5 6
employeeSlno
¢¢7 C
,
¢¢C D
dbType
¢¢E K
:
¢¢K L
OracleMappingType
¢¢M ^
.
¢¢^ _
Int32
¢¢_ d
,
¢¢d e
	direction
¢¢f o
:
¢¢o p!
ParameterDirection¢¢q É
.¢¢É Ñ
Input¢¢Ñ â
)¢¢â ä
;¢¢ä ã

parameters
££ 
.
££ 
Add
££ 
(
££ 
name
££ #
:
££# $
$str
££% 8
,
££8 9
leaveWorkFlowType
££: K
.
££K L
ToInt32OrDefault
££L \
(
££\ ]
)
££] ^
,
££^ _
dbType
££` f
:
££f g
OracleMappingType
££h y
.
££y z
Int32
££z 
,££ Ä
	direction££Å ä
:££ä ã"
ParameterDirection££å û
.££û ü
Input££ü §
)££§ •
;££• ¶

parameters
§§ 
.
§§ 
Add
§§ 
(
§§ 
name
§§ #
:
§§# $
$str
§§% .
,
§§. /
dbType
§§0 6
:
§§6 7
OracleMappingType
§§8 I
.
§§I J
	RefCursor
§§J S
,
§§S T
	direction
§§U ^
:
§§^ _ 
ParameterDirection
§§` r
.
§§r s
Output
§§s y
)
§§y z
;
§§z {!
workFlowInformation
•• #
=
••$ %
(
••& '
await
••' ,

connection
••- 7
.
••7 8

QueryAsync
••8 B
<
••B C!
WorkFlowInformation
••C V
>
••V W
(
••W X 
DatabaseProcedures
••X j
.
••j k$
GET_EMPLOYEE_WORKFLOW••k Ä
,••Ä Å

parameters••Ç å
,••å ç
commandType••é ô
:••ô ö
CommandType••õ ¶
.••¶ ß
StoredProcedure••ß ∂
)••∂ ∑
)••∑ ∏
.••∏ π
ToList••π ø
(••ø ¿
)••¿ ¡
;••¡ ¬
}
ßß 
return
®® !
workFlowInformation
®® &
;
®®& '
}
©© 	
public
™™ 
async
™™ 
Task
™™ 
<
™™ 
List
™™ 
<
™™ -
LeaveEncashmentApprovalsDetails
™™ >
>
™™> ?
>
™™? @)
GetLeavesEncashmentApproval
™™A \
(
™™\ ]
int
™™] `
employeeSlno
™™a m
)
™™m n
{
´´ 	
List
¨¨ 
<
¨¨ -
LeaveEncashmentApprovalsDetails
¨¨ 0
>
¨¨0 1&
LeaveEncashmentApprovals
¨¨2 J
=
¨¨K L
null
¨¨M Q
;
¨¨Q R
using
≠≠ 
(
≠≠ 
var
≠≠ 

connection
≠≠ !
=
≠≠" #
await
≠≠$ )
base
≠≠* .
.
≠≠. /
CreateConnection
≠≠/ ?
(
≠≠? @
DbSchema
≠≠@ H
.
≠≠H I
PORTAL
≠≠I O
)
≠≠O P
)
≠≠P Q
{
ÆÆ %
OracleDynamicParameters
ØØ '

parameters
ØØ( 2
=
ØØ3 4
new
ØØ5 8%
OracleDynamicParameters
ØØ9 P
(
ØØP Q
)
ØØQ R
;
ØØR S

parameters
∞∞ 
.
∞∞ 
Add
∞∞ 
(
∞∞ 
name
∞∞ #
:
∞∞# $
$str
∞∞% 4
,
∞∞4 5
employeeSlno
∞∞6 B
,
∞∞B C
dbType
∞∞D J
:
∞∞J K
OracleMappingType
∞∞L ]
.
∞∞] ^
Int32
∞∞^ c
,
∞∞c d
	direction
∞∞e n
:
∞∞n o!
ParameterDirection∞∞p Ç
.∞∞Ç É
Input∞∞É à
)∞∞à â
;∞∞â ä

parameters
±± 
.
±± 
Add
±± 
(
±± 
name
±± #
:
±±# $
$str
±±% 7
,
±±7 8
LeaveStatusNames
±±9 I
.
±±I J 
PendingForApproval
±±J \
.
±±\ ]
ToInt32OrDefault
±±] m
(
±±m n
)
±±n o
,
±±o p
dbType
±±q w
:
±±w x 
OracleMappingType±±y ä
.±±ä ã
Int32±±ã ê
,±±ê ë
	direction±±í õ
:±±õ ú"
ParameterDirection±±ù Ø
.±±Ø ∞
Input±±∞ µ
)±±µ ∂
;±±∂ ∑

parameters
≤≤ 
.
≤≤ 
Add
≤≤ 
(
≤≤ 
name
≤≤ #
:
≤≤# $
$str
≤≤% .
,
≤≤. /
dbType
≤≤0 6
:
≤≤6 7
OracleMappingType
≤≤8 I
.
≤≤I J
	RefCursor
≤≤J S
,
≤≤S T
	direction
≤≤U ^
:
≤≤^ _ 
ParameterDirection
≤≤` r
.
≤≤r s
Output
≤≤s y
)
≤≤y z
;
≤≤z {&
LeaveEncashmentApprovals
≥≥ (
=
≥≥) *
(
≥≥+ ,
await
≥≥, 1

connection
≥≥2 <
.
≥≥< =

QueryAsync
≥≥= G
<
≥≥G H-
LeaveEncashmentApprovalsDetails
≥≥H g
>
≥≥g h
(
≥≥h i 
DatabaseProcedures
≥≥i {
.
≥≥{ |-
GET_LEAVES_ENCASHMENT_APPROVAL≥≥| ö
,≥≥ö õ

parameters≥≥ú ¶
,≥≥¶ ß
commandType≥≥® ≥
:≥≥≥ ¥
CommandType≥≥µ ¿
.≥≥¿ ¡
StoredProcedure≥≥¡ –
)≥≥– —
)≥≥— “
.≥≥“ ”
ToList≥≥” Ÿ
(≥≥Ÿ ⁄
)≥≥⁄ €
;≥≥€ ‹
}
¥¥ 
return
µµ &
LeaveEncashmentApprovals
µµ +
;
µµ+ ,
}
∂∂ 	
}
ﬂﬂ 
}‡‡ ó 
gF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\LeaveManagement\LeaveEntitlementRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
LeaveManagement& 5
{ 
public 

class &
LeaveEntitlementRepository +
:, -
BaseRepository. <
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public &
LeaveEntitlementRepository )
() *
IConfiguration* 8
configuration9 F
)F G
:H I
baseJ N
(N O
configurationO \
)\ ]
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
}   	
public"" 
async"" 
Task"" 
<"" 
List"" 
<"" 
LeaveEntitlement"" /
>""/ 0
>""0 1
GetLeaveEntitlement""2 E
(""E F*
GetEmployeeLeaveEntitlementReq""F d(
employeeLeaveEntitlementReq	""e Ä
)
""Ä Å
{## 	
List$$ 
<$$ 
LeaveEntitlement$$ !
>$$! "
entitlement$$# .
=$$/ 0
null$$1 5
;$$5 6
string%% 
BranchSlnotring%% "
=%%# $
string%%% +
.%%+ ,
Join%%, 0
(%%0 1
$str%%1 4
,%%4 5'
employeeLeaveEntitlementReq%%6 Q
.%%Q R

BranchSlno%%R \
)%%\ ]
;%%] ^
using&& 
(&& 
var&& 

connection&& !
=&&" #
await&&$ )
CreateConnection&&* :
(&&: ;
DbSchema&&; C
.&&C D
PORTAL&&D J
)&&J K
)&&K L
{'' #
OracleDynamicParameters(( '

parameters((( 2
=((3 4
new((5 8#
OracleDynamicParameters((9 P
(((P Q
)((Q R
;((R S

parameters)) 
.)) 
Add)) 
()) 
name)) #
:))# $
$str))% 8
,))8 9'
employeeLeaveEntitlementReq)): U
.))U V
OfficeTypeSlno))V d
,))d e
dbType))f l
:))l m
OracleMappingType))n 
.	)) Ä
Int32
))Ä Ö
,
))Ö Ü
	direction
))á ê
:
))ê ë 
ParameterDirection
))í §
.
))§ •
Input
))• ™
)
))™ ´
;
))´ ¨

parameters** 
.** 
Add** 
(** 
name** #
:**# $
$str**% 3
,**3 4'
employeeLeaveEntitlementReq**5 P
.**P Q

BranchSlno**Q [
.**[ \
ToArray**\ c
(**c d
)**d e
,**e f
dbType**g m
:**m n
OracleMappingType	**o Ä
.
**Ä Å
Int32
**Å Ü
,
**Ü á
	direction
**à ë
:
**ë í 
ParameterDirection
**ì •
.
**• ¶
Input
**¶ ´
,
**´ ¨)
employeeLeaveEntitlementReq
**≠ »
.
**» …

BranchSlno
**… ”
.
**” ‘
Count
**‘ Ÿ
,
**Ÿ ⁄
collectionType++ "
:++" #'
OracleMappingCollectionType++$ ?
.++? @!
PLSQLAssociativeArray++@ U
)++U V
;++V W

parameters,, 
.,, 
Add,, 
(,, 
name,, #
:,,# $
$str,,% 5
,,,5 6'
employeeLeaveEntitlementReq,,7 R
.,,R S
LeaveTypeId,,S ^
,,,^ _
dbType,,` f
:,,f g
OracleMappingType,,h y
.,,y z
Int32,,z 
,	,, Ä
	direction
,,Å ä
:
,,ä ã 
ParameterDirection
,,å û
.
,,û ü
Input
,,ü §
)
,,§ •
;
,,• ¶

parameters-- 
.-- 
Add-- 
(-- 
name-- #
:--# $
$str--% .
,--. /
dbType--0 6
:--6 7
OracleMappingType--8 I
.--I J
	RefCursor--J S
,--S T
	direction--U ^
:--^ _
ParameterDirection--` r
.--r s
Output--s y
)--y z
;--z {
entitlement.. 
=.. 
(.. 
await.. $

connection..% /
.../ 0

QueryAsync..0 :
<..: ;
LeaveEntitlement..; K
>..K L
(..L M
DatabaseProcedures..M _
..._ `$
SP_GET_LEAVE_ENTITLEMENT..` x
,..x y

parameters	..z Ñ
,
..Ñ Ö
commandType
..Ü ë
:
..ë í
CommandType
..ì û
.
..û ü
StoredProcedure
..ü Æ
)
..Æ Ø
)
..Ø ∞
.
..∞ ±
ToList
..± ∑
(
..∑ ∏
)
..∏ π
;
..π ∫
entitlement// 
=// 
entitlement// )
.//) *
OrderByDescending//* ;
(//; <
x//< =
=>//> @
x//A B
.//B C
EmpId//C H
)//H I
.//I J
ToList//J P
(//P Q
)//Q R
;//R S
}00 
return11 
entitlement11 
;11 
}22 	
public33 
async33 
Task33 
<33 
bool33 
>33 "
UpdateLeaveEntitlement33  6
(336 7
List337 ;
<33; <
LeaveEntitlement33< L
>33L M
leaveEntitlements33N _
)33_ `
{44 	
bool55 
resp55 
=55 
false55 
;55 
int66 
updatedRecords66 
=66  
$num66! "
;66" #
List77 
<77 
LeaveEntitlement77 !
>77! " 
oldLeaveEntitlements77# 7
=778 9
null77: >
;77> ?
List88 
<88 
LeaveEntitlement88 !
>88! " 
newleaveEntitlements88# 7
=888 9
null88: >
;88> ?#
OracleDynamicParameters99 #

parameters99$ .
=99/ 0
null991 5
;995 6
foreach;; 
(;; 
var;; 
item;; 
in;;  
leaveEntitlements;;! 2
);;2 3
{<< 
item== 
.== 

RowVersion== 
===  !
Guid==" &
.==& '
NewGuid==' .
(==. /
)==/ 0
.==0 1
ToString==1 9
(==9 :
)==: ;
;==; <
}AA 
usingDD 
(DD 
varDD 

connectionDD !
=DD" #
awaitDD$ )
CreateConnectionDD* :
(DD: ;
DbSchemaDD; C
.DDC D
PORTALDDD J
)DDJ K
)DDK L
{EE 

parametersFF 
=FF 
newFF  #
OracleDynamicParametersFF! 8
(FF8 9
)FF9 :
;FF: ;

parametersGG 
.GG 
AddGG 
(GG 
nameGG #
:GG# $
$strGG% E
,GGE F
leaveEntitlementsGGG X
.GGX Y
SelectGGY _
(GG_ `
xGG` a
=>GGa c
xGGc d
.GGd e&
EmployeeLeaveEntitlementIdGGe 
)	GG Ä
.
GGÄ Å
ToArray
GGÅ à
(
GGà â
)
GGâ ä
,
GGä ã
dbType
GGå í
:
GGí ì
OracleMappingType
GGî •
.
GG• ¶
Int32
GG¶ ´
,
GG´ ¨
	direction
GG≠ ∂
:
GG∂ ∑ 
ParameterDirection
GG∏  
.
GG  À
Input
GGÀ –
,
GG– —
leaveEntitlements
GG“ „
.
GG„ ‰
Select
GG‰ Í
(
GGÍ Î
x
GGÎ Ï
=>
GGÌ Ô
x
GG Ò
.
GGÒ Ú(
EmployeeLeaveEntitlementId
GGÚ å
)
GGå ç
.
GGç é
Count
GGé ì
(
GGì î
)
GGî ï
,
GGï ñ
collectionTypeHH "
:HH" #'
OracleMappingCollectionTypeHH$ ?
.HH? @!
PLSQLAssociativeArrayHH@ U
)HHU V
;HHV W

parametersII 
.II 
AddII 
(II 
nameII #
:II# $
$strII% 4
,II4 5
leaveEntitlementsII6 G
.IIG H
SelectIIH N
(IIN O
xIIO P
=>IIQ S
xIIT U
.IIU V
EmployeeSlnoIIV b
)IIb c
.IIc d
ToArrayIId k
(IIk l
)IIl m
,IIm n
dbTypeIIo u
:IIu v
OracleMappingType	IIw à
.
IIà â
Int32
IIâ é
,
IIé è
	direction
IIê ô
:
IIô ö 
ParameterDirection
IIõ ≠
.
II≠ Æ
Input
IIÆ ≥
,
II≥ ¥
leaveEntitlements
IIµ ∆
.
II∆ «
Select
II« Õ
(
IIÕ Œ
x
IIŒ œ
=>
II– “
x
II” ‘
.
II‘ ’(
EmployeeLeaveEntitlementId
II’ Ô
)
IIÔ 
.
II Ò
Count
IIÒ ˆ
(
IIˆ ˜
)
II˜ ¯
,
II¯ ˘
collectionTypeJJ "
:JJ" #'
OracleMappingCollectionTypeJJ$ ?
.JJ? @!
PLSQLAssociativeArrayJJ@ U
)JJU V
;JJV W

parametersKK 
.KK 
AddKK 
(KK 
nameKK #
:KK# $
$strKK% <
,KK< =
leaveEntitlementsKK> O
.KKO P
SelectKKP V
(KKV W
xKKW X
=>KKY [
xKK\ ]
.KK] ^
LeaveInformationIdKK^ p
)KKp q
.KKq r
ToArrayKKr y
(KKy z
)KKz {
,KK{ |
dbType	KK} É
:
KKÉ Ñ
OracleMappingType
KKÖ ñ
.
KKñ ó
Int32
KKó ú
,
KKú ù
	direction
KKû ß
:
KKß ® 
ParameterDirection
KK© ª
.
KKª º
Input
KKº ¡
,
KK¡ ¬
leaveEntitlements
KK√ ‘
.
KK‘ ’
Select
KK’ €
(
KK€ ‹
x
KK‹ ›
=>
KKﬁ ‡
x
KK· ‚
.
KK‚ „(
EmployeeLeaveEntitlementId
KK„ ˝
)
KK˝ ˛
.
KK˛ ˇ
Count
KKˇ Ñ
(
KKÑ Ö
)
KKÖ Ü
,
KKÜ á
collectionTypeLL "
:LL" #'
OracleMappingCollectionTypeLL$ ?
.LL? @!
PLSQLAssociativeArrayLL@ U
)LLU V
;LLV W

parametersMM 
.MM 
AddMM 
(MM 
nameMM #
:MM# $
$strMM% 5
,MM5 6
leaveEntitlementsMM7 H
.MMH I
SelectMMI O
(MMO P
xMMP Q
=>MMR T
xMMU V
.MMV W
	LeaveYearMMW `
)MM` a
.MMa b
ToArrayMMb i
(MMi j
)MMj k
,MMk l
dbTypeMMm s
:MMs t
OracleMappingType	MMu Ü
.
MMÜ á
Int32
MMá å
,
MMå ç
	direction
MMé ó
:
MMó ò 
ParameterDirection
MMô ´
.
MM´ ¨
Input
MM¨ ±
,
MM± ≤
leaveEntitlements
MM≥ ƒ
.
MMƒ ≈
Select
MM≈ À
(
MMÀ Ã
x
MMÃ Õ
=>
MMŒ –
x
MM— “
.
MM“ ”(
EmployeeLeaveEntitlementId
MM” Ì
)
MMÌ Ó
.
MMÓ Ô
Count
MMÔ Ù
(
MMÙ ı
)
MMı ˆ
,
MMˆ ˜
collectionTypeNN "
:NN" #'
OracleMappingCollectionTypeNN$ ?
.NN? @!
PLSQLAssociativeArrayNN@ U
)NNU V
;NNV W

parametersOO 
.OO 
AddOO 
(OO 
nameOO #
:OO# $
$strOO% 7
,OO7 8
leaveEntitlementsOO9 J
.OOJ K
SelectOOK Q
(OOQ R
xOOR S
=>OOT V
xOOW X
.OOX Y
DateValidFromOOY f
)OOf g
.OOg h
ToArrayOOh o
(OOo p
)OOp q
,OOq r
dbTypeOOs y
:OOy z
OracleMappingType	OO{ å
.
OOå ç
Date
OOç ë
,
OOë í
	direction
OOì ú
:
OOú ù 
ParameterDirection
OOû ∞
.
OO∞ ±
Input
OO± ∂
,
OO∂ ∑
leaveEntitlements
OO∏ …
.
OO…  
Select
OO  –
(
OO– —
x
OO— “
=>
OO” ’
x
OO÷ ◊
.
OO◊ ÿ(
EmployeeLeaveEntitlementId
OOÿ Ú
)
OOÚ Û
.
OOÛ Ù
Count
OOÙ ˘
(
OO˘ ˙
)
OO˙ ˚
,
OO˚ ¸
collectionTypePP "
:PP" #'
OracleMappingCollectionTypePP$ ?
.PP? @!
PLSQLAssociativeArrayPP@ U
)PPU V
;PPV W

parametersQQ 
.QQ 
AddQQ 
(QQ 
nameQQ #
:QQ# $
$strQQ% 8
,QQ8 9
leaveEntitlementsQQ: K
.QQK L
SelectQQL R
(QQR S
xQQS T
=>QQU W
xQQX Y
.QQY Z
DateValidUntilQQZ h
)QQh i
.QQi j
ToArrayQQj q
(QQq r
)QQr s
,QQs t
dbTypeQQu {
:QQ{ |
OracleMappingType	QQ} é
.
QQé è
Date
QQè ì
,
QQì î
	direction
QQï û
:
QQû ü 
ParameterDirection
QQ† ≤
.
QQ≤ ≥
Input
QQ≥ ∏
,
QQ∏ π
leaveEntitlements
QQ∫ À
.
QQÀ Ã
Select
QQÃ “
(
QQ“ ”
x
QQ” ‘
=>
QQ’ ◊
x
QQÿ Ÿ
.
QQŸ ⁄(
EmployeeLeaveEntitlementId
QQ⁄ Ù
)
QQÙ ı
.
QQı ˆ
Count
QQˆ ˚
(
QQ˚ ¸
)
QQ¸ ˝
,
QQ˝ ˛
collectionTypeRR "
:RR" #'
OracleMappingCollectionTypeRR$ ?
.RR? @!
PLSQLAssociativeArrayRR@ U
)RRU V
;RRV W

parametersSS 
.SS 
AddSS 
(SS 
nameSS #
:SS# $
$strSS% 4
,SS4 5
leaveEntitlementsSS6 G
.SSG H
SelectSSH N
(SSN O
xSSO P
=>SSQ S
xSST U
.SSU V
TotalLeavesSSV a
)SSa b
.SSb c
ToArraySSc j
(SSj k
)SSk l
,SSl m
dbTypeSSn t
:SSt u
OracleMappingType	SSv á
.
SSá à
Decimal
SSà è
,
SSè ê
	direction
SSë ö
:
SSö õ 
ParameterDirection
SSú Æ
.
SSÆ Ø
Input
SSØ ¥
,
SS¥ µ
leaveEntitlements
SS∂ «
.
SS« »
Select
SS» Œ
(
SSŒ œ
x
SSœ –
=>
SS— ”
x
SS‘ ’
.
SS’ ÷(
EmployeeLeaveEntitlementId
SS÷ 
)
SS Ò
.
SSÒ Ú
Count
SSÚ ˜
(
SS˜ ¯
)
SS¯ ˘
,
SS˘ ˙
collectionTypeTT "
:TT" #'
OracleMappingCollectionTypeTT$ ?
.TT? @!
PLSQLAssociativeArrayTT@ U
)TTU V
;TTV W

parametersUU 
.UU 
AddUU 
(UU 
nameUU #
:UU# $
$strUU% 7
,UU7 8
leaveEntitlementsUU9 J
.UUJ K
SelectUUK Q
(UUQ R
xUUR S
=>UUT V
xUUW X
.UUX Y
ConsumedLeavesUUY g
)UUg h
.UUh i
ToArrayUUi p
(UUp q
)UUq r
,UUr s
dbTypeUUt z
:UUz {
OracleMappingType	UU| ç
.
UUç é
Decimal
UUé ï
,
UUï ñ
	direction
UUó †
:
UU† ° 
ParameterDirection
UU¢ ¥
.
UU¥ µ
Input
UUµ ∫
,
UU∫ ª
leaveEntitlements
UUº Õ
.
UUÕ Œ
Select
UUŒ ‘
(
UU‘ ’
x
UU’ ÷
=>
UU◊ Ÿ
x
UU⁄ €
.
UU€ ‹(
EmployeeLeaveEntitlementId
UU‹ ˆ
)
UUˆ ˜
.
UU˜ ¯
Count
UU¯ ˝
(
UU˝ ˛
)
UU˛ ˇ
,
UUˇ Ä
collectionTypeVV "
:VV" #'
OracleMappingCollectionTypeVV$ ?
.VV? @!
PLSQLAssociativeArrayVV@ U
)VVU V
;VVV W

parametersWW 
.WW 
AddWW 
(WW 
nameWW #
:WW# $
$strWW% 3
,WW3 4
leaveEntitlementsWW5 F
.WWF G
SelectWWG M
(WWM N
xWWN O
=>WWP R
xWWS T
.WWT U

RowVersionWWU _
)WW_ `
.WW` a
ToArrayWWa h
(WWh i
)WWi j
,WWj k
dbTypeWWl r
:WWr s
OracleMappingType	WWt Ö
.
WWÖ Ü
Varchar2
WWÜ é
,
WWé è
	direction
WWê ô
:
WWô ö 
ParameterDirection
WWõ ≠
.
WW≠ Æ
Input
WWÆ ≥
,
WW≥ ¥
leaveEntitlements
WWµ ∆
.
WW∆ «
Select
WW« Õ
(
WWÕ Œ
x
WWŒ œ
=>
WW– “
x
WW” ‘
.
WW‘ ’(
EmployeeLeaveEntitlementId
WW’ Ô
)
WWÔ 
.
WW Ò
Count
WWÒ ˆ
(
WWˆ ˜
)
WW˜ ¯
,
WW¯ ˘
collectionTypeXX "
:XX" #'
OracleMappingCollectionTypeXX$ ?
.XX? @!
PLSQLAssociativeArrayXX@ U
)XXU V
;XXV W

parametersYY 
.YY 
AddYY 
(YY 
nameYY #
:YY# $
$strYY% 2
,YY2 3
leaveEntitlementsYY4 E
.YYE F
SelectYYF L
(YYL M
xYYM N
=>YYO Q
xYYR S
.YYS T
	CreatedByYYT ]
)YY] ^
.YY^ _
ToArrayYY_ f
(YYf g
)YYg h
,YYh i
dbTypeYYj p
:YYp q
OracleMappingType	YYr É
.
YYÉ Ñ
Int32
YYÑ â
,
YYâ ä
	direction
YYã î
:
YYî ï 
ParameterDirection
YYñ ®
.
YY® ©
Input
YY© Æ
,
YYÆ Ø
leaveEntitlements
YY∞ ¡
.
YY¡ ¬
Select
YY¬ »
(
YY» …
x
YY…  
=>
YYÀ Õ
x
YYŒ œ
.
YYœ –(
EmployeeLeaveEntitlementId
YY– Í
)
YYÍ Î
.
YYÎ Ï
Count
YYÏ Ò
(
YYÒ Ú
)
YYÚ Û
,
YYÛ Ù
collectionTypeZZ "
:ZZ" #'
OracleMappingCollectionTypeZZ$ ?
.ZZ? @!
PLSQLAssociativeArrayZZ@ U
)ZZU V
;ZZV W

parametersaa 
.aa 
Addaa 
(aa 
nameaa #
:aa# $
$straa% 8
,aa8 9
leaveEntitlementsaa: K
.aaK L
SelectaaL R
(aaR S
xaaS T
=>aaU W
xaaX Y
.aaY Z
OriTotalLeavesaaZ h
)aah i
.aai j
ToArrayaaj q
(aaq r
)aar s
,aas t
dbTypeaau {
:aa{ |
OracleMappingType	aa} é
.
aaé è
Int32
aaè î
,
aaî ï
	direction
aañ ü
:
aaü † 
ParameterDirection
aa° ≥
.
aa≥ ¥
Input
aa¥ π
,
aaπ ∫
leaveEntitlements
aaª Ã
.
aaÃ Õ
Select
aaÕ ”
(
aa” ‘
x
aa‘ ’
=>
aa÷ ÿ
x
aaŸ ⁄
.
aa⁄ €(
EmployeeLeaveEntitlementId
aa€ ı
)
aaı ˆ
.
aaˆ ˜
Count
aa˜ ¸
(
aa¸ ˝
)
aa˝ ˛
,
aa˛ ˇ
collectionTypebb "
:bb" #'
OracleMappingCollectionTypebb$ ?
.bb? @!
PLSQLAssociativeArraybb@ U
)bbU V
;bbV W
updatedRecordscc 
=cc  
awaitcc! &

connectioncc' 1
.cc1 2
ExecuteAsynccc2 >
(cc> ?
DatabaseProcedurescc? Q
.ccQ R%
SP_SAVE_LEAVE_ENTITLEMENTccR k
,cck l

parametersccm w
,ccw x
commandType	ccy Ñ
:
ccÑ Ö
CommandType
ccÜ ë
.
ccë í
StoredProcedure
ccí °
)
cc° ¢
;
cc¢ £
}dd 
respee 
=ee 
updatedRecordsee !
*ee" #
-ee$ %
$numee% &
>ee' (
$numee) *
;ee* +
returnff 
respff 
;ff 
}gg 	
publicii 
asyncii 
Taskii 
<ii 
boolii 
>ii  
SaveLeaveEntitlementii  4
(ii4 5
Listii5 9
<ii9 :
LeaveEntitlementii: J
>iiJ K
leaveEntitlementsiiL ]
)ii] ^
{jj 	
boolkk 
respkk 
=kk 
falsekk 
;kk 
intll 
updatedRecordsll 
=ll  
$numll! "
;ll" #
Listmm 
<mm 
LeaveEntitlementmm !
>mm! " 
oldLeaveEntitlementsmm# 7
=mm8 9
nullmm: >
;mm> ?
Listnn 
<nn 
LeaveEntitlementnn !
>nn! " 
newleaveEntitlementsnn# 7
=nn8 9
nullnn: >
;nn> ?#
OracleDynamicParametersoo #

parametersoo$ .
=oo/ 0
newoo1 4#
OracleDynamicParametersoo5 L
(ooL M
)ooM N
;ooN O 
oldLeaveEntitlementspp  
=pp! "
leaveEntitlementspp# 4
.pp4 5
Wherepp5 :
(pp: ;
xpp; <
=>pp= ?
xpp@ A
.ppA B&
EmployeeLeaveEntitlementIdppB \
!=pp] _
$numpp` a
)ppa b
.ppb c
ToListppc i
(ppi j
)ppj k
;ppk l 
newleaveEntitlementsqq  
=qq! "
leaveEntitlementsqq# 4
.qq4 5
Whereqq5 :
(qq: ;
xqq; <
=>qq= ?
xqq@ A
.qqA B&
EmployeeLeaveEntitlementIdqqB \
==qq] _
$numqq` a
)qqa b
.qqb c
ToListqqc i
(qqi j
)qqj k
;qqk l
usingrr 
(rr 
varrr 

connectionrr !
=rr" #
awaitrr$ )
CreateConnectionrr* :
(rr: ;
DbSchemarr; C
.rrC D
PORTALrrD J
)rrJ K
)rrK L
{ss 
}
ÑÑ 
resp
ÖÖ 
=
ÖÖ 
updatedRecords
ÖÖ !
*
ÖÖ" #
-
ÖÖ$ %
$num
ÖÖ% &
>
ÖÖ' (
$num
ÖÖ) *
;
ÖÖ* +
return
ÜÜ 
resp
ÜÜ 
;
ÜÜ 
}
áá 	
public
ââ 
async
ââ 
Task
ââ 
<
ââ 
bool
ââ 
>
ââ $
DeleteLeaveEntitlement
ââ  6
(
ââ6 7/
!DeleteEmployeeLeaveEntitlementReq
ââ7 X/
!deleteEmployeeLeaveEntitlementReq
ââY z
)
ââz {
{
ää 	
bool
ãã 
resp
ãã 
=
ãã 
false
ãã 
;
ãã 
int
åå 
updatedRecords
åå 
=
åå  
$num
åå! "
;
åå" #
using
çç 
(
çç 
var
çç 

connection
çç !
=
çç" #
await
çç$ )
CreateConnection
çç* :
(
çç: ;
DbSchema
çç; C
.
ççC D
PORTAL
ççD J
)
ççJ K
)
ççK L
{
éé %
OracleDynamicParameters
èè '

parameters
èè( 2
=
èè3 4
new
èè5 8%
OracleDynamicParameters
èè9 P
(
èèP Q
)
èèQ R
;
èèR S

parameters
êê 
.
êê 
Add
êê 
(
êê 
name
êê #
:
êê# $
$str
êê% E
,
êêE F/
!deleteEmployeeLeaveEntitlementReq
êêG h
.
êêh i)
EmployeeLeaveEntitlementIdêêi É
,êêÉ Ñ
dbTypeêêÖ ã
:êêã å!
OracleMappingTypeêêç û
.êêû ü
Int32êêü §
,êê§ •
	directionêê¶ Ø
:êêØ ∞"
ParameterDirectionêê± √
.êê√ ƒ
Inputêêƒ …
)êê…  
;êê  À

parameters
ëë 
.
ëë 
Add
ëë 
(
ëë 
name
ëë #
:
ëë# $
$str
ëë% 1
,
ëë1 2/
!deleteEmployeeLeaveEntitlementReq
ëë3 T
.
ëëT U
	UpdatedBy
ëëU ^
,
ëë^ _
dbType
ëë` f
:
ëëf g
OracleMappingType
ëëh y
.
ëëy z
Int32
ëëz 
,ëë Ä
	directionëëÅ ä
:ëëä ã"
ParameterDirectionëëå û
.ëëû ü
Inputëëü §
)ëë§ •
;ëë• ¶

parameters
íí 
.
íí 
Add
íí 
(
íí 
name
íí #
:
íí# $
$str
íí% 4
,
íí4 5/
!deleteEmployeeLeaveEntitlementReq
íí6 W
.
ííW X
EmployeeSlno
ííX d
,
ííd e
dbType
ííf l
:
ííl m
OracleMappingType
íín 
.íí Ä
Int32ííÄ Ö
,ííÖ Ü
	directionííá ê
:ííê ë"
ParameterDirectionííí §
.íí§ •
Inputíí• ™
)íí™ ´
;íí´ ¨
updatedRecords
îî 
=
îî  
await
îî! &

connection
îî' 1
.
îî1 2
ExecuteAsync
îî2 >
(
îî> ? 
DatabaseProcedures
îî? Q
.
îîQ R)
SP_DELETE_LEAVE_ENTITLEMENT
îîR m
,
îîm n

parameters
îîo y
,
îîy z
commandTypeîî{ Ü
:îîÜ á
CommandTypeîîà ì
.îîì î
StoredProcedureîîî £
)îî£ §
;îî§ •
}
ïï 
resp
ññ 
=
ññ 
updatedRecords
ññ !
*
ññ" #
-
ññ$ %
$num
ññ% &
>
ññ' (
$num
ññ) *
;
ññ* +
return
óó 
resp
óó 
;
óó 
}
òò 	
}
ôô 
}öö ∫˚
fF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\LeaveManagement\LeaveManagementRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
LeaveManagement& 5
{   
public!! 

class!! %
LeaveManagementRepository!! *
:!!+ ,
BaseRepository!!- ;
{"" 
private## 
readonly## 
IConfiguration## '
configuration##( 5
;##5 6
private$$ 
readonly$$ 
ILoggerManager$$ '
logger$$( .
;$$. /
private%% 
readonly%% 
IDistributedCache%% *

redisCache%%+ 5
;%%5 6
public&& %
LeaveManagementRepository&& (
(&&( )
IConfiguration&&) 7
configuration&&8 E
,&&E F
ILoggerManager&&G U
logger&&V \
)&&\ ]
:&&^ _
base&&` d
(&&d e
configuration&&e r
)&&r s
{'' 	
this(( 
.(( 
configuration(( 
=((  
configuration((! .
;((. /
this)) 
.)) 
logger)) 
=)) 
logger))  
;))  !
}** 	
public++ 
async++ 
Task++ 
<++ 
List++ 
<++ 
LeaveDetail++ *
>++* +
>+++ ,
GetEmployeeLeaves++- >
(++> ?
int++? B
employeeSlno++C O
,++O P
int++Q T
statusId++U ]
)++] ^
{,, 	
List-- 
<-- 
LeaveDetail-- 
>-- 
employeeLeaves-- ,
=--- .
null--/ 3
;--3 4

Dictionary.. 
<.. 
string.. 
,.. 
DateTime.. '
>..' (
payrollDates..) 5
=..6 7
await..8 =
GetPayrollDates..> M
(..M N
DateTime..N V
...V W
Now..W Z
)..Z [
;..[ \
using// 
(// 
var// 

connection// !
=//" #
await//$ )
base//* .
.//. /
CreateConnection/// ?
(//? @
DbSchema//@ H
.//H I
PORTAL//I O
)//O P
)//P Q
{00 #
OracleDynamicParameters11 '

parameters11( 2
=113 4
new115 8#
OracleDynamicParameters119 P
(11P Q
)11Q R
;11R S

parameters22 
.22 
Add22 
(22 
name22 #
:22# $
$str22% 4
,224 5
employeeSlno226 B
,22B C
dbType22D J
:22J K
OracleMappingType22L ]
.22] ^
Int3222^ c
,22c d
	direction22e n
:22n o
ParameterDirection	22p Ç
.
22Ç É
Input
22É à
)
22à â
;
22â ä

parameters33 
.33 
Add33 
(33 
name33 #
:33# $
$str33% 7
,337 8
statusId339 A
,33A B
dbType33C I
:33I J
OracleMappingType33K \
.33\ ]
Int3233] b
,33b c
	direction33d m
:33m n
ParameterDirection	33o Å
.
33Å Ç
Input
33Ç á
)
33á à
;
33à â

parameters44 
.44 
Add44 
(44 
name44 #
:44# $
$str44% .
,44. /
dbType440 6
:446 7
OracleMappingType448 I
.44I J
	RefCursor44J S
,44S T
	direction44U ^
:44^ _
ParameterDirection44` r
.44r s
Output44s y
)44y z
;44z {

parameters55 
.55 
Add55 
(55 
name55 #
:55# $
$str55% /
,55/ 0
dbType551 7
:557 8
OracleMappingType559 J
.55J K
	RefCursor55K T
,55T U
	direction55V _
:55_ `
ParameterDirection55a s
.55s t
Output55t z
)55z {
;55{ |
var66 
results66 
=66 
await66 #

connection66$ .
.66. /
QueryMultipleAsync66/ A
(66A B
DatabaseProcedures66B T
.66T U$
SP_GET_EMP_LEAVE_DETAILS66U m
,66m n

parameters66o y
,66y z
commandType	66{ Ü
:
66Ü á
CommandType
66à ì
.
66ì î
StoredProcedure
66î £
)
66£ §
;
66§ •
employeeLeaves77 
=77  
results77! (
.77( )
Read77) -
<77- .
LeaveDetail77. 9
>779 :
(77: ;
)77; <
.77< =
ToList77= C
(77C D
)77D E
;77E F
var88 
leaveWorkFlows88 "
=88# $
results88% ,
.88, -
Read88- 1
<881 2
LeaveWorkFlow882 ?
>88? @
(88@ A
)88A B
.88B C
ToList88C I
(88I J
)88J K
;88K L
foreach:: 
(:: 
var:: 
item:: !
in::" $
employeeLeaves::% 3
)::3 4
{;; 
item<< 
.<< 
LeaveWorkFlows<< '
=<<( )
leaveWorkFlows<<* 8
.<<8 9
Where<<9 >
(<<> ?
x<<? @
=><<A C
x<<D E
.<<E F
LeaveId<<F M
==<<N P
item<<Q U
.<<U V
LeaveId<<V ]
)<<] ^
.<<^ _
ToList<<_ e
(<<e f
)<<f g
;<<g h
item== 
.== 
EnableDelete== %
===& '
item==( ,
.==, -
	LeaveFrom==- 6
>===7 9
payrollDates==: F
[==F G
$str==G R
]==R S
?==T U
true==V Z
:==[ \
false==] b
;==b c
if>> 
(>> 
item>> 
.>> 
LeaveStatusId>> *
==>>+ -
LeaveStatusNames>>. >
.>>> ?
PendingForApproval>>? Q
.>>Q R
ToInt32OrDefault>>R b
(>>b c
)>>c d
)>>d e
{?? 
item@@ 
.@@ 
EnableDelete@@ )
=@@* +
true@@, 0
;@@0 1
}AA 
elseBB 
{CC 
itemDD 
.DD 
EnableDeleteDD )
=DD* +
falseDD, 1
;DD1 2
}EE 
}FF 
}HH 
returnII 
employeeLeavesII !
;II! "
}JJ 	
publicKK 
asyncKK 
TaskKK 
<KK 
ListKK 
<KK 
LeaveDetailKK *
>KK* +
>KK+ ,
GetEmployeeLeavesKK- >
(KK> ?
EmployeeLeaveKK? L
leaveRequestKKM Y
,KKY Z
DateTimeKK[ c
	startDateKKd m
,KKm n
DateTimeKKo w
endDateKKx 
)	KK Ä
{LL 	
ListNN 
<NN 
LeaveDetailNN 
>NN 
	empLeavesNN '
=NN( )
nullNN* .
;NN. /
usingOO 
(OO 
varOO 

connectionOO !
=OO" #
awaitOO$ )
baseOO* .
.OO. /
CreateConnectionOO/ ?
(OO? @
DbSchemaOO@ H
.OOH I
PORTALOOI O
)OOO P
)OOP Q
{PP #
OracleDynamicParametersQQ '

parametersQQ( 2
=QQ3 4
newQQ5 8#
OracleDynamicParametersQQ9 P
(QQP Q
)QQQ R
;QQR S

parametersRR 
.RR 
AddRR 
(RR 
nameRR #
:RR# $
$strRR% 4
,RR4 5
leaveRequestRR6 B
.RRB C
EmployeeSlnoRRC O
,RRO P
dbTypeRRQ W
:RRW X
OracleMappingTypeRRY j
.RRj k
Int32RRk p
,RRp q
	directionRRr {
:RR{ |
ParameterDirection	RR} è
.
RRè ê
Input
RRê ï
)
RRï ñ
;
RRñ ó

parametersSS 
.SS 
AddSS 
(SS 
nameSS #
:SS# $
$strSS% 2
,SS2 3
	startDateSS4 =
,SS= >
dbTypeSS? E
:SSE F
OracleMappingTypeSSG X
.SSX Y
DateSSY ]
,SS] ^
	directionSS_ h
:SSh i
ParameterDirectionSSj |
.SS| }
Input	SS} Ç
)
SSÇ É
;
SSÉ Ñ

parametersTT 
.TT 
AddTT 
(TT 
nameTT #
:TT# $
$strTT% 0
,TT0 1
endDateTT2 9
,TT9 :
dbTypeTT; A
:TTA B
OracleMappingTypeTTC T
.TTT U
DateTTU Y
,TTY Z
	directionTT[ d
:TTd e
ParameterDirectionTTf x
.TTx y
InputTTy ~
)TT~ 
;	TT Ä

parametersUU 
.UU 
AddUU 
(UU 
nameUU #
:UU# $
$strUU% 8
,UU8 9
leaveRequestUU: F
.UUF G
FromDateUUG O
,UUO P
dbTypeUUQ W
:UUW X
OracleMappingTypeUUY j
.UUj k
DateUUk o
,UUo p
	directionUUq z
:UUz {
ParameterDirection	UU| é
.
UUé è
Input
UUè î
)
UUî ï
;
UUï ñ

parametersVV 
.VV 
AddVV 
(VV 
nameVV #
:VV# $
$strVV% 6
,VV6 7
leaveRequestVV8 D
.VVD E
ToDateVVE K
,VVK L
dbTypeVVM S
:VVS T
OracleMappingTypeVVU f
.VVf g
DateVVg k
,VVk l
	directionVVm v
:VVv w
ParameterDirection	VVx ä
.
VVä ã
Input
VVã ê
)
VVê ë
;
VVë í

parametersWW 
.WW 
AddWW 
(WW 
nameWW #
:WW# $
$strWW% .
,WW. /
dbTypeWW0 6
:WW6 7
OracleMappingTypeWW8 I
.WWI J
	RefCursorWWJ S
,WWS T
	directionWWU ^
:WW^ _
ParameterDirectionWW` r
.WWr s
OutputWWs y
)WWy z
;WWz {
	empLeavesXX 
=XX 
(XX 
awaitXX "

connectionXX# -
.XX- .

QueryAsyncXX. 8
<XX8 9
LeaveDetailXX9 D
>XXD E
(XXE F
DatabaseProceduresXXF X
.XXX Y"
SP_GET_EMPLOYEE_LEAVESXXY o
,XXo p

parametersXXq {
,XX{ |
commandType	XX} à
:
XXà â
CommandType
XXä ï
.
XXï ñ
StoredProcedure
XXñ •
)
XX• ¶
)
XX¶ ß
.
XXß ®
ToList
XX® Æ
(
XXÆ Ø
)
XXØ ∞
;
XX∞ ±
	empLeavesYY 
=YY 
	empLeavesYY %
.YY% &
OrderByDescendingYY& 7
(YY7 8
xYY8 9
=>YY: <
xYY= >
.YY> ?
	LeaveFromYY? H
)YYH I
.YYI J
ToListYYJ P
(YYP Q
)YYQ R
;YYR S
}ZZ 
return[[ 
	empLeaves[[ 
;[[ 
}\\ 	
public^^ 
async^^ 
Task^^ 
<^^ !
EmpLeavePolicyDetails^^ /
>^^/ 0!
GetEmpLeavesbyLeaveId^^1 F
(^^F G
int^^G J
leaveId^^K R
)^^R S
{__ 	!
EmpLeavePolicyDetailsaa !!
empLeavePolicyDetailsaa" 7
=aa8 9
nullaa: >
;aa> ?
usingbb 
(bb 
varbb 

connectionbb !
=bb" #
awaitbb$ )
basebb* .
.bb. /
CreateConnectionbb/ ?
(bb? @
DbSchemabb@ H
.bbH I
PORTALbbI O
)bbO P
)bbP Q
{cc #
OracleDynamicParametersdd '

parametersdd( 2
=dd3 4
newdd5 8#
OracleDynamicParametersdd9 P
(ddP Q
)ddQ R
;ddR S

parametersee 
.ee 
Addee 
(ee 
nameee #
:ee# $
$stree% 0
,ee0 1
leaveIdee2 9
,ee9 :
dbTypeee; A
:eeA B
OracleMappingTypeeeC T
.eeT U
Int32eeU Z
,eeZ [
	directionee\ e
:eee f
ParameterDirectioneeg y
.eey z
Inputeez 
)	ee Ä
;
eeÄ Å

parametersff 
.ff 
Addff 
(ff 
nameff #
:ff# $
$strff% .
,ff. /
dbTypeff0 6
:ff6 7
OracleMappingTypeff8 I
.ffI J
	RefCursorffJ S
,ffS T
	directionffU ^
:ff^ _
ParameterDirectionff` r
.ffr s
Outputffs y
)ffy z
;ffz {!
empLeavePolicyDetailsgg %
=gg& '
awaitgg( -

connectiongg. 8
.gg8 9
QueryFirstAsyncgg9 H
<ggH I!
EmpLeavePolicyDetailsggI ^
>gg^ _
(gg_ `
DatabaseProceduresgg` r
.ggr s"
SP_LEAVE_DETAILS_BYID	ggs à
,
ggà â

parameters
ggä î
,
ggî ï
commandType
ggñ °
:
gg° ¢
CommandType
gg£ Æ
.
ggÆ Ø
StoredProcedure
ggØ æ
)
ggæ ø
;
ggø ¿
}hh 
returnii !
empLeavePolicyDetailsii (
;ii( )
}jj 	
publicll 
asyncll 
Taskll 
<ll 
Listll 
<ll 
LeaveDetailll *
>ll* +
>ll+ ,(
GetEmployeeLeavesByLeaveTypell- I
(llI J
intllJ M
employeeSlnollN Z
,llZ [
DateTimell\ d
?lld e
	startDatellf o
,llo p
DateTimellq y
?lly z
endDate	ll{ Ç
,
llÇ É
int
llÑ á
leaveTypeId
llà ì
)
llì î
{mm 	
Listnn 
<nn 
LeaveDetailnn 
>nn 
	empLeavesnn '
=nn( )
nullnn* .
;nn. /
usingoo 
(oo 
varoo 

connectionoo !
=oo" #
awaitoo$ )
baseoo* .
.oo. /
CreateConnectionoo/ ?
(oo? @
DbSchemaoo@ H
.ooH I
PORTALooI O
)ooO P
)ooP Q
{pp #
OracleDynamicParametersqq '

parametersqq( 2
=qq3 4
newqq5 8#
OracleDynamicParametersqq9 P
(qqP Q
)qqQ R
;qqR S

parametersrr 
.rr 
Addrr 
(rr 
namerr #
:rr# $
$strrr% 4
,rr4 5
employeeSlnorr6 B
,rrB C
dbTyperrD J
:rrJ K
OracleMappingTyperrL ]
.rr] ^
Int32rr^ c
,rrc d
	directionrre n
:rrn o
ParameterDirection	rrp Ç
.
rrÇ É
Input
rrÉ à
)
rrà â
;
rrâ ä

parametersss 
.ss 
Addss 
(ss 
namess #
:ss# $
$strss% 2
,ss2 3
	startDatess4 =
,ss= >
dbTypess? E
:ssE F
OracleMappingTypessG X
.ssX Y
DatessY ]
,ss] ^
	directionss_ h
:ssh i
ParameterDirectionssj |
.ss| }
Input	ss} Ç
)
ssÇ É
;
ssÉ Ñ

parameterstt 
.tt 
Addtt 
(tt 
namett #
:tt# $
$strtt% 0
,tt0 1
endDatett2 9
,tt9 :
dbTypett; A
:ttA B
OracleMappingTypettC T
.ttT U
DatettU Y
,ttY Z
	directiontt[ d
:ttd e
ParameterDirectionttf x
.ttx y
Inputtty ~
)tt~ 
;	tt Ä

parametersuu 
.uu 
Adduu 
(uu 
nameuu #
:uu# $
$struu% 5
,uu5 6
leaveTypeIduu7 B
,uuB C
dbTypeuuD J
:uuJ K
OracleMappingTypeuuL ]
.uu] ^
Int32uu^ c
,uuc d
	directionuue n
:uun o
ParameterDirection	uup Ç
.
uuÇ É
Input
uuÉ à
)
uuà â
;
uuâ ä

parametersvv 
.vv 
Addvv 
(vv 
namevv #
:vv# $
$strvv% .
,vv. /
dbTypevv0 6
:vv6 7
OracleMappingTypevv8 I
.vvI J
	RefCursorvvJ S
,vvS T
	directionvvU ^
:vv^ _
ParameterDirectionvv` r
.vvr s
Outputvvs y
)vvy z
;vvz {
	empLeavesww 
=ww 
(ww 
awaitww "

connectionww# -
.ww- .

QueryAsyncww. 8
<ww8 9
LeaveDetailww9 D
>wwD E
(wwE F
DatabaseProcedureswwF X
.wwX Y%
SP_GET_EMP_LEAVES_BY_TYPEwwY r
,wwr s

parameterswwt ~
,ww~ 
commandType
wwÄ ã
:
wwã å
CommandType
wwç ò
.
wwò ô
StoredProcedure
wwô ®
)
ww® ©
)
ww© ™
.
ww™ ´
ToList
ww´ ±
(
ww± ≤
)
ww≤ ≥
;
ww≥ ¥
	empLeavesxx 
=xx 
	empLeavesxx %
.xx% &
OrderByDescendingxx& 7
(xx7 8
xxx8 9
=>xx: <
xxx= >
.xx> ?
	LeaveFromxx? H
)xxH I
.xxI J
ToListxxJ P
(xxP Q
)xxQ R
;xxR S
}yy 
returnzz 
	empLeaveszz 
;zz 
}{{ 	
public|| 
async|| 
Task|| 
<|| 
List|| 
<|| 
EmpLeaveBalance|| .
>||. /
>||/ 0#
GetEmployeeLeaveBalance||1 H
(||H I
int||I L
employeeSlno||M Y
)||Y Z
{}} 	
List~~ 
<~~ 
EmpLeaveBalance~~  
>~~  !
empLeaveBalance~~" 1
=~~2 3
null~~4 8
;~~8 9
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{
ÄÄ %
OracleDynamicParameters
ÅÅ '

parameters
ÅÅ( 2
=
ÅÅ3 4
new
ÅÅ5 8%
OracleDynamicParameters
ÅÅ9 P
(
ÅÅP Q
)
ÅÅQ R
;
ÅÅR S

parameters
ÇÇ 
.
ÇÇ 
Add
ÇÇ 
(
ÇÇ 
name
ÇÇ #
:
ÇÇ# $
$str
ÇÇ% 4
,
ÇÇ4 5
employeeSlno
ÇÇ6 B
,
ÇÇB C
dbType
ÇÇD J
:
ÇÇJ K
OracleMappingType
ÇÇL ]
.
ÇÇ] ^
Int32
ÇÇ^ c
,
ÇÇc d
	direction
ÇÇe n
:
ÇÇn o!
ParameterDirectionÇÇp Ç
.ÇÇÇ É
InputÇÇÉ à
)ÇÇà â
;ÇÇâ ä

parameters
ÉÉ 
.
ÉÉ 
Add
ÉÉ 
(
ÉÉ 
name
ÉÉ #
:
ÉÉ# $
$str
ÉÉ% .
,
ÉÉ. /
dbType
ÉÉ0 6
:
ÉÉ6 7
OracleMappingType
ÉÉ8 I
.
ÉÉI J
	RefCursor
ÉÉJ S
,
ÉÉS T
	direction
ÉÉU ^
:
ÉÉ^ _ 
ParameterDirection
ÉÉ` r
.
ÉÉr s
Output
ÉÉs y
)
ÉÉy z
;
ÉÉz {
empLeaveBalance
ÑÑ 
=
ÑÑ  !
(
ÑÑ" #
await
ÑÑ# (

connection
ÑÑ) 3
.
ÑÑ3 4

QueryAsync
ÑÑ4 >
<
ÑÑ> ?
EmpLeaveBalance
ÑÑ? N
>
ÑÑN O
(
ÑÑO P 
DatabaseProcedures
ÑÑP b
.
ÑÑb c'
SP_GET_EMP_LEAVES_BALANCE
ÑÑc |
,
ÑÑ| }

parametersÑÑ~ à
,ÑÑà â
commandTypeÑÑä ï
:ÑÑï ñ
CommandTypeÑÑó ¢
.ÑÑ¢ £
StoredProcedureÑÑ£ ≤
)ÑÑ≤ ≥
)ÑÑ≥ ¥
.ÑÑ¥ µ
ToListÑÑµ ª
(ÑÑª º
)ÑÑº Ω
;ÑÑΩ æ
}
ÖÖ 
string
ÜÜ 
gender
ÜÜ 
=
ÜÜ 
await
ÜÜ !
GetEmpGender
ÜÜ" .
(
ÜÜ. /
employeeSlno
ÜÜ/ ;
)
ÜÜ; <
;
ÜÜ< =
bool
áá 
	isMarried
áá 
=
áá 
await
áá "#
CheckForMaritalStatus
áá# 8
(
áá8 9
employeeSlno
áá9 E
)
ááE F
;
ááF G
empLeaveBalance
ââ 
=
ââ 
empLeaveBalance
ââ -
.
ââ- .
Where
ââ. 3
(
ââ3 4
x
ââ4 5
=>
ââ6 8
x
ââ9 :
.
ââ: ;
LeaveTypeId
ââ; F
!=
ââG I
LeaveTypeNames
ââJ X
.
ââX Y
ON_DUTY
ââY `
.
ââ` a
ToInt32OrDefault
ââa q
(
ââq r
)
ââr s
)
ââs t
.
âât u
ToList
ââu {
(
ââ{ |
)
ââ| }
;
ââ} ~
if
ää 
(
ää 
	isMarried
ää 
)
ää 
{
ãã 
empLeaveBalance
åå 
=
åå  !
empLeaveBalance
åå" 1
.
åå1 2
Where
åå2 7
(
åå7 8
x
åå8 9
=>
åå: <
x
åå= >
.
åå> ?
LeaveTypeId
åå? J
!=
ååK M
LeaveTypeNames
ååN \
.
åå\ ]
MARRIAGE_LEAVE
åå] k
.
ååk l
ToInt32OrDefault
åål |
(
åå| }
)
åå} ~
)
åå~ 
.åå Ä
ToListååÄ Ü
(ååÜ á
)ååá à
;ååà â
bool
çç 
hasChildren
çç  
=
çç! "
await
çç# (
CheckForChildren
çç) 9
(
çç9 :
employeeSlno
çç: F
)
ççF G
;
ççG H
if
éé 
(
éé 
hasChildren
éé 
)
éé  
{
èè 
if
êê 
(
êê 
gender
êê 
==
êê !
$str
êê" %
)
êê% &
{
ëë 
empLeaveBalance
íí '
=
íí( )
empLeaveBalance
íí* 9
.
íí9 :
Where
íí: ?
(
íí? @
x
íí@ A
=>
ííB D
(
ííE F
x
ííF G
.
ííG H
LeaveTypeId
ííH S
!=
ííT V
LeaveTypeNames
ííW e
.
ííe f
MATERNITY_LEAVE
ííf u
.
ííu v
ToInt32OrDefaultíív Ü
(ííÜ á
)ííá à
)ííà â
)ííâ ä
.ííä ã
ToListííã ë
(ííë í
)ííí ì
;ííì î
}
îî 
else
ïï 
if
ïï 
(
ïï 
gender
ïï #
==
ïï$ &
$str
ïï' *
)
ïï* +
{
ññ 
empLeaveBalance
óó '
=
óó( )
empLeaveBalance
óó* 9
.
óó9 :
Where
óó: ?
(
óó? @
x
óó@ A
=>
óóB D
(
óóE F
x
óóF G
.
óóG H
LeaveTypeId
óóH S
!=
óóT V
LeaveTypeNames
óóW e
.
óóe f
PATERNITY_LEAVE
óóf u
.
óóu v
ToInt32OrDefaultóóv Ü
(óóÜ á
)óóá à
)óóà â
)óóâ ä
.óóä ã
ToListóóã ë
(óóë í
)óóí ì
;óóì î
}
òò 
}
ôô 
}
öö 
else
õõ 
{
úú 
empLeaveBalance
ùù 
=
ùù  !
empLeaveBalance
ùù" 1
.
ùù1 2
Where
ùù2 7
(
ùù7 8
x
ùù8 9
=>
ùù: <
(
ùù= >
x
ùù> ?
.
ùù? @
LeaveTypeId
ùù@ K
!=
ùùL N
LeaveTypeNames
ùùO ]
.
ùù] ^
PATERNITY_LEAVE
ùù^ m
.
ùùm n
ToInt32OrDefault
ùùn ~
(
ùù~ 
)ùù Ä
)ùùÄ Å
)ùùÅ Ç
.ùùÇ É
ToListùùÉ â
(ùùâ ä
)ùùä ã
;ùùã å
empLeaveBalance
ûû 
=
ûû  !
empLeaveBalance
ûû" 1
.
ûû1 2
Where
ûû2 7
(
ûû7 8
x
ûû8 9
=>
ûû: <
(
ûû= >
x
ûû> ?
.
ûû? @
LeaveTypeId
ûû@ K
!=
ûûL N
LeaveTypeNames
ûûO ]
.
ûû] ^
MATERNITY_LEAVE
ûû^ m
.
ûûm n
ToInt32OrDefault
ûûn ~
(
ûû~ 
)ûû Ä
)ûûÄ Å
)ûûÅ Ç
.ûûÇ É
ToListûûÉ â
(ûûâ ä
)ûûä ã
;ûûã å
}
üü 
empLeaveBalance
°° 
=
°° 
empLeaveBalance
°° -
.
°°- .
Where
°°. 3
(
°°3 4
x
°°4 5
=>
°°6 8
x
°°9 :
.
°°: ;
ShowInDashboard
°°; J
==
°°K M
$num
°°N O
)
°°O P
.
°°P Q
ToList
°°Q W
(
°°W X
)
°°X Y
;
°°Y Z
return
¢¢ 
empLeaveBalance
¢¢ "
;
¢¢" #
}
££ 	
private
§§ 
async
§§ 
Task
§§ 
<
§§ 
bool
§§ 
>
§§  #
CheckForMaritalStatus
§§! 6
(
§§6 7
int
§§7 :
employeeSlno
§§; G
)
§§G H
{
•• 	
int
¶¶ 
marriageCount
¶¶ 
=
¶¶ 
$num
¶¶  !
;
¶¶! "
bool
ßß 
	isMarried
ßß 
=
ßß 
false
ßß "
;
ßß" #
using
©© 
(
©© 
var
©© 

connection
©© !
=
©©" #
await
©©$ )
base
©©* .
.
©©. /
CreateConnection
©©/ ?
(
©©? @
DbSchema
©©@ H
.
©©H I
PORTAL
©©I O
)
©©O P
)
©©P Q
{
™™ %
OracleDynamicParameters
´´ '

parameters
´´( 2
=
´´3 4
new
´´5 8%
OracleDynamicParameters
´´9 P
(
´´P Q
)
´´Q R
;
´´R S

parameters
¨¨ 
.
¨¨ 
Add
¨¨ 
(
¨¨ 
name
¨¨ #
:
¨¨# $
$str
¨¨% 4
,
¨¨4 5
employeeSlno
¨¨6 B
,
¨¨B C
dbType
¨¨D J
:
¨¨J K
OracleMappingType
¨¨L ]
.
¨¨] ^
Int32
¨¨^ c
,
¨¨c d
	direction
¨¨e n
:
¨¨n o!
ParameterDirection¨¨p Ç
.¨¨Ç É
Input¨¨É à
)¨¨à â
;¨¨â ä

parameters
≠≠ 
.
≠≠ 
Add
≠≠ 
(
≠≠ 
name
≠≠ #
:
≠≠# $
$str
≠≠% 1
,
≠≠1 2
dbType
≠≠3 9
:
≠≠9 :
OracleMappingType
≠≠; L
.
≠≠L M
Int32
≠≠M R
,
≠≠R S
	direction
≠≠T ]
:
≠≠] ^ 
ParameterDirection
≠≠_ q
.
≠≠q r
Output
≠≠r x
)
≠≠x y
;
≠≠y z
await
ÆÆ 

connection
ÆÆ  
.
ÆÆ  !
ExecuteAsync
ÆÆ! -
(
ÆÆ- . 
DatabaseProcedures
ÆÆ. @
.
ÆÆ@ A%
SP_CHECK_MARITAL_STATUS
ÆÆA X
,
ÆÆX Y

parameters
ÆÆZ d
,
ÆÆd e
commandType
ÆÆf q
:
ÆÆq r
CommandType
ÆÆs ~
.
ÆÆ~ 
StoredProcedureÆÆ é
)ÆÆé è
;ÆÆè ê
marriageCount
ØØ 
=
ØØ 

parameters
ØØ  *
.
ØØ* +
Get
ØØ+ .
<
ØØ. /
int
ØØ/ 2
>
ØØ2 3
(
ØØ3 4
$str
ØØ4 @
)
ØØ@ A
;
ØØA B
}
∞∞ 
	isMarried
±± 
=
±± 
marriageCount
±± %
>
±±& '
$num
±±( )
;
±±) *
return
≤≤ 
	isMarried
≤≤ 
;
≤≤ 
}
≥≥ 	
private
¥¥ 
async
¥¥ 
Task
¥¥ 
<
¥¥ 
bool
¥¥ 
>
¥¥  
CheckForChildren
¥¥! 1
(
¥¥1 2
int
¥¥2 5
employeeSlno
¥¥6 B
)
¥¥B C
{
µµ 	
int
∂∂ 

childCount
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
bool
∑∑ 
hasChildren
∑∑ 
=
∑∑ 
false
∑∑ $
;
∑∑$ %
using
ππ 
(
ππ 
var
ππ 

connection
ππ !
=
ππ" #
await
ππ$ )
base
ππ* .
.
ππ. /
CreateConnection
ππ/ ?
(
ππ? @
DbSchema
ππ@ H
.
ππH I
PORTAL
ππI O
)
ππO P
)
ππP Q
{
∫∫ %
OracleDynamicParameters
ªª '

parameters
ªª( 2
=
ªª3 4
new
ªª5 8%
OracleDynamicParameters
ªª9 P
(
ªªP Q
)
ªªQ R
;
ªªR S

parameters
ºº 
.
ºº 
Add
ºº 
(
ºº 
name
ºº #
:
ºº# $
$str
ºº% 4
,
ºº4 5
employeeSlno
ºº6 B
,
ººB C
dbType
ººD J
:
ººJ K
OracleMappingType
ººL ]
.
ºº] ^
Int32
ºº^ c
,
ººc d
	direction
ººe n
:
ººn o!
ParameterDirectionººp Ç
.ººÇ É
InputººÉ à
)ººà â
;ººâ ä

parameters
ΩΩ 
.
ΩΩ 
Add
ΩΩ 
(
ΩΩ 
name
ΩΩ #
:
ΩΩ# $
$str
ΩΩ% 2
,
ΩΩ2 3
dbType
ΩΩ4 :
:
ΩΩ: ;
OracleMappingType
ΩΩ< M
.
ΩΩM N
Int32
ΩΩN S
,
ΩΩS T
	direction
ΩΩU ^
:
ΩΩ^ _ 
ParameterDirection
ΩΩ` r
.
ΩΩr s
Output
ΩΩs y
)
ΩΩy z
;
ΩΩz {
await
ææ 

connection
ææ  
.
ææ  !
ExecuteAsync
ææ! -
(
ææ- . 
DatabaseProcedures
ææ. @
.
ææ@ A#
SP_CHECK_HAS_CHILDREN
ææA V
,
ææV W

parameters
ææX b
,
ææb c
commandType
ææd o
:
ææo p
CommandType
ææq |
.
ææ| }
StoredProcedureææ} å
)ææå ç
;ææç é

childCount
øø 
=
øø 

parameters
øø '
.
øø' (
Get
øø( +
<
øø+ ,
int
øø, /
>
øø/ 0
(
øø0 1
$str
øø1 >
)
øø> ?
;
øø? @
}
¿¿ 
hasChildren
¡¡ 
=
¡¡ 

childCount
¡¡ $
>=
¡¡% '
$num
¡¡( )
;
¡¡) *
return
¬¬ 
hasChildren
¬¬ 
;
¬¬ 
}
√√ 	
private
ƒƒ 
async
ƒƒ 
Task
ƒƒ 
<
ƒƒ 
string
ƒƒ !
>
ƒƒ! "
GetEmpGender
ƒƒ# /
(
ƒƒ/ 0
int
ƒƒ0 3
employeeSlno
ƒƒ4 @
)
ƒƒ@ A
{
≈≈ 	
string
∆∆ 
gender
∆∆ 
=
∆∆ 
null
∆∆  
;
∆∆  !
string
«« 
getGenderQuery
«« !
=
««" #
$str
««$ y
;
««y z
using
»» 
(
»» 
IDbConnection
»»  

connection
»»! +
=
»», -
await
»». 3
CreateConnection
»»4 D
(
»»D E
DbSchema
»»E M
.
»»M N
PORTAL
»»N T
)
»»T U
)
»»U V
{
…… 
string
   
query
   
=
   
string
   %
.
  % &
Format
  & ,
(
  , -
getGenderQuery
  - ;
,
  ; <
employeeSlno
  = I
)
  I J
;
  J K
gender
ÀÀ 
=
ÀÀ 
await
ÀÀ 

connection
ÀÀ )
.
ÀÀ) *&
QueryFirstOrDefaultAsync
ÀÀ* B
<
ÀÀB C
string
ÀÀC I
>
ÀÀI J
(
ÀÀJ K
query
ÀÀK P
)
ÀÀP Q
;
ÀÀQ R
}
ÃÃ 
return
ÕÕ 
gender
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
public
œœ 
async
œœ 
Task
œœ 
<
œœ 
bool
œœ 
>
œœ '
UpdateEmployeeLeaveStatus
œœ  9
(
œœ9 :
LeaveDetail
œœ: E
leaveDetail
œœF Q
)
œœQ R
{
–– 	
bool
—— 
resp
—— 
=
—— 
false
—— 
;
—— 
int
““ 
updatedRecords
““ 
=
““  
$num
““! "
;
““" #
try
”” 
{
‘‘ 
using
’’ 
(
’’ 
var
’’ 

connection
’’ %
=
’’& '
await
’’( -
base
’’. 2
.
’’2 3
CreateConnection
’’3 C
(
’’C D
DbSchema
’’D L
.
’’L M
PORTAL
’’M S
)
’’S T
)
’’T U
{
÷÷ %
OracleDynamicParameters
◊◊ +
param
◊◊, 1
=
◊◊2 3
new
◊◊4 7
(
◊◊7 8
)
◊◊8 9
;
◊◊9 :
param
ÿÿ 
.
ÿÿ 
Add
ÿÿ 
(
ÿÿ 
name
ÿÿ "
:
ÿÿ" #
$str
ÿÿ$ .
,
ÿÿ. /
leaveDetail
ÿÿ0 ;
.
ÿÿ; <
LeaveId
ÿÿ< C
,
ÿÿC D
dbType
ÿÿE K
:
ÿÿK L
OracleMappingType
ÿÿM ^
.
ÿÿ^ _
Int32
ÿÿ_ d
,
ÿÿd e
	direction
ÿÿf o
:
ÿÿo p!
ParameterDirectionÿÿq É
.ÿÿÉ Ñ
InputÿÿÑ â
)ÿÿâ ä
;ÿÿä ã
param
ŸŸ 
.
ŸŸ 
Add
ŸŸ 
(
ŸŸ 
name
ŸŸ "
:
ŸŸ" #
$str
ŸŸ$ 5
,
ŸŸ5 6
leaveDetail
ŸŸ7 B
.
ŸŸB C
LeaveStatusId
ŸŸC P
,
ŸŸP Q
dbType
ŸŸR X
:
ŸŸX Y
OracleMappingType
ŸŸZ k
.
ŸŸk l
Int32
ŸŸl q
,
ŸŸq r
	direction
ŸŸs |
:
ŸŸ| }!
ParameterDirectionŸŸ~ ê
.ŸŸê ë
InputŸŸë ñ
)ŸŸñ ó
;ŸŸó ò
param
⁄⁄ 
.
⁄⁄ 
Add
⁄⁄ 
(
⁄⁄ 
name
⁄⁄ "
:
⁄⁄" #
$str
⁄⁄$ 4
,
⁄⁄4 5
leaveDetail
⁄⁄6 A
.
⁄⁄A B
EmployeeSlno
⁄⁄B N
,
⁄⁄N O
dbType
⁄⁄P V
:
⁄⁄V W
OracleMappingType
⁄⁄X i
.
⁄⁄i j
Int32
⁄⁄j o
,
⁄⁄o p
	direction
⁄⁄q z
:
⁄⁄z {!
ParameterDirection⁄⁄| é
.⁄⁄é è
Input⁄⁄è î
)⁄⁄î ï
;⁄⁄ï ñ
param
€€ 
.
€€ 
Add
€€ 
(
€€ 
name
€€ "
:
€€" #
$str
€€$ 7
,
€€7 8
leaveDetail
€€9 D
.
€€D E
WorkFlowTypeId
€€E S
,
€€S T
dbType
€€U [
:
€€[ \
OracleMappingType
€€] n
.
€€n o
Int32
€€o t
,
€€t u
	direction
€€v 
:€€ Ä"
ParameterDirection€€Å ì
.€€ì î
Input€€î ô
)€€ô ö
;€€ö õ
param
‹‹ 
.
‹‹ 
Add
‹‹ 
(
‹‹ 
name
‹‹ "
:
‹‹" #
$str
‹‹$ 3
,
‹‹3 4
leaveDetail
‹‹5 @
.
‹‹@ A

StepTypeId
‹‹A K
,
‹‹K L
dbType
‹‹M S
:
‹‹S T
OracleMappingType
‹‹U f
.
‹‹f g
Int32
‹‹g l
,
‹‹l m
	direction
‹‹n w
:
‹‹w x!
ParameterDirection‹‹y ã
.‹‹ã å
Input‹‹å ë
)‹‹ë í
;‹‹í ì
param
›› 
.
›› 
Add
›› 
(
›› 
name
›› "
:
››" #
$str
››$ 5
,
››5 6
leaveDetail
››7 B
.
››B C
StepMasterId
››C O
,
››O P
dbType
››Q W
:
››W X
OracleMappingType
››Y j
.
››j k
Int32
››k p
,
››p q
	direction
››r {
:
››{ |!
ParameterDirection››} è
.››è ê
Input››ê ï
)››ï ñ
;››ñ ó
param
ﬁﬁ 
.
ﬁﬁ 
Add
ﬁﬁ 
(
ﬁﬁ 
name
ﬁﬁ "
:
ﬁﬁ" #
$str
ﬁﬁ$ .
,
ﬁﬁ. /
leaveDetail
ﬁﬁ0 ;
.
ﬁﬁ; <
ApprovedRemarks
ﬁﬁ< K
,
ﬁﬁK L
dbType
ﬁﬁM S
:
ﬁﬁS T
OracleMappingType
ﬁﬁU f
.
ﬁﬁf g
Varchar2
ﬁﬁg o
,
ﬁﬁo p
	direction
ﬁﬁq z
:
ﬁﬁz {!
ParameterDirectionﬁﬁ| é
.ﬁﬁé è
Inputﬁﬁè î
)ﬁﬁî ï
;ﬁﬁï ñ
updatedRecords
‡‡ "
=
‡‡# $
await
‡‡% *

connection
‡‡+ 5
.
‡‡5 6
ExecuteAsync
‡‡6 B
(
‡‡B C 
DatabaseProcedures
‡‡C U
.
‡‡U V$
PROCESS_LEAVE_WORKFLOW
‡‡V l
,
‡‡l m
param
‡‡n s
,
‡‡s t
commandType‡‡u Ä
:‡‡Ä Å
CommandType‡‡Ç ç
.‡‡ç é
StoredProcedure‡‡é ù
)‡‡ù û
;‡‡û ü
resp
‚‚ 
=
‚‚ 
(
‚‚ 
updatedRecords
‚‚ *
*
‚‚+ ,
-
‚‚- .
$num
‚‚. /
)
‚‚/ 0
>
‚‚1 2
$num
‚‚3 4
;
‚‚4 5
}
„„ 
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
)
ÂÂ 
{
ÊÊ 
resp
ÁÁ 
=
ÁÁ 
false
ÁÁ 
;
ÁÁ 
}
ËË 
return
ÏÏ 
resp
ÏÏ 
;
ÏÏ 
}
ÓÓ 	
public
 
async
 
Task
 
<
 
bool
 
>
 /
!UpdateMultipleEmployeeLeaveStatus
  A
(
A B2
$UpdateMultipleEmployeeLeaveStatusReq
B f
empLeaveDetails
g v
)
v w
{
ÒÒ 	
bool
ÚÚ 
resp
ÚÚ 
=
ÚÚ 
false
ÚÚ 
;
ÚÚ 
int
ÛÛ 
updatedRecords
ÛÛ 
=
ÛÛ  
$num
ÛÛ! "
;
ÛÛ" #
using
ıı 
(
ıı 
var
ıı 

connection
ıı !
=
ıı" #
await
ıı$ )
base
ıı* .
.
ıı. /
CreateConnection
ıı/ ?
(
ıı? @
DbSchema
ıı@ H
.
ııH I
PORTAL
ııI O
)
ııO P
)
ııP Q
{
ˆˆ %
OracleDynamicParameters
˜˜ '

parameters
˜˜( 2
=
˜˜3 4
new
˜˜5 8
(
˜˜8 9
)
˜˜9 :
;
˜˜: ;

parameters
íí 
.
íí 
Add
íí 
(
íí 
name
íí #
:
íí# $
$str
íí% /
,
íí/ 0
empLeaveDetails
íí1 @
.
íí@ A
LeaveId
ííA H
.
ííH I
ToArray
ííI P
(
ííP Q
)
ííQ R
,
ííR S
dbType
ííT Z
:
ííZ [
OracleMappingType
íí\ m
.
íím n
Int32
íín s
,
íís t
	direction
ííu ~
:
íí~ "
ParameterDirectionííÄ í
.ííí ì
Inputííì ò
,ííò ô
empLeaveDetailsííö ©
.íí© ™
LeaveIdíí™ ±
.íí± ≤
Countíí≤ ∑
,íí∑ ∏
collectionType
ìì 
:
ìì )
OracleMappingCollectionType
ìì  ;
.
ìì; <#
PLSQLAssociativeArray
ìì< Q
)
ììQ R
;
ììR S

parameters
îî 
.
îî 
Add
îî 
(
îî 
name
îî #
:
îî# $
$str
îî% 6
,
îî6 7
empLeaveDetails
îî8 G
.
îîG H
LeaveStatusId
îîH U
,
îîU V
dbType
îîW ]
:
îî] ^
OracleMappingType
îî_ p
.
îîp q
Int32
îîq v
,
îîv w
	directionîîx Å
:îîÅ Ç"
ParameterDirectionîîÉ ï
.îîï ñ
Inputîîñ õ
)îîõ ú
;îîú ù

parameters
ïï 
.
ïï 
Add
ïï 
(
ïï 
name
ïï #
:
ïï# $
$str
ïï% 2
,
ïï2 3
empLeaveDetails
ïï4 C
.
ïïC D

ApprovedBy
ïïD N
,
ïïN O
dbType
ïïP V
:
ïïV W
OracleMappingType
ïïX i
.
ïïi j
Int32
ïïj o
,
ïïo p
	direction
ïïq z
:
ïïz {!
ParameterDirectionïï| é
.ïïé è
Inputïïè î
)ïïî ï
;ïïï ñ

parameters
ññ 
.
ññ 
Add
ññ 
(
ññ 
name
ññ #
:
ññ# $
$str
ññ% /
,
ññ/ 0
empLeaveDetails
ññ1 @
.
ññ@ A
ApprovedRemarks
ññA P
,
ññP Q
dbType
ññR X
:
ññX Y
OracleMappingType
ññZ k
.
ññk l
Varchar2
ññl t
,
ññt u
	direction
ññv 
:ññ Ä"
ParameterDirectionññÅ ì
.ññì î
Inputññî ô
)ññô ö
;ññö õ

parameters
óó 
.
óó 
Add
óó 
(
óó 
name
óó #
:
óó# $
$str
óó% 7
,
óó7 8
dbType
óó9 ?
:
óó? @
OracleMappingType
óóA R
.
óóR S
Int32
óóS X
,
óóX Y
	direction
óóZ c
:
óóc d 
ParameterDirection
óóe w
.
óów x
Output
óóx ~
)
óó~ 
;óó Ä
updatedRecords
òò 
=
òò  
await
òò! &

connection
òò' 1
.
òò1 2
ExecuteAsync
òò2 >
(
òò> ? 
DatabaseProcedures
òò? Q
.
òòQ R!
PROCESS_LEAVE_BY_HR
òòR e
,
òòe f

parameters
òòg q
,
òòq r
commandType
òòs ~
:
òò~ 
CommandTypeòòÄ ã
.òòã å
StoredProcedureòòå õ
)òòõ ú
;òòú ù
int
ôô 
rowsUpdated
ôô 
=
ôô  !

parameters
ôô" ,
.
ôô, -
Get
ôô- 0
<
ôô0 1
int
ôô1 4
>
ôô4 5
(
ôô5 6
$str
ôô6 H
)
ôôH I
;
ôôI J
}
úú 
resp
ûû 
=
ûû 
(
ûû 
(
ûû 
updatedRecords
ûû #
*
ûû$ %
-
ûû& '
$num
ûû' (
)
ûû( )
>
ûû* +
$num
ûû, -
)
ûû- .
;
ûû. /
return
üü 
resp
üü 
;
üü 
}
†† 	
public
¢¢ 
async
¢¢ 
Task
¢¢ 
<
¢¢ 
bool
¢¢ 
>
¢¢ 
CancelLeave
¢¢  +
(
¢¢+ ,
int
¢¢, /
leaveId
¢¢0 7
)
¢¢7 8
{
££ 	
bool
§§ 
resp
§§ 
=
§§ 
false
§§ 
;
§§ 
using
•• 
(
•• 
var
•• 

connection
•• !
=
••" #
await
••$ )
base
••* .
.
••. /
CreateConnection
••/ ?
(
••? @
DbSchema
••@ H
.
••H I
PORTAL
••I O
)
••O P
)
••P Q
{
¶¶ %
OracleDynamicParameters
ßß '
param
ßß( -
=
ßß. /
new
ßß0 3
(
ßß3 4
)
ßß4 5
;
ßß5 6
param
®® 
.
®® 
Add
®® 
(
®® 
name
®® 
:
®® 
$str
®®  *
,
®®* +
leaveId
®®, 3
,
®®3 4
dbType
®®5 ;
:
®®; <
OracleMappingType
®®= N
.
®®N O
Int32
®®O T
,
®®T U
	direction
®®V _
:
®®_ ` 
ParameterDirection
®®a s
.
®®s t
Input
®®t y
)
®®y z
;
®®z {
int
©© 
updatedRecords
©© "
=
©©# $
await
©©% *

connection
©©+ 5
.
©©5 6
ExecuteAsync
©©6 B
(
©©B C 
DatabaseProcedures
©©C U
.
©©U V#
CANCEL_EMPLOYEE_LEAVE
©©V k
,
©©k l
param
©©m r
,
©©r s
commandType
©©t 
:©© Ä
CommandType©©Å å
.©©å ç
StoredProcedure©©ç ú
)©©ú ù
;©©ù û
resp
™™ 
=
™™ 
(
™™ 
updatedRecords
™™ &
*
™™' (
-
™™) *
$num
™™* +
)
™™+ ,
>
™™- .
$num
™™/ 0
;
™™0 1
}
´´ 
return
¨¨ 
resp
¨¨ 
;
¨¨ 
}
ÆÆ 	
public
ØØ 
async
ØØ 
Task
ØØ 
<
ØØ 
EmpLeaveResponse
ØØ *
>
ØØ* +
SaveEmployeeLeave
ØØ, =
(
ØØ= >
EmployeeLeave
ØØ> K
leaveRequest
ØØL X
)
ØØX Y
{
∞∞ 	
bool
±± 
isSaved
±± 
=
±± 
false
±±  
;
±±  !
EmpLeaveResponse
≤≤ 
response
≤≤ %
=
≤≤& '
null
≤≤( ,
;
≤≤, -
double
≥≥ 
	totalDays
≥≥ 
=
≥≥ 
$num
≥≥ "
;
≥≥" #
List
¥¥ 
<
¥¥ 
DateTime
¥¥ 
>
¥¥ 

dateRanges
¥¥ %
=
¥¥& '
null
¥¥( ,
;
¥¥, -
List
µµ 
<
µµ 
DateTime
µµ 
>
µµ 
leaveAppliedDates
µµ ,
=
µµ- .
null
µµ/ 3
;
µµ3 4
List
∑∑ 
<
∑∑ 
DateTime
∑∑ 
>
∑∑ 
publicHolidays
∑∑ )
=
∑∑* +
null
∑∑, 0
;
∑∑0 1
List
∏∏ 
<
∏∏ 
DateTime
∏∏ 
>
∏∏ 
holidayDates
∏∏ '
=
∏∏( )
null
∏∏* .
;
∏∏. /
List
ππ 
<
ππ 
DateTime
ππ 
>
ππ 

leaveDates
ππ %
=
ππ& '
null
ππ( ,
;
ππ, -
DateTime
∫∫ $
payrollPeriodStartDate
∫∫ +
=
∫∫, -
DateTime
∫∫. 6
.
∫∫6 7
Now
∫∫7 :
;
∫∫: ;
DateTime
ªª "
payrollPeriodEndDate
ªª )
=
ªª* +
DateTime
ªª, 4
.
ªª4 5
Now
ªª5 8
;
ªª8 9

dateRanges
ΩΩ 
=
ΩΩ 
leaveRequest
ΩΩ %
.
ΩΩ% &
FromDate
ΩΩ& .
.
ΩΩ. /
GetDateRange
ΩΩ/ ;
(
ΩΩ; <
leaveRequest
ΩΩ< H
.
ΩΩH I
ToDate
ΩΩI O
)
ΩΩO P
.
ΩΩP Q
ToList
ΩΩQ W
(
ΩΩW X
)
ΩΩX Y
;
ΩΩY Z
if
ææ 
(
ææ 

dateRanges
ææ 
.
ææ 
Count
ææ  
>
ææ! "
$num
ææ# $
)
ææ$ %
{
øø 
leaveAppliedDates
¿¿ !
=
¿¿" #

dateRanges
¿¿$ .
;
¿¿. /
}
ƒƒ 
publicHolidays
≈≈ 
=
≈≈ 
await
≈≈ "%
GetOrganizationHolidays
≈≈# :
(
≈≈: ;
leaveRequest
≈≈; G
.
≈≈G H
EmployeeSlno
≈≈H T
,
≈≈T U
leaveRequest
≈≈V b
.
≈≈b c
FromDate
≈≈c k
)
≈≈k l
;
≈≈l m
holidayDates
∆∆ 
=
∆∆ 
publicHolidays
∆∆ )
.
∆∆) *
Where
∆∆* /
(
∆∆/ 0
x
∆∆0 1
=>
∆∆2 4
x
∆∆5 6
.
∆∆6 7
Date
∆∆7 ;
>=
∆∆< >
leaveRequest
∆∆? K
.
∆∆K L
FromDate
∆∆L T
&&
∆∆U W
x
∆∆X Y
.
∆∆Y Z
Date
∆∆Z ^
<=
∆∆_ a
leaveRequest
∆∆b n
.
∆∆n o
ToDate
∆∆o u
)
∆∆u v
.
∆∆v w
ToList
∆∆w }
(
∆∆} ~
)
∆∆~ 
;∆∆ Ä
LeaveTypeNames
«« 
	leaveType
«« $
=
««% &
(
««' (
LeaveTypeNames
««( 6
)
««6 7
leaveRequest
««7 C
.
««C D
	LeaveType
««D M
.
««M N
LeaveTypeId
««N Y
;
««Y Z
if
   
(
   
leaveRequest
   
.
   
	LeaveType
   &
.
  & '
IsWeekEndHoliDays
  ' 8
==
  9 ;
false
  < A
)
  A B
{
ÀÀ 
leaveAppliedDates
ÃÃ !
.
ÃÃ! "
	RemoveAll
ÃÃ" +
(
ÃÃ+ ,
x
ÃÃ, -
=>
ÃÃ. 0
holidayDates
ÃÃ1 =
.
ÃÃ= >
Contains
ÃÃ> F
(
ÃÃF G
x
ÃÃG H
.
ÃÃH I
Date
ÃÃI M
)
ÃÃM N
)
ÃÃN O
;
ÃÃO P
}
ŒŒ 
leaveAppliedDates
œœ 
=
œœ 
leaveAppliedDates
œœ  1
.
œœ1 2
OrderBy
œœ2 9
(
œœ9 :
x
œœ: ;
=>
œœ< >
x
œœ? @
.
œœ@ A
Date
œœA E
)
œœE F
.
œœF G
ToList
œœG M
(
œœM N
)
œœN O
;
œœO P

leaveDates
–– 
=
–– 
leaveAppliedDates
–– *
;
––* +
if
““ 
(
““ 

leaveDates
““ 
.
““ 
Count
““  
>
““! "
$num
““# $
)
““$ %
{
”” 
	totalDays
‘‘ 
=
‘‘ 

leaveDates
‘‘ &
.
‘‘& '
Count
‘‘' ,
;
‘‘, -
if
÷÷ 
(
÷÷ 

leaveDates
÷÷ 
.
÷÷ 
Count
÷÷ $
>
÷÷% &
$num
÷÷' (
&&
÷÷) +
(
÷÷, -
leaveRequest
÷÷- 9
.
÷÷9 :
FromDateDayTypeId
÷÷: K
==
÷÷L N
LeaveDayTypeNames
÷÷O `
.
÷÷` a

SecondHalf
÷÷a k
.
÷÷k l
ToInt32OrDefault
÷÷l |
(
÷÷| }
)
÷÷} ~
)
÷÷~ 
)÷÷ Ä
{
◊◊ 
	totalDays
ÿÿ 
=
ÿÿ 
	totalDays
ÿÿ  )
-
ÿÿ* +
$num
ÿÿ, /
;
ÿÿ/ 0
}
ŸŸ 
if
⁄⁄ 
(
⁄⁄ 

leaveDates
⁄⁄ 
.
⁄⁄ 
Count
⁄⁄ $
>
⁄⁄% &
$num
⁄⁄' (
&&
⁄⁄) +
(
⁄⁄, -
leaveRequest
⁄⁄- 9
.
⁄⁄9 :
ToDateDayTypeId
⁄⁄: I
==
⁄⁄J L
LeaveDayTypeNames
⁄⁄M ^
.
⁄⁄^ _
	FirstHalf
⁄⁄_ h
.
⁄⁄h i
ToInt32OrDefault
⁄⁄i y
(
⁄⁄y z
)
⁄⁄z {
)
⁄⁄{ |
)
⁄⁄| }
{
€€ 
	totalDays
‹‹ 
=
‹‹ 
	totalDays
‹‹  )
-
‹‹* +
$num
‹‹, /
;
‹‹/ 0
}
›› 
if
ﬁﬁ 
(
ﬁﬁ 

leaveDates
ﬁﬁ 
.
ﬁﬁ 
Count
ﬁﬁ $
==
ﬁﬁ% '
$num
ﬁﬁ( )
&&
ﬁﬁ* ,
leaveRequest
ﬁﬁ- 9
.
ﬁﬁ9 :
	LeaveType
ﬁﬁ: C
.
ﬁﬁC D
CanApplyHalfDay
ﬁﬁD S
&&
ﬁﬁT V
leaveRequest
ﬁﬁW c
.
ﬁﬁc d
FromDateDayTypeId
ﬁﬁd u
!=
ﬁﬁv x 
LeaveDayTypeNamesﬁﬁy ä
.ﬁﬁä ã
FullDayﬁﬁã í
.ﬁﬁí ì 
ToInt32OrDefaultﬁﬁì £
(ﬁﬁ£ §
)ﬁﬁ§ •
)ﬁﬁ• ¶
{
ﬂﬂ 
	totalDays
‡‡ 
=
‡‡ 
	totalDays
‡‡  )
-
‡‡* +
$num
‡‡, /
;
‡‡/ 0
}
·· 
}
„„ 

Dictionary
ÊÊ 
<
ÊÊ 
string
ÊÊ 
,
ÊÊ 
DateTime
ÊÊ '
>
ÊÊ' (
payrollDates
ÊÊ) 5
=
ÊÊ6 7
await
ÊÊ8 =
GetPayrollDates
ÊÊ> M
(
ÊÊM N
leaveRequest
ÊÊN Z
.
ÊÊZ [
FromDate
ÊÊ[ c
)
ÊÊc d
;
ÊÊd e$
payrollPeriodStartDate
ÁÁ "
=
ÁÁ# $
payrollDates
ÁÁ% 1
[
ÁÁ1 2
$str
ÁÁ2 =
]
ÁÁ= >
;
ÁÁ> ?"
payrollPeriodEndDate
ËË  
=
ËË! "
payrollDates
ËË# /
[
ËË/ 0
$str
ËË0 9
]
ËË9 :
;
ËË: ;
if
ÇÇ 
(
ÇÇ 
leaveRequest
ÇÇ 
.
ÇÇ 
	LeaveType
ÇÇ &
.
ÇÇ& '
LeaveTypeId
ÇÇ' 2
==
ÇÇ3 5
LeaveTypeNames
ÇÇ6 D
.
ÇÇD E
ON_DUTY
ÇÇE L
.
ÇÇL M
ToInt32OrDefault
ÇÇM ]
(
ÇÇ] ^
)
ÇÇ^ _
)
ÇÇ_ `
{
ÉÉ 
ApplyingFor
èè 
applyingFor
èè '
=
èè( )
(
èè* +
ApplyingFor
èè+ 6
)
èè6 7
leaveRequest
èè7 C
.
èèC D
ApplyingFor
èèD O
;
èèO P
switch
êê 
(
êê 
applyingFor
êê #
)
êê# $
{
ëë 
case
íí 
ApplyingFor
íí $
.
íí$ %
Self
íí% )
:
íí) *
leaveRequest
ìì $
.
ìì$ %
SelectedEmployees
ìì% 6
=
ìì7 8
new
ìì9 <
List
ìì= A
<
ììA B
int
ììB E
>
ììE F
(
ììF G
)
ììG H
;
ììH I
leaveRequest
îî $
.
îî$ %
SelectedEmployees
îî% 6
.
îî6 7
Add
îî7 :
(
îî: ;
leaveRequest
îî; G
.
îîG H
EmployeeSlno
îîH T
)
îîT U
;
îîU V
break
ïï 
;
ïï 
}
ññ 
List
òò 
<
òò 
LeaveDetail
òò  
>
òò  !
appliedLeaves
òò" /
=
òò0 1
await
òò2 7
GetEmployeeLeaves
òò8 I
(
òòI J
leaveRequest
òòJ V
,
òòV W$
payrollPeriodStartDate
òòX n
,
òòn o#
payrollPeriodEndDateòòp Ñ
)òòÑ Ö
;òòÖ Ü
response
ôô 
=
ôô (
CheckForOverLappingPeriods
ôô 5
(
ôô5 6

leaveDates
ôô6 @
,
ôô@ A
leaveRequest
ôôB N
,
ôôN O
appliedLeaves
ôôP ]
)
ôô] ^
;
ôô^ _
if
öö 
(
öö 
!
öö 
response
öö 
.
öö 
Response
öö &
)
öö& '
{
õõ 
return
úú 
response
úú #
;
úú# $
}
ùù 
isSaved
üü 
=
üü 
await
üü 
ApplyOnDuty
üü  +
(
üü+ ,

leaveDates
üü, 6
,
üü6 7
	totalDays
üü8 A
,
üüA B
leaveRequest
üüC O
.
üüO P
SelectedEmployees
üüP a
,
üüa b
leaveRequest
üüc o
.
üüo p
EmployeeSlno
üüp |
,
üü| }
leaveRequestüü~ ä
)üüä ã
;üüã å
if
¢¢ 
(
¢¢ 
isSaved
¢¢ 
)
¢¢ 
{
££ 
response
§§ 
=
§§ 
new
§§ "
EmpLeaveResponse
§§# 3
{
•• 
Response
¶¶  
=
¶¶! "
true
¶¶# '
,
¶¶' (
Message
ßß 
=
ßß  !
$str
ßß" O
}
®® 
;
®® 
}
©© 
}
´´ 
else
¨¨ 
{
≠≠ 
List
ÆÆ 
<
ÆÆ 
EmpLeaveBalance
ÆÆ $
>
ÆÆ$ %
leaveBalances
ÆÆ& 3
=
ÆÆ4 5
await
ÆÆ6 ;%
GetEmployeeLeaveBalance
ÆÆ< S
(
ÆÆS T
leaveRequest
ÆÆT `
.
ÆÆ` a
EmployeeSlno
ÆÆa m
)
ÆÆm n
;
ÆÆn o
EmpLeaveBalance
ØØ "
employeeLeaveBalance
ØØ  4
=
ØØ5 6
leaveBalances
ØØ7 D
.
ØØD E
Where
ØØE J
(
ØØJ K
x
ØØK L
=>
ØØM O
x
ØØP Q
.
ØØQ R
LeaveTypeId
ØØR ]
==
ØØ^ `
leaveRequest
ØØa m
.
ØØm n
	LeaveType
ØØn w
.
ØØw x
LeaveTypeIdØØx É
)ØØÉ Ñ
.ØØÑ Ö
FirstOrDefaultØØÖ ì
(ØØì î
)ØØî ï
;ØØï ñ
if
∞∞ 
(
∞∞ "
employeeLeaveBalance
∞∞ (
!=
∞∞) +
null
∞∞, 0
&&
∞∞1 3"
employeeLeaveBalance
∞∞4 H
.
∞∞H I#
AvailableLeaveBalance
∞∞I ^
<
∞∞_ `
	totalDays
∞∞a j
)
∞∞j k
{
±± 
response
≤≤ 
=
≤≤ 
new
≤≤ "
EmpLeaveResponse
≤≤# 3
{
≥≥ 
Response
¥¥  
=
¥¥! "
false
¥¥# (
,
¥¥( )
Message
µµ 
=
µµ  !
$str
µµ" O
}
∂∂ 
;
∂∂ 
return
∑∑ 
response
∑∑ #
;
∑∑# $
}
∏∏ 
List
ææ 
<
ææ 
LeaveDetail
ææ  
>
ææ  !
appliedLeaves
ææ" /
=
ææ0 1
await
ææ2 7
GetEmployeeLeaves
ææ8 I
(
ææI J
leaveRequest
ææJ V
,
ææV W$
payrollPeriodStartDate
ææX n
,
ææn o#
payrollPeriodEndDateææp Ñ
)ææÑ Ö
;ææÖ Ü
response
øø 
=
øø (
CheckForOverLappingPeriods
øø 5
(
øø5 6
leaveAppliedDates
øø6 G
,
øøG H
leaveRequest
øøI U
,
øøU V
appliedLeaves
øøW d
)
øød e
;
øøe f
if
¿¿ 
(
¿¿ 
!
¿¿ 
response
¿¿ 
.
¿¿ 
Response
¿¿ &
)
¿¿& '
{
¡¡ 
return
¬¬ 
response
¬¬ #
;
¬¬# $
}
√√ 
response
≈≈ 
=
≈≈ 
await
≈≈  #
ValidateLeavePolicies
≈≈! 6
(
≈≈6 7

leaveDates
≈≈7 A
,
≈≈A B
leaveRequest
≈≈C O
,
≈≈O P
	totalDays
≈≈Q Z
,
≈≈Z [$
payrollPeriodStartDate
≈≈\ r
,
≈≈r s#
payrollPeriodEndDate≈≈t à
)≈≈à â
;≈≈â ä
if
∆∆ 
(
∆∆ 
response
∆∆ 
.
∆∆ 
Response
∆∆ %
&&
∆∆& (
	totalDays
∆∆) 2
>
∆∆3 4
$num
∆∆5 6
)
∆∆6 7
{
«« 
await
»» 
	LeaveSave
»» #
(
»»# $
leaveRequest
»»$ 0
,
»»0 1
	totalDays
»»2 ;
,
»»; <
holidayDates
»»= I
,
»»I J

leaveDates
»»K U
,
»»U V
leaveAppliedDates
»»W h
)
»»h i
;
»»i j
}
…… 
else
   
{
ÀÀ 
return
—— 
response
—— #
;
——# $
}
““ 
}
”” 
return
’’ 
response
’’ 
;
’’ 
}
÷÷ 	
private
ÿÿ 
async
ÿÿ 
Task
ÿÿ 
<
ÿÿ 

Dictionary
ÿÿ %
<
ÿÿ% &
string
ÿÿ& ,
,
ÿÿ, -
DateTime
ÿÿ. 6
>
ÿÿ6 7
>
ÿÿ7 8
GetPayrollDates
ÿÿ9 H
(
ÿÿH I
DateTime
ÿÿI Q
fromDate
ÿÿR Z
)
ÿÿZ [
{
ŸŸ 	
PayrollPeriod
⁄⁄ 
payrollPeriod
⁄⁄ '
=
⁄⁄( )
null
⁄⁄* .
;
⁄⁄. /

Dictionary
€€ 
<
€€ 
string
€€ 
,
€€ 
DateTime
€€ '
>
€€' (
payrollDates
€€) 5
=
€€6 7
new
€€8 ;

Dictionary
€€< F
<
€€F G
string
€€G M
,
€€M N
DateTime
€€O W
>
€€W X
(
€€X Y
)
€€Y Z
;
€€Z [
using
›› 
(
›› 
var
›› 

connection
›› !
=
››" #
new
››$ '%
PayrollPeriodRepository
››( ?
(
››? @
this
››@ D
.
››D E
configuration
››E R
)
››R S
)
››S T
{
ﬁﬁ 
payrollDates
ﬂﬂ 
=
ﬂﬂ 
await
ﬂﬂ $

connection
ﬂﬂ% /
.
ﬂﬂ/ 0
GetPayrollDates
ﬂﬂ0 ?
(
ﬂﬂ? @
fromDate
ﬂﬂ@ H
)
ﬂﬂH I
;
ﬂﬂI J
if
‡‡ 
(
‡‡ 
payrollPeriod
‡‡ !
!=
‡‡" $
null
‡‡% )
)
‡‡) *
{
·· 
payrollDates
‚‚  
.
‚‚  !
Add
‚‚! $
(
‚‚$ %
$str
‚‚% 0
,
‚‚0 1
payrollPeriod
‚‚2 ?
.
‚‚? @
FromDate
‚‚@ H
)
‚‚H I
;
‚‚I J
payrollDates
„„  
.
„„  !
Add
„„! $
(
„„$ %
$str
„„% .
,
„„. /
payrollPeriod
„„0 =
.
„„= >
ToDate
„„> D
)
„„D E
;
„„E F
}
‰‰ 
}
ÊÊ 
return
ÁÁ 
payrollDates
ÁÁ 
;
ÁÁ  
}
ÈÈ 	
public
ÎÎ 
async
ÎÎ 
Task
ÎÎ 
<
ÎÎ 
List
ÎÎ 
<
ÎÎ 
LeaveDetail
ÎÎ *
>
ÎÎ* +
>
ÎÎ+ ,"
GetLeavesForApproval
ÎÎ- A
(
ÎÎA B
int
ÎÎB E
employeeSlno
ÎÎF R
)
ÎÎR S
{
ÏÏ 	
List
ÌÌ 
<
ÌÌ 
LeaveDetail
ÌÌ 
>
ÌÌ 
employeeList
ÌÌ *
=
ÌÌ+ ,
null
ÌÌ- 1
;
ÌÌ1 2
using
ÓÓ 
(
ÓÓ 
var
ÓÓ 

connection
ÓÓ !
=
ÓÓ" #
await
ÓÓ$ )
base
ÓÓ* .
.
ÓÓ. /
CreateConnection
ÓÓ/ ?
(
ÓÓ? @
DbSchema
ÓÓ@ H
.
ÓÓH I
PORTAL
ÓÓI O
)
ÓÓO P
)
ÓÓP Q
{
ÔÔ %
OracleDynamicParameters
 '

parameters
( 2
=
3 4
new
5 8%
OracleDynamicParameters
9 P
(
P Q
)
Q R
;
R S

parameters
ÒÒ 
.
ÒÒ 
Add
ÒÒ 
(
ÒÒ 
name
ÒÒ #
:
ÒÒ# $
$str
ÒÒ% 4
,
ÒÒ4 5
employeeSlno
ÒÒ6 B
,
ÒÒB C
dbType
ÒÒD J
:
ÒÒJ K
OracleMappingType
ÒÒL ]
.
ÒÒ] ^
Int32
ÒÒ^ c
,
ÒÒc d
	direction
ÒÒe n
:
ÒÒn o!
ParameterDirectionÒÒp Ç
.ÒÒÇ É
InputÒÒÉ à
)ÒÒà â
;ÒÒâ ä

parameters
ÚÚ 
.
ÚÚ 
Add
ÚÚ 
(
ÚÚ 
name
ÚÚ #
:
ÚÚ# $
$str
ÚÚ% 7
,
ÚÚ7 8
LeaveStatusNames
ÚÚ9 I
.
ÚÚI J 
PendingForApproval
ÚÚJ \
.
ÚÚ\ ]
ToInt32OrDefault
ÚÚ] m
(
ÚÚm n
)
ÚÚn o
,
ÚÚo p
dbType
ÚÚq w
:
ÚÚw x 
OracleMappingTypeÚÚy ä
.ÚÚä ã
Int32ÚÚã ê
,ÚÚê ë
	directionÚÚí õ
:ÚÚõ ú"
ParameterDirectionÚÚù Ø
.ÚÚØ ∞
InputÚÚ∞ µ
)ÚÚµ ∂
;ÚÚ∂ ∑

parameters
ÛÛ 
.
ÛÛ 
Add
ÛÛ 
(
ÛÛ 
name
ÛÛ #
:
ÛÛ# $
$str
ÛÛ% .
,
ÛÛ. /
dbType
ÛÛ0 6
:
ÛÛ6 7
OracleMappingType
ÛÛ8 I
.
ÛÛI J
	RefCursor
ÛÛJ S
,
ÛÛS T
	direction
ÛÛU ^
:
ÛÛ^ _ 
ParameterDirection
ÛÛ` r
.
ÛÛr s
Output
ÛÛs y
)
ÛÛy z
;
ÛÛz {
employeeList
ÙÙ 
=
ÙÙ 
(
ÙÙ  
await
ÙÙ  %

connection
ÙÙ& 0
.
ÙÙ0 1

QueryAsync
ÙÙ1 ;
<
ÙÙ; <
LeaveDetail
ÙÙ< G
>
ÙÙG H
(
ÙÙH I 
DatabaseProcedures
ÙÙI [
.
ÙÙ[ \%
GET_LEAVES_FOR_APPROVAL
ÙÙ\ s
,
ÙÙs t

parameters
ÙÙu 
,ÙÙ Ä
commandTypeÙÙÅ å
:ÙÙå ç
CommandTypeÙÙé ô
.ÙÙô ö
StoredProcedureÙÙö ©
)ÙÙ© ™
)ÙÙ™ ´
.ÙÙ´ ¨
ToListÙÙ¨ ≤
(ÙÙ≤ ≥
)ÙÙ≥ ¥
;ÙÙ¥ µ
}
ıı 
foreach
ˆˆ 
(
ˆˆ 
var
ˆˆ 
item
ˆˆ 
in
ˆˆ  
employeeList
ˆˆ! -
)
ˆˆ- .
{
˜˜ 
string
¯¯ 
[
¯¯ 
]
¯¯ 

imagesPath
¯¯ #
=
¯¯$ %
null
¯¯& *
;
¯¯* +
StringBuilder
˘˘ 
	imagePath
˘˘ '
=
˘˘( )
new
˘˘* -
StringBuilder
˘˘. ;
(
˘˘; <
)
˘˘< =
;
˘˘= >

imagesPath
˙˙ 
=
˙˙ 
item
˙˙ !
.
˙˙! "
	PhotoPath
˙˙" +
.
˙˙+ ,
Split
˙˙, 1
(
˙˙1 2
$char
˙˙2 5
)
˙˙5 6
;
˙˙6 7
	imagePath
˚˚ 
.
˚˚ 
AppendFormat
˚˚ &
(
˚˚& '
$str
˚˚' 7
,
˚˚7 8!
ApplicationSettings
˚˚9 L
.
˚˚L M
Current
˚˚M T
.
˚˚T U
ProfilePath
˚˚U `
,
˚˚` a

imagesPath
˚˚b l
[
˚˚l m
$num
˚˚m n
]
˚˚n o
)
˚˚o p
;
˚˚p q
item
¸¸ 
.
¸¸ 
	PhotoPath
¸¸ 
=
¸¸  
	imagePath
¸¸! *
.
¸¸* +
ToString
¸¸+ 3
(
¸¸3 4
)
¸¸4 5
;
¸¸5 6
}
˝˝ 
return
˛˛ 
employeeList
˛˛ 
;
˛˛  
}
ˇˇ 	
public
ÄÄ 
async
ÄÄ 
Task
ÄÄ 
<
ÄÄ 
List
ÄÄ 
<
ÄÄ 
GetTeamLeavesData
ÄÄ 0
>
ÄÄ0 1
>
ÄÄ1 2
GetMyTeamLeaves
ÄÄ3 B
(
ÄÄB C!
LeaveSearchCriteria
ÄÄC V
searchCriteria
ÄÄW e
)
ÄÄe f
{
ÅÅ 	
List
ÇÇ 
<
ÇÇ 
GetTeamLeavesData
ÇÇ "
>
ÇÇ" #
employeeList
ÇÇ$ 0
=
ÇÇ1 2
null
ÇÇ3 7
;
ÇÇ7 8
using
ÉÉ 
(
ÉÉ 
var
ÉÉ 

connection
ÉÉ !
=
ÉÉ" #
await
ÉÉ$ )
base
ÉÉ* .
.
ÉÉ. /
CreateConnection
ÉÉ/ ?
(
ÉÉ? @
DbSchema
ÉÉ@ H
.
ÉÉH I
PORTAL
ÉÉI O
)
ÉÉO P
)
ÉÉP Q
{
ÑÑ %
OracleDynamicParameters
ÖÖ '

parameters
ÖÖ( 2
=
ÖÖ3 4
new
ÖÖ5 8%
OracleDynamicParameters
ÖÖ9 P
(
ÖÖP Q
)
ÖÖQ R
;
ÖÖR S

parameters
ÜÜ 
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
name
ÜÜ #
:
ÜÜ# $
$str
ÜÜ% 4
,
ÜÜ4 5
searchCriteria
ÜÜ6 D
.
ÜÜD E
EmployeeSlno
ÜÜE Q
,
ÜÜQ R
dbType
ÜÜS Y
:
ÜÜY Z
OracleMappingType
ÜÜ[ l
.
ÜÜl m
Int32
ÜÜm r
,
ÜÜr s
	direction
ÜÜt }
:
ÜÜ} ~!
ParameterDirectionÜÜ ë
.ÜÜë í
InputÜÜí ó
)ÜÜó ò
;ÜÜò ô

parameters
áá 
.
áá 
Add
áá 
(
áá 
name
áá #
:
áá# $
$str
áá% 1
,
áá1 2
searchCriteria
áá3 A
.
ááA B
FromDate
ááB J
,
ááJ K
dbType
ááL R
:
ááR S
OracleMappingType
ááT e
.
ááe f
Date
ááf j
,
ááj k
	direction
áál u
:
ááu v!
ParameterDirectionááw â
.ááâ ä
Inputááä è
)ááè ê
;ááê ë

parameters
àà 
.
àà 
Add
àà 
(
àà 
name
àà #
:
àà# $
$str
àà% 0
,
àà0 1
searchCriteria
àà2 @
.
àà@ A
ToDate
ààA G
,
ààG H
dbType
ààI O
:
ààO P
OracleMappingType
ààQ b
.
ààb c
Date
ààc g
,
ààg h
	direction
àài r
:
ààr s!
ParameterDirectionààt Ü
.ààÜ á
Inputààá å
)ààå ç
;ààç é

parameters
ââ 
.
ââ 
Add
ââ 
(
ââ 
name
ââ #
:
ââ# $
$str
ââ% .
,
ââ. /
dbType
ââ0 6
:
ââ6 7
OracleMappingType
ââ8 I
.
ââI J
	RefCursor
ââJ S
,
ââS T
	direction
ââU ^
:
ââ^ _ 
ParameterDirection
ââ` r
.
ââr s
Output
ââs y
)
âây z
;
ââz {
employeeList
ää 
=
ää 
(
ää  
await
ää  %

connection
ää& 0
.
ää0 1

QueryAsync
ää1 ;
<
ää; <
GetTeamLeavesData
ää< M
>
ääM N
(
ääN O 
DatabaseProcedures
ääO a
.
ääa b
GET_TEAM_LEAVES
ääb q
,
ääq r

parameters
ääs }
,
ää} ~
commandTypeää ä
:äää ã
CommandTypeääå ó
.ääó ò
StoredProcedureääò ß
)ääß ®
)ää® ©
.ää© ™
ToListää™ ∞
(ää∞ ±
)ää± ≤
;ää≤ ≥
}
ãã 
return
îî 
employeeList
îî 
;
îî  
}
ïï 	
public
ññ 
async
ññ 
Task
ññ 
<
ññ 
List
ññ 
<
ññ "
GetTeamEmpLeavesData
ññ 3
>
ññ3 4
>
ññ4 5%
GetMyTeamEmployeeLeaves
ññ6 M
(
ññM N!
LeaveSearchCriteria
ññN a
searchCriteria
ññb p
)
ññp q
{
óó 	
List
òò 
<
òò "
GetTeamEmpLeavesData
òò %
>
òò% &
	leaveList
òò' 0
=
òò1 2
null
òò3 7
;
òò7 8
using
ôô 
(
ôô 
var
ôô 

connection
ôô !
=
ôô" #
await
ôô$ )
base
ôô* .
.
ôô. /
CreateConnection
ôô/ ?
(
ôô? @
DbSchema
ôô@ H
.
ôôH I
PORTAL
ôôI O
)
ôôO P
)
ôôP Q
{
öö %
OracleDynamicParameters
õõ '

parameters
õõ( 2
=
õõ3 4
new
õõ5 8%
OracleDynamicParameters
õõ9 P
(
õõP Q
)
õõQ R
;
õõR S

parameters
úú 
.
úú 
Add
úú 
(
úú 
name
úú #
:
úú# $
$str
úú% 4
,
úú4 5
searchCriteria
úú6 D
.
úúD E
EmployeeSlno
úúE Q
,
úúQ R
dbType
úúS Y
:
úúY Z
OracleMappingType
úú[ l
.
úúl m
Int32
úúm r
,
úúr s
	direction
úút }
:
úú} ~!
ParameterDirectionúú ë
.úúë í
Inputúúí ó
)úúó ò
;úúò ô

parameters
ùù 
.
ùù 
Add
ùù 
(
ùù 
name
ùù #
:
ùù# $
$str
ùù% 1
,
ùù1 2
searchCriteria
ùù3 A
.
ùùA B
FromDate
ùùB J
,
ùùJ K
dbType
ùùL R
:
ùùR S
OracleMappingType
ùùT e
.
ùùe f
Date
ùùf j
,
ùùj k
	direction
ùùl u
:
ùùu v!
ParameterDirectionùùw â
.ùùâ ä
Inputùùä è
)ùùè ê
;ùùê ë

parameters
ûû 
.
ûû 
Add
ûû 
(
ûû 
name
ûû #
:
ûû# $
$str
ûû% 0
,
ûû0 1
searchCriteria
ûû2 @
.
ûû@ A
ToDate
ûûA G
,
ûûG H
dbType
ûûI O
:
ûûO P
OracleMappingType
ûûQ b
.
ûûb c
Date
ûûc g
,
ûûg h
	direction
ûûi r
:
ûûr s!
ParameterDirectionûût Ü
.ûûÜ á
Inputûûá å
)ûûå ç
;ûûç é

parameters
üü 
.
üü 
Add
üü 
(
üü 
name
üü #
:
üü# $
$str
üü% .
,
üü. /
dbType
üü0 6
:
üü6 7
OracleMappingType
üü8 I
.
üüI J
	RefCursor
üüJ S
,
üüS T
	direction
üüU ^
:
üü^ _ 
ParameterDirection
üü` r
.
üür s
Output
üüs y
)
üüy z
;
üüz {
	leaveList
†† 
=
†† 
(
†† 
await
†† "

connection
††# -
.
††- .

QueryAsync
††. 8
<
††8 9"
GetTeamEmpLeavesData
††9 M
>
††M N
(
††N O 
DatabaseProcedures
††O a
.
††a b!
GET_TEAM_EMP_LEAVES
††b u
,
††u v

parameters††w Å
,††Å Ç
commandType††É é
:††é è
CommandType††ê õ
.††õ ú
StoredProcedure††ú ´
)††´ ¨
)††¨ ≠
.††≠ Æ
ToList††Æ ¥
(††¥ µ
)††µ ∂
;††∂ ∑
}
°° 
return
¢¢ 
	leaveList
¢¢ 
;
¢¢ 
}
££ 	
public
•• 
async
•• 
Task
•• 
<
•• 
List
•• 
<
•• 
LeaveDetail
•• *
>
••* +
>
••+ ,&
GetManagerApprovalLeaves
••- E
(
••E F
int
••F I
employeeSlno
••J V
)
••V W
{
¶¶ 	
List
ßß 
<
ßß 
LeaveDetail
ßß 
>
ßß 
	empLeaves
ßß '
=
ßß( )
null
ßß* .
;
ßß. /
using
®® 
(
®® 
var
®® 

connection
®® !
=
®®" #
await
®®$ )
base
®®* .
.
®®. /
CreateConnection
®®/ ?
(
®®? @
DbSchema
®®@ H
.
®®H I
PORTAL
®®I O
)
®®O P
)
®®P Q
{
©© %
OracleDynamicParameters
™™ '

parameters
™™( 2
=
™™3 4
new
™™5 8%
OracleDynamicParameters
™™9 P
(
™™P Q
)
™™Q R
;
™™R S

parameters
´´ 
.
´´ 
Add
´´ 
(
´´ 
name
´´ #
:
´´# $
$str
´´% 4
,
´´4 5
employeeSlno
´´6 B
,
´´B C
dbType
´´D J
:
´´J K
OracleMappingType
´´L ]
.
´´] ^
Int32
´´^ c
,
´´c d
	direction
´´e n
:
´´n o!
ParameterDirection´´p Ç
.´´Ç É
Input´´É à
)´´à â
;´´â ä

parameters
¨¨ 
.
¨¨ 
Add
¨¨ 
(
¨¨ 
name
¨¨ #
:
¨¨# $
$str
¨¨% .
,
¨¨. /
dbType
¨¨0 6
:
¨¨6 7
OracleMappingType
¨¨8 I
.
¨¨I J
	RefCursor
¨¨J S
,
¨¨S T
	direction
¨¨U ^
:
¨¨^ _ 
ParameterDirection
¨¨` r
.
¨¨r s
Output
¨¨s y
)
¨¨y z
;
¨¨z {
	empLeaves
≠≠ 
=
≠≠ 
(
≠≠ 
await
≠≠ "

connection
≠≠# -
.
≠≠- .

QueryAsync
≠≠. 8
<
≠≠8 9
LeaveDetail
≠≠9 D
>
≠≠D E
(
≠≠E F 
DatabaseProcedures
≠≠F X
.
≠≠X Y,
SP_GET_MNGR_APRVL_LEAVE_RECENT
≠≠Y w
,
≠≠w x

parameters≠≠y É
,≠≠É Ñ
commandType≠≠Ö ê
:≠≠ê ë
CommandType≠≠í ù
.≠≠ù û
StoredProcedure≠≠û ≠
)≠≠≠ Æ
)≠≠Æ Ø
.≠≠Ø ∞
ToList≠≠∞ ∂
(≠≠∂ ∑
)≠≠∑ ∏
;≠≠∏ π
	empLeaves
ÆÆ 
=
ÆÆ 
	empLeaves
ÆÆ %
.
ÆÆ% &
OrderByDescending
ÆÆ& 7
(
ÆÆ7 8
x
ÆÆ8 9
=>
ÆÆ: <
x
ÆÆ= >
.
ÆÆ> ?
	LeaveFrom
ÆÆ? H
)
ÆÆH I
.
ÆÆI J
ToList
ÆÆJ P
(
ÆÆP Q
)
ÆÆQ R
;
ÆÆR S
}
ØØ 
return
∞∞ 
	empLeaves
∞∞ 
;
∞∞ 
}
±± 	
public
≤≤ 
async
≤≤ 
Task
≤≤ 
<
≤≤ 
bool
≤≤ 
>
≤≤ 
ApplyOnDuty
≤≤  +
(
≤≤+ ,
List
≤≤, 0
<
≤≤0 1
DateTime
≤≤1 9
>
≤≤9 :
selectedDates
≤≤; H
,
≤≤H I
double
≤≤J P
	totalDays
≤≤Q Z
,
≤≤Z [
List
≤≤\ `
<
≤≤` a
int
≤≤a d
>
≤≤d e
selectedEmployees
≤≤f w
,
≤≤w x
int
≤≤y |!
reportingManagerId≤≤} è
,≤≤è ê
EmployeeLeave≤≤ë û
leaveRequest≤≤ü ´
)≤≤´ ¨
{
≥≥ 	
bool
¥¥ 
resp
¥¥ 
=
¥¥ 
false
¥¥ 
;
¥¥ 
bool
µµ 
isSaveWorkFlow
µµ 
=
µµ  !
false
µµ" '
;
µµ' (
int
∂∂ 
savedRecords
∂∂ 
=
∂∂ 
$num
∂∂  
;
∂∂  !%
OracleDynamicParameters
∑∑ #

parameters
∑∑$ .
=
∑∑/ 0
null
∑∑1 5
;
∑∑5 6
using
∏∏ 
(
∏∏ 
IDbConnection
∏∏  

connection
∏∏! +
=
∏∏, -
await
∏∏. 3
base
∏∏4 8
.
∏∏8 9
CreateConnection
∏∏9 I
(
∏∏I J
DbSchema
∏∏J R
.
∏∏R S
PORTAL
∏∏S Y
)
∏∏Y Z
)
∏∏Z [
{
ππ 
using
∫∫ 
(
∫∫ 
var
∫∫ 
tran
∫∫ 
=
∫∫  !

connection
∫∫" ,
.
∫∫, -
BeginTransaction
∫∫- =
(
∫∫= >
)
∫∫> ?
)
∫∫? @
{
ªª 
foreach
ºº 
(
ºº 
int
ºº  
employeeSlno
ºº! -
in
ºº. 0
selectedEmployees
ºº1 B
)
ººB C
{
ΩΩ 

parameters
ææ "
=
ææ# $
new
ææ% (%
OracleDynamicParameters
ææ) @
(
ææ@ A
)
ææA B
;
ææB C

parameters
øø "
.
øø" #
Add
øø# &
(
øø& '
name
øø' +
:
øø+ ,
$str
øø- M
,
øøM N
leaveRequest
øøO [
.
øø[ \
	LeaveType
øø\ e
.
øøe f
EntitlementId
øøf s
,
øøs t
dbType
øøu {
:
øø{ | 
OracleMappingTypeøø} é
.øøé è
Int32øøè î
,øøî ï
	directionøøñ ü
:øøü †"
ParameterDirectionøø° ≥
.øø≥ ¥
Inputøø¥ π
)øøπ ∫
;øø∫ ª

parameters
¿¿ "
.
¿¿" #
Add
¿¿# &
(
¿¿& '
name
¿¿' +
:
¿¿+ ,
$str
¿¿- <
,
¿¿< =
employeeSlno
¿¿> J
,
¿¿J K
dbType
¿¿L R
:
¿¿R S
OracleMappingType
¿¿T e
.
¿¿e f
Int32
¿¿f k
,
¿¿k l
	direction
¿¿m v
:
¿¿v w!
ParameterDirection¿¿x ä
.¿¿ä ã
Input¿¿ã ê
)¿¿ê ë
;¿¿ë í

parameters
¡¡ "
.
¡¡" #
Add
¡¡# &
(
¡¡& '
name
¡¡' +
:
¡¡+ ,
$str
¡¡- ?
,
¡¡? @
leaveRequest
¡¡A M
.
¡¡M N
FromDate
¡¡N V
,
¡¡V W
dbType
¡¡X ^
:
¡¡^ _
OracleMappingType
¡¡` q
.
¡¡q r
Date
¡¡r v
,
¡¡v w
	direction¡¡x Å
:¡¡Å Ç"
ParameterDirection¡¡É ï
.¡¡ï ñ
Input¡¡ñ õ
)¡¡õ ú
;¡¡ú ù

parameters
¬¬ "
.
¬¬" #
Add
¬¬# &
(
¬¬& '
name
¬¬' +
:
¬¬+ ,
$str
¬¬- =
,
¬¬= >
leaveRequest
¬¬? K
.
¬¬K L
ToDate
¬¬L R
,
¬¬R S
dbType
¬¬T Z
:
¬¬Z [
OracleMappingType
¬¬\ m
.
¬¬m n
Date
¬¬n r
,
¬¬r s
	direction
¬¬t }
:
¬¬} ~!
ParameterDirection¬¬ ë
.¬¬ë í
Input¬¬í ó
)¬¬ó ò
;¬¬ò ô

parameters
√√ "
.
√√" #
Add
√√# &
(
√√& '
name
√√' +
:
√√+ ,
$str
√√- =
,
√√= >
leaveRequest
√√? K
.
√√K L
	LeaveType
√√L U
.
√√U V
LeaveTypeId
√√V a
,
√√a b
dbType
√√c i
:
√√i j
OracleMappingType
√√k |
.
√√| }
Int32√√} Ç
,√√Ç É
	direction√√Ñ ç
:√√ç é"
ParameterDirection√√è °
.√√° ¢
Input√√¢ ß
)√√ß ®
;√√® ©

parameters
ƒƒ "
.
ƒƒ" #
Add
ƒƒ# &
(
ƒƒ& '
name
ƒƒ' +
:
ƒƒ+ ,
$str
ƒƒ- 7
,
ƒƒ7 8
leaveRequest
ƒƒ9 E
.
ƒƒE F
Remarks
ƒƒF M
,
ƒƒM N
dbType
ƒƒO U
:
ƒƒU V
OracleMappingType
ƒƒW h
.
ƒƒh i
Varchar2
ƒƒi q
,
ƒƒq r
	direction
ƒƒs |
:
ƒƒ| }!
ParameterDirectionƒƒ~ ê
.ƒƒê ë
Inputƒƒë ñ
)ƒƒñ ó
;ƒƒó ò

parameters
≈≈ "
.
≈≈" #
Add
≈≈# &
(
≈≈& '
name
≈≈' +
:
≈≈+ ,
$str
≈≈- A
,
≈≈A B
leaveRequest
≈≈C O
.
≈≈O P
FromDateDayTypeId
≈≈P a
,
≈≈a b
dbType
≈≈c i
:
≈≈i j
OracleMappingType
≈≈k |
.
≈≈| }
Int32≈≈} Ç
,≈≈Ç É
	direction≈≈Ñ ç
:≈≈ç é"
ParameterDirection≈≈è °
.≈≈° ¢
Input≈≈¢ ß
)≈≈ß ®
;≈≈® ©

parameters
∆∆ "
.
∆∆" #
Add
∆∆# &
(
∆∆& '
name
∆∆' +
:
∆∆+ ,
$str
∆∆- @
,
∆∆@ A
	totalDays
∆∆B K
,
∆∆K L
dbType
∆∆M S
:
∆∆S T
OracleMappingType
∆∆U f
.
∆∆f g
Decimal
∆∆g n
,
∆∆n o
	direction
∆∆p y
:
∆∆y z!
ParameterDirection∆∆{ ç
.∆∆ç é
Input∆∆é ì
)∆∆ì î
;∆∆î ï

parameters
«« "
.
««" #
Add
««# &
(
««& '
name
««' +
:
««+ ,
$str
««- E
,
««E F
$num
««G H
,
««H I
dbType
««J P
:
««P Q
OracleMappingType
««R c
.
««c d
Int32
««d i
,
««i j
	direction
««k t
:
««t u!
ParameterDirection««v à
.««à â
Input««â é
)««é è
;««è ê

parameters
»» "
.
»»" #
Add
»»# &
(
»»& '
name
»»' +
:
»»+ ,
$str
»»- >
,
»»> ?
$num
»»@ A
,
»»A B
dbType
»»C I
:
»»I J
OracleMappingType
»»K \
.
»»\ ]
Int32
»»] b
,
»»b c
	direction
»»d m
:
»»m n!
ParameterDirection»»o Å
.»»Å Ç
Input»»Ç á
)»»á à
;»»à â

parameters
…… "
.
……" #
Add
……# &
(
……& '
name
……' +
:
……+ ,
$str
……- A
,
……A B
$num
……C D
,
……D E
dbType
……F L
:
……L M
OracleMappingType
……N _
.
……_ `
Int32
……` e
,
……e f
	direction
……g p
:
……p q!
ParameterDirection……r Ñ
.……Ñ Ö
Input……Ö ä
)……ä ã
;……ã å

parameters
   "
.
  " #
Add
  # &
(
  & '
name
  ' +
:
  + ,
$str
  - ?
,
  ? @
leaveRequest
  A M
.
  M N
ApplyingFor
  N Y
==
  Z \
ApplyingFor
  ] h
.
  h i
Self
  i m
.
  m n
ToInt32OrDefault
  n ~
(
  ~ 
)   Ä
?  Å Ç 
LeaveStatusNames  É ì
.  ì î"
PendingForApproval  î ¶
.  ¶ ß 
ToInt32OrDefault  ß ∑
(  ∑ ∏
)  ∏ π
:  ∫ ª 
LeaveStatusNames  º Ã
.  Ã Õ
Approved  Õ ’
.  ’ ÷ 
ToInt32OrDefault  ÷ Ê
(  Ê Á
)  Á Ë
,  Ë È
dbType  Í 
:   Ò!
OracleMappingType  Ú É
.  É Ñ
Int32  Ñ â
,  â ä
	direction  ã î
:  î ï"
ParameterDirection  ñ ®
.  ® ©
Input  © Æ
)  Æ Ø
;  Ø ∞

parameters
ÀÀ "
.
ÀÀ" #
Add
ÀÀ# &
(
ÀÀ& '
name
ÀÀ' +
:
ÀÀ+ ,
$str
ÀÀ- E
,
ÀÀE F
leaveRequest
ÀÀG S
.
ÀÀS T
FromDateDayTypeId
ÀÀT e
,
ÀÀe f
dbType
ÀÀg m
:
ÀÀm n 
OracleMappingTypeÀÀo Ä
.ÀÀÄ Å
Int32ÀÀÅ Ü
,ÀÀÜ á
	directionÀÀà ë
:ÀÀë í"
ParameterDirectionÀÀì •
.ÀÀ• ¶
InputÀÀ¶ ´
)ÀÀ´ ¨
;ÀÀ¨ ≠

parameters
ÃÃ "
.
ÃÃ" #
Add
ÃÃ# &
(
ÃÃ& '
name
ÃÃ' +
:
ÃÃ+ ,
$str
ÃÃ- C
,
ÃÃC D
leaveRequest
ÃÃE Q
.
ÃÃQ R
ToDateDayTypeId
ÃÃR a
,
ÃÃa b
dbType
ÃÃc i
:
ÃÃi j
OracleMappingType
ÃÃk |
.
ÃÃ| }
Int32ÃÃ} Ç
,ÃÃÇ É
	directionÃÃÑ ç
:ÃÃç é"
ParameterDirectionÃÃè °
.ÃÃ° ¢
InputÃÃ¢ ß
)ÃÃß ®
;ÃÃ® ©

parameters
ÕÕ "
.
ÕÕ" #
Add
ÕÕ# &
(
ÕÕ& '
name
ÕÕ' +
:
ÕÕ+ ,
$str
ÕÕ- ;
,
ÕÕ; <
Guid
ÕÕ= A
.
ÕÕA B
NewGuid
ÕÕB I
(
ÕÕI J
)
ÕÕJ K
.
ÕÕK L
ToString
ÕÕL T
(
ÕÕT U
)
ÕÕU V
,
ÕÕV W
dbType
ÕÕX ^
:
ÕÕ^ _
OracleMappingType
ÕÕ` q
.
ÕÕq r
Varchar2
ÕÕr z
,
ÕÕz {
	directionÕÕ| Ö
:ÕÕÖ Ü"
ParameterDirectionÕÕá ô
.ÕÕô ö
InputÕÕö ü
)ÕÕü †
;ÕÕ† °

parameters
ŒŒ "
.
ŒŒ" #
Add
ŒŒ# &
(
ŒŒ& '
name
ŒŒ' +
:
ŒŒ+ ,
$str
ŒŒ- =
,
ŒŒ= >
leaveRequest
ŒŒ? K
.
ŒŒK L
CompOffDate
ŒŒL W
,
ŒŒW X
dbType
ŒŒY _
:
ŒŒ_ `
OracleMappingType
ŒŒa r
.
ŒŒr s
Date
ŒŒs w
,
ŒŒw x
	directionŒŒy Ç
:ŒŒÇ É"
ParameterDirectionŒŒÑ ñ
.ŒŒñ ó
InputŒŒó ú
)ŒŒú ù
;ŒŒù û

parameters
œœ "
.
œœ" #
Add
œœ# &
(
œœ& '
name
œœ' +
:
œœ+ ,
$str
œœ- A
,
œœA B
leaveRequest
œœC O
.
œœO P
RatificationTime
œœP `
,
œœ` a
dbType
œœb h
:
œœh i
OracleMappingType
œœj {
.
œœ{ |
Int32œœ| Å
,œœÅ Ç
	directionœœÉ å
:œœå ç"
ParameterDirectionœœé †
.œœ† °
Inputœœ° ¶
)œœ¶ ß
;œœß ®

parameters
–– "
.
––" #
Add
––# &
(
––& '
name
––' +
:
––+ ,
$str
––- ?
,
––? @
leaveRequest
––A M
.
––M N
LeaveTypeReason
––N ]
==
––^ `
null
––a e
?
––f g
null
––h l
:
––m n
leaveRequest
––o {
.
––{ |
LeaveTypeReason––| ã
.––ã å
ReasonId––å î
,––î ï
dbType––ñ ú
:––ú ù!
OracleMappingType––û Ø
.––Ø ∞
Int32––∞ µ
,––µ ∂
	direction––∑ ¿
:––¿ ¡"
ParameterDirection––¬ ‘
.––‘ ’
Input––’ ⁄
)––⁄ €
;––€ ‹

parameters
—— "
.
——" #
Add
——# &
(
——& '
name
——' +
:
——+ ,
$str
——- A
,
——A B
dbType
——C I
:
——I J
OracleMappingType
——K \
.
——\ ]
Int32
——] b
,
——b c
	direction
——d m
:
——m n!
ParameterDirection——o Å
.——Å Ç
Output——Ç à
)——à â
;——â ä
savedRecords
““ $
+=
““% '
await
““( -

connection
““. 8
.
““8 9
ExecuteAsync
““9 E
(
““E F 
DatabaseProcedures
““F X
.
““X Y
INSERT_EMP_LEAVE
““Y i
,
““i j

parameters
““k u
,
““u v
commandType““w Ç
:““Ç É
CommandType““Ñ è
.““è ê
StoredProcedure““ê ü
)““ü †
;““† °
var
”” 
parentId
”” $
=
””% &

parameters
””' 1
.
””1 2
Get
””2 5
<
””5 6
int
””6 9
>
””9 :
(
””: ;
$str
””; O
)
””O P
;
””P Q
List
‘‘ 
<
‘‘ 
EmpLeaveDetails
‘‘ ,
>
‘‘, -
empLeaveDetails
‘‘. =
=
‘‘> ?
new
‘‘@ C
List
‘‘D H
<
‘‘H I
EmpLeaveDetails
‘‘I X
>
‘‘X Y
(
‘‘Y Z
)
‘‘Z [
;
‘‘[ \
EmpLeaveDetails
’’ '
empLeaveData
’’( 4
=
’’5 6
new
’’7 :
EmpLeaveDetails
’’; J
(
’’J K
)
’’K L
;
’’L M
int
÷÷ 
rowIndex
÷÷ $
=
÷÷% &
$num
÷÷' (
;
÷÷( )
foreach
◊◊ 
(
◊◊  !
DateTime
◊◊! )

onDutyDate
◊◊* 4
in
◊◊5 7
selectedDates
◊◊8 E
)
◊◊E F
{
ÿÿ 
empLeaveData
ŸŸ (
=
ŸŸ) *
new
ŸŸ+ .
EmpLeaveDetails
ŸŸ/ >
(
ŸŸ> ?
)
ŸŸ? @
;
ŸŸ@ A
empLeaveData
⁄⁄ (
.
⁄⁄( )
EmployeeLeaveId
⁄⁄) 8
=
⁄⁄9 :
parentId
⁄⁄; C
;
⁄⁄C D
empLeaveData
€€ (
.
€€( )

RowVersion
€€) 3
=
€€4 5
Guid
€€6 :
.
€€: ;
NewGuid
€€; B
(
€€B C
)
€€C D
.
€€D E
ToString
€€E M
(
€€M N
)
€€N O
;
€€O P
empLeaveData
‹‹ (
.
‹‹( )
Remarks
‹‹) 0
=
‹‹1 2
leaveRequest
‹‹3 ?
.
‹‹? @
Remarks
‹‹@ G
;
‹‹G H
empLeaveData
›› (
.
››( )
EmployeeSlno
››) 5
=
››6 7
leaveRequest
››8 D
.
››D E
EmployeeSlno
››E Q
;
››Q R
empLeaveData
ﬁﬁ (
.
ﬁﬁ( )
	LeaveDate
ﬁﬁ) 2
=
ﬁﬁ3 4

onDutyDate
ﬁﬁ5 ?
;
ﬁﬁ? @
empLeaveData
ﬂﬂ (
.
ﬂﬂ( )
LeaveDayTypeId
ﬂﬂ) 7
=
ﬂﬂ8 9
rowIndex
ﬂﬂ: B
==
ﬂﬂC E
$num
ﬂﬂF G
?
ﬂﬂH I
(
ﬂﬂJ K
rowIndex
ﬂﬂK S
==
ﬂﬂT V
$num
ﬂﬂW X
?
ﬂﬂY Z
leaveRequest
ﬂﬂ[ g
.
ﬂﬂg h
FromDateDayTypeId
ﬂﬂh y
:
ﬂﬂz { 
LeaveDayTypeNamesﬂﬂ| ç
.ﬂﬂç é
FullDayﬂﬂé ï
.ﬂﬂï ñ 
ToInt32OrDefaultﬂﬂñ ¶
(ﬂﬂ¶ ß
)ﬂﬂß ®
)ﬂﬂ® ©
:ﬂﬂ™ ´
(ﬂﬂ¨ ≠
rowIndexﬂﬂ≠ µ
==ﬂﬂ∂ ∏
selectedDatesﬂﬂπ ∆
.ﬂﬂ∆ «
Countﬂﬂ« Ã
?ﬂﬂÕ Œ
leaveRequestﬂﬂœ €
.ﬂﬂ€ ‹
ToDateDayTypeIdﬂﬂ‹ Î
:ﬂﬂÏ Ì!
LeaveDayTypeNamesﬂﬂÓ ˇ
.ﬂﬂˇ Ä
FullDayﬂﬂÄ á
.ﬂﬂá à 
ToInt32OrDefaultﬂﬂà ò
(ﬂﬂò ô
)ﬂﬂô ö
)ﬂﬂö õ
;ﬂﬂõ ú
empLeaveData
‡‡ (
.
‡‡( )
LeaveStatusId
‡‡) 6
=
‡‡7 8
LeaveStatusNames
‡‡9 I
.
‡‡I J 
PendingForApproval
‡‡J \
.
‡‡\ ]
ToInt32OrDefault
‡‡] m
(
‡‡m n
)
‡‡n o
;
‡‡o p
empLeaveDetails
·· +
.
··+ ,
Add
··, /
(
··/ 0
empLeaveData
··0 <
)
··< =
;
··= >
rowIndex
‚‚ $
++
‚‚$ &
;
‚‚& '
}
„„ 

parameters
‰‰ "
=
‰‰# $
new
‰‰% (%
OracleDynamicParameters
‰‰) @
(
‰‰@ A
)
‰‰A B
;
‰‰B C
List
ÂÂ 
<
ÂÂ %
OracleDynamicParameters
ÂÂ 4
>
ÂÂ4 5
param
ÂÂ6 ;
=
ÂÂ< =
new
ÂÂ> A
(
ÂÂA B
)
ÂÂB C
;
ÂÂC D
List
ÁÁ 
<
ÁÁ 
int
ÁÁ  
>
ÁÁ  !
employeeIds
ÁÁ" -
=
ÁÁ. /
empLeaveDetails
ÁÁ0 ?
.
ÁÁ? @
Select
ÁÁ@ F
(
ÁÁF G
x
ÁÁG H
=>
ÁÁI K
x
ÁÁL M
.
ÁÁM N
EmployeeSlno
ÁÁN Z
)
ÁÁZ [
.
ÁÁ[ \
ToList
ÁÁ\ b
(
ÁÁb c
)
ÁÁc d
;
ÁÁd e
List
ËË 
<
ËË 
int
ËË  
>
ËË  !
employeeLeaveId
ËË" 1
=
ËË2 3
empLeaveDetails
ËË4 C
.
ËËC D
Select
ËËD J
(
ËËJ K
x
ËËK L
=>
ËËM O
x
ËËP Q
.
ËËQ R
EmployeeLeaveId
ËËR a
)
ËËa b
.
ËËb c
ToList
ËËc i
(
ËËi j
)
ËËj k
;
ËËk l
List
ÈÈ 
<
ÈÈ 
DateTime
ÈÈ %
>
ÈÈ% & 
employeeLeaveDates
ÈÈ' 9
=
ÈÈ: ;
empLeaveDetails
ÈÈ< K
.
ÈÈK L
Select
ÈÈL R
(
ÈÈR S
x
ÈÈS T
=>
ÈÈU W
x
ÈÈX Y
.
ÈÈY Z
	LeaveDate
ÈÈZ c
)
ÈÈc d
.
ÈÈd e
ToList
ÈÈe k
(
ÈÈk l
)
ÈÈl m
;
ÈÈm n
List
ÍÍ 
<
ÍÍ 
int
ÍÍ  
>
ÍÍ  !
leaveDayTypeIds
ÍÍ" 1
=
ÍÍ2 3
empLeaveDetails
ÍÍ4 C
.
ÍÍC D
Select
ÍÍD J
(
ÍÍJ K
x
ÍÍK L
=>
ÍÍM O
x
ÍÍP Q
.
ÍÍQ R
LeaveDayTypeId
ÍÍR `
)
ÍÍ` a
.
ÍÍa b
ToList
ÍÍb h
(
ÍÍh i
)
ÍÍi j
;
ÍÍj k
List
ÎÎ 
<
ÎÎ 
int
ÎÎ  
>
ÎÎ  !
leaveStatusIds
ÎÎ" 0
=
ÎÎ1 2
empLeaveDetails
ÎÎ3 B
.
ÎÎB C
Select
ÎÎC I
(
ÎÎI J
x
ÎÎJ K
=>
ÎÎL N
x
ÎÎO P
.
ÎÎP Q
LeaveStatusId
ÎÎQ ^
)
ÎÎ^ _
.
ÎÎ_ `
ToList
ÎÎ` f
(
ÎÎf g
)
ÎÎg h
;
ÎÎh i
List
ÏÏ 
<
ÏÏ 
string
ÏÏ #
>
ÏÏ# $
remarks
ÏÏ% ,
=
ÏÏ- .
empLeaveDetails
ÏÏ/ >
.
ÏÏ> ?
Select
ÏÏ? E
(
ÏÏE F
x
ÏÏF G
=>
ÏÏH J
x
ÏÏK L
.
ÏÏL M
Remarks
ÏÏM T
)
ÏÏT U
.
ÏÏU V
ToList
ÏÏV \
(
ÏÏ\ ]
)
ÏÏ] ^
;
ÏÏ^ _
List
ÌÌ 
<
ÌÌ 
string
ÌÌ #
>
ÌÌ# $
rowVersions
ÌÌ% 0
=
ÌÌ1 2
empLeaveDetails
ÌÌ3 B
.
ÌÌB C
Select
ÌÌC I
(
ÌÌI J
x
ÌÌJ K
=>
ÌÌL N
x
ÌÌO P
.
ÌÌP Q

RowVersion
ÌÌQ [
)
ÌÌ[ \
.
ÌÌ\ ]
ToList
ÌÌ] c
(
ÌÌc d
)
ÌÌd e
;
ÌÌe f

parameters
ÔÔ "
.
ÔÔ" #
Add
ÔÔ# &
(
ÔÔ& '
name
ÔÔ' +
:
ÔÔ+ ,
$str
ÔÔ- <
,
ÔÔ< =
employeeIds
ÔÔ> I
.
ÔÔI J
ToArray
ÔÔJ Q
(
ÔÔQ R
)
ÔÔR S
,
ÔÔS T
dbType
ÔÔU [
:
ÔÔ[ \
OracleMappingType
ÔÔ] n
.
ÔÔn o
Int32
ÔÔo t
,
ÔÔt u
	direction
ÔÔv 
:ÔÔ Ä"
ParameterDirectionÔÔÅ ì
.ÔÔì î
InputÔÔî ô
,ÔÔô ö
employeeIdsÔÔõ ¶
.ÔÔ¶ ß
CountÔÔß ¨
,ÔÔ¨ ≠
collectionType
 &
:
& ')
OracleMappingCollectionType
( C
.
C D#
PLSQLAssociativeArray
D Y
)
Y Z
;
Z [

parameters
ÒÒ "
.
ÒÒ" #
Add
ÒÒ# &
(
ÒÒ& '
name
ÒÒ' +
:
ÒÒ+ ,
$str
ÒÒ- ?
,
ÒÒ? @
employeeLeaveId
ÒÒA P
.
ÒÒP Q
ToArray
ÒÒQ X
(
ÒÒX Y
)
ÒÒY Z
,
ÒÒZ [
dbType
ÒÒ\ b
:
ÒÒb c
OracleMappingType
ÒÒd u
.
ÒÒu v
Int32
ÒÒv {
,
ÒÒ{ |
	directionÒÒ} Ü
:ÒÒÜ á"
ParameterDirectionÒÒà ö
.ÒÒö õ
InputÒÒõ †
,ÒÒ† °
employeeLeaveIdÒÒ¢ ±
.ÒÒ± ≤
CountÒÒ≤ ∑
,ÒÒ∑ ∏
collectionType
ÚÚ &
:
ÚÚ& ')
OracleMappingCollectionType
ÚÚ( C
.
ÚÚC D#
PLSQLAssociativeArray
ÚÚD Y
)
ÚÚY Z
;
ÚÚZ [

parameters
ÛÛ "
.
ÛÛ" #
Add
ÛÛ# &
(
ÛÛ& '
name
ÛÛ' +
:
ÛÛ+ ,
$str
ÛÛ- 9
,
ÛÛ9 : 
employeeLeaveDates
ÛÛ; M
.
ÛÛM N
ToArray
ÛÛN U
(
ÛÛU V
)
ÛÛV W
,
ÛÛW X
dbType
ÛÛY _
:
ÛÛ_ `
OracleMappingType
ÛÛa r
.
ÛÛr s
Date
ÛÛs w
,
ÛÛw x
	directionÛÛy Ç
:ÛÛÇ É"
ParameterDirectionÛÛÑ ñ
.ÛÛñ ó
InputÛÛó ú
,ÛÛú ù"
employeeLeaveDatesÛÛû ∞
.ÛÛ∞ ±
CountÛÛ± ∂
,ÛÛ∂ ∑
collectionType
ÙÙ &
:
ÙÙ& ')
OracleMappingCollectionType
ÙÙ( C
.
ÙÙC D#
PLSQLAssociativeArray
ÙÙD Y
)
ÙÙY Z
;
ÙÙZ [

parameters
ıı "
.
ıı" #
Add
ıı# &
(
ıı& '
name
ıı' +
:
ıı+ ,
$str
ıı- >
,
ıı> ?
leaveDayTypeIds
ıı@ O
.
ııO P
ToArray
ııP W
(
ııW X
)
ııX Y
,
ııY Z
dbType
ıı[ a
:
ııa b
OracleMappingType
ııc t
.
ııt u
Int32
ııu z
,
ıız {
	directionıı| Ö
:ııÖ Ü"
ParameterDirectionııá ô
.ııô ö
Inputııö ü
,ııü †
leaveDayTypeIdsıı° ∞
.ıı∞ ±
Countıı± ∂
,ıı∂ ∑
collectionType
ˆˆ &
:
ˆˆ& ')
OracleMappingCollectionType
ˆˆ( C
.
ˆˆC D#
PLSQLAssociativeArray
ˆˆD Y
)
ˆˆY Z
;
ˆˆZ [

parameters
˜˜ "
.
˜˜" #
Add
˜˜# &
(
˜˜& '
name
˜˜' +
:
˜˜+ ,
$str
˜˜- =
,
˜˜= >
leaveStatusIds
˜˜? M
.
˜˜M N
ToArray
˜˜N U
(
˜˜U V
)
˜˜V W
,
˜˜W X
dbType
˜˜Y _
:
˜˜_ `
OracleMappingType
˜˜a r
.
˜˜r s
Int32
˜˜s x
,
˜˜x y
	direction˜˜z É
:˜˜É Ñ"
ParameterDirection˜˜Ö ó
.˜˜ó ò
Input˜˜ò ù
,˜˜ù û
leaveStatusIds˜˜ü ≠
.˜˜≠ Æ
Count˜˜Æ ≥
,˜˜≥ ¥
collectionType
¯¯ &
:
¯¯& ')
OracleMappingCollectionType
¯¯( C
.
¯¯C D#
PLSQLAssociativeArray
¯¯D Y
)
¯¯Y Z
;
¯¯Z [

parameters
˘˘ "
.
˘˘" #
Add
˘˘# &
(
˘˘& '
name
˘˘' +
:
˘˘+ ,
$str
˘˘- 7
,
˘˘7 8
remarks
˘˘9 @
.
˘˘@ A
ToArray
˘˘A H
(
˘˘H I
)
˘˘I J
,
˘˘J K
dbType
˘˘L R
:
˘˘R S
OracleMappingType
˘˘T e
.
˘˘e f
Varchar2
˘˘f n
,
˘˘n o
	direction
˘˘p y
:
˘˘y z!
ParameterDirection˘˘{ ç
.˘˘ç é
Input˘˘é ì
,˘˘ì î
remarks˘˘ï ú
.˘˘ú ù
Count˘˘ù ¢
,˘˘¢ £
collectionType
˙˙ &
:
˙˙& ')
OracleMappingCollectionType
˙˙( C
.
˙˙C D#
PLSQLAssociativeArray
˙˙D Y
)
˙˙Y Z
;
˙˙Z [

parameters
˚˚ "
.
˚˚" #
Add
˚˚# &
(
˚˚& '
name
˚˚' +
:
˚˚+ ,
$str
˚˚- :
,
˚˚: ;
rowVersions
˚˚< G
.
˚˚G H
ToArray
˚˚H O
(
˚˚O P
)
˚˚P Q
,
˚˚Q R
dbType
˚˚S Y
:
˚˚Y Z
OracleMappingType
˚˚[ l
.
˚˚l m
Varchar2
˚˚m u
,
˚˚u v
	direction˚˚w Ä
:˚˚Ä Å"
ParameterDirection˚˚Ç î
.˚˚î ï
Input˚˚ï ö
,˚˚ö õ
rowVersions˚˚ú ß
.˚˚ß ®
Count˚˚® ≠
,˚˚≠ Æ
collectionType
¸¸ &
:
¸¸& ')
OracleMappingCollectionType
¸¸( C
.
¸¸C D#
PLSQLAssociativeArray
¸¸D Y
)
¸¸Y Z
;
¸¸Z [

parameters
˝˝ "
.
˝˝" #
Add
˝˝# &
(
˝˝& '
name
˝˝' +
:
˝˝+ ,
$str
˝˝- ?
,
˝˝? @
dbType
˝˝A G
:
˝˝G H
OracleMappingType
˝˝I Z
.
˝˝Z [
Int32
˝˝[ `
,
˝˝` a
	direction
˝˝b k
:
˝˝k l 
ParameterDirection
˝˝m 
.˝˝ Ä
Output˝˝Ä Ü
)˝˝Ü á
;˝˝á à
int
˛˛ 
updatedRecords
˛˛ *
=
˛˛+ ,
await
˛˛- 2

connection
˛˛3 =
.
˛˛= >
ExecuteAsync
˛˛> J
(
˛˛J K 
DatabaseProcedures
˛˛K ]
.
˛˛] ^&
INSERT_EMP_LEAVE_DETAILS
˛˛^ v
,
˛˛v w

parameters˛˛x Ç
,˛˛Ç É
commandType˛˛Ñ è
:˛˛è ê
CommandType˛˛ë ú
.˛˛ú ù
StoredProcedure˛˛ù ¨
)˛˛¨ ≠
;˛˛≠ Æ
int
ˇˇ 
rowsUpdated
ˇˇ '
=
ˇˇ( )

parameters
ˇˇ* 4
.
ˇˇ4 5
Get
ˇˇ5 8
<
ˇˇ8 9
int
ˇˇ9 <
>
ˇˇ< =
(
ˇˇ= >
$str
ˇˇ> P
)
ˇˇP Q
;
ˇˇQ R
savedRecords
ÅÅ $
=
ÅÅ% &
savedRecords
ÅÅ' 3
+
ÅÅ4 5
rowsUpdated
ÅÅ6 A
;
ÅÅA B
using
ëë 
(
ëë +
WorkFlowInformationRepository
ëë <

repository
ëë= G
=
ëëH I
new
ëëJ M+
WorkFlowInformationRepository
ëëN k
(
ëëk l

connection
ëël v
,
ëëv w
this
ëëx |
.
ëë| }
configurationëë} ä
)ëëä ã
)ëëã å
{
íí 
isSaveWorkFlow
ìì *
=
ìì+ ,
await
ìì- 2

repository
ìì3 =
.
ìì= >#
InitiateLeaveWorkFlow
ìì> S
(
ììS T
leaveRequest
ììT `
.
ìì` a
EmployeeSlno
ììa m
,
ììm n
parentId
ììo w
,
ììw x
leaveRequestììy Ö
)ììÖ Ü
;ììÜ á
}
îî 
}
ïï 
tran
ññ 
.
ññ 
Commit
ññ 
(
ññ  
)
ññ  !
;
ññ! "
}
óó 
}
òò 
return
ôô 
resp
ôô 
=
ôô 
(
ôô 
savedRecords
ôô '
*
ôô( )
-
ôô* +
$num
ôô+ ,
)
ôô, -
>
ôô. /
$num
ôô0 1
;
ôô1 2
}
öö 	
private
õõ 
async
õõ 
Task
õõ 
<
õõ 
List
õõ 
<
õõ  
LeaveDetail
õõ  +
>
õõ+ ,
>
õõ, -.
 GetEmployeeLeavesBeforeStartDate
õõ. N
(
õõN O
int
õõO R
employeeSlno
õõS _
,
õõ_ `
DateTime
õõa i
leaveStartDate
õõj x
)
õõx y
{
úú 	
List
ùù 
<
ùù 
LeaveDetail
ùù 
>
ùù 
	empLeaves
ùù '
=
ùù( )
null
ùù* .
;
ùù. /
using
ûû 
(
ûû 
var
ûû 

connection
ûû !
=
ûû" #
await
ûû$ )
base
ûû* .
.
ûû. /
CreateConnection
ûû/ ?
(
ûû? @
DbSchema
ûû@ H
.
ûûH I
PORTAL
ûûI O
)
ûûO P
)
ûûP Q
{
üü %
OracleDynamicParameters
†† '

parameters
††( 2
=
††3 4
new
††5 8%
OracleDynamicParameters
††9 P
(
††P Q
)
††Q R
;
††R S

parameters
°° 
.
°° 
Add
°° 
(
°° 
name
°° #
:
°°# $
$str
°°% 4
,
°°4 5
employeeSlno
°°6 B
,
°°B C
dbType
°°D J
:
°°J K
OracleMappingType
°°L ]
.
°°] ^
Int32
°°^ c
,
°°c d
	direction
°°e n
:
°°n o!
ParameterDirection°°p Ç
.°°Ç É
Input°°É à
)°°à â
;°°â ä

parameters
¢¢ 
.
¢¢ 
Add
¢¢ 
(
¢¢ 
name
¢¢ #
:
¢¢# $
$str
¢¢% 2
,
¢¢2 3
leaveStartDate
¢¢4 B
,
¢¢B C
dbType
¢¢D J
:
¢¢J K
OracleMappingType
¢¢L ]
.
¢¢] ^
Date
¢¢^ b
,
¢¢b c
	direction
¢¢d m
:
¢¢m n!
ParameterDirection¢¢o Å
.¢¢Å Ç
Input¢¢Ç á
)¢¢á à
;¢¢à â

parameters
££ 
.
££ 
Add
££ 
(
££ 
name
££ #
:
££# $
$str
££% .
,
££. /
dbType
££0 6
:
££6 7
OracleMappingType
££8 I
.
££I J
	RefCursor
££J S
,
££S T
	direction
££U ^
:
££^ _ 
ParameterDirection
££` r
.
££r s
Output
££s y
)
££y z
;
££z {
	empLeaves
§§ 
=
§§ 
(
§§ 
await
§§ "

connection
§§# -
.
§§- .

QueryAsync
§§. 8
<
§§8 9
LeaveDetail
§§9 D
>
§§D E
(
§§E F 
DatabaseProcedures
§§F X
.
§§X Y)
SP_GET_EMP_LEAVES_BF_STDATE
§§Y t
,
§§t u

parameters§§v Ä
,§§Ä Å
commandType§§Ç ç
:§§ç é
CommandType§§è ö
.§§ö õ
StoredProcedure§§õ ™
)§§™ ´
)§§´ ¨
.§§¨ ≠
ToList§§≠ ≥
(§§≥ ¥
)§§¥ µ
;§§µ ∂
	empLeaves
•• 
=
•• 
	empLeaves
•• %
.
••% &
OrderByDescending
••& 7
(
••7 8
x
••8 9
=>
••: <
x
••= >
.
••> ?
	LeaveFrom
••? H
)
••H I
.
••I J
ToList
••J P
(
••P Q
)
••Q R
;
••R S
}
¶¶ 
return
ßß 
	empLeaves
ßß 
;
ßß 
}
®® 	
private
©© 
async
©© 
Task
©© 
<
©© 
List
©© 
<
©©  
LeaveDetail
©©  +
>
©©+ ,
>
©©, -+
GetEmployeeLeavesAfterEndDate
©©. K
(
©©K L
int
©©L O
employeeSlno
©©P \
,
©©\ ]
DateTime
©©^ f
leaveEndDate
©©g s
)
©©s t
{
™™ 	
List
´´ 
<
´´ 
LeaveDetail
´´ 
>
´´ 
	empLeaves
´´ '
=
´´( )
null
´´* .
;
´´. /
using
¨¨ 
(
¨¨ 
var
¨¨ 

connection
¨¨ !
=
¨¨" #
await
¨¨$ )
base
¨¨* .
.
¨¨. /
CreateConnection
¨¨/ ?
(
¨¨? @
DbSchema
¨¨@ H
.
¨¨H I
PORTAL
¨¨I O
)
¨¨O P
)
¨¨P Q
{
≠≠ %
OracleDynamicParameters
ÆÆ '

parameters
ÆÆ( 2
=
ÆÆ3 4
new
ÆÆ5 8%
OracleDynamicParameters
ÆÆ9 P
(
ÆÆP Q
)
ÆÆQ R
;
ÆÆR S

parameters
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ 
name
ØØ #
:
ØØ# $
$str
ØØ% 4
,
ØØ4 5
employeeSlno
ØØ6 B
,
ØØB C
dbType
ØØD J
:
ØØJ K
OracleMappingType
ØØL ]
.
ØØ] ^
Int32
ØØ^ c
,
ØØc d
	direction
ØØe n
:
ØØn o!
ParameterDirectionØØp Ç
.ØØÇ É
InputØØÉ à
)ØØà â
;ØØâ ä

parameters
∞∞ 
.
∞∞ 
Add
∞∞ 
(
∞∞ 
name
∞∞ #
:
∞∞# $
$str
∞∞% 0
,
∞∞0 1
leaveEndDate
∞∞2 >
,
∞∞> ?
dbType
∞∞@ F
:
∞∞F G
OracleMappingType
∞∞H Y
.
∞∞Y Z
Date
∞∞Z ^
,
∞∞^ _
	direction
∞∞` i
:
∞∞i j 
ParameterDirection
∞∞k }
.
∞∞} ~
Input∞∞~ É
)∞∞É Ñ
;∞∞Ñ Ö

parameters
±± 
.
±± 
Add
±± 
(
±± 
name
±± #
:
±±# $
$str
±±% .
,
±±. /
dbType
±±0 6
:
±±6 7
OracleMappingType
±±8 I
.
±±I J
	RefCursor
±±J S
,
±±S T
	direction
±±U ^
:
±±^ _ 
ParameterDirection
±±` r
.
±±r s
Output
±±s y
)
±±y z
;
±±z {
	empLeaves
≤≤ 
=
≤≤ 
(
≤≤ 
await
≤≤ "

connection
≤≤# -
.
≤≤- .

QueryAsync
≤≤. 8
<
≤≤8 9
LeaveDetail
≤≤9 D
>
≤≤D E
(
≤≤E F 
DatabaseProcedures
≤≤F X
.
≤≤X Y)
SP_GET_EMP_LEAVES_AF_TODATE
≤≤Y t
,
≤≤t u

parameters≤≤v Ä
,≤≤Ä Å
commandType≤≤Ç ç
:≤≤ç é
CommandType≤≤è ö
.≤≤ö õ
StoredProcedure≤≤õ ™
)≤≤™ ´
)≤≤´ ¨
.≤≤¨ ≠
ToList≤≤≠ ≥
(≤≤≥ ¥
)≤≤¥ µ
;≤≤µ ∂
	empLeaves
≥≥ 
=
≥≥ 
	empLeaves
≥≥ %
.
≥≥% &
OrderByDescending
≥≥& 7
(
≥≥7 8
x
≥≥8 9
=>
≥≥: <
x
≥≥= >
.
≥≥> ?
	LeaveFrom
≥≥? H
)
≥≥H I
.
≥≥I J
ToList
≥≥J P
(
≥≥P Q
)
≥≥Q R
;
≥≥R S
}
¥¥ 
return
µµ 
	empLeaves
µµ 
;
µµ 
}
∂∂ 	
private
ŸŸ 
async
ŸŸ 
Task
ŸŸ 
<
ŸŸ 
bool
ŸŸ 
>
ŸŸ  
	LeaveSave
ŸŸ! *
(
ŸŸ* +
EmployeeLeave
ŸŸ+ 8
leaveRequest
ŸŸ9 E
,
ŸŸE F
double
ŸŸG M
	totalDays
ŸŸN W
,
ŸŸW X
List
ŸŸY ]
<
ŸŸ] ^
DateTime
ŸŸ^ f
>
ŸŸf g
holidayDates
ŸŸh t
,
ŸŸt u
List
ŸŸv z
<
ŸŸz {
DateTimeŸŸ{ É
>ŸŸÉ Ñ

leaveDatesŸŸÖ è
,ŸŸè ê
ListŸŸë ï
<ŸŸï ñ
DateTimeŸŸñ û
>ŸŸû ü!
leaveAppliedDatesŸŸ† ±
)ŸŸ± ≤
{
⁄⁄ 	
bool
€€ 
resp
€€ 
=
€€ 
false
€€ 
;
€€ 
bool
‹‹ 
isSaveWorkFlow
‹‹ 
=
‹‹  !
false
‹‹" '
;
‹‹' (
int
›› 
savedRecords
›› 
=
›› 
$num
››  
;
››  !
int
ﬁﬁ 
EmailsavedRecords
ﬁﬁ !
=
ﬁﬁ" #
$num
ﬁﬁ$ %
;
ﬁﬁ% &%
OracleDynamicParameters
ﬂﬂ #

parameters
ﬂﬂ$ .
=
ﬂﬂ/ 0
null
ﬂﬂ1 5
;
ﬂﬂ5 6
using
‡‡ 
(
‡‡ 
IDbConnection
‡‡  

connection
‡‡! +
=
‡‡, -
await
‡‡. 3
base
‡‡4 8
.
‡‡8 9
CreateConnection
‡‡9 I
(
‡‡I J
DbSchema
‡‡J R
.
‡‡R S
PORTAL
‡‡S Y
)
‡‡Y Z
)
‡‡Z [
{
·· 
using
„„ 
(
„„ 
var
„„ 
tran
„„ 
=
„„  !

connection
„„" ,
.
„„, -
BeginTransaction
„„- =
(
„„= >
)
„„> ?
)
„„? @
{
‰‰ 

parameters
ÂÂ 
=
ÂÂ  
new
ÂÂ! $%
OracleDynamicParameters
ÂÂ% <
(
ÂÂ< =
)
ÂÂ= >
;
ÂÂ> ?

parameters
ÊÊ 
.
ÊÊ 
Add
ÊÊ "
(
ÊÊ" #
name
ÊÊ# '
:
ÊÊ' (
$str
ÊÊ) I
,
ÊÊI J
leaveRequest
ÊÊK W
.
ÊÊW X
	LeaveType
ÊÊX a
.
ÊÊa b
EntitlementId
ÊÊb o
,
ÊÊo p
dbType
ÊÊq w
:
ÊÊw x 
OracleMappingTypeÊÊy ä
.ÊÊä ã
Int32ÊÊã ê
,ÊÊê ë
	directionÊÊí õ
:ÊÊõ ú"
ParameterDirectionÊÊù Ø
.ÊÊØ ∞
InputÊÊ∞ µ
)ÊÊµ ∂
;ÊÊ∂ ∑

parameters
ÁÁ 
.
ÁÁ 
Add
ÁÁ "
(
ÁÁ" #
name
ÁÁ# '
:
ÁÁ' (
$str
ÁÁ) 8
,
ÁÁ8 9
leaveRequest
ÁÁ: F
.
ÁÁF G
EmployeeSlno
ÁÁG S
,
ÁÁS T
dbType
ÁÁU [
:
ÁÁ[ \
OracleMappingType
ÁÁ] n
.
ÁÁn o
Int32
ÁÁo t
,
ÁÁt u
	direction
ÁÁv 
:ÁÁ Ä"
ParameterDirectionÁÁÅ ì
.ÁÁì î
InputÁÁî ô
)ÁÁô ö
;ÁÁö õ

parameters
ËË 
.
ËË 
Add
ËË "
(
ËË" #
name
ËË# '
:
ËË' (
$str
ËË) ;
,
ËË; <
leaveRequest
ËË= I
.
ËËI J
FromDate
ËËJ R
,
ËËR S
dbType
ËËT Z
:
ËËZ [
OracleMappingType
ËË\ m
.
ËËm n
Date
ËËn r
,
ËËr s
	direction
ËËt }
:
ËË} ~!
ParameterDirectionËË ë
.ËËë í
InputËËí ó
)ËËó ò
;ËËò ô

parameters
ÈÈ 
.
ÈÈ 
Add
ÈÈ "
(
ÈÈ" #
name
ÈÈ# '
:
ÈÈ' (
$str
ÈÈ) 9
,
ÈÈ9 :
leaveRequest
ÈÈ; G
.
ÈÈG H
ToDate
ÈÈH N
,
ÈÈN O
dbType
ÈÈP V
:
ÈÈV W
OracleMappingType
ÈÈX i
.
ÈÈi j
Date
ÈÈj n
,
ÈÈn o
	direction
ÈÈp y
:
ÈÈy z!
ParameterDirectionÈÈ{ ç
.ÈÈç é
InputÈÈé ì
)ÈÈì î
;ÈÈî ï

parameters
ÍÍ 
.
ÍÍ 
Add
ÍÍ "
(
ÍÍ" #
name
ÍÍ# '
:
ÍÍ' (
$str
ÍÍ) 9
,
ÍÍ9 :
leaveRequest
ÍÍ; G
.
ÍÍG H
	LeaveType
ÍÍH Q
.
ÍÍQ R
LeaveTypeId
ÍÍR ]
,
ÍÍ] ^
dbType
ÍÍ_ e
:
ÍÍe f
OracleMappingType
ÍÍg x
.
ÍÍx y
Int32
ÍÍy ~
,
ÍÍ~ 
	directionÍÍÄ â
:ÍÍâ ä"
ParameterDirectionÍÍã ù
.ÍÍù û
InputÍÍû £
)ÍÍ£ §
;ÍÍ§ •

parameters
ÎÎ 
.
ÎÎ 
Add
ÎÎ "
(
ÎÎ" #
name
ÎÎ# '
:
ÎÎ' (
$str
ÎÎ) 3
,
ÎÎ3 4
leaveRequest
ÎÎ5 A
.
ÎÎA B
Remarks
ÎÎB I
,
ÎÎI J
dbType
ÎÎK Q
:
ÎÎQ R
OracleMappingType
ÎÎS d
.
ÎÎd e
Varchar2
ÎÎe m
,
ÎÎm n
	direction
ÎÎo x
:
ÎÎx y!
ParameterDirectionÎÎz å
.ÎÎå ç
InputÎÎç í
)ÎÎí ì
;ÎÎì î

parameters
ÏÏ 
.
ÏÏ 
Add
ÏÏ "
(
ÏÏ" #
name
ÏÏ# '
:
ÏÏ' (
$str
ÏÏ) =
,
ÏÏ= >
leaveRequest
ÏÏ? K
.
ÏÏK L
FromDateDayTypeId
ÏÏL ]
,
ÏÏ] ^
dbType
ÏÏ_ e
:
ÏÏe f
OracleMappingType
ÏÏg x
.
ÏÏx y
Int32
ÏÏy ~
,
ÏÏ~ 
	directionÏÏÄ â
:ÏÏâ ä"
ParameterDirectionÏÏã ù
.ÏÏù û
InputÏÏû £
)ÏÏ£ §
;ÏÏ§ •

parameters
ÌÌ 
.
ÌÌ 
Add
ÌÌ "
(
ÌÌ" #
name
ÌÌ# '
:
ÌÌ' (
$str
ÌÌ) <
,
ÌÌ< =
	totalDays
ÌÌ> G
,
ÌÌG H
dbType
ÌÌI O
:
ÌÌO P
OracleMappingType
ÌÌQ b
.
ÌÌb c
Decimal
ÌÌc j
,
ÌÌj k
	direction
ÌÌl u
:
ÌÌu v!
ParameterDirectionÌÌw â
.ÌÌâ ä
InputÌÌä è
)ÌÌè ê
;ÌÌê ë

parameters
ÓÓ 
.
ÓÓ 
Add
ÓÓ "
(
ÓÓ" #
name
ÓÓ# '
:
ÓÓ' (
$str
ÓÓ) A
,
ÓÓA B
$num
ÓÓC D
,
ÓÓD E
dbType
ÓÓF L
:
ÓÓL M
OracleMappingType
ÓÓN _
.
ÓÓ_ `
Int32
ÓÓ` e
,
ÓÓe f
	direction
ÓÓg p
:
ÓÓp q!
ParameterDirectionÓÓr Ñ
.ÓÓÑ Ö
InputÓÓÖ ä
)ÓÓä ã
;ÓÓã å

parameters
ÔÔ 
.
ÔÔ 
Add
ÔÔ "
(
ÔÔ" #
name
ÔÔ# '
:
ÔÔ' (
$str
ÔÔ) :
,
ÔÔ: ;
$num
ÔÔ< =
,
ÔÔ= >
dbType
ÔÔ? E
:
ÔÔE F
OracleMappingType
ÔÔG X
.
ÔÔX Y
Int32
ÔÔY ^
,
ÔÔ^ _
	direction
ÔÔ` i
:
ÔÔi j 
ParameterDirection
ÔÔk }
.
ÔÔ} ~
InputÔÔ~ É
)ÔÔÉ Ñ
;ÔÔÑ Ö

parameters
 
.
 
Add
 "
(
" #
name
# '
:
' (
$str
) =
,
= >
$num
? @
,
@ A
dbType
B H
:
H I
OracleMappingType
J [
.
[ \
Int32
\ a
,
a b
	direction
c l
:
l m!
ParameterDirectionn Ä
.Ä Å
InputÅ Ü
)Ü á
;á à

parameters
ÒÒ 
.
ÒÒ 
Add
ÒÒ "
(
ÒÒ" #
name
ÒÒ# '
:
ÒÒ' (
$str
ÒÒ) A
,
ÒÒA B
leaveRequest
ÒÒC O
.
ÒÒO P
FromDateDayTypeId
ÒÒP a
,
ÒÒa b
dbType
ÒÒc i
:
ÒÒi j
OracleMappingType
ÒÒk |
.
ÒÒ| }
Int32ÒÒ} Ç
,ÒÒÇ É
	directionÒÒÑ ç
:ÒÒç é"
ParameterDirectionÒÒè °
.ÒÒ° ¢
InputÒÒ¢ ß
)ÒÒß ®
;ÒÒ® ©

parameters
ÚÚ 
.
ÚÚ 
Add
ÚÚ "
(
ÚÚ" #
name
ÚÚ# '
:
ÚÚ' (
$str
ÚÚ) ?
,
ÚÚ? @
leaveRequest
ÚÚA M
.
ÚÚM N
ToDateDayTypeId
ÚÚN ]
,
ÚÚ] ^
dbType
ÚÚ_ e
:
ÚÚe f
OracleMappingType
ÚÚg x
.
ÚÚx y
Int32
ÚÚy ~
,
ÚÚ~ 
	directionÚÚÄ â
:ÚÚâ ä"
ParameterDirectionÚÚã ù
.ÚÚù û
InputÚÚû £
)ÚÚ£ §
;ÚÚ§ •

parameters
ÛÛ 
.
ÛÛ 
Add
ÛÛ "
(
ÛÛ" #
name
ÛÛ# '
:
ÛÛ' (
$str
ÛÛ) ;
,
ÛÛ; <
LeaveStatusNames
ÛÛ= M
.
ÛÛM N 
PendingForApproval
ÛÛN `
.
ÛÛ` a
ToInt32OrDefault
ÛÛa q
(
ÛÛq r
)
ÛÛr s
,
ÛÛs t
dbType
ÛÛu {
:
ÛÛ{ | 
OracleMappingTypeÛÛ} é
.ÛÛé è
Int32ÛÛè î
,ÛÛî ï
	directionÛÛñ ü
:ÛÛü †"
ParameterDirectionÛÛ° ≥
.ÛÛ≥ ¥
InputÛÛ¥ π
)ÛÛπ ∫
;ÛÛ∫ ª

parameters
ÙÙ 
.
ÙÙ 
Add
ÙÙ "
(
ÙÙ" #
name
ÙÙ# '
:
ÙÙ' (
$str
ÙÙ) 7
,
ÙÙ7 8
Guid
ÙÙ9 =
.
ÙÙ= >
NewGuid
ÙÙ> E
(
ÙÙE F
)
ÙÙF G
.
ÙÙG H
ToString
ÙÙH P
(
ÙÙP Q
)
ÙÙQ R
,
ÙÙR S
dbType
ÙÙT Z
:
ÙÙZ [
OracleMappingType
ÙÙ\ m
.
ÙÙm n
Varchar2
ÙÙn v
,
ÙÙv w
	directionÙÙx Å
:ÙÙÅ Ç"
ParameterDirectionÙÙÉ ï
.ÙÙï ñ
InputÙÙñ õ
)ÙÙõ ú
;ÙÙú ù

parameters
ıı 
.
ıı 
Add
ıı "
(
ıı" #
name
ıı# '
:
ıı' (
$str
ıı) 9
,
ıı9 :
leaveRequest
ıı; G
.
ııG H
CompOffDate
ııH S
,
ııS T
dbType
ııU [
:
ıı[ \
OracleMappingType
ıı] n
.
ıın o
Date
ııo s
,
ııs t
	direction
ııu ~
:
ıı~ "
ParameterDirectionııÄ í
.ııí ì
Inputııì ò
)ııò ô
;ııô ö

parameters
ˆˆ 
.
ˆˆ 
Add
ˆˆ "
(
ˆˆ" #
name
ˆˆ# '
:
ˆˆ' (
$str
ˆˆ) =
,
ˆˆ= >
leaveRequest
ˆˆ? K
.
ˆˆK L
RatificationTime
ˆˆL \
,
ˆˆ\ ]
dbType
ˆˆ^ d
:
ˆˆd e
OracleMappingType
ˆˆf w
.
ˆˆw x
Int32
ˆˆx }
,
ˆˆ} ~
	directionˆˆ à
:ˆˆà â"
ParameterDirectionˆˆä ú
.ˆˆú ù
Inputˆˆù ¢
)ˆˆ¢ £
;ˆˆ£ §

parameters
˜˜ 
.
˜˜ 
Add
˜˜ "
(
˜˜" #
name
˜˜# '
:
˜˜' (
$str
˜˜) =
,
˜˜= >
dbType
˜˜? E
:
˜˜E F
OracleMappingType
˜˜G X
.
˜˜X Y
Int32
˜˜Y ^
,
˜˜^ _
	direction
˜˜` i
:
˜˜i j 
ParameterDirection
˜˜k }
.
˜˜} ~
Output˜˜~ Ñ
)˜˜Ñ Ö
;˜˜Ö Ü

parameters
¯¯ 
.
¯¯ 
Add
¯¯ "
(
¯¯" #
name
¯¯# '
:
¯¯' (
$str
¯¯) ;
,
¯¯; <
leaveRequest
¯¯= I
.
¯¯I J
LeaveTypeReason
¯¯J Y
==
¯¯Z \
null
¯¯] a
?
¯¯b c
null
¯¯d h
:
¯¯i j
leaveRequest
¯¯k w
.
¯¯w x
LeaveTypeReason¯¯x á
.¯¯á à
ReasonId¯¯à ê
,¯¯ê ë
dbType¯¯í ò
:¯¯ò ô!
OracleMappingType¯¯ö ´
.¯¯´ ¨
Int32¯¯¨ ±
,¯¯± ≤
	direction¯¯≥ º
:¯¯º Ω"
ParameterDirection¯¯æ –
.¯¯– —
Input¯¯— ÷
)¯¯÷ ◊
;¯¯◊ ÿ
savedRecords
˘˘  
=
˘˘! "
await
˘˘# (

connection
˘˘) 3
.
˘˘3 4
ExecuteAsync
˘˘4 @
(
˘˘@ A 
DatabaseProcedures
˘˘A S
.
˘˘S T
INSERT_EMP_LEAVE
˘˘T d
,
˘˘d e

parameters
˘˘f p
,
˘˘p q
commandType
˘˘r }
:
˘˘} ~
CommandType˘˘ ä
.˘˘ä ã
StoredProcedure˘˘ã ö
)˘˘ö õ
;˘˘õ ú
var
˚˚ 
parentId
˚˚  
=
˚˚! "

parameters
˚˚# -
.
˚˚- .
Get
˚˚. 1
<
˚˚1 2
int
˚˚2 5
>
˚˚5 6
(
˚˚6 7
$str
˚˚7 K
)
˚˚K L
;
˚˚L M
List
¸¸ 
<
¸¸ 
EmpLeaveDetails
¸¸ (
>
¸¸( )
empLeaveDetails
¸¸* 9
=
¸¸: ;
new
¸¸< ?
List
¸¸@ D
<
¸¸D E
EmpLeaveDetails
¸¸E T
>
¸¸T U
(
¸¸U V
)
¸¸V W
;
¸¸W X
EmpLeaveDetails
˝˝ #
empLeaveData
˝˝$ 0
=
˝˝1 2
new
˝˝3 6
EmpLeaveDetails
˝˝7 F
(
˝˝F G
)
˝˝G H
;
˝˝H I
int
˛˛ 
rowIndex
˛˛  
=
˛˛! "
$num
˛˛# $
;
˛˛$ %
foreach
ˇˇ 
(
ˇˇ 
var
ˇˇ  
item
ˇˇ! %
in
ˇˇ& (

leaveDates
ˇˇ) 3
)
ˇˇ3 4
{
ÄÄ 
empLeaveData
ÅÅ $
=
ÅÅ% &
new
ÅÅ' *
EmpLeaveDetails
ÅÅ+ :
(
ÅÅ: ;
)
ÅÅ; <
;
ÅÅ< =
empLeaveData
ÇÇ $
.
ÇÇ$ %
EmployeeLeaveId
ÇÇ% 4
=
ÇÇ5 6
parentId
ÇÇ7 ?
;
ÇÇ? @
empLeaveData
ÉÉ $
.
ÉÉ$ %

RowVersion
ÉÉ% /
=
ÉÉ0 1
Guid
ÉÉ2 6
.
ÉÉ6 7
NewGuid
ÉÉ7 >
(
ÉÉ> ?
)
ÉÉ? @
.
ÉÉ@ A
ToString
ÉÉA I
(
ÉÉI J
)
ÉÉJ K
;
ÉÉK L
empLeaveData
ÑÑ $
.
ÑÑ$ %
Remarks
ÑÑ% ,
=
ÑÑ- .
leaveRequest
ÑÑ/ ;
.
ÑÑ; <
Remarks
ÑÑ< C
;
ÑÑC D
empLeaveData
ÖÖ $
.
ÖÖ$ %
EmployeeSlno
ÖÖ% 1
=
ÖÖ2 3
leaveRequest
ÖÖ4 @
.
ÖÖ@ A
EmployeeSlno
ÖÖA M
;
ÖÖM N
empLeaveData
ÜÜ $
.
ÜÜ$ %
	LeaveDate
ÜÜ% .
=
ÜÜ/ 0
item
ÜÜ1 5
;
ÜÜ5 6
empLeaveData
áá $
.
áá$ %
LeaveDayTypeId
áá% 3
=
áá4 5
GetDayTypeId
áá6 B
(
ááB C
rowIndex
ááC K
,
ááK L
leaveRequest
ááM Y
,
ááY Z
leaveAppliedDates
áá[ l
.
áál m
Count
áám r
)
áár s
;
áás t
empLeaveData
àà $
.
àà$ %
LeaveStatusId
àà% 2
=
àà3 4
LeaveStatusNames
àà5 E
.
ààE F 
PendingForApproval
ààF X
.
ààX Y
ToInt32OrDefault
ààY i
(
àài j
)
ààj k
;
ààk l
empLeaveDetails
ââ '
.
ââ' (
Add
ââ( +
(
ââ+ ,
empLeaveData
ââ, 8
)
ââ8 9
;
ââ9 :
rowIndex
ää  
++
ää  "
;
ää" #
}
ãã 

parameters
åå 
=
åå  
new
åå! $%
OracleDynamicParameters
åå% <
(
åå< =
)
åå= >
;
åå> ?
List
çç 
<
çç %
OracleDynamicParameters
çç 0
>
çç0 1
param
çç2 7
=
çç8 9
new
çç: =
(
çç= >
)
çç> ?
;
çç? @
List
èè 
<
èè 
int
èè 
>
èè 
employeeSlno
èè *
=
èè+ ,
empLeaveDetails
èè- <
.
èè< =
Select
èè= C
(
èèC D
x
èèD E
=>
èèF H
x
èèI J
.
èèJ K
EmployeeSlno
èèK W
)
èèW X
.
èèX Y
ToList
èèY _
(
èè_ `
)
èè` a
;
èèa b
List
êê 
<
êê 
int
êê 
>
êê 
employeeLeaveId
êê -
=
êê. /
empLeaveDetails
êê0 ?
.
êê? @
Select
êê@ F
(
êêF G
x
êêG H
=>
êêI K
x
êêL M
.
êêM N
EmployeeLeaveId
êêN ]
)
êê] ^
.
êê^ _
ToList
êê_ e
(
êêe f
)
êêf g
;
êêg h
List
ëë 
<
ëë 
DateTime
ëë !
>
ëë! " 
employeeLeaveDates
ëë# 5
=
ëë6 7
empLeaveDetails
ëë8 G
.
ëëG H
Select
ëëH N
(
ëëN O
x
ëëO P
=>
ëëQ S
x
ëëT U
.
ëëU V
	LeaveDate
ëëV _
)
ëë_ `
.
ëë` a
ToList
ëëa g
(
ëëg h
)
ëëh i
;
ëëi j
List
íí 
<
íí 
int
íí 
>
íí 
leaveDayTypeIds
íí -
=
íí. /
empLeaveDetails
íí0 ?
.
íí? @
Select
íí@ F
(
ííF G
x
ííG H
=>
ííI K
x
ííL M
.
ííM N
LeaveDayTypeId
ííN \
)
íí\ ]
.
íí] ^
ToList
íí^ d
(
ííd e
)
ííe f
;
ííf g
List
ìì 
<
ìì 
int
ìì 
>
ìì 
leaveStatusIds
ìì ,
=
ìì- .
empLeaveDetails
ìì/ >
.
ìì> ?
Select
ìì? E
(
ììE F
x
ììF G
=>
ììH J
x
ììK L
.
ììL M
LeaveStatusId
ììM Z
)
ììZ [
.
ìì[ \
ToList
ìì\ b
(
ììb c
)
ììc d
;
ììd e
List
îî 
<
îî 
string
îî 
>
îî  
remarks
îî! (
=
îî) *
empLeaveDetails
îî+ :
.
îî: ;
Select
îî; A
(
îîA B
x
îîB C
=>
îîD F
x
îîG H
.
îîH I
Remarks
îîI P
)
îîP Q
.
îîQ R
ToList
îîR X
(
îîX Y
)
îîY Z
;
îîZ [
List
ïï 
<
ïï 
string
ïï 
>
ïï  
rowVersions
ïï! ,
=
ïï- .
empLeaveDetails
ïï/ >
.
ïï> ?
Select
ïï? E
(
ïïE F
x
ïïF G
=>
ïïH J
x
ïïK L
.
ïïL M

RowVersion
ïïM W
)
ïïW X
.
ïïX Y
ToList
ïïY _
(
ïï_ `
)
ïï` a
;
ïïa b

parameters
óó 
.
óó 
Add
óó "
(
óó" #
name
óó# '
:
óó' (
$str
óó) 8
,
óó8 9
employeeSlno
óó: F
.
óóF G
ToArray
óóG N
(
óóN O
)
óóO P
,
óóP Q
dbType
óóR X
:
óóX Y
OracleMappingType
óóZ k
.
óók l
Int32
óól q
,
óóq r
	direction
óós |
:
óó| }!
ParameterDirectionóó~ ê
.óóê ë
Inputóóë ñ
,óóñ ó
employeeSlnoóóò §
.óó§ •
Countóó• ™
,óó™ ´
collectionType
òò "
:
òò" #)
OracleMappingCollectionType
òò$ ?
.
òò? @#
PLSQLAssociativeArray
òò@ U
)
òòU V
;
òòV W

parameters
ôô 
.
ôô 
Add
ôô "
(
ôô" #
name
ôô# '
:
ôô' (
$str
ôô) ;
,
ôô; <
employeeLeaveId
ôô= L
.
ôôL M
ToArray
ôôM T
(
ôôT U
)
ôôU V
,
ôôV W
dbType
ôôX ^
:
ôô^ _
OracleMappingType
ôô` q
.
ôôq r
Int32
ôôr w
,
ôôw x
	directionôôy Ç
:ôôÇ É"
ParameterDirectionôôÑ ñ
.ôôñ ó
Inputôôó ú
,ôôú ù
employeeLeaveIdôôû ≠
.ôô≠ Æ
CountôôÆ ≥
,ôô≥ ¥
collectionType
öö "
:
öö" #)
OracleMappingCollectionType
öö$ ?
.
öö? @#
PLSQLAssociativeArray
öö@ U
)
ööU V
;
ööV W

parameters
õõ 
.
õõ 
Add
õõ "
(
õõ" #
name
õõ# '
:
õõ' (
$str
õõ) 5
,
õõ5 6 
employeeLeaveDates
õõ7 I
.
õõI J
ToArray
õõJ Q
(
õõQ R
)
õõR S
,
õõS T
dbType
õõU [
:
õõ[ \
OracleMappingType
õõ] n
.
õõn o
Date
õõo s
,
õõs t
	direction
õõu ~
:
õõ~ "
ParameterDirectionõõÄ í
.õõí ì
Inputõõì ò
,õõò ô"
employeeLeaveDatesõõö ¨
.õõ¨ ≠
Countõõ≠ ≤
,õõ≤ ≥
collectionType
úú "
:
úú" #)
OracleMappingCollectionType
úú$ ?
.
úú? @#
PLSQLAssociativeArray
úú@ U
)
úúU V
;
úúV W

parameters
ùù 
.
ùù 
Add
ùù "
(
ùù" #
name
ùù# '
:
ùù' (
$str
ùù) :
,
ùù: ;
leaveDayTypeIds
ùù< K
.
ùùK L
ToArray
ùùL S
(
ùùS T
)
ùùT U
,
ùùU V
dbType
ùùW ]
:
ùù] ^
OracleMappingType
ùù_ p
.
ùùp q
Int32
ùùq v
,
ùùv w
	directionùùx Å
:ùùÅ Ç"
ParameterDirectionùùÉ ï
.ùùï ñ
Inputùùñ õ
,ùùõ ú
leaveDayTypeIdsùùù ¨
.ùù¨ ≠
Countùù≠ ≤
,ùù≤ ≥
collectionType
ûû "
:
ûû" #)
OracleMappingCollectionType
ûû$ ?
.
ûû? @#
PLSQLAssociativeArray
ûû@ U
)
ûûU V
;
ûûV W

parameters
üü 
.
üü 
Add
üü "
(
üü" #
name
üü# '
:
üü' (
$str
üü) 9
,
üü9 :
leaveStatusIds
üü; I
.
üüI J
ToArray
üüJ Q
(
üüQ R
)
üüR S
,
üüS T
dbType
üüU [
:
üü[ \
OracleMappingType
üü] n
.
üün o
Int32
üüo t
,
üüt u
	direction
üüv 
:üü Ä"
ParameterDirectionüüÅ ì
.üüì î
Inputüüî ô
,üüô ö
leaveStatusIdsüüõ ©
.üü© ™
Countüü™ Ø
,üüØ ∞
collectionType
†† "
:
††" #)
OracleMappingCollectionType
††$ ?
.
††? @#
PLSQLAssociativeArray
††@ U
)
††U V
;
††V W

parameters
°° 
.
°° 
Add
°° "
(
°°" #
name
°°# '
:
°°' (
$str
°°) 3
,
°°3 4
remarks
°°5 <
.
°°< =
ToArray
°°= D
(
°°D E
)
°°E F
,
°°F G
dbType
°°H N
:
°°N O
OracleMappingType
°°P a
.
°°a b
Varchar2
°°b j
,
°°j k
	direction
°°l u
:
°°u v!
ParameterDirection°°w â
.°°â ä
Input°°ä è
,°°è ê
remarks°°ë ò
.°°ò ô
Count°°ô û
,°°û ü
collectionType
¢¢ "
:
¢¢" #)
OracleMappingCollectionType
¢¢$ ?
.
¢¢? @#
PLSQLAssociativeArray
¢¢@ U
)
¢¢U V
;
¢¢V W

parameters
££ 
.
££ 
Add
££ "
(
££" #
name
££# '
:
££' (
$str
££) 6
,
££6 7
rowVersions
££8 C
.
££C D
ToArray
££D K
(
££K L
)
££L M
,
££M N
dbType
££O U
:
££U V
OracleMappingType
££W h
.
££h i
Varchar2
££i q
,
££q r
	direction
££s |
:
££| }!
ParameterDirection££~ ê
.££ê ë
Input££ë ñ
,££ñ ó
rowVersions££ò £
.£££ §
Count££§ ©
,££© ™
collectionType
§§ "
:
§§" #)
OracleMappingCollectionType
§§$ ?
.
§§? @#
PLSQLAssociativeArray
§§@ U
)
§§U V
;
§§V W

parameters
•• 
.
•• 
Add
•• "
(
••" #
name
••# '
:
••' (
$str
••) ;
,
••; <
dbType
••= C
:
••C D
OracleMappingType
••E V
.
••V W
Int32
••W \
,
••\ ]
	direction
••^ g
:
••g h 
ParameterDirection
••i {
.
••{ |
Output••| Ç
)••Ç É
;••É Ñ
int
¶¶ 
updatedRecords
¶¶ &
=
¶¶' (
await
¶¶) .

connection
¶¶/ 9
.
¶¶9 :
ExecuteAsync
¶¶: F
(
¶¶F G 
DatabaseProcedures
¶¶G Y
.
¶¶Y Z&
INSERT_EMP_LEAVE_DETAILS
¶¶Z r
,
¶¶r s

parameters
¶¶t ~
,
¶¶~ 
commandType¶¶Ä ã
:¶¶ã å
CommandType¶¶ç ò
.¶¶ò ô
StoredProcedure¶¶ô ®
)¶¶® ©
;¶¶© ™
int
ßß 
rowsUpdated
ßß #
=
ßß$ %

parameters
ßß& 0
.
ßß0 1
Get
ßß1 4
<
ßß4 5
int
ßß5 8
>
ßß8 9
(
ßß9 :
$str
ßß: L
)
ßßL M
;
ßßM N
savedRecords
©©  
=
©©! "
savedRecords
©©# /
+
©©0 1
rowsUpdated
©©2 =
;
©©= >
LeaveDetail
´´ 
leaveRequest1
´´  -
=
´´. /
new
´´0 3
LeaveDetail
´´4 ?
(
´´? @
)
´´@ A
;
´´A B
leaveRequest1
≠≠ !
.
≠≠! "
EmployeeSlno
≠≠" .
=
≠≠/ 0
leaveRequest
≠≠1 =
.
≠≠= >
EmployeeSlno
≠≠> J
;
≠≠J K
leaveRequest1
ÆÆ !
.
ÆÆ! "
	LeaveFrom
ÆÆ" +
=
ÆÆ, -
leaveRequest
ÆÆ. :
.
ÆÆ: ;
FromDate
ÆÆ; C
;
ÆÆC D
leaveRequest1
ØØ !
.
ØØ! "
LeaveTo
ØØ" )
=
ØØ* +
leaveRequest
ØØ, 8
.
ØØ8 9
ToDate
ØØ9 ?
;
ØØ? @
leaveRequest1
∞∞ !
.
∞∞! "
LeaveTypeId
∞∞" -
=
∞∞. /
leaveRequest
∞∞0 <
.
∞∞< =
	LeaveType
∞∞= F
.
∞∞F G
LeaveTypeId
∞∞G R
;
∞∞R S
leaveRequest1
±± !
.
±±! "
Remarks
±±" )
=
±±* +
leaveRequest
±±, 8
.
±±8 9
Remarks
±±9 @
;
±±@ A
leaveRequest1
≤≤ !
.
≤≤! "
FromDateDayTypeId
≤≤" 3
=
≤≤4 5
leaveRequest
≤≤6 B
.
≤≤B C
FromDateDayTypeId
≤≤C T
;
≤≤T U
leaveRequest1
≥≥ !
.
≥≥! "
StepMasterId
≥≥" .
=
≥≥/ 0
$num
≥≥1 2
;
≥≥2 3
leaveRequest1
¥¥ !
.
¥¥! "
LeaveStatusId
¥¥" /
=
¥¥0 1
$num
¥¥2 3
;
¥¥3 4
if
∫∫ 
(
∫∫ 
leaveRequest
∫∫ $
.
∫∫$ %
	LeaveType
∫∫% .
.
∫∫. /
LeaveTypeId
∫∫/ :
!=
∫∫; =
Convert
∫∫> E
.
∫∫E F
ToInt32
∫∫F M
(
∫∫M N
LeaveTypeNames
∫∫N \
.
∫∫\ ]
ON_DUTY
∫∫] d
)
∫∫d e
)
∫∫e f
{
ªª 
await
ºº "
UpdateConsumedLeaves
ºº 2
(
ºº2 3

connection
ºº3 =
,
ºº= >
leaveRequest
ºº? K
,
ººK L
	totalDays
ººM V
)
ººV W
;
ººW X
}
ΩΩ 
using
øø 
(
øø +
WorkFlowInformationRepository
øø 8

repository
øø9 C
=
øøD E
new
øøF I+
WorkFlowInformationRepository
øøJ g
(
øøg h

connection
øøh r
,
øør s
this
øøt x
.
øøx y
configurationøøy Ü
)øøÜ á
)øøá à
{
¿¿ 
isSaveWorkFlow
¡¡ &
=
¡¡' (
await
¡¡) .

repository
¡¡/ 9
.
¡¡9 :#
InitiateLeaveWorkFlow
¡¡: O
(
¡¡O P
leaveRequest
¡¡P \
.
¡¡\ ]
EmployeeSlno
¡¡] i
,
¡¡i j
parentId
¡¡k s
,
¡¡s t
leaveRequest¡¡u Å
)¡¡Å Ç
;¡¡Ç É
}
¬¬ 
if
√√ 
(
√√ 
leaveRequest
√√ $
.
√√$ %
	LeaveType
√√% .
.
√√. / 
IsDocumentRequired
√√/ A
)
√√A B
{
ƒƒ 
await
≈≈ 
UploadLeaveFile
≈≈ -
(
≈≈- .
leaveRequest
≈≈. :
,
≈≈: ;
parentId
≈≈< D
,
≈≈D E

connection
≈≈F P
)
≈≈P Q
;
≈≈Q R
}
∆∆ 
tran
«« 
.
«« 
Commit
«« 
(
««  
)
««  !
;
««! "
}
   
}
ÃÃ 
resp
ÕÕ 
=
ÕÕ 
(
ÕÕ 
(
ÕÕ 
savedRecords
ÕÕ !
*
ÕÕ" #
-
ÕÕ$ %
$num
ÕÕ% &
)
ÕÕ& '
>
ÕÕ( )
$num
ÕÕ* +
)
ÕÕ+ ,
&&
ÕÕ- /
isSaveWorkFlow
ÕÕ0 >
;
ÕÕ> ?
return
ŒŒ 
resp
ŒŒ 
;
ŒŒ 
}
œœ 	
private
—— 
int
—— 
GetDayTypeId
——  
(
——  !
int
——! $
rowIndex
——% -
,
——- .
EmployeeLeave
——/ <
leaveRequest
——= I
,
——I J
int
——K N
	totalDays
——O X
)
——X Y
{
““ 	
int
”” 
	dayTypeId
”” 
=
”” 
$num
”” 
;
”” 
if
’’ 
(
’’ 
rowIndex
’’ 
==
’’ 
$num
’’ 
)
’’ 
{
÷÷ 
if
◊◊ 
(
◊◊ 
leaveRequest
◊◊  
.
◊◊  !
FromDateDayTypeId
◊◊! 2
==
◊◊3 5
LeaveDayTypeNames
◊◊6 G
.
◊◊G H
	FirstHalf
◊◊H Q
.
◊◊Q R
ToInt32OrDefault
◊◊R b
(
◊◊b c
)
◊◊c d
)
◊◊d e
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
	totalDays
ŸŸ !
>
ŸŸ" #
$num
ŸŸ$ %
)
ŸŸ% &
{
⁄⁄ 
	dayTypeId
€€ !
=
€€" #
LeaveDayTypeNames
€€$ 5
.
€€5 6
FullDay
€€6 =
.
€€= >
ToInt32OrDefault
€€> N
(
€€N O
)
€€O P
;
€€P Q
}
‹‹ 
else
›› 
{
ﬁﬁ 
	dayTypeId
ﬂﬂ !
=
ﬂﬂ" #
LeaveDayTypeNames
ﬂﬂ$ 5
.
ﬂﬂ5 6
	FirstHalf
ﬂﬂ6 ?
.
ﬂﬂ? @
ToInt32OrDefault
ﬂﬂ@ P
(
ﬂﬂP Q
)
ﬂﬂQ R
;
ﬂﬂR S
}
‡‡ 
}
·· 
else
‚‚ 
if
‚‚ 
(
‚‚ 
leaveRequest
‚‚ %
.
‚‚% &
FromDateDayTypeId
‚‚& 7
==
‚‚8 :
LeaveDayTypeNames
‚‚; L
.
‚‚L M

SecondHalf
‚‚M W
.
‚‚W X
ToInt32OrDefault
‚‚X h
(
‚‚h i
)
‚‚i j
)
‚‚j k
{
„„ 
	dayTypeId
‰‰ 
=
‰‰ 
LeaveDayTypeNames
‰‰  1
.
‰‰1 2

SecondHalf
‰‰2 <
.
‰‰< =
ToInt32OrDefault
‰‰= M
(
‰‰M N
)
‰‰N O
;
‰‰O P
}
ÂÂ 
}
ÊÊ 
if
ÁÁ 
(
ÁÁ 
(
ÁÁ 
rowIndex
ÁÁ 
+
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
==
ÁÁ !
	totalDays
ÁÁ" +
)
ÁÁ+ ,
{
ËË 
int
ÈÈ 
firstDayTypeId
ÈÈ "
=
ÈÈ# $
leaveRequest
ÈÈ% 1
.
ÈÈ1 2
FromDateDayTypeId
ÈÈ2 C
;
ÈÈC D
if
ÍÍ 
(
ÍÍ 
leaveRequest
ÍÍ  
.
ÍÍ  !
ToDateDayTypeId
ÍÍ! 0
==
ÍÍ1 3
LeaveDayTypeNames
ÍÍ4 E
.
ÍÍE F
	FirstHalf
ÍÍF O
.
ÍÍO P
ToInt32OrDefault
ÍÍP `
(
ÍÍ` a
)
ÍÍa b
)
ÍÍb c
{
ÎÎ 
	dayTypeId
ÏÏ 
=
ÏÏ 
LeaveDayTypeNames
ÏÏ  1
.
ÏÏ1 2
	FirstHalf
ÏÏ2 ;
.
ÏÏ; <
ToInt32OrDefault
ÏÏ< L
(
ÏÏL M
)
ÏÏM N
;
ÏÏN O
}
ÌÌ 
else
ÓÓ 
if
ÓÓ 
(
ÓÓ 
leaveRequest
ÓÓ %
.
ÓÓ% &
ToDateDayTypeId
ÓÓ& 5
==
ÓÓ6 8
LeaveDayTypeNames
ÓÓ9 J
.
ÓÓJ K

SecondHalf
ÓÓK U
.
ÓÓU V
ToInt32OrDefault
ÓÓV f
(
ÓÓf g
)
ÓÓg h
)
ÓÓh i
{
ÔÔ 
if
 
(
 
	totalDays
 !
>
" #
$num
$ %
)
% &
{
ÒÒ 
	dayTypeId
ÚÚ !
=
ÚÚ" #
LeaveDayTypeNames
ÚÚ$ 5
.
ÚÚ5 6
FullDay
ÚÚ6 =
.
ÚÚ= >
ToInt32OrDefault
ÚÚ> N
(
ÚÚN O
)
ÚÚO P
;
ÚÚP Q
}
ÛÛ 
else
ÙÙ 
{
ıı 
	dayTypeId
ˆˆ !
=
ˆˆ" #
LeaveDayTypeNames
ˆˆ$ 5
.
ˆˆ5 6

SecondHalf
ˆˆ6 @
.
ˆˆ@ A
ToInt32OrDefault
ˆˆA Q
(
ˆˆQ R
)
ˆˆR S
;
ˆˆS T
}
˜˜ 
}
¯¯ 
}
˘˘ 
return
˙˙ 
	dayTypeId
˙˙ 
;
˙˙ 
}
˚˚ 	
private
˝˝ 
async
˝˝ 
Task
˝˝ 
<
˝˝ 
EmpLeaveResponse
˝˝ +
>
˝˝+ ,#
ValidateLeavePolicies
˝˝- B
(
˝˝B C
List
˝˝C G
<
˝˝G H
DateTime
˝˝H P
>
˝˝P Q
leaveAppliedDates
˝˝R c
,
˝˝c d
EmployeeLeave
˝˝e r
leaveRequest
˝˝s 
,˝˝ Ä
double˝˝Å á
	totalDays˝˝à ë
,˝˝ë í
DateTime˝˝ì õ&
payrollPeriodStartDate˝˝ú ≤
,˝˝≤ ≥
DateTime˝˝¥ º$
payrollPeriodEndDate˝˝Ω —
)˝˝— “
{
˛˛ 	
LeaveTypeNames
ˇˇ 
	leaveType
ˇˇ $
=
ˇˇ% &
(
ˇˇ' (
LeaveTypeNames
ˇˇ( 6
)
ˇˇ6 7
leaveRequest
ˇˇ7 C
.
ˇˇC D
	LeaveType
ˇˇD M
.
ˇˇM N
LeaveTypeId
ˇˇN Y
;
ˇˇY Z
List
ÄÄ 
<
ÄÄ 
LeaveDetail
ÄÄ 
>
ÄÄ 
appliedLeaves
ÄÄ +
=
ÄÄ, -
await
ÄÄ. 3
GetEmployeeLeaves
ÄÄ4 E
(
ÄÄE F
leaveRequest
ÄÄF R
,
ÄÄR S$
payrollPeriodStartDate
ÄÄT j
,
ÄÄj k#
payrollPeriodEndDateÄÄl Ä
)ÄÄÄ Å
;ÄÄÅ Ç
EmpLeaveResponse
ÇÇ 
response
ÇÇ %
=
ÇÇ& '(
CheckForOverLappingPeriods
ÇÇ( B
(
ÇÇB C
leaveAppliedDates
ÇÇC T
,
ÇÇT U
leaveRequest
ÇÇV b
,
ÇÇb c
appliedLeaves
ÇÇd q
)
ÇÇq r
;
ÇÇr s
if
ÉÉ 
(
ÉÉ 
response
ÉÉ 
!=
ÉÉ 
null
ÉÉ  
&&
ÉÉ! #
!
ÉÉ$ %
response
ÉÉ% -
.
ÉÉ- .
Response
ÉÉ. 6
)
ÉÉ6 7
{
ÑÑ 
return
ÖÖ 
response
ÖÖ 
;
ÖÖ  
}
ÜÜ 
if
àà 
(
àà 
!
àà 
leaveRequest
àà 
.
àà 
	LeaveType
àà '
.
àà' (
CanApplyHalfDay
àà( 7
)
àà7 8
{
ââ 
if
ää 
(
ää 
(
ää 
leaveRequest
ää !
.
ää! "
FromDateDayTypeId
ää" 3
==
ää4 6
LeaveDayTypeNames
ää7 H
.
ääH I
	FirstHalf
ääI R
.
ääR S
ToInt32OrDefault
ääS c
(
ääc d
)
ääd e
||
ääf h
leaveRequest
ääi u
.
ääu v 
FromDateDayTypeIdääv á
==ääà ä!
LeaveDayTypeNamesääã ú
.ääú ù

SecondHalfääù ß
.ääß ® 
ToInt32OrDefaultää® ∏
(ää∏ π
)ääπ ∫
||ääª Ω
leaveRequest
ãã  
.
ãã  !
ToDateDayTypeId
ãã! 0
==
ãã1 3
LeaveDayTypeNames
ãã4 E
.
ããE F
	FirstHalf
ããF O
.
ããO P
ToInt32OrDefault
ããP `
(
ãã` a
)
ããa b
||
ããc e
leaveRequest
ããf r
.
ããr s
ToDateDayTypeIdããs Ç
==ããÉ Ö!
LeaveDayTypeNamesããÜ ó
.ããó ò

SecondHalfããò ¢
.ãã¢ £ 
ToInt32OrDefaultãã£ ≥
(ãã≥ ¥
)ãã¥ µ
)ããµ ∂
)ãã∂ ∑
{
åå 
response
çç 
=
çç 
new
çç "
EmpLeaveResponse
çç# 3
(
çç3 4
)
çç4 5
{
éé 
Response
èè  
=
èè! "
false
èè# (
,
èè( )
Message
êê 
=
êê  !
string
êê" (
.
êê( )
Format
êê) /
(
êê/ 0
$str
êê0 p
,
êêp q
	leaveType
êêr {
.
êê{ |,
GetCustomAttributeDescriptionêê| ô
(êêô ö
)êêö õ
)êêõ ú
}
ëë 
;
ëë 
return
íí 
response
íí #
;
íí# $
}
ìì 
}
îî 
switch
ïï 
(
ïï 
	leaveType
ïï 
)
ïï 
{
ññ 
case
óó 
LeaveTypeNames
óó #
.
óó# $
CASUAL_LEAVE
óó$ 0
:
óó0 1
response
òò 
=
òò 
await
òò $'
ValidateCasualLeavePolicy
òò% >
(
òò> ?
leaveRequest
òò? K
,
òòK L$
payrollPeriodStartDate
òòM c
,
òòc d"
payrollPeriodEndDate
òòe y
,
òòy z
LeaveTypeNamesòò{ â
.òòâ ä
CASUAL_LEAVEòòä ñ
,òòñ ó
	totalDaysòòò °
)òò° ¢
;òò¢ £
break
ôô 
;
ôô 
case
öö 
LeaveTypeNames
öö #
.
öö# $

SICK_LEAVE
öö$ .
:
öö. /
response
õõ 
=
õõ 
new
õõ "
EmpLeaveResponse
õõ# 3
(
õõ3 4
)
õõ4 5
{
úú 
Response
ùù  
=
ùù! "
true
ùù# '
,
ùù' (
Message
ûû 
=
ûû  !
$str
ûû" &
}
üü 
;
üü 
break
†† 
;
†† 
case
¢¢ 
LeaveTypeNames
¢¢ #
.
¢¢# $
PATERNITY_LEAVE
¢¢$ 3
:
¢¢3 4
response
££ 
=
££ 
await
££ $*
ValidatePaternityLeavePolicy
££% A
(
££A B
leaveRequest
££B N
,
££N O$
payrollPeriodStartDate
££P f
,
££f g"
payrollPeriodEndDate
££h |
,
££| }
LeaveTypeNames££~ å
.££å ç
PATERNITY_LEAVE££ç ú
,££ú ù
	totalDays££û ß
)££ß ®
;££® ©
break
§§ 
;
§§ 
case
•• 
LeaveTypeNames
•• #
.
••# $
MATERNITY_LEAVE
••$ 3
:
••3 4
response
¶¶ 
=
¶¶ 
await
¶¶ $*
ValidateMaternityLeavePolicy
¶¶% A
(
¶¶A B
leaveRequest
¶¶B N
,
¶¶N O$
payrollPeriodStartDate
¶¶P f
,
¶¶f g"
payrollPeriodEndDate
¶¶h |
,
¶¶| }
LeaveTypeNames¶¶~ å
.¶¶å ç
MATERNITY_LEAVE¶¶ç ú
,¶¶ú ù
	totalDays¶¶û ß
)¶¶ß ®
;¶¶® ©
break
ßß 
;
ßß 
case
®® 
LeaveTypeNames
®® #
.
®®# $
MARRIAGE_LEAVE
®®$ 2
:
®®2 3
response
©© 
=
©© 
await
©© $)
ValidateMarriageLeavePolicy
©©% @
(
©©@ A
leaveRequest
©©A M
,
©©M N$
payrollPeriodStartDate
©©O e
,
©©e f"
payrollPeriodEndDate
©©g {
,
©©{ |
LeaveTypeNames©©} ã
.©©ã å
MARRIAGE_LEAVE©©å ö
)©©ö õ
;©©õ ú
break
™™ 
;
™™ 
case
´´ 
LeaveTypeNames
´´ #
.
´´# $
BEREAVEMENT_LEAVE
´´$ 5
:
´´5 6
response
¨¨ 
=
¨¨ 
await
¨¨ $,
ValidateBereavementLeavePolicy
¨¨% C
(
¨¨C D
leaveRequest
¨¨D P
,
¨¨P Q$
payrollPeriodStartDate
¨¨R h
,
¨¨h i"
payrollPeriodEndDate
¨¨j ~
,
¨¨~ 
LeaveTypeNames¨¨Ä é
.¨¨é è!
BEREAVEMENT_LEAVE¨¨è †
)¨¨† °
;¨¨° ¢
break
≠≠ 
;
≠≠ 
case
ÆÆ 
LeaveTypeNames
ÆÆ #
.
ÆÆ# $
SUMMER_VACATION
ÆÆ$ 3
:
ÆÆ3 4
response
ØØ 
=
ØØ 
await
ØØ $$
ValidateSummerVacation
ØØ% ;
(
ØØ; <
leaveRequest
ØØ< H
,
ØØH I
	totalDays
ØØJ S
)
ØØS T
;
ØØT U
break
∞∞ 
;
∞∞ 
case
±± 
LeaveTypeNames
±± #
.
±±# $
WINTER_VACATION
±±$ 3
:
±±3 4
response
≤≤ 
=
≤≤ 
await
≤≤ $$
ValidateWinterVacation
≤≤% ;
(
≤≤; <
leaveRequest
≤≤< H
,
≤≤H I
	totalDays
≤≤J S
)
≤≤S T
;
≤≤T U
break
≥≥ 
;
≥≥ 
case
¥¥ 
LeaveTypeNames
¥¥ #
.
¥¥# $"
SPECIAL_CASUAL_LEAVE
¥¥$ 8
:
¥¥8 9
response
µµ 
=
µµ 
await
µµ $.
 ValidateSpecialCasualLeavePolicy
µµ% E
(
µµE F
leaveRequest
µµF R
,
µµR S$
payrollPeriodStartDate
µµT j
,
µµj k#
payrollPeriodEndDateµµl Ä
,µµÄ Å
LeaveTypeNamesµµÇ ê
.µµê ë$
SPECIAL_CASUAL_LEAVEµµë •
,µµ• ¶
	totalDaysµµß ∞
)µµ∞ ±
;µµ± ≤
break
∂∂ 
;
∂∂ 
case
∑∑ 
LeaveTypeNames
∑∑ #
.
∑∑# $
EARNED_LEAVE
∑∑$ 0
:
∑∑0 1
response
∏∏ 
=
∏∏ 
await
∏∏ $*
ValidatePrivilegeLeavePolicy
∏∏% A
(
∏∏A B
leaveRequest
∏∏B N
,
∏∏N O$
payrollPeriodStartDate
∏∏P f
,
∏∏f g"
payrollPeriodEndDate
∏∏h |
,
∏∏| }
	totalDays∏∏~ á
,∏∏á à
LeaveTypeNames∏∏â ó
.∏∏ó ò
EARNED_LEAVE∏∏ò §
)∏∏§ •
;∏∏• ¶
break
ππ 
;
ππ 
case
∫∫ 
LeaveTypeNames
∫∫ #
.
∫∫# $
EARLY_LOGOUT_TIME
∫∫$ 5
:
∫∫5 6
response
ªª 
=
ªª 
await
ªª $+
ValidateEarlyLogoutTimePolicy
ªª% B
(
ªªB C
leaveRequest
ªªC O
,
ªªO P$
payrollPeriodStartDate
ªªQ g
,
ªªg h"
payrollPeriodEndDate
ªªi }
,
ªª} ~
LeaveTypeNamesªª ç
.ªªç é!
EARLY_LOGOUT_TIMEªªé ü
)ªªü †
;ªª† °
break
ºº 
;
ºº 
case
ΩΩ 
LeaveTypeNames
ΩΩ #
.
ΩΩ# $
COVID_LEAVE
ΩΩ$ /
:
ΩΩ/ 0
case
ææ 
LeaveTypeNames
ææ #
.
ææ# $ 
SPECIAL_SICK_LEAVE
ææ$ 6
:
ææ6 7
response
øø 
=
øø 
await
øø $,
ValidateSpecialSickLeavePolicy
øø% C
(
øøC D
leaveRequest
øøD P
,
øøP Q$
payrollPeriodStartDate
øøR h
,
øøh i"
payrollPeriodEndDate
øøj ~
,
øø~ 
LeaveTypeNamesøøÄ é
.øøé è"
SPECIAL_SICK_LEAVEøøè °
)øø° ¢
;øø¢ £
break
¿¿ 
;
¿¿ 
default
¡¡ 
:
¡¡ 
response
¬¬ 
=
¬¬ 
new
¬¬ "
EmpLeaveResponse
¬¬# 3
(
¬¬3 4
)
¬¬4 5
{
√√ 
Response
ƒƒ  
=
ƒƒ! "
true
ƒƒ# '
,
ƒƒ' (
Message
≈≈ 
=
≈≈  !
$str
≈≈" &
}
∆∆ 
;
∆∆ 
break
«« 
;
«« 
}
»» 
return
   
response
   
;
   
}
ÀÀ 	
private
ÃÃ 
async
ÃÃ 
Task
ÃÃ 
<
ÃÃ 
EmpLeaveResponse
ÃÃ +
>
ÃÃ+ ,(
ValidatePrefixSuffixPolicy
ÃÃ- G
(
ÃÃG H
EmployeeLeave
ÃÃH U
leaveRequest
ÃÃV b
,
ÃÃb c
DateTime
ÃÃd l%
payrollPeriodStartDateÃÃm É
,ÃÃÉ Ñ
DateTimeÃÃÖ ç$
payrollPeriodEndDateÃÃé ¢
,ÃÃ¢ £
LeaveTypeNamesÃÃ§ ≤
	leaveTypeÃÃ≥ º
,ÃÃº Ω
doubleÃÃæ ƒ
	totalDaysÃÃ≈ Œ
)ÃÃŒ œ
{
ÕÕ 	
EmpLeaveResponse
ŒŒ 
response
ŒŒ %
=
ŒŒ& '
null
ŒŒ( ,
;
ŒŒ, -
List
œœ 
<
œœ 
LeaveDetail
œœ 
>
œœ 
beforeLeaves
œœ *
=
œœ+ ,
null
œœ- 1
;
œœ1 2
List
–– 
<
–– 
LeaveDetail
–– 
>
–– "
beforePreviousLeaves
–– 2
=
––3 4
null
––5 9
;
––9 :
List
—— 
<
—— 
LeaveDetail
—— 
>
—— 
afterLeaves
—— )
=
——* +
null
——, 0
;
——0 1
List
““ 
<
““ 
LeaveDetail
““ 
>
““ 
afterNextLeaves
““ -
=
““. /
null
““0 4
;
““4 5
DateTime
”” 
previousDay
””  
=
””! "
DateTime
””# +
.
””+ ,
Now
””, /
;
””/ 0
DateTime
‘‘ 
beforepreviousDay
‘‘ &
=
‘‘' (
DateTime
‘‘) 1
.
‘‘1 2
Now
‘‘2 5
;
‘‘5 6
DateTime
’’ 
nextDay
’’ 
=
’’ 
DateTime
’’ '
.
’’' (
Now
’’( +
;
’’+ ,
DateTime
÷÷ 
nexttoNextDay
÷÷ "
=
÷÷# $
DateTime
÷÷% -
.
÷÷- .
Now
÷÷. 1
;
÷÷1 2
List
◊◊ 
<
◊◊ 
DateTime
◊◊ 
>
◊◊ 
publicHolidays
◊◊ )
=
◊◊* +
null
◊◊, 0
;
◊◊0 1
previousDay
ŸŸ 
=
ŸŸ 
leaveRequest
ŸŸ &
.
ŸŸ& '
FromDate
ŸŸ' /
.
ŸŸ/ 0
AddDays
ŸŸ0 7
(
ŸŸ7 8
-
ŸŸ8 9
$num
ŸŸ9 :
)
ŸŸ: ;
;
ŸŸ; <
beforepreviousDay
⁄⁄ 
=
⁄⁄ 
leaveRequest
⁄⁄  ,
.
⁄⁄, -
FromDate
⁄⁄- 5
.
⁄⁄5 6
AddDays
⁄⁄6 =
(
⁄⁄= >
-
⁄⁄> ?
$num
⁄⁄? @
)
⁄⁄@ A
;
⁄⁄A B
nextDay
€€ 
=
€€ 
leaveRequest
€€ "
.
€€" #
ToDate
€€# )
.
€€) *
AddDays
€€* 1
(
€€1 2
$num
€€2 3
)
€€3 4
;
€€4 5
nexttoNextDay
‹‹ 
=
‹‹ 
leaveRequest
‹‹ (
.
‹‹( )
ToDate
‹‹) /
.
‹‹/ 0
AddDays
‹‹0 7
(
‹‹7 8
$num
‹‹8 9
)
‹‹9 :
;
‹‹: ;
publicHolidays
›› 
=
›› 
await
›› "%
GetOrganizationHolidays
››# :
(
››: ;
leaveRequest
››; G
.
››G H
EmployeeSlno
››H T
,
››T U$
payrollPeriodStartDate
››V l
)
››l m
;
››m n
beforeLeaves
ﬂﬂ 
=
ﬂﬂ 
await
ﬂﬂ  .
 GetEmployeeLeavesBeforeStartDate
ﬂﬂ! A
(
ﬂﬂA B
leaveRequest
ﬂﬂB N
.
ﬂﬂN O
EmployeeSlno
ﬂﬂO [
,
ﬂﬂ[ \
previousDay
ﬂﬂ] h
)
ﬂﬂh i
;
ﬂﬂi j"
beforePreviousLeaves
‡‡  
=
‡‡! "
await
‡‡# (.
 GetEmployeeLeavesBeforeStartDate
‡‡) I
(
‡‡I J
leaveRequest
‡‡J V
.
‡‡V W
EmployeeSlno
‡‡W c
,
‡‡c d
beforepreviousDay
‡‡e v
)
‡‡v w
;
‡‡w x
afterLeaves
·· 
=
·· 
await
·· +
GetEmployeeLeavesAfterEndDate
··  =
(
··= >
leaveRequest
··> J
.
··J K
EmployeeSlno
··K W
,
··W X
nextDay
··Y `
)
··` a
;
··a b
afterNextLeaves
‚‚ 
=
‚‚ 
await
‚‚ #+
GetEmployeeLeavesAfterEndDate
‚‚$ A
(
‚‚A B
leaveRequest
‚‚B N
.
‚‚N O
EmployeeSlno
‚‚O [
,
‚‚[ \
nexttoNextDay
‚‚] j
)
‚‚j k
;
‚‚k l
LeaveDetail
‰‰ 
previousLeave
‰‰ %
=
‰‰& '
beforeLeaves
‰‰( 4
.
‰‰4 5
OrderByDescending
‰‰5 F
(
‰‰F G
x
‰‰G H
=>
‰‰I K
x
‰‰L M
.
‰‰M N
LeaveTo
‰‰N U
)
‰‰U V
.
‰‰V W
FirstOrDefault
‰‰W e
(
‰‰e f
)
‰‰f g
;
‰‰g h
LeaveDetail
ÂÂ %
previoustopreviousLeave
ÂÂ /
=
ÂÂ0 1"
beforePreviousLeaves
ÂÂ2 F
.
ÂÂF G
OrderByDescending
ÂÂG X
(
ÂÂX Y
x
ÂÂY Z
=>
ÂÂ[ ]
x
ÂÂ^ _
.
ÂÂ_ `
LeaveTo
ÂÂ` g
)
ÂÂg h
.
ÂÂh i
FirstOrDefault
ÂÂi w
(
ÂÂw x
)
ÂÂx y
;
ÂÂy z
LeaveDetail
ÊÊ 
	nextLeave
ÊÊ !
=
ÊÊ" #
afterLeaves
ÊÊ$ /
.
ÊÊ/ 0
OrderBy
ÊÊ0 7
(
ÊÊ7 8
x
ÊÊ8 9
=>
ÊÊ: <
x
ÊÊ= >
.
ÊÊ> ?
	LeaveFrom
ÊÊ? H
)
ÊÊH I
.
ÊÊI J
FirstOrDefault
ÊÊJ X
(
ÊÊX Y
)
ÊÊY Z
;
ÊÊZ [
LeaveDetail
ÁÁ 
nexttoNextLeave
ÁÁ '
=
ÁÁ( )
afterNextLeaves
ÁÁ* 9
.
ÁÁ9 :
OrderBy
ÁÁ: A
(
ÁÁA B
x
ÁÁB C
=>
ÁÁD F
x
ÁÁG H
.
ÁÁH I
	LeaveFrom
ÁÁI R
)
ÁÁR S
.
ÁÁS T
FirstOrDefault
ÁÁT b
(
ÁÁb c
)
ÁÁc d
;
ÁÁd e
if
ÈÈ 
(
ÈÈ 
previousLeave
ÈÈ 
!=
ÈÈ  
null
ÈÈ! %
)
ÈÈ% &
{
ÍÍ 
if
ÏÏ 
(
ÏÏ 
previousLeave
ÏÏ !
.
ÏÏ! "
LeaveTypeId
ÏÏ" -
!=
ÏÏ. 0
LeaveTypeNames
ÏÏ1 ?
.
ÏÏ? @

SICK_LEAVE
ÏÏ@ J
.
ÏÏJ K
ToInt32OrDefault
ÏÏK [
(
ÏÏ[ \
)
ÏÏ\ ]
&&
ÏÏ^ `
previousLeave
ÏÏa n
.
ÏÏn o
LeaveTypeId
ÏÏo z
!=
ÏÏ{ }
LeaveTypeNamesÏÏ~ å
.ÏÏå ç
ON_DUTYÏÏç î
.ÏÏî ï 
ToInt32OrDefaultÏÏï •
(ÏÏ• ¶
)ÏÏ¶ ß
&&ÏÏ® ™
previousLeaveÏÏ´ ∏
.ÏÏ∏ π
TotalDaysTakenÏÏπ «
>=ÏÏ»  
$numÏÏÀ Ã
&&ÏÏÕ œ
previousLeaveÏÏ– ›
.ÏÏ› ﬁ
LeaveToÏÏﬁ Â
.ÏÏÂ Ê
DateÏÏÊ Í
==ÏÏÎ Ì
leaveRequestÏÏÓ ˙
.ÏÏ˙ ˚
FromDateÏÏ˚ É
.ÏÏÉ Ñ
AddDaysÏÏÑ ã
(ÏÏã å
-ÏÏå ç
$numÏÏç é
)ÏÏé è
.ÏÏè ê
DateÏÏê î
)ÏÏî ï
{
ÌÌ 
response
ÓÓ 
=
ÓÓ 
new
ÓÓ "
EmpLeaveResponse
ÓÓ# 3
(
ÓÓ3 4
)
ÓÓ4 5
{
ÔÔ 
Response
  
=
! "
false
# (
,
( )
Message
ÒÒ 
=
ÒÒ  !
string
ÒÒ" (
.
ÒÒ( )
Format
ÒÒ) /
(
ÒÒ/ 0
$strÒÒ0 Ñ
,ÒÒÑ Ö
	leaveTypeÒÒÜ è
.ÒÒè ê-
GetCustomAttributeDescriptionÒÒê ≠
(ÒÒ≠ Æ
)ÒÒÆ Ø
,ÒÒØ ∞
leaveRequestÒÒ± Ω
.ÒÒΩ æ
	LeaveTypeÒÒæ «
.ÒÒ« »
MaximumUsageÒÒ» ‘
)ÒÒ‘ ’
}
ÚÚ 
;
ÚÚ 
}
ÛÛ 
if
ıı 
(
ıı 
previousLeave
ıı !
.
ıı! "
LeaveTypeId
ıı" -
.
ıı- .
NotIn
ıı. 3
(
ıı3 4
new
ıı4 7
int
ıı8 ;
[
ıı; <
]
ıı< =
{
ıı> ?
LeaveTypeNames
ıı@ N
.
ııN O

SICK_LEAVE
ııO Y
.
ııY Z
ToInt32OrDefault
ııZ j
(
ııj k
)
ıık l
,
ııl m
LeaveTypeNames
ıın |
.
ıı| }
ON_DUTYıı} Ñ
.ııÑ Ö 
ToInt32OrDefaultııÖ ï
(ııï ñ
)ııñ ó
}ııò ô
)ııô ö
&&ııõ ù
previousLeaveııû ´
.ıı´ ¨
TotalDaysTakenıı¨ ∫
==ııª Ω
$numııæ ø
&&ıı¿ ¬
	totalDaysıı√ Ã
>=ııÕ œ
$numıı– —
&&ıı“ ‘
previousLeaveıı’ ‚
.ıı‚ „
LeaveToıı„ Í
.ııÍ Î
DateııÎ Ô
==ıı Ú
leaveRequestııÛ ˇ
.ııˇ Ä
FromDateııÄ à
.ııà â
AddDaysııâ ê
(ııê ë
-ııë í
$numııí ì
)ııì î
.ııî ï
Dateııï ô
)ııô ö
{
ˆˆ 
response
˜˜ 
=
˜˜ 
new
˜˜ "
EmpLeaveResponse
˜˜# 3
(
˜˜3 4
)
˜˜4 5
{
¯¯ 
Response
˘˘  
=
˘˘! "
false
˘˘# (
,
˘˘( )
Message
˙˙ 
=
˙˙  !
string
˙˙" (
.
˙˙( )
Format
˙˙) /
(
˙˙/ 0
$str˙˙0 Ñ
,˙˙Ñ Ö
	leaveType˙˙Ü è
.˙˙è ê-
GetCustomAttributeDescription˙˙ê ≠
(˙˙≠ Æ
)˙˙Æ Ø
,˙˙Ø ∞
leaveRequest˙˙± Ω
.˙˙Ω æ
	LeaveType˙˙æ «
.˙˙« »
MaximumUsage˙˙» ‘
)˙˙‘ ’
}
˚˚ 
;
˚˚ 
}
¸¸ 
DateTime
˛˛ "
previousHolidayCheck
˛˛ -
=
˛˛. /
publicHolidays
˛˛0 >
.
˛˛> ?
Where
˛˛? D
(
˛˛D E
x
˛˛E F
=>
˛˛G I
x
˛˛J K
.
˛˛K L
Date
˛˛L P
==
˛˛Q S
previousDay
˛˛T _
.
˛˛_ `
Date
˛˛` d
)
˛˛d e
.
˛˛e f
FirstOrDefault
˛˛f t
(
˛˛t u
)
˛˛u v
;
˛˛v w
if
ˇˇ 
(
ˇˇ %
previoustopreviousLeave
ˇˇ +
!=
ˇˇ, .
null
ˇˇ/ 3
&&
ˇˇ4 6"
previousHolidayCheck
ˇˇ7 K
!=
ˇˇL N
DateTime
ˇˇO W
.
ˇˇW X
MinValue
ˇˇX `
)
ˇˇ` a
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
previousLeave
ÅÅ %
.
ÅÅ% &
LeaveTypeId
ÅÅ& 1
.
ÅÅ1 2
NotIn
ÅÅ2 7
(
ÅÅ7 8
new
ÅÅ8 ;
int
ÅÅ< ?
[
ÅÅ? @
]
ÅÅ@ A
{
ÅÅB C
LeaveTypeNames
ÅÅD R
.
ÅÅR S

SICK_LEAVE
ÅÅS ]
.
ÅÅ] ^
ToInt32OrDefault
ÅÅ^ n
(
ÅÅn o
)
ÅÅo p
,
ÅÅp q
LeaveTypeNamesÅÅr Ä
.ÅÅÄ Å
ON_DUTYÅÅÅ à
.ÅÅà â 
ToInt32OrDefaultÅÅâ ô
(ÅÅô ö
)ÅÅö õ
}ÅÅú ù
)ÅÅù û
&&ÅÅü °$
previousHolidayCheckÅÅ¢ ∂
.ÅÅ∂ ∑
DayÅÅ∑ ∫
==ÅÅª Ω
leaveRequestÅÅæ  
.ÅÅ  À
FromDateÅÅÀ ”
.ÅÅ” ‘
AddDaysÅÅ‘ €
(ÅÅ€ ‹
-ÅÅ‹ ›
$numÅÅ› ﬁ
)ÅÅﬁ ﬂ
.ÅÅﬂ ‡
DayÅÅ‡ „
&&
ÇÇ %
previoustopreviousLeave
ÇÇ 3
.
ÇÇ3 4
LeaveTo
ÇÇ4 ;
.
ÇÇ; <
Day
ÇÇ< ?
==
ÇÇ@ B
leaveRequest
ÇÇC O
.
ÇÇO P
FromDate
ÇÇP X
.
ÇÇX Y
AddDays
ÇÇY `
(
ÇÇ` a
-
ÇÇa b
$num
ÇÇb c
)
ÇÇc d
.
ÇÇd e
Day
ÇÇe h
&&
ÇÇi k#
previousHolidayCheckÇÇl Ä
!=ÇÇÅ É
DateTimeÇÇÑ å
.ÇÇå ç
MinValueÇÇç ï
)ÇÇï ñ
{
ÉÉ 
response
ÑÑ  
=
ÑÑ! "
new
ÑÑ# &
EmpLeaveResponse
ÑÑ' 7
(
ÑÑ7 8
)
ÑÑ8 9
{
ÖÖ 
Response
ÜÜ $
=
ÜÜ% &
false
ÜÜ' ,
,
ÜÜ, -
Message
áá #
=
áá$ %
string
áá& ,
.
áá, -
Format
áá- 3
(
áá3 4
$stráá4 à
,ááà â
	leaveTypeááä ì
.ááì î-
GetCustomAttributeDescriptionááî ±
(áá± ≤
)áá≤ ≥
,áá≥ ¥
leaveRequestááµ ¡
.áá¡ ¬
	LeaveTypeáá¬ À
.ááÀ Ã
MaximumUsageááÃ ÿ
)ááÿ Ÿ
}
àà 
;
àà 
}
ââ 
}
ää 
}
ìì 
if
ññ 
(
ññ 
	nextLeave
ññ 
!=
ññ 
null
ññ !
)
ññ! "
{
óó 
if
ôô 
(
ôô 
	nextLeave
ôô 
.
ôô 
LeaveTypeId
ôô )
!=
ôô* ,
LeaveTypeNames
ôô- ;
.
ôô; <

SICK_LEAVE
ôô< F
.
ôôF G
ToInt32OrDefault
ôôG W
(
ôôW X
)
ôôX Y
&&
ôôZ \
	nextLeave
ôô] f
.
ôôf g
LeaveTypeId
ôôg r
!=
ôôs u
LeaveTypeNamesôôv Ñ
.ôôÑ Ö
ON_DUTYôôÖ å
.ôôå ç 
ToInt32OrDefaultôôç ù
(ôôù û
)ôôû ü
&&ôô† ¢
	nextLeaveôô£ ¨
.ôô¨ ≠
TotalDaysTakenôô≠ ª
>=ôôº æ
$numôôø ¿
&&ôô¡ √
	nextLeaveôôƒ Õ
.ôôÕ Œ
	LeaveFromôôŒ ◊
.ôô◊ ÿ
Dayôôÿ €
==ôô‹ ﬁ
leaveRequestôôﬂ Î
.ôôÎ Ï
ToDateôôÏ Ú
.ôôÚ Û
AddDaysôôÛ ˙
(ôô˙ ˚
$numôô˚ ¸
)ôô¸ ˝
.ôô˝ ˛
Dayôô˛ Å
)ôôÅ Ç
{
öö 
response
õõ 
=
õõ 
new
õõ "
EmpLeaveResponse
õõ# 3
(
õõ3 4
)
õõ4 5
{
úú 
Response
ùù  
=
ùù! "
false
ùù# (
,
ùù( )
Message
ûû 
=
ûû  !
string
ûû" (
.
ûû( )
Format
ûû) /
(
ûû/ 0
$strûû0 Ö
,ûûÖ Ü
	leaveTypeûûá ê
.ûûê ë-
GetCustomAttributeDescriptionûûë Æ
(ûûÆ Ø
)ûûØ ∞
,ûû∞ ±
leaveRequestûû≤ æ
.ûûæ ø
	LeaveTypeûûø »
.ûû» …
MaximumUsageûû… ’
)ûû’ ÷
}
üü 
;
üü 
}
†† 
if
°° 
(
°° 
	nextLeave
°° 
.
°° 
LeaveTypeId
°° )
!=
°°* ,
LeaveTypeNames
°°- ;
.
°°; <

SICK_LEAVE
°°< F
.
°°F G
ToInt32OrDefault
°°G W
(
°°W X
)
°°X Y
&&
°°Z \
	nextLeave
°°] f
.
°°f g
LeaveTypeId
°°g r
!=
°°s u
LeaveTypeNames°°v Ñ
.°°Ñ Ö
ON_DUTY°°Ö å
.°°å ç 
ToInt32OrDefault°°ç ù
(°°ù û
)°°û ü
&&°°† ¢
	nextLeave°°£ ¨
.°°¨ ≠
TotalDaysTaken°°≠ ª
==°°º æ
$num°°ø ¿
&&°°¡ √
	totalDays°°ƒ Õ
>=°°Œ –
$num°°— “
&&°°” ’
	nextLeave°°÷ ﬂ
.°°ﬂ ‡
	LeaveFrom°°‡ È
.°°È Í
Day°°Í Ì
==°°Ó 
leaveRequest°°Ò ˝
.°°˝ ˛
ToDate°°˛ Ñ
.°°Ñ Ö
AddDays°°Ö å
(°°å ç
$num°°ç é
)°°é è
.°°è ê
Day°°ê ì
)°°ì î
{
¢¢ 
response
££ 
=
££ 
new
££ "
EmpLeaveResponse
££# 3
(
££3 4
)
££4 5
{
§§ 
Response
••  
=
••! "
false
••# (
,
••( )
Message
¶¶ 
=
¶¶  !
string
¶¶" (
.
¶¶( )
Format
¶¶) /
(
¶¶/ 0
$str¶¶0 Ö
,¶¶Ö Ü
	leaveType¶¶á ê
.¶¶ê ë-
GetCustomAttributeDescription¶¶ë Æ
(¶¶Æ Ø
)¶¶Ø ∞
,¶¶∞ ±
leaveRequest¶¶≤ æ
.¶¶æ ø
	LeaveType¶¶ø »
.¶¶» …
MaximumUsage¶¶… ’
)¶¶’ ÷
}
ßß 
;
ßß 
}
®® 
DateTime
©© 
NextHolidayCheck
©© )
=
©©* +
publicHolidays
©©, :
.
©©: ;
Where
©©; @
(
©©@ A
x
©©A B
=>
©©C E
x
©©F G
.
©©G H
Date
©©H L
==
©©M O
nextDay
©©P W
.
©©W X
Date
©©X \
)
©©\ ]
.
©©] ^
FirstOrDefault
©©^ l
(
©©l m
)
©©m n
;
©©n o
if
™™ 
(
™™ 
nexttoNextLeave
™™ #
!=
™™$ &
null
™™' +
&&
™™, .
NextHolidayCheck
™™/ ?
!=
™™@ B
DateTime
™™C K
.
™™K L
MinValue
™™L T
)
™™T U
{
´´ 
if
¨¨ 
(
¨¨ 
nexttoNextLeave
¨¨ '
.
¨¨' (
LeaveTypeId
¨¨( 3
!=
¨¨4 6
LeaveTypeNames
¨¨7 E
.
¨¨E F

SICK_LEAVE
¨¨F P
.
¨¨P Q
ToInt32OrDefault
¨¨Q a
(
¨¨a b
)
¨¨b c
&&
¨¨d f
nexttoNextLeave
¨¨g v
.
¨¨v w
LeaveTypeId¨¨w Ç
!=¨¨É Ö
LeaveTypeNames¨¨Ü î
.¨¨î ï
ON_DUTY¨¨ï ú
.¨¨ú ù 
ToInt32OrDefault¨¨ù ≠
(¨¨≠ Æ
)¨¨Æ Ø
&&¨¨∞ ≤ 
NextHolidayCheck¨¨≥ √
.¨¨√ ƒ
Day¨¨ƒ «
==¨¨»  
leaveRequest¨¨À ◊
.¨¨◊ ÿ
ToDate¨¨ÿ ﬁ
.¨¨ﬁ ﬂ
AddDays¨¨ﬂ Ê
(¨¨Ê Á
$num¨¨Á Ë
)¨¨Ë È
.¨¨È Í
Day¨¨Í Ì
&&
≠≠ 
nexttoNextLeave
≠≠ *
.
≠≠* +
	LeaveFrom
≠≠+ 4
.
≠≠4 5
Day
≠≠5 8
==
≠≠9 ;
leaveRequest
≠≠< H
.
≠≠H I
ToDate
≠≠I O
.
≠≠O P
AddDays
≠≠P W
(
≠≠W X
$num
≠≠X Y
)
≠≠Y Z
.
≠≠Z [
Day
≠≠[ ^
)
≠≠^ _
{
ÆÆ 
response
ØØ  
=
ØØ! "
new
ØØ# &
EmpLeaveResponse
ØØ' 7
(
ØØ7 8
)
ØØ8 9
{
∞∞ 
Response
±± $
=
±±% &
false
±±' ,
,
±±, -
Message
≤≤ #
=
≤≤$ %
string
≤≤& ,
.
≤≤, -
Format
≤≤- 3
(
≤≤3 4
$str≤≤4 â
,≤≤â ä
	leaveType≤≤ã î
.≤≤î ï-
GetCustomAttributeDescription≤≤ï ≤
(≤≤≤ ≥
)≤≤≥ ¥
,≤≤¥ µ
leaveRequest≤≤∂ ¬
.≤≤¬ √
	LeaveType≤≤√ Ã
.≤≤Ã Õ
MaximumUsage≤≤Õ Ÿ
)≤≤Ÿ ⁄
}
≥≥ 
;
≥≥ 
}
¥¥ 
}
µµ 
}
ææ 
return
øø 
response
øø 
;
øø 
}
¿¿ 	
private
¡¡ 
async
¡¡ 
Task
¡¡ 
<
¡¡ 
EmpLeaveResponse
¡¡ +
>
¡¡+ ,'
ValidateCasualLeavePolicy
¡¡- F
(
¡¡F G
EmployeeLeave
¡¡G T
leaveRequest
¡¡U a
,
¡¡a b
DateTime
¡¡c k%
payrollPeriodStartDate¡¡l Ç
,¡¡Ç É
DateTime¡¡Ñ å$
payrollPeriodEndDate¡¡ç °
,¡¡° ¢
LeaveTypeNames¡¡£ ±
	leaveType¡¡≤ ª
,¡¡ª º
double¡¡Ω √
	totalDays¡¡ƒ Õ
)¡¡Õ Œ
{
¬¬ 	
EmpLeaveResponse
√√ 
response
√√ %
=
√√& '
null
√√( ,
;
√√, -
List
ƒƒ 
<
ƒƒ 
LeaveDetail
ƒƒ 
>
ƒƒ 
leavesApplied
ƒƒ +
=
ƒƒ, -
null
ƒƒ. 2
;
ƒƒ2 3
leavesApplied
≈≈ 
=
≈≈ 
await
≈≈ !*
GetEmployeeLeavesByLeaveType
≈≈" >
(
≈≈> ?
leaveRequest
≈≈? K
.
≈≈K L
EmployeeSlno
≈≈L X
,
≈≈X Y$
payrollPeriodStartDate
≈≈Z p
,
≈≈p q#
payrollPeriodEndDate≈≈r Ü
,≈≈Ü á
	leaveType≈≈à ë
.≈≈ë í 
ToInt32OrDefault≈≈í ¢
(≈≈¢ £
)≈≈£ §
)≈≈§ •
;≈≈• ¶
if
∆∆ 
(
∆∆ 
leaveRequest
∆∆ 
.
∆∆ 
	LeaveType
∆∆ &
.
∆∆& '

UpperBound
∆∆' 1
>
∆∆2 3
$num
∆∆4 5
&&
∆∆6 8
	totalDays
∆∆9 B
>
∆∆C D
leaveRequest
∆∆E Q
.
∆∆Q R
	LeaveType
∆∆R [
.
∆∆[ \

UpperBound
∆∆\ f
)
∆∆f g
{
«« 
response
»» 
=
»» 
new
»» 
EmpLeaveResponse
»» /
(
»»/ 0
)
»»0 1
{
…… 
Response
   
=
   
false
   $
,
  $ %
Message
ÀÀ 
=
ÀÀ 
string
ÀÀ $
.
ÀÀ$ %
Format
ÀÀ% +
(
ÀÀ+ ,
$strÀÀ, £
,ÀÀ£ §
	leaveTypeÀÀ• Æ
.ÀÀÆ Ø-
GetCustomAttributeDescriptionÀÀØ Ã
(ÀÀÃ Õ
)ÀÀÕ Œ
,ÀÀŒ œ
leaveRequestÀÀ– ‹
.ÀÀ‹ ›
	LeaveTypeÀÀ› Ê
.ÀÀÊ Á

UpperBoundÀÀÁ Ò
)ÀÀÒ Ú
}
ÃÃ 
;
ÃÃ 
return
ÕÕ 
response
ÕÕ 
;
ÕÕ  
}
ŒŒ 
if
–– 
(
–– 
leaveRequest
–– 
.
–– 
	LeaveType
–– &
.
––& '
MaximumUsage
––' 3
>
––4 5
$num
––6 7
&&
––8 :
leavesApplied
––; H
.
––H I
Count
––I N
(
––N O
)
––O P
>=
––Q S
leaveRequest
––T `
.
––` a
	LeaveType
––a j
.
––j k
MaximumUsage
––k w
)
––w x
{
—— 
response
““ 
=
““ 
new
““ 
EmpLeaveResponse
““ /
(
““/ 0
)
““0 1
{
”” 
Response
‘‘ 
=
‘‘ 
false
‘‘ $
,
‘‘$ %
Message
’’ 
=
’’ 
string
’’ $
.
’’$ %
Format
’’% +
(
’’+ ,
$str
’’, h
,
’’h i
leaveRequest
’’j v
.
’’v w
	LeaveType’’w Ä
.’’Ä Å
MaximumUsage’’Å ç
,’’ç é
	leaveType’’è ò
.’’ò ô-
GetCustomAttributeDescription’’ô ∂
(’’∂ ∑
)’’∑ ∏
)’’∏ π
}
◊◊ 
;
◊◊ 
return
ÿÿ 
response
ÿÿ 
;
ÿÿ  
}
ŸŸ 
response
€€ 
=
€€ 
await
€€ (
ValidatePrefixSuffixPolicy
€€ 7
(
€€7 8
leaveRequest
€€8 D
,
€€D E$
payrollPeriodStartDate
€€F \
,
€€\ ]"
payrollPeriodEndDate
€€^ r
,
€€r s
	leaveType
€€t }
,
€€} ~
	totalDays€€ à
)€€à â
;€€â ä
if
‹‹ 
(
‹‹ 
response
‹‹ 
==
‹‹ 
null
‹‹  
)
‹‹  !
{
›› 
response
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ 
EmpLeaveResponse
ﬁﬁ /
(
ﬁﬁ/ 0
)
ﬁﬁ0 1
{
ﬂﬂ 
Response
‡‡ 
=
‡‡ 
true
‡‡ #
,
‡‡# $
Message
·· 
=
·· 
$str
·· "
}
‚‚ 
;
‚‚ 
}
‰‰ 
return
ÂÂ 
response
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
private
ËË 
async
ËË 
Task
ËË 
<
ËË 
EmpLeaveResponse
ËË +
>
ËË+ ,*
ValidatePrivilegeLeavePolicy
ËË- I
(
ËËI J
EmployeeLeave
ËËJ W
leaveRequest
ËËX d
,
ËËd e
DateTime
ËËf n%
payrollPeriodStartDateËËo Ö
,ËËÖ Ü
DateTimeËËá è$
payrollPeriodEndDateËËê §
,ËË§ •
doubleËË¶ ¨
	totalDaysËË≠ ∂
,ËË∂ ∑
LeaveTypeNamesËË∏ ∆
	leaveTypeËË« –
)ËË– —
{
ÈÈ 	
EmpLeaveResponse
ÍÍ 
response
ÍÍ %
=
ÍÍ& '
null
ÍÍ( ,
;
ÍÍ, -
List
ÎÎ 
<
ÎÎ 
LeaveDetail
ÎÎ 
>
ÎÎ 
yearLeavesApplied
ÎÎ /
=
ÎÎ0 1
null
ÎÎ2 6
;
ÎÎ6 7
if
˝˝ 
(
˝˝ 
leaveRequest
˝˝ 
.
˝˝ 
	LeaveType
˝˝ &
.
˝˝& '

LowerBound
˝˝' 1
>
˝˝2 3
$num
˝˝4 5
&&
˝˝6 8
(
˝˝9 :
	totalDays
˝˝: C
)
˝˝C D
<
˝˝E F
leaveRequest
˝˝G S
.
˝˝S T
	LeaveType
˝˝T ]
.
˝˝] ^

LowerBound
˝˝^ h
)
˝˝h i
{
˛˛ 
response
ˇˇ 
=
ˇˇ 
new
ˇˇ 
EmpLeaveResponse
ˇˇ /
(
ˇˇ/ 0
)
ˇˇ0 1
{
Ä	Ä	 
Response
Å	Å	 
=
Å	Å	 
false
Å	Å	 $
,
Å	Å	$ %
Message
Ç	Ç	 
=
Ç	Ç	 
string
Ç	Ç	 $
.
Ç	Ç	$ %
Format
Ç	Ç	% +
(
Ç	Ç	+ ,
$str
Ç	Ç	, s
,
Ç	Ç	s t
	leaveType
Ç	Ç	u ~
.
Ç	Ç	~ ,
GetCustomAttributeDescriptionÇ	Ç	 ú
(Ç	Ç	ú ù
)Ç	Ç	ù û
,Ç	Ç	û ü
leaveRequestÇ	Ç	† ¨
.Ç	Ç	¨ ≠
	LeaveTypeÇ	Ç	≠ ∂
.Ç	Ç	∂ ∑

LowerBoundÇ	Ç	∑ ¡
)Ç	Ç	¡ ¬
}
É	É	 
;
É	É	 
return
Ñ	Ñ	 
response
Ñ	Ñ	 
;
Ñ	Ñ	  
}
Ö	Ö	 
DateTime
å	å	 
	yearStart
å	å	 
=
å	å	  
leaveRequest
å	å	! -
.
å	å	- .
FromDate
å	å	. 6
.
å	å	6 7
StartOfYear
å	å	7 B
(
å	å	B C
)
å	å	C D
;
å	å	D E
DateTime
é	é	 
yearEnd
é	é	 
=
é	é	 
leaveRequest
é	é	 +
.
é	é	+ ,
ToDate
é	é	, 2
.
é	é	2 3
	EndOfYear
é	é	3 <
(
é	é	< =
)
é	é	= >
;
é	é	> ?
yearLeavesApplied
ê	ê	 
=
ê	ê	 
await
ê	ê	  %*
GetEmployeeLeavesByLeaveType
ê	ê	& B
(
ê	ê	B C
leaveRequest
ê	ê	C O
.
ê	ê	O P
EmployeeSlno
ê	ê	P \
,
ê	ê	\ ]
	yearStart
ê	ê	^ g
,
ê	ê	g h
yearEnd
ê	ê	i p
,
ê	ê	p q
	leaveType
ê	ê	r {
.
ê	ê	{ |
ToInt32OrDefaultê	ê	| å
(ê	ê	å ç
)ê	ê	ç é
)ê	ê	é è
;ê	ê	è ê
if
í	í	 
(
í	í	 
leaveRequest
í	í	 
.
í	í	 
	LeaveType
í	í	 &
.
í	í	& '
MaximumUsage
í	í	' 3
>
í	í	4 5
$num
í	í	6 7
&&
í	í	8 :
yearLeavesApplied
í	í	; L
.
í	í	L M
Count
í	í	M R
(
í	í	R S
)
í	í	S T
>=
í	í	U W
leaveRequest
í	í	X d
.
í	í	d e
	LeaveType
í	í	e n
.
í	í	n o
MaximumUsage
í	í	o {
)
í	í	{ |
{
ì	ì	 
response
î	î	 
=
î	î	 
new
î	î	 
EmpLeaveResponse
î	î	 /
(
î	î	/ 0
)
î	î	0 1
{
ï	ï	 
Response
ñ	ñ	 
=
ñ	ñ	 
false
ñ	ñ	 $
,
ñ	ñ	$ %
Message
ó	ó	 
=
ó	ó	 
string
ó	ó	 $
.
ó	ó	$ %
Format
ó	ó	% +
(
ó	ó	+ ,
$str
ó	ó	, g
,
ó	ó	g h
leaveRequest
ó	ó	i u
.
ó	ó	u v
	LeaveType
ó	ó	v 
.ó	ó	 Ä

LowerBoundó	ó	Ä ä
,ó	ó	ä ã
	leaveTypeó	ó	å ï
.ó	ó	ï ñ-
GetCustomAttributeDescriptionó	ó	ñ ≥
(ó	ó	≥ ¥
)ó	ó	¥ µ
)ó	ó	µ ∂
}
ò	ò	 
;
ò	ò	 
return
ô	ô	 
response
ô	ô	 
;
ô	ô	  
}
ö	ö	 
response
õ	õ	 
=
õ	õ	 
await
õ	õ	 (
ValidatePrefixSuffixPolicy
õ	õ	 7
(
õ	õ	7 8
leaveRequest
õ	õ	8 D
,
õ	õ	D E$
payrollPeriodStartDate
õ	õ	F \
,
õ	õ	\ ]"
payrollPeriodEndDate
õ	õ	^ r
,
õ	õ	r s
	leaveType
õ	õ	t }
,
õ	õ	} ~
	totalDaysõ	õ	 à
)õ	õ	à â
;õ	õ	â ä
if
º	º	 
(
º	º	 
response
º	º	 
==
º	º	 
null
º	º	  
)
º	º	  !
{
Ω	Ω	 
response
æ	æ	 
=
æ	æ	 
new
æ	æ	 
EmpLeaveResponse
æ	æ	 /
(
æ	æ	/ 0
)
æ	æ	0 1
{
ø	ø	 
Response
¿	¿	 
=
¿	¿	 
true
¿	¿	 #
,
¿	¿	# $
Message
¡	¡	 
=
¡	¡	 
$str
¡	¡	 "
}
¬	¬	 
;
¬	¬	 
}
ƒ	ƒ	 
return
≈	≈	 
response
≈	≈	 
;
≈	≈	 
}
∆	∆	 	
private
«	«	 
async
«	«	 
Task
«	«	 
<
«	«	 
EmpLeaveResponse
«	«	 +
>
«	«	+ ,*
ValidatePaternityLeavePolicy
«	«	- I
(
«	«	I J
EmployeeLeave
«	«	J W
leaveRequest
«	«	X d
,
«	«	d e
DateTime
«	«	f n%
payrollPeriodStartDate«	«	o Ö
,«	«	Ö Ü
DateTime«	«	á è$
payrollPeriodEndDate«	«	ê §
,«	«	§ •
LeaveTypeNames«	«	¶ ¥
	leaveType«	«	µ æ
,«	«	æ ø
double«	«	¿ ∆
	totalDays«	«	« –
)«	«	– —
{
»	»	 	
EmpLeaveResponse
…	…	 
response
…	…	 %
=
…	…	& '
null
…	…	( ,
;
…	…	, -
List
 	 	 
<
 	 	 
LeaveDetail
 	 	 
>
 	 	  
checkleavesApplied
 	 	 0
=
 	 	1 2
null
 	 	3 7
;
 	 	7 8
DateTime
À	À	 
	startDate
À	À	 
=
À	À	  
leaveRequest
À	À	! -
.
À	À	- .
FromDate
À	À	. 6
;
À	À	6 7
DateTime
Ã	Ã	 
endDate
Ã	Ã	 
=
Ã	Ã	 
leaveRequest
Ã	Ã	 +
.
Ã	Ã	+ ,
ToDate
Ã	Ã	, 2
;
Ã	Ã	2 3
var
Õ	Õ	 

dateRanges
Õ	Õ	 
=
Õ	Õ	 
	startDate
Õ	Õ	 &
.
Õ	Õ	& '
GetDateRange
Õ	Õ	' 3
(
Õ	Õ	3 4
endDate
Õ	Õ	4 ;
)
Õ	Õ	; <
.
Õ	Õ	< =
ToList
Õ	Õ	= C
(
Õ	Õ	C D
)
Õ	Õ	D E
;
Õ	Õ	E F 
checkleavesApplied
Œ	Œ	 
=
Œ	Œ	  
await
Œ	Œ	! &*
GetEmployeeLeavesByLeaveType
Œ	Œ	' C
(
Œ	Œ	C D
leaveRequest
Œ	Œ	D P
.
Œ	Œ	P Q
EmployeeSlno
Œ	Œ	Q ]
,
Œ	Œ	] ^
null
Œ	Œ	_ c
,
Œ	Œ	c d
null
Œ	Œ	e i
,
Œ	Œ	i j
	leaveType
Œ	Œ	k t
.
Œ	Œ	t u
ToInt32OrDefaultŒ	Œ	u Ö
(Œ	Œ	Ö Ü
)Œ	Œ	Ü á
)Œ	Œ	á à
;Œ	Œ	à â
if
œ	œ	 
(
œ	œ	 
leaveRequest
œ	œ	 
.
œ	œ	 
	LeaveType
œ	œ	 &
.
œ	œ	& '
MaximumUsage
œ	œ	' 3
>
œ	œ	4 5
$num
œ	œ	6 7
&&
œ	œ	8 : 
checkleavesApplied
œ	œ	; M
.
œ	œ	M N
Count
œ	œ	N S
>=
œ	œ	T V
leaveRequest
œ	œ	W c
.
œ	œ	c d
	LeaveType
œ	œ	d m
.
œ	œ	m n
MaximumUsage
œ	œ	n z
)
œ	œ	z {
{
–	–	 
response
—	—	 
=
—	—	 
new
—	—	 
EmpLeaveResponse
—	—	 /
(
—	—	/ 0
)
—	—	0 1
{
“	“	 
Response
”	”	 
=
”	”	 
false
”	”	 $
,
”	”	$ %
Message
‘	‘	 
=
‘	‘	 
string
‘	‘	 $
.
‘	‘	$ %
Format
‘	‘	% +
(
‘	‘	+ ,
$str‘	‘	, ó
,‘	‘	ó ò
	leaveType‘	‘	ô ¢
.‘	‘	¢ £-
GetCustomAttributeDescription‘	‘	£ ¿
(‘	‘	¿ ¡
)‘	‘	¡ ¬
,‘	‘	¬ √
leaveRequest‘	‘	ƒ –
.‘	‘	– —
	LeaveType‘	‘	— ⁄
.‘	‘	⁄ €
MaximumUsage‘	‘	€ Á
)‘	‘	Á Ë
}
’	’	 
;
’	’	 
return
÷	÷	 
response
÷	÷	 
;
÷	÷	  
}
◊	◊	 
response
Ÿ	Ÿ	 
=
Ÿ	Ÿ	 
await
Ÿ	Ÿ	 (
ValidatePrefixSuffixPolicy
Ÿ	Ÿ	 7
(
Ÿ	Ÿ	7 8
leaveRequest
Ÿ	Ÿ	8 D
,
Ÿ	Ÿ	D E$
payrollPeriodStartDate
Ÿ	Ÿ	F \
,
Ÿ	Ÿ	\ ]"
payrollPeriodEndDate
Ÿ	Ÿ	^ r
,
Ÿ	Ÿ	r s
	leaveType
Ÿ	Ÿ	t }
,
Ÿ	Ÿ	} ~
	totalDaysŸ	Ÿ	 à
)Ÿ	Ÿ	à â
;Ÿ	Ÿ	â ä
if
€	€	 
(
€	€	 
response
€	€	 
==
€	€	 
null
€	€	  
)
€	€	  !
{
‹	‹	 
response
›	›	 
=
›	›	 
new
›	›	 
EmpLeaveResponse
›	›	 /
(
›	›	/ 0
)
›	›	0 1
{
ﬁ	ﬁ	 
Response
ﬂ	ﬂ	 
=
ﬂ	ﬂ	 
true
ﬂ	ﬂ	 #
,
ﬂ	ﬂ	# $
Message
‡	‡	 
=
‡	‡	 
$str
‡	‡	 "
}
·	·	 
;
·	·	 
}
„	„	 
return
‰	‰	 
response
‰	‰	 
;
‰	‰	 
}
Â	Â	 	
private
Ê	Ê	 
async
Ê	Ê	 
Task
Ê	Ê	 
<
Ê	Ê	 
EmpLeaveResponse
Ê	Ê	 +
>
Ê	Ê	+ ,*
ValidateMaternityLeavePolicy
Ê	Ê	- I
(
Ê	Ê	I J
EmployeeLeave
Ê	Ê	J W
leaveRequest
Ê	Ê	X d
,
Ê	Ê	d e
DateTime
Ê	Ê	f n%
payrollPeriodStartDateÊ	Ê	o Ö
,Ê	Ê	Ö Ü
DateTimeÊ	Ê	á è$
payrollPeriodEndDateÊ	Ê	ê §
,Ê	Ê	§ •
LeaveTypeNamesÊ	Ê	¶ ¥
	leaveTypeÊ	Ê	µ æ
,Ê	Ê	æ ø
doubleÊ	Ê	¿ ∆
	totalDaysÊ	Ê	« –
)Ê	Ê	– —
{
Á	Á	 	
EmpLeaveResponse
Ë	Ë	 
response
Ë	Ë	 %
=
Ë	Ë	& '
null
Ë	Ë	( ,
;
Ë	Ë	, -
List
È	È	 
<
È	È	 
LeaveDetail
È	È	 
>
È	È	  
checkleavesApplied
È	È	 0
=
È	È	1 2
null
È	È	3 7
;
È	È	7 8
DateTime
Î	Î	 
	startDate
Î	Î	 
=
Î	Î	  
leaveRequest
Î	Î	! -
.
Î	Î	- .
FromDate
Î	Î	. 6
;
Î	Î	6 7
DateTime
Ï	Ï	 
endDate
Ï	Ï	 
=
Ï	Ï	 
leaveRequest
Ï	Ï	 +
.
Ï	Ï	+ ,
ToDate
Ï	Ï	, 2
;
Ï	Ï	2 3 
checkleavesApplied
Ó	Ó	 
=
Ó	Ó	  
await
Ó	Ó	! &*
GetEmployeeLeavesByLeaveType
Ó	Ó	' C
(
Ó	Ó	C D
leaveRequest
Ó	Ó	D P
.
Ó	Ó	P Q
EmployeeSlno
Ó	Ó	Q ]
,
Ó	Ó	] ^
null
Ó	Ó	_ c
,
Ó	Ó	c d
null
Ó	Ó	e i
,
Ó	Ó	i j
	leaveType
Ó	Ó	k t
.
Ó	Ó	t u
ToInt32OrDefaultÓ	Ó	u Ö
(Ó	Ó	Ö Ü
)Ó	Ó	Ü á
)Ó	Ó	á à
;Ó	Ó	à â
if
Ô	Ô	 
(
Ô	Ô	 
leaveRequest
Ô	Ô	 
.
Ô	Ô	 
	LeaveType
Ô	Ô	 &
.
Ô	Ô	& '
MaximumUsage
Ô	Ô	' 3
>
Ô	Ô	4 5
$num
Ô	Ô	6 7
&&
Ô	Ô	8 : 
checkleavesApplied
Ô	Ô	; M
.
Ô	Ô	M N
Count
Ô	Ô	N S
>=
Ô	Ô	T V
leaveRequest
Ô	Ô	W c
.
Ô	Ô	c d
	LeaveType
Ô	Ô	d m
.
Ô	Ô	m n
MaximumUsage
Ô	Ô	n z
)
Ô	Ô	z {
{
		 
response
Ò	Ò	 
=
Ò	Ò	 
new
Ò	Ò	 
EmpLeaveResponse
Ò	Ò	 /
(
Ò	Ò	/ 0
)
Ò	Ò	0 1
{
Ú	Ú	 
Response
Û	Û	 
=
Û	Û	 
false
Û	Û	 $
,
Û	Û	$ %
Message
Ù	Ù	 
=
Ù	Ù	 
string
Ù	Ù	 $
.
Ù	Ù	$ %
Format
Ù	Ù	% +
(
Ù	Ù	+ ,
$strÙ	Ù	, ñ
,Ù	Ù	ñ ó
	leaveTypeÙ	Ù	ò °
.Ù	Ù	° ¢-
GetCustomAttributeDescriptionÙ	Ù	¢ ø
(Ù	Ù	ø ¿
)Ù	Ù	¿ ¡
,Ù	Ù	¡ ¬
leaveRequestÙ	Ù	√ œ
.Ù	Ù	œ –
	LeaveTypeÙ	Ù	– Ÿ
.Ù	Ù	Ÿ ⁄
MaximumUsageÙ	Ù	⁄ Ê
)Ù	Ù	Ê Á
}
ı	ı	 
;
ı	ı	 
return
ˆ	ˆ	 
response
ˆ	ˆ	 
;
ˆ	ˆ	  
}
˜	˜	 
response
˘	˘	 
=
˘	˘	 
await
˘	˘	 (
ValidatePrefixSuffixPolicy
˘	˘	 7
(
˘	˘	7 8
leaveRequest
˘	˘	8 D
,
˘	˘	D E$
payrollPeriodStartDate
˘	˘	F \
,
˘	˘	\ ]"
payrollPeriodEndDate
˘	˘	^ r
,
˘	˘	r s
	leaveType
˘	˘	t }
,
˘	˘	} ~
	totalDays˘	˘	 à
)˘	˘	à â
;˘	˘	â ä
if
˚	˚	 
(
˚	˚	 
response
˚	˚	 
==
˚	˚	 
null
˚	˚	  
)
˚	˚	  !
{
¸	¸	 
response
˝	˝	 
=
˝	˝	 
new
˝	˝	 
EmpLeaveResponse
˝	˝	 /
(
˝	˝	/ 0
)
˝	˝	0 1
{
˛	˛	 
Response
ˇ	ˇ	 
=
ˇ	ˇ	 
true
ˇ	ˇ	 #
,
ˇ	ˇ	# $
Message
Ä
Ä
 
=
Ä
Ä
 
$str
Ä
Ä
 "
}
Å
Å
 
;
Å
Å
 
}
É
É
 
return
Ñ
Ñ
 
response
Ñ
Ñ
 
;
Ñ
Ñ
 
}
Ö
Ö
 	
private
á
á
 
async
á
á
 
Task
á
á
 
<
á
á
 
EmpLeaveResponse
á
á
 +
>
á
á
+ ,,
ValidateSpecialSickLeavePolicy
á
á
- K
(
á
á
K L
EmployeeLeave
á
á
L Y
leaveRequest
á
á
Z f
,
á
á
f g
DateTime
á
á
h p%
payrollPeriodStartDateá
á
q á
,á
á
á à
DateTimeá
á
â ë$
payrollPeriodEndDateá
á
í ¶
,á
á
¶ ß
LeaveTypeNamesá
á
® ∂
	leaveTypeá
á
∑ ¿
)á
á
¿ ¡
{
à
à
 	
EmpLeaveResponse
â
â
 
response
â
â
 %
=
â
â
& '
null
â
â
( ,
;
â
â
, -
List
ä
ä
 
<
ä
ä
 
LeaveDetail
ä
ä
 
>
ä
ä
 
leavesApplied
ä
ä
 +
=
ä
ä
, -
null
ä
ä
. 2
;
ä
ä
2 3
DateTime
ã
ã
 
	startDate
ã
ã
 
=
ã
ã
  
leaveRequest
ã
ã
! -
.
ã
ã
- .
FromDate
ã
ã
. 6
;
ã
ã
6 7
DateTime
å
å
 
endDate
å
å
 
=
å
å
 
leaveRequest
å
å
 +
.
å
å
+ ,
ToDate
å
å
, 2
;
å
å
2 3
var
ç
ç
 

dateRanges
ç
ç
 
=
ç
ç
 
	startDate
ç
ç
 &
.
ç
ç
& '
GetDateRange
ç
ç
' 3
(
ç
ç
3 4
endDate
ç
ç
4 ;
)
ç
ç
; <
.
ç
ç
< =
ToList
ç
ç
= C
(
ç
ç
C D
)
ç
ç
D E
;
ç
ç
E F
leavesApplied
è
è
 
=
è
è
 
await
è
è
 !*
GetEmployeeLeavesByLeaveType
è
è
" >
(
è
è
> ?
leaveRequest
è
è
? K
.
è
è
K L
EmployeeSlno
è
è
L X
,
è
è
X Y
null
è
è
Z ^
,
è
è
^ _
null
è
è
` d
,
è
è
d e
	leaveType
è
è
f o
.
è
è
o p
ToInt32OrDefaultè
è
p Ä
(è
è
Ä Å
)è
è
Å Ç
)è
è
Ç É
;è
è
É Ñ
if
ë
ë
 
(
ë
ë
 
leaveRequest
ë
ë
 
.
ë
ë
 
	LeaveType
ë
ë
 &
.
ë
ë
& '
MaximumUsage
ë
ë
' 3
>
ë
ë
4 5
$num
ë
ë
6 7
&&
ë
ë
8 :
leavesApplied
ë
ë
; H
.
ë
ë
H I
Count
ë
ë
I N
>=
ë
ë
O Q
leaveRequest
ë
ë
R ^
.
ë
ë
^ _
	LeaveType
ë
ë
_ h
.
ë
ë
h i
MaximumUsage
ë
ë
i u
)
ë
ë
u v
{
í
í
 
response
ì
ì
 
=
ì
ì
 
new
ì
ì
 
EmpLeaveResponse
ì
ì
 /
(
ì
ì
/ 0
)
ì
ì
0 1
{
î
î
 
Response
ï
ï
 
=
ï
ï
 
false
ï
ï
 $
,
ï
ï
$ %
Message
ñ
ñ
 
=
ñ
ñ
 
string
ñ
ñ
 $
.
ñ
ñ
$ %
Format
ñ
ñ
% +
(
ñ
ñ
+ ,
$strñ
ñ
, ñ
,ñ
ñ
ñ ó
	leaveTypeñ
ñ
ò °
.ñ
ñ
° ¢-
GetCustomAttributeDescriptionñ
ñ
¢ ø
(ñ
ñ
ø ¿
)ñ
ñ
¿ ¡
,ñ
ñ
¡ ¬
leaveRequestñ
ñ
√ œ
.ñ
ñ
œ –
	LeaveTypeñ
ñ
– Ÿ
.ñ
ñ
Ÿ ⁄
MaximumUsageñ
ñ
⁄ Ê
)ñ
ñ
Ê Á
}
ó
ó
 
;
ó
ó
 
return
ò
ò
 
response
ò
ò
 
;
ò
ò
  
}
ô
ô
 
if
õ
õ
 
(
õ
õ
 
response
õ
õ
 
==
õ
õ
 
null
õ
õ
  
)
õ
õ
  !
{
ú
ú
 
response
ù
ù
 
=
ù
ù
 
new
ù
ù
 
EmpLeaveResponse
ù
ù
 /
(
ù
ù
/ 0
)
ù
ù
0 1
{
û
û
 
Response
ü
ü
 
=
ü
ü
 
true
ü
ü
 #
,
ü
ü
# $
Message
†
†
 
=
†
†
 
$str
†
†
 "
}
°
°
 
;
°
°
 
}
£
£
 
return
§
§
 
response
§
§
 
;
§
§
 
}
•
•
 	
private
ß
ß
 
async
ß
ß
 
Task
ß
ß
 
<
ß
ß
 
EmpLeaveResponse
ß
ß
 +
>
ß
ß
+ ,.
 ValidateSpecialCasualLeavePolicy
ß
ß
- M
(
ß
ß
M N
EmployeeLeave
ß
ß
N [
leaveRequest
ß
ß
\ h
,
ß
ß
h i
DateTime
ß
ß
j r%
payrollPeriodStartDateß
ß
s â
,ß
ß
â ä
DateTimeß
ß
ã ì$
payrollPeriodEndDateß
ß
î ®
,ß
ß
® ©
LeaveTypeNamesß
ß
™ ∏
	leaveTypeß
ß
π ¬
,ß
ß
¬ √
doubleß
ß
ƒ  
	totalDaysß
ß
À ‘
)ß
ß
‘ ’
{
®
®
 	
EmpLeaveResponse
©
©
 
response
©
©
 %
=
©
©
& '
null
©
©
( ,
;
©
©
, -
List
™
™
 
<
™
™
 
LeaveDetail
™
™
 
>
™
™
 
leavesApplied
™
™
 +
=
™
™
, -
null
™
™
. 2
;
™
™
2 3
DateTime
´
´
 
	startDate
´
´
 
=
´
´
  
leaveRequest
´
´
! -
.
´
´
- .
FromDate
´
´
. 6
;
´
´
6 7
DateTime
¨
¨
 
endDate
¨
¨
 
=
¨
¨
 
leaveRequest
¨
¨
 +
.
¨
¨
+ ,
ToDate
¨
¨
, 2
;
¨
¨
2 3
var
≠
≠
 

dateRanges
≠
≠
 
=
≠
≠
 
	startDate
≠
≠
 &
.
≠
≠
& '
GetDateRange
≠
≠
' 3
(
≠
≠
3 4
endDate
≠
≠
4 ;
)
≠
≠
; <
.
≠
≠
< =
ToList
≠
≠
= C
(
≠
≠
C D
)
≠
≠
D E
;
≠
≠
E F
leavesApplied
Ø
Ø
 
=
Ø
Ø
 
await
Ø
Ø
 !*
GetEmployeeLeavesByLeaveType
Ø
Ø
" >
(
Ø
Ø
> ?
leaveRequest
Ø
Ø
? K
.
Ø
Ø
K L
EmployeeSlno
Ø
Ø
L X
,
Ø
Ø
X Y
null
Ø
Ø
Z ^
,
Ø
Ø
^ _
null
Ø
Ø
` d
,
Ø
Ø
d e
	leaveType
Ø
Ø
f o
.
Ø
Ø
o p
ToInt32OrDefaultØ
Ø
p Ä
(Ø
Ø
Ä Å
)Ø
Ø
Å Ç
)Ø
Ø
Ç É
;Ø
Ø
É Ñ
if
±
±
 
(
±
±
 
leaveRequest
±
±
 
.
±
±
 
	LeaveType
±
±
 &
.
±
±
& '
MaximumUsage
±
±
' 3
>
±
±
4 5
$num
±
±
6 7
&&
±
±
8 :
leavesApplied
±
±
; H
.
±
±
H I
Count
±
±
I N
>=
±
±
O Q
leaveRequest
±
±
R ^
.
±
±
^ _
	LeaveType
±
±
_ h
.
±
±
h i
MaximumUsage
±
±
i u
)
±
±
u v
{
≤
≤
 
response
≥
≥
 
=
≥
≥
 
new
≥
≥
 
EmpLeaveResponse
≥
≥
 /
(
≥
≥
/ 0
)
≥
≥
0 1
{
¥
¥
 
Response
µ
µ
 
=
µ
µ
 
false
µ
µ
 $
,
µ
µ
$ %
Message
∂
∂
 
=
∂
∂
 
string
∂
∂
 $
.
∂
∂
$ %
Format
∂
∂
% +
(
∂
∂
+ ,
$str∂
∂
, ñ
,∂
∂
ñ ó
	leaveType∂
∂
ò °
.∂
∂
° ¢-
GetCustomAttributeDescription∂
∂
¢ ø
(∂
∂
ø ¿
)∂
∂
¿ ¡
,∂
∂
¡ ¬
leaveRequest∂
∂
√ œ
.∂
∂
œ –
	LeaveType∂
∂
– Ÿ
.∂
∂
Ÿ ⁄
MaximumUsage∂
∂
⁄ Ê
)∂
∂
Ê Á
}
∑
∑
 
;
∑
∑
 
return
∏
∏
 
response
∏
∏
 
;
∏
∏
  
}
π
π
 
response
∫
∫
 
=
∫
∫
 
await
∫
∫
 (
ValidatePrefixSuffixPolicy
∫
∫
 7
(
∫
∫
7 8
leaveRequest
∫
∫
8 D
,
∫
∫
D E$
payrollPeriodStartDate
∫
∫
F \
,
∫
∫
\ ]"
payrollPeriodEndDate
∫
∫
^ r
,
∫
∫
r s
	leaveType
∫
∫
t }
,
∫
∫
} ~
	totalDays∫
∫
 à
)∫
∫
à â
;∫
∫
â ä
if
º
º
 
(
º
º
 
response
º
º
 
==
º
º
 
null
º
º
  
)
º
º
  !
{
Ω
Ω
 
response
æ
æ
 
=
æ
æ
 
new
æ
æ
 
EmpLeaveResponse
æ
æ
 /
(
æ
æ
/ 0
)
æ
æ
0 1
{
ø
ø
 
Response
¿
¿
 
=
¿
¿
 
true
¿
¿
 #
,
¿
¿
# $
Message
¡
¡
 
=
¡
¡
 
$str
¡
¡
 "
}
¬
¬
 
;
¬
¬
 
}
ƒ
ƒ
 
return
≈
≈
 
response
≈
≈
 
;
≈
≈
 
}
∆
∆
 	
private
«
«
 
async
«
«
 
Task
«
«
 
<
«
«
 
EmpLeaveResponse
«
«
 +
>
«
«
+ ,,
ValidateBereavementLeavePolicy
«
«
- K
(
«
«
K L
EmployeeLeave
«
«
L Y
leaveRequest
«
«
Z f
,
«
«
f g
DateTime
«
«
h p%
payrollPeriodStartDate«
«
q á
,«
«
á à
DateTime«
«
â ë$
payrollPeriodEndDate«
«
í ¶
,«
«
¶ ß
LeaveTypeNames«
«
® ∂
	leaveType«
«
∑ ¿
)«
«
¿ ¡
{
»
»
 	
EmpLeaveResponse
…
…
 
response
…
…
 %
=
…
…
& '
null
…
…
( ,
;
…
…
, -
List
 
 
 
<
 
 
 
LeaveDetail
 
 
 
>
 
 
 
leavesApplied
 
 
 +
=
 
 
, -
null
 
 
. 2
;
 
 
2 3
DateTime
À
À
 
	startDate
À
À
 
=
À
À
  
leaveRequest
À
À
! -
.
À
À
- .
FromDate
À
À
. 6
;
À
À
6 7
DateTime
Ã
Ã
 
endDate
Ã
Ã
 
=
Ã
Ã
 
leaveRequest
Ã
Ã
 +
.
Ã
Ã
+ ,
ToDate
Ã
Ã
, 2
;
Ã
Ã
2 3
var
Õ
Õ
 

dateRanges
Õ
Õ
 
=
Õ
Õ
 
	startDate
Õ
Õ
 &
.
Õ
Õ
& '
GetDateRange
Õ
Õ
' 3
(
Õ
Õ
3 4
endDate
Õ
Õ
4 ;
)
Õ
Õ
; <
.
Õ
Õ
< =
ToList
Õ
Õ
= C
(
Õ
Õ
C D
)
Õ
Õ
D E
;
Õ
Õ
E F
leavesApplied
œ
œ
 
=
œ
œ
 
await
œ
œ
 !*
GetEmployeeLeavesByLeaveType
œ
œ
" >
(
œ
œ
> ?
leaveRequest
œ
œ
? K
.
œ
œ
K L
EmployeeSlno
œ
œ
L X
,
œ
œ
X Y
null
œ
œ
Z ^
,
œ
œ
^ _
null
œ
œ
` d
,
œ
œ
d e
	leaveType
œ
œ
f o
.
œ
œ
o p
ToInt32OrDefaultœ
œ
p Ä
(œ
œ
Ä Å
)œ
œ
Å Ç
)œ
œ
Ç É
;œ
œ
É Ñ
if
—
—
 
(
—
—
 
leaveRequest
—
—
 
.
—
—
 
	LeaveType
—
—
 &
.
—
—
& '
MaximumUsage
—
—
' 3
>
—
—
4 5
$num
—
—
6 7
&&
—
—
8 :
leavesApplied
—
—
; H
.
—
—
H I
Count
—
—
I N
>=
—
—
O Q
leaveRequest
—
—
R ^
.
—
—
^ _
	LeaveType
—
—
_ h
.
—
—
h i
MaximumUsage
—
—
i u
)
—
—
u v
{
“
“
 
response
”
”
 
=
”
”
 
new
”
”
 
EmpLeaveResponse
”
”
 /
(
”
”
/ 0
)
”
”
0 1
{
‘
‘
 
Response
’
’
 
=
’
’
 
false
’
’
 $
,
’
’
$ %
Message
÷
÷
 
=
÷
÷
 
string
÷
÷
 $
.
÷
÷
$ %
Format
÷
÷
% +
(
÷
÷
+ ,
$str÷
÷
, ñ
,÷
÷
ñ ó
	leaveType÷
÷
ò °
.÷
÷
° ¢-
GetCustomAttributeDescription÷
÷
¢ ø
(÷
÷
ø ¿
)÷
÷
¿ ¡
,÷
÷
¡ ¬
leaveRequest÷
÷
√ œ
.÷
÷
œ –
	LeaveType÷
÷
– Ÿ
.÷
÷
Ÿ ⁄
MaximumUsage÷
÷
⁄ Ê
)÷
÷
Ê Á
}
◊
◊
 
;
◊
◊
 
return
ÿ
ÿ
 
response
ÿ
ÿ
 
;
ÿ
ÿ
  
}
Ÿ
Ÿ
 
if
€
€
 
(
€
€
 
response
€
€
 
==
€
€
 
null
€
€
  
)
€
€
  !
{
‹
‹
 
response
›
›
 
=
›
›
 
new
›
›
 
EmpLeaveResponse
›
›
 /
(
›
›
/ 0
)
›
›
0 1
{
ﬁ
ﬁ
 
Response
ﬂ
ﬂ
 
=
ﬂ
ﬂ
 
true
ﬂ
ﬂ
 #
,
ﬂ
ﬂ
# $
Message
‡
‡
 
=
‡
‡
 
$str
‡
‡
 "
}
·
·
 
;
·
·
 
}
„
„
 
return
‰
‰
 
response
‰
‰
 
;
‰
‰
 
}
Â
Â
 	
private
Á
Á
 
async
Á
Á
 
Task
Á
Á
 
<
Á
Á
 
EmpLeaveResponse
Á
Á
 +
>
Á
Á
+ ,)
ValidateMarriageLeavePolicy
Á
Á
- H
(
Á
Á
H I
EmployeeLeave
Á
Á
I V
leaveRequest
Á
Á
W c
,
Á
Á
c d
DateTime
Á
Á
e m%
payrollPeriodStartDateÁ
Á
n Ñ
,Á
Á
Ñ Ö
DateTimeÁ
Á
Ü é$
payrollPeriodEndDateÁ
Á
è £
,Á
Á
£ §
LeaveTypeNamesÁ
Á
• ≥
	leaveTypeÁ
Á
¥ Ω
)Á
Á
Ω æ
{
Ë
Ë
 	
EmpLeaveResponse
È
È
 
response
È
È
 %
=
È
È
& '
null
È
È
( ,
;
È
È
, -
List
Í
Í
 
<
Í
Í
 
LeaveDetail
Í
Í
 
>
Í
Í
 
leavesApplied
Í
Í
 +
=
Í
Í
, -
null
Í
Í
. 2
;
Í
Í
2 3
DateTime
Î
Î
 
	startDate
Î
Î
 
=
Î
Î
  
leaveRequest
Î
Î
! -
.
Î
Î
- .
FromDate
Î
Î
. 6
;
Î
Î
6 7
DateTime
Ï
Ï
 
endDate
Ï
Ï
 
=
Ï
Ï
 
leaveRequest
Ï
Ï
 +
.
Ï
Ï
+ ,
ToDate
Ï
Ï
, 2
;
Ï
Ï
2 3
var
Ì
Ì
 

dateRanges
Ì
Ì
 
=
Ì
Ì
 
	startDate
Ì
Ì
 &
.
Ì
Ì
& '
GetDateRange
Ì
Ì
' 3
(
Ì
Ì
3 4
endDate
Ì
Ì
4 ;
)
Ì
Ì
; <
.
Ì
Ì
< =
ToList
Ì
Ì
= C
(
Ì
Ì
C D
)
Ì
Ì
D E
;
Ì
Ì
E F
leavesApplied
Ô
Ô
 
=
Ô
Ô
 
await
Ô
Ô
 !*
GetEmployeeLeavesByLeaveType
Ô
Ô
" >
(
Ô
Ô
> ?
leaveRequest
Ô
Ô
? K
.
Ô
Ô
K L
EmployeeSlno
Ô
Ô
L X
,
Ô
Ô
X Y
null
Ô
Ô
Z ^
,
Ô
Ô
^ _
null
Ô
Ô
` d
,
Ô
Ô
d e
	leaveType
Ô
Ô
f o
.
Ô
Ô
o p
ToInt32OrDefaultÔ
Ô
p Ä
(Ô
Ô
Ä Å
)Ô
Ô
Å Ç
)Ô
Ô
Ç É
;Ô
Ô
É Ñ
if
Ò
Ò
 
(
Ò
Ò
 
leaveRequest
Ò
Ò
 
.
Ò
Ò
 
	LeaveType
Ò
Ò
 &
.
Ò
Ò
& '
MaximumUsage
Ò
Ò
' 3
>
Ò
Ò
4 5
$num
Ò
Ò
6 7
&&
Ò
Ò
8 :
leavesApplied
Ò
Ò
; H
.
Ò
Ò
H I
Count
Ò
Ò
I N
>=
Ò
Ò
O Q
leaveRequest
Ò
Ò
R ^
.
Ò
Ò
^ _
	LeaveType
Ò
Ò
_ h
.
Ò
Ò
h i
MaximumUsage
Ò
Ò
i u
)
Ò
Ò
u v
{
Ú
Ú
 
response
Û
Û
 
=
Û
Û
 
new
Û
Û
 
EmpLeaveResponse
Û
Û
 /
(
Û
Û
/ 0
)
Û
Û
0 1
{
Ù
Ù
 
Response
ı
ı
 
=
ı
ı
 
false
ı
ı
 $
,
ı
ı
$ %
Message
ˆ
ˆ
 
=
ˆ
ˆ
 
string
ˆ
ˆ
 $
.
ˆ
ˆ
$ %
Format
ˆ
ˆ
% +
(
ˆ
ˆ
+ ,
$strˆ
ˆ
, ñ
,ˆ
ˆ
ñ ó
	leaveTypeˆ
ˆ
ò °
.ˆ
ˆ
° ¢-
GetCustomAttributeDescriptionˆ
ˆ
¢ ø
(ˆ
ˆ
ø ¿
)ˆ
ˆ
¿ ¡
,ˆ
ˆ
¡ ¬
leaveRequestˆ
ˆ
√ œ
.ˆ
ˆ
œ –
	LeaveTypeˆ
ˆ
– Ÿ
.ˆ
ˆ
Ÿ ⁄
MaximumUsageˆ
ˆ
⁄ Ê
)ˆ
ˆ
Ê Á
}
˜
˜
 
;
˜
˜
 
return
¯
¯
 
response
¯
¯
 
;
¯
¯
  
}
˘
˘
 
if
˚
˚
 
(
˚
˚
 
response
˚
˚
 
==
˚
˚
 
null
˚
˚
  
)
˚
˚
  !
{
¸
¸
 
response
˝
˝
 
=
˝
˝
 
new
˝
˝
 
EmpLeaveResponse
˝
˝
 /
(
˝
˝
/ 0
)
˝
˝
0 1
{
˛
˛
 
Response
ˇ
ˇ
 
=
ˇ
ˇ
 
true
ˇ
ˇ
 #
,
ˇ
ˇ
# $
Message
ÄÄ 
=
ÄÄ 
$str
ÄÄ "
}
ÅÅ 
;
ÅÅ 
}
ÉÉ 
return
ÑÑ 
response
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
private
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
EmpLeaveResponse
ÜÜ +
>
ÜÜ+ ,+
ValidateEarlyLogoutTimePolicy
ÜÜ- J
(
ÜÜJ K
EmployeeLeave
ÜÜK X
leaveRequest
ÜÜY e
,
ÜÜe f
DateTime
ÜÜg o%
payrollPeriodStartDateÜÜp Ü
,ÜÜÜ á
DateTimeÜÜà ê$
payrollPeriodEndDateÜÜë •
,ÜÜ• ¶
LeaveTypeNamesÜÜß µ
	leaveTypeÜÜ∂ ø
)ÜÜø ¿
{
áá 	
EmpLeaveResponse
àà 
response
àà %
=
àà& '
null
àà( ,
;
àà, -
List
ââ 
<
ââ 
LeaveDetail
ââ 
>
ââ 
leavesApplied
ââ +
=
ââ, -
null
ââ. 2
;
ââ2 3
leavesApplied
ää 
=
ää 
await
ää !*
GetEmployeeLeavesByLeaveType
ää" >
(
ää> ?
leaveRequest
ää? K
.
ääK L
EmployeeSlno
ääL X
,
ääX Y$
payrollPeriodStartDate
ääZ p
,
ääp q#
payrollPeriodEndDateäär Ü
,ääÜ á
	leaveTypeääà ë
.ääë í 
ToInt32OrDefaultääí ¢
(ää¢ £
)ää£ §
)ää§ •
;ää• ¶
if
ãã 
(
ãã 
leaveRequest
ãã 
.
ãã 
	LeaveType
ãã &
.
ãã& '
MaximumUsage
ãã' 3
>
ãã4 5
$num
ãã6 7
&&
ãã8 :
leavesApplied
ãã; H
.
ããH I
Count
ããI N
>=
ããO Q
leaveRequest
ããR ^
.
ãã^ _
	LeaveType
ãã_ h
.
ããh i
MaximumUsage
ããi u
)
ããu v
{
åå 
response
çç 
=
çç 
new
çç 
EmpLeaveResponse
çç /
(
çç/ 0
)
çç0 1
{
éé 
Response
èè 
=
èè 
false
èè $
,
èè$ %
Message
êê 
=
êê 
string
êê $
.
êê$ %
Format
êê% +
(
êê+ ,
$strêê, ™
,êê™ ´
	leaveTypeêê¨ µ
.êêµ ∂-
GetCustomAttributeDescriptionêê∂ ”
(êê” ‘
)êê‘ ’
,êê’ ÷
leaveRequestêê◊ „
.êê„ ‰
	LeaveTypeêê‰ Ì
.êêÌ Ó
MaximumUsageêêÓ ˙
)êê˙ ˚
}
ëë 
;
ëë 
return
íí 
response
íí 
;
íí  
}
ìì 
if
ïï 
(
ïï 
response
ïï 
==
ïï 
null
ïï  
)
ïï  !
{
ññ 
response
óó 
=
óó 
new
óó 
EmpLeaveResponse
óó /
(
óó/ 0
)
óó0 1
{
òò 
Response
ôô 
=
ôô 
true
ôô #
,
ôô# $
Message
öö 
=
öö 
$str
öö "
}
õõ 
;
õõ 
}
ùù 
return
ûû 
response
ûû 
;
ûû 
}
üü 	
private
°° 
async
°° 
Task
°° 
<
°° 
EmpLeaveResponse
°° +
>
°°+ ,$
ValidateSummerVacation
°°- C
(
°°C D
EmployeeLeave
°°D Q
leaveRequest
°°R ^
,
°°^ _
double
°°` f
	totalDays
°°g p
)
°°p q
{
¢¢ 	
EmpLeaveResponse
££ 
response
££ %
=
££& '
null
££( ,
;
££, -
int
•• 
UsedLeaveCount
•• 
=
••  
$num
••! "
;
••" #
UsedLeaveCount
ßß 
=
ßß 
await
ßß "-
CheckForLeaveCountBetweenwDates
ßß# B
(
ßßB C
leaveRequest
ßßC O
,
ßßO P
leaveRequest
ßßQ ]
.
ßß] ^
EmployeeSlno
ßß^ j
,
ßßj k
LeaveTypeNames
ßßl z
.
ßßz {
SUMMER_VACATIONßß{ ä
.ßßä ã 
ToInt32OrDefaultßßã õ
(ßßõ ú
)ßßú ù
,ßßù û 
LeaveStatusNamesßßü Ø
.ßßØ ∞"
PendingAndApprovalßß∞ ¬
.ßß¬ √ 
ToInt32OrDefaultßß√ ”
(ßß” ‘
)ßß‘ ’
)ßß’ ÷
;ßß÷ ◊
if
©© 
(
©© 
UsedLeaveCount
©© 
>=
©© !
$num
©©" #
)
©©# $
{
™™ 
response
´´ 
=
´´ 
new
´´ 
EmpLeaveResponse
´´ /
(
´´/ 0
)
´´0 1
{
¨¨ 
Response
≠≠ 
=
≠≠ 
false
≠≠ $
,
≠≠$ %
Message
ÆÆ 
=
ÆÆ 
$str
ÆÆ `
}
ØØ 
;
ØØ 
return
∞∞ 
response
∞∞ 
;
∞∞  
}
±± 
if
≥≥ 
(
≥≥ 
leaveRequest
≥≥ 
.
≥≥ 
	LeaveType
≥≥ &
.
≥≥& '
LeaveBalance
≥≥' 3
<
≥≥4 5
	totalDays
≥≥6 ?
)
≥≥? @
{
¥¥ 
response
µµ 
=
µµ 
new
µµ 
EmpLeaveResponse
µµ /
(
µµ/ 0
)
µµ0 1
{
∂∂ 
Response
∑∑ 
=
∑∑ 
false
∑∑ $
,
∑∑$ %
Message
∏∏ 
=
∏∏ 
$str
∏∏ K
}
ππ 
;
ππ 
return
∫∫ 
response
∫∫ 
;
∫∫  
}
ªª 
if
ΩΩ 
(
ΩΩ 
response
ΩΩ 
==
ΩΩ 
null
ΩΩ  
)
ΩΩ  !
{
ææ 
response
øø 
=
øø 
new
øø 
EmpLeaveResponse
øø /
(
øø/ 0
)
øø0 1
{
¿¿ 
Response
¡¡ 
=
¡¡ 
true
¡¡ #
,
¡¡# $
Message
¬¬ 
=
¬¬ 
$str
¬¬ "
}
√√ 
;
√√ 
}
≈≈ 
return
∆∆ 
response
∆∆ 
;
∆∆ 
}
«« 	
private
»» 
async
»» 
Task
»» 
<
»» 
EmpLeaveResponse
»» +
>
»»+ ,$
ValidateWinterVacation
»»- C
(
»»C D
EmployeeLeave
»»D Q
leaveRequest
»»R ^
,
»»^ _
double
»»` f
	totalDays
»»g p
)
»»p q
{
…… 	
EmpLeaveResponse
ÀÀ 
response
ÀÀ %
=
ÀÀ& '
null
ÀÀ( ,
;
ÀÀ, -
int
ÕÕ 
UsedLeaveCount
ÕÕ 
=
ÕÕ  
$num
ÕÕ! "
;
ÕÕ" #
UsedLeaveCount
œœ 
=
œœ 
await
œœ "-
CheckForLeaveCountBetweenwDates
œœ# B
(
œœB C
leaveRequest
œœC O
,
œœO P
leaveRequest
œœQ ]
.
œœ] ^
EmployeeSlno
œœ^ j
,
œœj k
LeaveTypeNames
œœl z
.
œœz {
WINTER_VACATIONœœ{ ä
.œœä ã 
ToInt32OrDefaultœœã õ
(œœõ ú
)œœú ù
,œœù û 
LeaveStatusNamesœœü Ø
.œœØ ∞"
PendingAndApprovalœœ∞ ¬
.œœ¬ √ 
ToInt32OrDefaultœœ√ ”
(œœ” ‘
)œœ‘ ’
)œœ’ ÷
;œœ÷ ◊
if
—— 
(
—— 
UsedLeaveCount
—— 
>=
—— !
$num
——" #
)
——# $
{
““ 
response
”” 
=
”” 
new
”” 
EmpLeaveResponse
”” /
(
””/ 0
)
””0 1
{
‘‘ 
Response
’’ 
=
’’ 
false
’’ $
,
’’$ %
Message
÷÷ 
=
÷÷ 
$str
÷÷ `
}
◊◊ 
;
◊◊ 
return
ÿÿ 
response
ÿÿ 
;
ÿÿ  
}
ŸŸ 
if
€€ 
(
€€ 
leaveRequest
€€ 
.
€€ 
	LeaveType
€€ &
.
€€& '
LeaveBalance
€€' 3
<
€€4 5
	totalDays
€€6 ?
)
€€? @
{
‹‹ 
response
›› 
=
›› 
new
›› 
EmpLeaveResponse
›› /
(
››/ 0
)
››0 1
{
ﬁﬁ 
Response
ﬂﬂ 
=
ﬂﬂ 
false
ﬂﬂ $
,
ﬂﬂ$ %
Message
‡‡ 
=
‡‡ 
$str
‡‡ K
}
·· 
;
·· 
return
‚‚ 
response
‚‚ 
;
‚‚  
}
„„ 
if
ÂÂ 
(
ÂÂ 
response
ÂÂ 
==
ÂÂ 
null
ÂÂ  
)
ÂÂ  !
{
ÊÊ 
response
ÁÁ 
=
ÁÁ 
new
ÁÁ 
EmpLeaveResponse
ÁÁ /
(
ÁÁ/ 0
)
ÁÁ0 1
{
ËË 
Response
ÈÈ 
=
ÈÈ 
true
ÈÈ #
,
ÈÈ# $
Message
ÍÍ 
=
ÍÍ 
$str
ÍÍ "
}
ÎÎ 
;
ÎÎ 
}
ÌÌ 
return
ÓÓ 
response
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
private
ÒÒ 
async
ÒÒ 
Task
ÒÒ 
<
ÒÒ 
int
ÒÒ 
>
ÒÒ -
CheckForLeaveCountBetweenwDates
ÒÒ  ?
(
ÒÒ? @
EmployeeLeave
ÒÒ@ M
leaveRequest
ÒÒN Z
,
ÒÒZ [
int
ÒÒ\ _
employeeSlno
ÒÒ` l
,
ÒÒl m
int
ÒÒn q
leaveTypeId
ÒÒr }
,
ÒÒ} ~
intÒÒ Ç
leaveStatusIdÒÒÉ ê
)ÒÒê ë
{
ÚÚ 	
int
ÛÛ 

leaveCount
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
using
ÙÙ 
(
ÙÙ 
var
ÙÙ 

connection
ÙÙ !
=
ÙÙ" #
await
ÙÙ$ )
base
ÙÙ* .
.
ÙÙ. /
CreateConnection
ÙÙ/ ?
(
ÙÙ? @
DbSchema
ÙÙ@ H
.
ÙÙH I
PORTAL
ÙÙI O
)
ÙÙO P
)
ÙÙP Q
{
ıı %
OracleDynamicParameters
ˆˆ '

parameters
ˆˆ( 2
=
ˆˆ3 4
new
ˆˆ5 8%
OracleDynamicParameters
ˆˆ9 P
(
ˆˆP Q
)
ˆˆQ R
;
ˆˆR S

parameters
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
name
˜˜ #
:
˜˜# $
$str
˜˜% 4
,
˜˜4 5
employeeSlno
˜˜6 B
,
˜˜B C
dbType
˜˜D J
:
˜˜J K
OracleMappingType
˜˜L ]
.
˜˜] ^
Int32
˜˜^ c
,
˜˜c d
	direction
˜˜e n
:
˜˜n o!
ParameterDirection˜˜p Ç
.˜˜Ç É
Input˜˜É à
)˜˜à â
;˜˜â ä

parameters
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 
name
¯¯ #
:
¯¯# $
$str
¯¯% 5
,
¯¯5 6
leaveTypeId
¯¯7 B
,
¯¯B C
dbType
¯¯D J
:
¯¯J K
OracleMappingType
¯¯L ]
.
¯¯] ^
Int32
¯¯^ c
,
¯¯c d
	direction
¯¯e n
:
¯¯n o!
ParameterDirection¯¯p Ç
.¯¯Ç É
Input¯¯É à
)¯¯à â
;¯¯â ä

parameters
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
name
˘˘ #
:
˘˘# $
$str
˘˘% 7
,
˘˘7 8
leaveStatusId
˘˘9 F
,
˘˘F G
dbType
˘˘H N
:
˘˘N O
OracleMappingType
˘˘P a
.
˘˘a b
Int32
˘˘b g
,
˘˘g h
	direction
˘˘i r
:
˘˘r s!
ParameterDirection˘˘t Ü
.˘˘Ü á
Input˘˘á å
)˘˘å ç
;˘˘ç é

parameters
˙˙ 
.
˙˙ 
Add
˙˙ 
(
˙˙ 
name
˙˙ #
:
˙˙# $
$str
˙˙% 5
,
˙˙5 6
leaveRequest
˙˙7 C
.
˙˙C D
	LeaveType
˙˙D M
.
˙˙M N
DateValidFrom
˙˙N [
,
˙˙[ \
dbType
˙˙] c
:
˙˙c d
OracleMappingType
˙˙e v
.
˙˙v w
Date
˙˙w {
,
˙˙{ |
	direction˙˙} Ü
:˙˙Ü á"
ParameterDirection˙˙à ö
.˙˙ö õ
Input˙˙õ †
)˙˙† °
;˙˙° ¢

parameters
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
name
˚˚ #
:
˚˚# $
$str
˚˚% 6
,
˚˚6 7
leaveRequest
˚˚8 D
.
˚˚D E
	LeaveType
˚˚E N
.
˚˚N O
DateValidUntil
˚˚O ]
,
˚˚] ^
dbType
˚˚_ e
:
˚˚e f
OracleMappingType
˚˚g x
.
˚˚x y
Date
˚˚y }
,
˚˚} ~
	direction˚˚ à
:˚˚à â"
ParameterDirection˚˚ä ú
.˚˚ú ù
Input˚˚ù ¢
)˚˚¢ £
;˚˚£ §

parameters
¸¸ 
.
¸¸ 
Add
¸¸ 
(
¸¸ 
name
¸¸ #
:
¸¸# $
$str
¸¸% 2
,
¸¸2 3
dbType
¸¸4 :
:
¸¸: ;
OracleMappingType
¸¸< M
.
¸¸M N
Int32
¸¸N S
,
¸¸S T
	direction
¸¸U ^
:
¸¸^ _ 
ParameterDirection
¸¸` r
.
¸¸r s
Output
¸¸s y
)
¸¸y z
;
¸¸z {
await
˝˝ 

connection
˝˝  
.
˝˝  !
ExecuteAsync
˝˝! -
(
˝˝- . 
DatabaseProcedures
˝˝. @
.
˝˝@ A+
SP_CHECK_FOR_LEAVES_BTW_DATES
˝˝A ^
,
˝˝^ _

parameters
˝˝` j
,
˝˝j k
commandType
˝˝l w
:
˝˝w x
CommandType˝˝y Ñ
.˝˝Ñ Ö
StoredProcedure˝˝Ö î
)˝˝î ï
;˝˝ï ñ

leaveCount
˛˛ 
=
˛˛ 

parameters
˛˛ '
.
˛˛' (
Get
˛˛( +
<
˛˛+ ,
int
˛˛, /
>
˛˛/ 0
(
˛˛0 1
$str
˛˛1 >
)
˛˛> ?
;
˛˛? @
}
ˇˇ 
return
ÅÅ 

leaveCount
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
private
ƒƒ 
async
ƒƒ 
Task
ƒƒ 
<
ƒƒ 
List
ƒƒ 
<
ƒƒ  
DateTime
ƒƒ  (
>
ƒƒ( )
>
ƒƒ) *%
GetOrganizationHolidays
ƒƒ+ B
(
ƒƒB C
int
ƒƒC F
employeeSlno
ƒƒG S
,
ƒƒS T
DateTime
ƒƒU ]
dateLeaveFrom
ƒƒ^ k
)
ƒƒk l
{
≈≈ 	
List
∆∆ 
<
∆∆ 
DateTime
∆∆ 
>
∆∆ 
publicHolidays
∆∆ )
=
∆∆* +
null
∆∆, 0
;
∆∆0 1
using
«« 
(
«« 
IDbConnection
««  

connection
««! +
=
««, -
await
««. 3
CreateConnection
««4 D
(
««D E
DbSchema
««E M
.
««M N
PORTAL
««N T
)
««T U
)
««U V
{
»» %
OracleDynamicParameters
…… '
parametersHoliday
……( 9
=
……: ;
new
……< ?%
OracleDynamicParameters
……@ W
(
……W X
)
……X Y
;
……Y Z
parametersHoliday
   !
.
  ! "
Add
  " %
(
  % &
name
  & *
:
  * +
$str
  , ;
,
  ; <
employeeSlno
  = I
,
  I J
dbType
  K Q
:
  Q R
OracleMappingType
  S d
.
  d e
Int64
  e j
,
  j k
	direction
  l u
:
  u v!
ParameterDirection  w â
.  â ä
Input  ä è
)  è ê
;  ê ë
parametersHoliday
ÀÀ !
.
ÀÀ! "
Add
ÀÀ" %
(
ÀÀ% &
name
ÀÀ& *
:
ÀÀ* +
$str
ÀÀ, 5
,
ÀÀ5 6
dbType
ÀÀ7 =
:
ÀÀ= >
OracleMappingType
ÀÀ? P
.
ÀÀP Q
	RefCursor
ÀÀQ Z
,
ÀÀZ [
	direction
ÀÀ\ e
:
ÀÀe f 
ParameterDirection
ÀÀg y
.
ÀÀy z
OutputÀÀz Ä
)ÀÀÄ Å
;ÀÀÅ Ç
IEnumerable
ÃÃ 
<
ÃÃ  
HolidayInformation
ÃÃ .
>
ÃÃ. /
holidaysList
ÃÃ0 <
=
ÃÃ= >
(
ÃÃ? @
await
ÃÃ@ E

connection
ÃÃF P
.
ÃÃP Q

QueryAsync
ÃÃQ [
<
ÃÃ[ \ 
HolidayInformation
ÃÃ\ n
>
ÃÃn o
(
ÃÃo p!
DatabaseProceduresÃÃp Ç
.ÃÃÇ É%
P_GET_PORTAL_HOLIDAYSÃÃÉ ò
,ÃÃò ô!
parametersHolidayÃÃö ´
,ÃÃ´ ¨
commandTypeÃÃ≠ ∏
:ÃÃ∏ π
CommandTypeÃÃ∫ ≈
.ÃÃ≈ ∆
StoredProcedureÃÃ∆ ’
)ÃÃ’ ÷
)ÃÃ÷ ◊
.ÃÃ◊ ÿ
ToListÃÃÿ ﬁ
(ÃÃﬁ ﬂ
)ÃÃﬂ ‡
;ÃÃ‡ ·
publicHolidays
ÕÕ 
=
ÕÕ  
holidaysList
ÕÕ! -
.
ÕÕ- .
Where
ÕÕ. 3
(
ÕÕ3 4
x
ÕÕ4 5
=>
ÕÕ6 8
x
ÕÕ9 :
.
ÕÕ: ;
HolidayDate
ÕÕ; F
>=
ÕÕG I
dateLeaveFrom
ÕÕJ W
)
ÕÕW X
.
ÕÕX Y
Select
ÕÕY _
(
ÕÕ_ `
x
ÕÕ` a
=>
ÕÕb d
x
ÕÕe f
.
ÕÕf g
HolidayDate
ÕÕg r
)
ÕÕr s
.
ÕÕs t
ToList
ÕÕt z
(
ÕÕz {
)
ÕÕ{ |
;
ÕÕ| }
}
ŒŒ 
return
–– 
publicHolidays
–– !
;
––! "
}
—— 	
private
““ 
EmpLeaveResponse
““  (
CheckForOverLappingPeriods
““! ;
(
““; <
List
““< @
<
““@ A
DateTime
““A I
>
““I J
appliedDates
““K W
,
““W X
EmployeeLeave
““Y f
leaveRequest
““g s
,
““s t
List
““u y
<
““y z
LeaveDetail““z Ö
>““Ö Ü
appliedLeaves““á î
)““î ï
{
”” 	
EmpLeaveResponse
‘‘ 
errorMessage
‘‘ )
;
‘‘) *#
ITimePeriodCollection
’’ ! 
overLappingPeriods
’’" 4
=
’’5 64
&CheckForOverLappingDaysForAppliedLeave
’’7 ]
(
’’] ^
appliedDates
’’^ j
,
’’j k
leaveRequest
’’l x
,
’’x y
appliedLeaves’’z á
)’’á à
;’’à â
if
÷÷ 
(
÷÷  
overLappingPeriods
÷÷ "
.
÷÷" #
Count
÷÷# (
>
÷÷) *
$num
÷÷+ ,
)
÷÷, -
{
◊◊ 
errorMessage
ÿÿ 
=
ÿÿ 
new
ÿÿ "
EmpLeaveResponse
ÿÿ# 3
{
ŸŸ 
Response
⁄⁄ 
=
⁄⁄ 
false
⁄⁄ $
,
⁄⁄$ %
Message
€€ 
=
€€ 
$str
€€ i
}
‹‹ 
;
‹‹ 
}
›› 
else
ﬁﬁ 
{
ﬂﬂ 
errorMessage
‡‡ 
=
‡‡ 
new
‡‡ "
EmpLeaveResponse
‡‡# 3
{
·· 
Response
‚‚ 
=
‚‚ 
true
‚‚ #
,
‚‚# $
Message
„„ 
=
„„ 
$str
„„ "
}
‰‰ 
;
‰‰ 
}
ÂÂ 
return
ÊÊ 
errorMessage
ÊÊ 
;
ÊÊ  
}
ÁÁ 	
private
ËË 
List
ËË 
<
ËË 
int
ËË 
>
ËË 7
)CheckForOverLappingDayTypeForAppliedLeave
ËË C
(
ËËC D#
ITimePeriodCollection
ËËD Y
overlapPeriods
ËËZ h
,
ËËh i
EmployeeLeave
ËËj w
leaveRequestËËx Ñ
,ËËÑ Ö
ListËËÜ ä
<ËËä ã
LeaveDetailËËã ñ
>ËËñ ó
appliedLeavesËËò •
)ËË• ¶
{
ÈÈ 	
List
ÍÍ 
<
ÍÍ 
int
ÍÍ 
>
ÍÍ  
lastAppliedLeaves2
ÍÍ (
=
ÍÍ) *
new
ÍÍ+ .
List
ÍÍ/ 3
<
ÍÍ3 4
int
ÍÍ4 7
>
ÍÍ7 8
(
ÍÍ8 9
)
ÍÍ9 :
;
ÍÍ: ;
List
ÎÎ 
<
ÎÎ 
int
ÎÎ 
>
ÎÎ 
data
ÎÎ 
=
ÎÎ 
null
ÎÎ !
;
ÎÎ! "
List
ÏÏ 
<
ÏÏ 
LeaveDetail
ÏÏ 
>
ÏÏ 
lastAppliedLeaves
ÏÏ /
=
ÏÏ0 1
new
ÏÏ2 5
List
ÏÏ6 :
<
ÏÏ: ;
LeaveDetail
ÏÏ; F
>
ÏÏF G
(
ÏÏG H
)
ÏÏH I
;
ÏÏI J
var
ÌÌ 
overlappingLeaves
ÌÌ !
=
ÌÌ" #
appliedLeaves
ÌÌ$ 1
.
ÌÌ1 2
Where
ÌÌ2 7
(
ÌÌ7 8
appliedLeave
ÌÌ8 D
=>
ÌÌE G
overlapPeriods
ÌÌH V
.
ÌÌV W
Any
ÌÌW Z
(
ÌÌZ [
date
ÌÌ[ _
=>
ÌÌ` b
(
ÌÌc d
appliedLeave
ÌÌd p
.
ÌÌp q
	LeaveFrom
ÌÌq z
==
ÌÌ{ }
dateÌÌ~ Ç
.ÌÌÇ É
StartÌÌÉ à
||ÌÌâ ã
appliedLeaveÌÌå ò
.ÌÌò ô
LeaveToÌÌô †
==ÌÌ° £
dateÌÌ§ ®
.ÌÌ® ©
EndÌÌ© ¨
)ÌÌ¨ ≠
)ÌÌ≠ Æ
)ÌÌÆ Ø
.ÌÌØ ∞
ToListÌÌ∞ ∂
(ÌÌ∂ ∑
)ÌÌ∑ ∏
;ÌÌ∏ π
foreach
 
(
 
var
 
dateTime
 !
in
" $
overlappingLeaves
% 6
)
6 7
{
ÒÒ 
if
ÚÚ 
(
ÚÚ 
dateTime
ÚÚ 
.
ÚÚ 
	LeaveFrom
ÚÚ &
.
ÚÚ& '
Date
ÚÚ' +
==
ÚÚ, .
leaveRequest
ÚÚ/ ;
.
ÚÚ; <
FromDate
ÚÚ< D
.
ÚÚD E
Date
ÚÚE I
)
ÚÚI J
{
ÛÛ 
if
ÙÙ 
(
ÙÙ 
(
ıı 
dateTime
ıı 
.
ıı 
FromDateDayTypeId
ıı 
==
ıı  
$num
ıı! "
&&
ıı# %
leaveRequest
ıı& 2
.
ıı2 3
FromDateDayTypeId
ıı3 D
==
ııE G
$num
ııH I
)
ııI J
||
ııK M
(
ˆˆ 
dateTime
ˆˆ 
.
ˆˆ 
FromDateDayTypeId
ˆˆ 
==
ˆˆ  
$num
ˆˆ! "
&&
ˆˆ# %
leaveRequest
ˆˆ& 2
.
ˆˆ2 3
FromDateDayTypeId
ˆˆ3 D
==
ˆˆE G
$num
ˆˆH I
)
ˆˆI J
)
ˆˆJ K
{
˜˜ 
var
˙˙ 
groupedLeaveFroms
˙˙ -
=
˙˙. /
overlappingLeaves
˙˙0 A
.
˙˙A B
Where
˙˙B G
(
˙˙G H
s
˙˙H I
=>
˙˙J L
s
˙˙M N
.
˙˙N O
	LeaveFrom
˙˙O X
==
˙˙Y [
leaveRequest
˙˙\ h
.
˙˙h i
FromDate
˙˙i q
)
˙˙q r
.
˙˙r s
ToList
˙˙s y
(
˙˙y z
)
˙˙z {
;
˙˙{ |
if
˚˚ 
(
˚˚ 
groupedLeaveFroms
˚˚ -
.
˚˚- .
Count
˚˚. 3
<
˚˚4 5
$num
˚˚6 7
)
˚˚7 8
{
¸¸  
lastAppliedLeaves2
˝˝ .
.
˝˝. /
Add
˝˝/ 2
(
˝˝2 3
dateTime
˝˝3 ;
.
˝˝; <
LeaveId
˝˝< C
)
˝˝C D
;
˝˝D E
}
˛˛ 
}
ˇˇ 
}
ÄÄ 
if
ÅÅ 
(
ÅÅ 
dateTime
ÅÅ 
.
ÅÅ 
	LeaveFrom
ÅÅ &
.
ÅÅ& '
Date
ÅÅ' +
==
ÅÅ, .
leaveRequest
ÅÅ/ ;
.
ÅÅ; <
ToDate
ÅÅ< B
.
ÅÅB C
Date
ÅÅC G
)
ÅÅG H
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
(
ÑÑ 
dateTime
ÑÑ 
.
ÑÑ 
FromDateDayTypeId
ÑÑ 
==
ÑÑ  
$num
ÑÑ! "
&&
ÑÑ# %
leaveRequest
ÑÑ& 2
.
ÑÑ2 3
ToDateDayTypeId
ÑÑ3 B
==
ÑÑC E
$num
ÑÑF G
)
ÑÑG H
||
ÑÑI K
(
ÖÖ 
dateTime
ÖÖ 
.
ÖÖ 
FromDateDayTypeId
ÖÖ 
==
ÖÖ  
$num
ÖÖ! "
&&
ÖÖ# %
leaveRequest
ÖÖ& 2
.
ÖÖ2 3
ToDateDayTypeId
ÖÖ3 B
==
ÖÖC E
$num
ÖÖF G
)
ÖÖG H
)
ÖÖH I
{
ÜÜ 
var
ââ 
groupedLeaveFroms
ââ -
=
ââ. /
overlappingLeaves
ââ0 A
.
ââA B
Where
ââB G
(
ââG H
s
ââH I
=>
ââJ L
s
ââM N
.
ââN O
	LeaveFrom
ââO X
==
ââY [
leaveRequest
ââ\ h
.
ââh i
ToDate
ââi o
)
ââo p
.
ââp q
ToList
ââq w
(
ââw x
)
ââx y
;
âây z
if
ää 
(
ää 
groupedLeaveFroms
ää -
.
ää- .
Count
ää. 3
<
ää4 5
$num
ää6 7
)
ää7 8
{
ãã  
lastAppliedLeaves2
åå .
.
åå. /
Add
åå/ 2
(
åå2 3
dateTime
åå3 ;
.
åå; <
LeaveId
åå< C
)
ååC D
;
ååD E
}
çç 
}
éé 
}
èè 
if
êê 
(
êê 
dateTime
êê 
.
êê 
LeaveTo
êê $
.
êê$ %
Date
êê% )
==
êê* ,
leaveRequest
êê- 9
.
êê9 :
FromDate
êê: B
.
êêB C
Date
êêC G
)
êêG H
{
ëë 
if
íí 
(
íí 
(
ìì 
dateTime
ìì 
.
ìì 
ToDateDayTypeId
ìì 
==
ìì 
$num
ìì  
&&
ìì! #
leaveRequest
ìì$ 0
.
ìì0 1
FromDateDayTypeId
ìì1 B
==
ììC E
$num
ììF G
)
ììG H
||
ììI K
(
îî 
dateTime
îî 
.
îî 
ToDateDayTypeId
îî 
==
îî 
$num
îî  
&&
îî! #
leaveRequest
îî$ 0
.
îî0 1
FromDateDayTypeId
îî1 B
==
îîC E
$num
îîF G
)
îîG H
)
îîH I
{
ïï 
var
òò 
groupedLeaveFroms
òò -
=
òò. /
overlappingLeaves
òò0 A
.
òòA B
Where
òòB G
(
òòG H
s
òòH I
=>
òòJ L
s
òòM N
.
òòN O
LeaveTo
òòO V
==
òòW Y
leaveRequest
òòZ f
.
òòf g
FromDate
òòg o
)
òòo p
.
òòp q
ToList
òòq w
(
òòw x
)
òòx y
;
òòy z
if
ôô 
(
ôô 
groupedLeaveFroms
ôô -
.
ôô- .
Count
ôô. 3
<
ôô4 5
$num
ôô6 7
)
ôô7 8
{
öö  
lastAppliedLeaves2
õõ .
.
õõ. /
Add
õõ/ 2
(
õõ2 3
dateTime
õõ3 ;
.
õõ; <
LeaveId
õõ< C
)
õõC D
;
õõD E
}
úú 
}
ùù 
}
ûû 
if
üü 
(
üü 
dateTime
üü 
.
üü 
LeaveTo
üü $
.
üü$ %
Date
üü% )
==
üü* ,
leaveRequest
üü- 9
.
üü9 :
ToDate
üü: @
.
üü@ A
Date
üüA E
)
üüE F
{
†† 
if
°° 
(
°° 
(
¢¢ 
dateTime
¢¢ 
.
¢¢ 
ToDateDayTypeId
¢¢ 
==
¢¢ 
$num
¢¢  
&&
¢¢! #
leaveRequest
¢¢$ 0
.
¢¢0 1
ToDateDayTypeId
¢¢1 @
==
¢¢A C
$num
¢¢D E
)
¢¢E F
||
¢¢G I
(
££ 
dateTime
££ 
.
££ 
ToDateDayTypeId
££ 
==
££ 
$num
££  
&&
££! #
leaveRequest
££$ 0
.
££0 1
ToDateDayTypeId
££1 @
==
££A C
$num
££D E
)
££E F
)
££F G
{
§§ 
var
ßß 
groupedLeaveFroms
ßß -
=
ßß. /
overlappingLeaves
ßß0 A
.
ßßA B
Where
ßßB G
(
ßßG H
s
ßßH I
=>
ßßJ L
s
ßßM N
.
ßßN O
LeaveTo
ßßO V
==
ßßW Y
leaveRequest
ßßZ f
.
ßßf g
ToDate
ßßg m
)
ßßm n
.
ßßn o
ToList
ßßo u
(
ßßu v
)
ßßv w
;
ßßw x
if
®® 
(
®® 
groupedLeaveFroms
®® -
.
®®- .
Count
®®. 3
<
®®4 5
$num
®®6 7
)
®®7 8
{
©©  
lastAppliedLeaves2
™™ .
.
™™. /
Add
™™/ 2
(
™™2 3
dateTime
™™3 ;
.
™™; <
LeaveId
™™< C
)
™™C D
;
™™D E
}
´´ 
}
¨¨ 
}
≠≠ 
}
ÆÆ 
return
ØØ  
lastAppliedLeaves2
ØØ %
;
ØØ% &
}
±± 	
private
≤≤ #
ITimePeriodCollection
≤≤ %4
&CheckForOverLappingDaysForAppliedLeave
≤≤& L
(
≤≤L M
List
≤≤M Q
<
≤≤Q R
DateTime
≤≤R Z
>
≤≤Z [
appliedDates
≤≤\ h
,
≤≤h i
EmployeeLeave
≤≤j w
leaveRequest≤≤x Ñ
,≤≤Ñ Ö
List≤≤Ü ä
<≤≤ä ã
LeaveDetail≤≤ã ñ
>≤≤ñ ó
appliedLeaves≤≤ò •
)≤≤• ¶
{
≥≥ 	#
ITimePeriodCollection
¥¥ !
overlapPeriods
¥¥" 0
=
¥¥1 2
null
¥¥3 7
;
¥¥7 8#
ITimePeriodCollection
µµ !
overlapPeriods2
µµ" 1
=
µµ2 3
null
µµ4 8
;
µµ8 9"
TimePeriodCollection
∑∑  %
leaveAppliedTimePeriods
∑∑! 8
=
∑∑9 :
new
∑∑; >"
TimePeriodCollection
∑∑? S
(
∑∑S T
)
∑∑T U
;
∑∑U V"
TimePeriodCollection
∏∏  &
leaveAppliedTimePeriods2
∏∏! 9
=
∏∏: ;
new
∏∏< ?"
TimePeriodCollection
∏∏@ T
(
∏∏T U
)
∏∏U V
;
∏∏V W
overlapPeriods
∫∫ 
=
∫∫ 
new
∫∫  "
TimePeriodCollection
∫∫! 5
(
∫∫5 6
)
∫∫6 7
;
∫∫7 8
overlapPeriods2
ªª 
=
ªª 
new
ªª !"
TimePeriodCollection
ªª" 6
(
ªª6 7
)
ªª7 8
;
ªª8 9
List
ΩΩ 
<
ΩΩ 
DateTime
ΩΩ 
>
ΩΩ 
lastAppliedLeaves
ΩΩ ,
=
ΩΩ- .
new
ΩΩ/ 2
List
ΩΩ3 7
<
ΩΩ7 8
DateTime
ΩΩ8 @
>
ΩΩ@ A
(
ΩΩA B
)
ΩΩB C
;
ΩΩC D
List
ææ 
<
ææ 
DateTime
ææ 
>
ææ  
lastAppliedLeaves2
ææ -
=
ææ. /
new
ææ0 3
List
ææ4 8
<
ææ8 9
DateTime
ææ9 A
>
ææA B
(
ææB C
)
ææC D
;
ææD E"
TimePeriodCollection
¡¡  
periodsToCheck
¡¡! /
=
¡¡0 1
new
¡¡2 5"
TimePeriodCollection
¡¡6 J
{
¡¡K L
new
¡¡M P
	TimeRange
¡¡Q Z
(
¡¡Z [
leaveRequest
¡¡[ g
.
¡¡g h
FromDate
¡¡h p
,
¡¡p q
leaveRequest
¡¡r ~
.
¡¡~ 
ToDate¡¡ Ö
)¡¡Ö Ü
}¡¡á à
;¡¡à â
foreach
¬¬ 
(
¬¬ 
var
¬¬ 
dateTime
¬¬ !
in
¬¬" $
appliedLeaves
¬¬% 2
)
¬¬2 3
{
√√ 
lastAppliedLeaves
ƒƒ !
.
ƒƒ! "
AddRange
ƒƒ" *
(
ƒƒ* +
dateTime
ƒƒ+ 3
.
ƒƒ3 4
	LeaveFrom
ƒƒ4 =
.
ƒƒ= >
GetDateRange
ƒƒ> J
(
ƒƒJ K
dateTime
ƒƒK S
.
ƒƒS T
LeaveTo
ƒƒT [
)
ƒƒ[ \
.
ƒƒ\ ]
ToList
ƒƒ] c
(
ƒƒc d
)
ƒƒd e
)
ƒƒe f
;
ƒƒf g 
lastAppliedLeaves2
≈≈ "
.
≈≈" #
AddRange
≈≈# +
(
≈≈+ ,
dateTime
≈≈, 4
.
≈≈4 5
	LeaveFrom
≈≈5 >
.
≈≈> ?
GetDateRange
≈≈? K
(
≈≈K L
dateTime
≈≈L T
.
≈≈T U
	LeaveFrom
≈≈U ^
)
≈≈^ _
.
≈≈_ `
ToList
≈≈` f
(
≈≈f g
)
≈≈g h
)
≈≈h i
;
≈≈i j
if
∆∆ 
(
∆∆ 
dateTime
∆∆ 
.
∆∆ 
	LeaveFrom
∆∆ %
!=
∆∆& (
dateTime
∆∆) 1
.
∆∆1 2
LeaveTo
∆∆2 9
)
∆∆9 :
{
««  
lastAppliedLeaves2
»» &
.
»»& '
AddRange
»»' /
(
»»/ 0
dateTime
»»0 8
.
»»8 9
LeaveTo
»»9 @
.
»»@ A
GetDateRange
»»A M
(
»»M N
dateTime
»»N V
.
»»V W
LeaveTo
»»W ^
)
»»^ _
.
»»_ `
ToList
»»` f
(
»»f g
)
»»g h
)
»»h i
;
»»i j
}
   
}
ÀÀ 
foreach
ÕÕ 
(
ÕÕ 
var
ÕÕ 
	dateRange
ÕÕ "
in
ÕÕ# %
lastAppliedLeaves
ÕÕ& 7
)
ÕÕ7 8
{
ŒŒ %
leaveAppliedTimePeriods
œœ '
.
œœ' (
Add
œœ( +
(
œœ+ ,
new
œœ, /
	TimeRange
œœ0 9
(
œœ9 :
	dateRange
œœ: C
.
œœC D
Date
œœD H
,
œœH I
	dateRange
œœJ S
.
œœS T
Date
œœT X
)
œœX Y
)
œœY Z
;
œœZ [
}
–– 
foreach
—— 
(
—— 
var
—— 
	dateRange
—— "
in
——# % 
lastAppliedLeaves2
——& 8
)
——8 9
{
““ &
leaveAppliedTimePeriods2
”” (
.
””( )
Add
””) ,
(
””, -
new
””- 0
	TimeRange
””1 :
(
””: ;
	dateRange
””; D
.
””D E
Date
””E I
,
””I J
	dateRange
””K T
.
””T U
Date
””U Y
)
””Y Z
)
””Z [
;
””[ \
}
‘‘ 
foreach
’’ 
(
’’ 
DateTime
’’ 
item
’’ "
in
’’# %
appliedDates
’’& 2
)
’’2 3
{
÷÷ 
overlapPeriods
◊◊ 
=
◊◊  %
leaveAppliedTimePeriods
◊◊! 8
.
◊◊8 9
OverlapPeriods
◊◊9 G
(
◊◊G H
new
◊◊H K
	TimeRange
◊◊L U
(
◊◊U V
item
◊◊V Z
,
◊◊Z [
item
◊◊\ `
)
◊◊` a
)
◊◊a b
;
◊◊b c
overlapPeriods2
ÿÿ 
=
ÿÿ  !&
leaveAppliedTimePeriods2
ÿÿ" :
.
ÿÿ: ;
OverlapPeriods
ÿÿ; I
(
ÿÿI J
new
ÿÿJ M
	TimeRange
ÿÿN W
(
ÿÿW X
item
ÿÿX \
,
ÿÿ\ ]
item
ÿÿ^ b
)
ÿÿb c
)
ÿÿc d
;
ÿÿd e
if
ŸŸ 
(
ŸŸ 
overlapPeriods2
ŸŸ #
.
ŸŸ# $
Count
ŸŸ$ )
>
ŸŸ* +
$num
ŸŸ, -
)
ŸŸ- .
{
⁄⁄ 
var
€€ 
data
€€ 
=
€€ 7
)CheckForOverLappingDayTypeForAppliedLeave
€€ H
(
€€H I
overlapPeriods2
€€I X
,
€€X Y
leaveRequest
€€Z f
,
€€f g
appliedLeaves
€€h u
)
€€u v
;
€€v w
if
‹‹ 
(
‹‹ 
data
‹‹ 
!=
‹‹ 
null
‹‹ #
&&
‹‹$ &
data
‹‹' +
.
‹‹+ ,
Count
‹‹, 1
>
‹‹2 3
$num
‹‹4 5
)
‹‹5 6
{
›› 
return
ﬁﬁ 
overlapPeriods
ﬁﬁ -
=
ﬁﬁ. /
new
ﬁﬁ0 3"
TimePeriodCollection
ﬁﬁ4 H
(
ﬁﬁH I
)
ﬁﬁI J
;
ﬁﬁJ K
}
ﬂﬂ 
}
‡‡ 
if
·· 
(
·· 
overlapPeriods
·· &
.
··& '
Count
··' ,
>
··- .
$num
··/ 0
)
··0 1
{
‚‚ 
return
„„ 
overlapPeriods
„„ )
;
„„) *
}
‰‰ 
}
ÂÂ 
return
ÊÊ 
overlapPeriods
ÊÊ !
;
ÊÊ! "
}
ÁÁ 	
private
ËË 
async
ËË 
Task
ËË "
UpdateConsumedLeaves
ËË /
(
ËË/ 0
IDbConnection
ËË0 =

connection
ËË> H
,
ËËH I
EmployeeLeave
ËËJ W
empLeaveRequest
ËËX g
,
ËËg h
double
ËËi o
	totalDays
ËËp y
)
ËËy z
{
ÈÈ 	%
OracleDynamicParameters
ÍÍ #

parameters
ÍÍ$ .
=
ÍÍ/ 0
new
ÍÍ1 4%
OracleDynamicParameters
ÍÍ5 L
(
ÍÍL M
)
ÍÍM N
;
ÍÍN O

parameters
ÎÎ 
.
ÎÎ 
Add
ÎÎ 
(
ÎÎ 
name
ÎÎ 
:
ÎÎ  
$str
ÎÎ! A
,
ÎÎA B
empLeaveRequest
ÎÎC R
.
ÎÎR S
	LeaveType
ÎÎS \
.
ÎÎ\ ]
EntitlementId
ÎÎ] j
,
ÎÎj k
dbType
ÎÎl r
:
ÎÎr s 
OracleMappingTypeÎÎt Ö
.ÎÎÖ Ü
Int32ÎÎÜ ã
,ÎÎã å
	directionÎÎç ñ
:ÎÎñ ó"
ParameterDirectionÎÎò ™
.ÎÎ™ ´
InputÎÎ´ ∞
)ÎÎ∞ ±
;ÎÎ± ≤

parameters
ÏÏ 
.
ÏÏ 
Add
ÏÏ 
(
ÏÏ 
name
ÏÏ 
:
ÏÏ  
$str
ÏÏ! 0
,
ÏÏ0 1
empLeaveRequest
ÏÏ2 A
.
ÏÏA B
EmployeeSlno
ÏÏB N
,
ÏÏN O
dbType
ÏÏP V
:
ÏÏV W
OracleMappingType
ÏÏX i
.
ÏÏi j
Int32
ÏÏj o
,
ÏÏo p
	direction
ÏÏq z
:
ÏÏz {!
ParameterDirectionÏÏ| é
.ÏÏé è
InputÏÏè î
)ÏÏî ï
;ÏÏï ñ

parameters
ÌÌ 
.
ÌÌ 
Add
ÌÌ 
(
ÌÌ 
name
ÌÌ 
:
ÌÌ  
$str
ÌÌ! 3
,
ÌÌ3 4
	totalDays
ÌÌ5 >
,
ÌÌ> ?
dbType
ÌÌ@ F
:
ÌÌF G
OracleMappingType
ÌÌH Y
.
ÌÌY Z
Decimal
ÌÌZ a
,
ÌÌa b
	direction
ÌÌc l
:
ÌÌl m!
ParameterDirectionÌÌn Ä
.ÌÌÄ Å
InputÌÌÅ Ü
)ÌÌÜ á
;ÌÌá à
await
ÓÓ 

connection
ÓÓ 
.
ÓÓ 
ExecuteAsync
ÓÓ )
(
ÓÓ) * 
DatabaseProcedures
ÓÓ* <
.
ÓÓ< =+
SP_EMP_UPDATE_CONSUMED_LEAVES
ÓÓ= Z
,
ÓÓZ [

parameters
ÓÓ\ f
,
ÓÓf g
commandType
ÓÓh s
:
ÓÓs t
CommandTypeÓÓu Ä
.ÓÓÄ Å
StoredProcedureÓÓÅ ê
)ÓÓê ë
;ÓÓë í
}
ÔÔ 	
private
 
async
 
Task
 
UploadLeaveFile
 *
(
* +
EmployeeLeave
+ 8
employeeLeave
9 F
,
F G
int
H K
leaveId
L S
,
S T
IDbConnection
U b

connection
c m
)
m n
{
ÒÒ 	
List
ÚÚ 
<
ÚÚ %
OracleDynamicParameters
ÚÚ (
>
ÚÚ( )
	parmeters
ÚÚ* 3
=
ÚÚ4 5
new
ÚÚ6 9
(
ÚÚ9 :
)
ÚÚ: ;
;
ÚÚ; <
bool
ÛÛ 
fileResp
ÛÛ 
=
ÛÛ 
await
ÛÛ !(
UploadLeaveFileToDirectory
ÛÛ" <
(
ÛÛ< =
employeeLeave
ÛÛ= J
.
ÛÛJ K
LeaveFileUploads
ÛÛK [
,
ÛÛ[ \
leaveId
ÛÛ] d
)
ÛÛd e
;
ÛÛe f
if
ÙÙ 
(
ÙÙ 
fileResp
ÙÙ 
)
ÙÙ 
{
ıı 
employeeLeave
ˆˆ 
.
ˆˆ 
LeaveFileUploads
ˆˆ .
.
ˆˆ. /
ForEach
ˆˆ/ 6
(
ˆˆ6 7
file
ˆˆ7 ;
=>
ˆˆ< >
{
˜˜ 
var
¯¯ 
param
¯¯ 
=
¯¯ 
new
¯¯  #%
OracleDynamicParameters
¯¯$ ;
(
¯¯; <
)
¯¯< =
;
¯¯= >
param
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
name
˘˘ "
:
˘˘" #
$str
˘˘$ 8
,
˘˘8 9
leaveId
˘˘: A
,
˘˘A B
dbType
˘˘C I
:
˘˘I J
OracleMappingType
˘˘K \
.
˘˘\ ]
Int32
˘˘] b
,
˘˘b c
	direction
˘˘d m
:
˘˘m n!
ParameterDirection˘˘o Å
.˘˘Å Ç
Input˘˘Ç á
)˘˘á à
;˘˘à â
param
˙˙ 
.
˙˙ 
Add
˙˙ 
(
˙˙ 
name
˙˙ "
:
˙˙" #
$str
˙˙$ 0
,
˙˙0 1
file
˙˙2 6
.
˙˙6 7
FileToUpload
˙˙7 C
.
˙˙C D
FileName
˙˙D L
,
˙˙L M
dbType
˙˙N T
:
˙˙T U
OracleMappingType
˙˙V g
.
˙˙g h
Varchar2
˙˙h p
,
˙˙p q
	direction
˙˙r {
:
˙˙{ |!
ParameterDirection˙˙} è
.˙˙è ê
Input˙˙ê ï
)˙˙ï ñ
;˙˙ñ ó
param
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
name
˚˚ "
:
˚˚" #
$str
˚˚$ 8
,
˚˚8 9
file
˚˚: >
.
˚˚> ?
FileName_Original
˚˚? P
,
˚˚P Q
dbType
˚˚R X
:
˚˚X Y
OracleMappingType
˚˚Z k
.
˚˚k l
Varchar2
˚˚l t
,
˚˚t u
	direction
˚˚v 
:˚˚ Ä"
ParameterDirection˚˚Å ì
.˚˚ì î
Input˚˚î ô
)˚˚ô ö
;˚˚ö õ
param
¸¸ 
.
¸¸ 
Add
¸¸ 
(
¸¸ 
name
¸¸ "
:
¸¸" #
$str
¸¸$ /
,
¸¸/ 0
file
¸¸1 5
.
¸¸5 6
FilePath
¸¸6 >
,
¸¸> ?
dbType
¸¸@ F
:
¸¸F G
OracleMappingType
¸¸H Y
.
¸¸Y Z
Varchar2
¸¸Z b
,
¸¸b c
	direction
¸¸d m
:
¸¸m n!
ParameterDirection¸¸o Å
.¸¸Å Ç
Input¸¸Ç á
)¸¸á à
;¸¸à â
	parmeters
˝˝ 
.
˝˝ 
Add
˝˝ !
(
˝˝! "
param
˝˝" '
)
˝˝' (
;
˝˝( )
}
˛˛ 
)
˛˛ 
;
˛˛ 
}
ˇˇ 
await
ÄÄ 

connection
ÄÄ 
.
ÄÄ 
ExecuteAsync
ÄÄ )
(
ÄÄ) * 
DatabaseProcedures
ÄÄ* <
.
ÄÄ< =%
SP_EMP_LEAVE_FILEUPLOAD
ÄÄ= T
,
ÄÄT U
	parmeters
ÄÄV _
,
ÄÄ_ `
commandType
ÄÄa l
:
ÄÄl m
CommandType
ÄÄn y
.
ÄÄy z
StoredProcedureÄÄz â
)ÄÄâ ä
;ÄÄä ã
}
ÅÅ 	
private
ÇÇ 
async
ÇÇ 
Task
ÇÇ 
<
ÇÇ 
bool
ÇÇ 
>
ÇÇ  (
UploadLeaveFileToDirectory
ÇÇ! ;
(
ÇÇ; <
List
ÇÇ< @
<
ÇÇ@ A
LeaveFileUpload
ÇÇA P
>
ÇÇP Q
leaveFileUploads
ÇÇR b
,
ÇÇb c
int
ÇÇd g
leaveId
ÇÇh o
)
ÇÇo p
{
ÉÉ 	
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
	leaveFile
ÑÑ "
in
ÑÑ# %
leaveFileUploads
ÑÑ& 6
)
ÑÑ6 7
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
	leaveFile
ÜÜ 
!=
ÜÜ  
null
ÜÜ! %
)
ÜÜ% &
{
áá 
string
àà 
path
àà 
=
àà  !
Path
àà" &
.
àà& '
Combine
àà' .
(
àà. /!
ApplicationSettings
àà/ B
.
ààB C
Current
ààC J
.
ààJ K
LeaveFilePath
ààK X
)
ààX Y
;
ààY Z
if
ââ 
(
ââ 
!
ââ 
	Directory
ââ "
.
ââ" #
Exists
ââ# )
(
ââ) *
path
ââ* .
)
ââ. /
)
ââ/ 0
{
ää 
	Directory
ãã !
.
ãã! "
CreateDirectory
ãã" 1
(
ãã1 2
path
ãã2 6
)
ãã6 7
;
ãã7 8
}
åå 
string
éé 
fileType
éé #
=
éé$ %
Path
éé& *
.
éé* +
GetExtension
éé+ 7
(
éé7 8
	leaveFile
éé8 A
.
ééA B
FileToUpload
ééB N
.
ééN O
FileName
ééO W
)
ééW X
.
ééX Y
ToString
ééY a
(
ééa b
)
ééb c
.
ééc d
ToLower
ééd k
(
éék l
)
éél m
;
éém n
string
èè 
fileName
èè #
=
èè$ %
string
èè& ,
.
èè, -
Format
èè- 3
(
èè3 4
$str
èè4 ?
,
èè? @
leaveId
èèA H
,
èèH I
DateTime
èèJ R
.
èèR S
Now
èèS V
.
èèV W
Ticks
èèW \
,
èè\ ]
fileType
èè^ f
)
èèf g
;
èèg h
path
êê 
=
êê 
Path
êê 
.
êê  
Combine
êê  '
(
êê' (
path
êê( ,
,
êê, -
fileName
êê. 6
)
êê6 7
;
êê7 8
if
íí 
(
íí 
!
íí 
File
íí 
.
íí 
Exists
íí $
(
íí$ %
path
íí% )
)
íí) *
)
íí* +
{
ìì 
string
îî 
base64String
îî +
=
îî, -
	leaveFile
îî. 7
.
îî7 8
FileToUpload
îî8 D
.
îîD E
FileAsBase64
îîE Q
.
îîQ R
	Substring
îîR [
(
îî[ \
	leaveFile
îî\ e
.
îîe f
FileToUpload
îîf r
.
îîr s
FileAsBase64
îîs 
.îî Ä
IndexOfîîÄ á
(îîá à
$charîîà ã
)îîã å
+îîç é
$numîîè ê
)îîê ë
;îîë í
byte
ïï 
[
ïï 
]
ïï 

imageBytes
ïï )
=
ïï* +
Convert
ïï, 3
.
ïï3 4
FromBase64String
ïï4 D
(
ïïD E
base64String
ïïE Q
)
ïïQ R
;
ïïR S
File
ññ 
.
ññ 
WriteAllBytes
ññ *
(
ññ* +
path
ññ+ /
,
ññ/ 0

imageBytes
ññ1 ;
)
ññ; <
;
ññ< =
	leaveFile
óó !
.
óó! "
FileName_Original
óó" 3
=
óó4 5
	leaveFile
óó6 ?
.
óó? @
FileToUpload
óó@ L
.
óóL M
FileName
óóM U
;
óóU V
	leaveFile
òò !
.
òò! "
FilePath
òò" *
=
òò+ ,
path
òò- 1
;
òò1 2
	leaveFile
ôô !
.
ôô! "
FileToUpload
ôô" .
.
ôô. /
FileName
ôô/ 7
=
ôô8 9
fileName
ôô: B
;
ôôB C
}
öö 
}
õõ 
}
úú 
return
ûû 
true
ûû 
;
ûû 
}
üü 	
public
†† 
async
†† 
Task
†† 
<
†† 
int
†† 
>
†† !
GetUtilizedOnDuties
†† 2
(
††2 3
int
††3 6
employeeSlno
††7 C
)
††C D
{
°° 	
int
¢¢ 
utilizedOnDuties
¢¢  
=
¢¢! "
$num
¢¢# $
;
¢¢$ %
DateTime
££ 
	startDate
££ 
=
££  
new
££! $
DateTime
££% -
(
££- .
DateTime
££. 6
.
££6 7
Now
££7 :
.
££: ;
Year
££; ?
,
££? @
DateTime
££A I
.
££I J
Now
££J M
.
££M N
Month
££N S
-
££T U
$num
££V W
,
££W X!
ApplicationSettings
££Y l
.
££l m
Current
££m t
.
££t u!
PayrollPeriodStart££u á
)££á à
.££à â

StartOfDay££â ì
(££ì î
)££î ï
;££ï ñ
DateTime
§§ 
endDate
§§ 
=
§§ 
new
§§ "
DateTime
§§# +
(
§§+ ,
DateTime
§§, 4
.
§§4 5
Now
§§5 8
.
§§8 9
Year
§§9 =
,
§§= >
DateTime
§§? G
.
§§G H
Now
§§H K
.
§§K L
Month
§§L Q
,
§§Q R!
ApplicationSettings
§§S f
.
§§f g
Current
§§g n
.
§§n o
PayrollPeriodEnd
§§o 
)§§ Ä
.§§Ä Å
EndOfDay§§Å â
(§§â ä
)§§ä ã
;§§ã å
using
•• 
(
•• 
var
•• 

connection
•• !
=
••" #
await
••$ )
base
••* .
.
••. /
CreateConnection
••/ ?
(
••? @
DbSchema
••@ H
.
••H I
PORTAL
••I O
)
••O P
)
••P Q
{
¶¶ %
OracleDynamicParameters
ßß '

parameters
ßß( 2
=
ßß3 4
new
ßß5 8%
OracleDynamicParameters
ßß9 P
(
ßßP Q
)
ßßQ R
;
ßßR S

parameters
®® 
.
®® 
Add
®® 
(
®® 
name
®® #
:
®®# $
$str
®®% 4
,
®®4 5
employeeSlno
®®6 B
,
®®B C
dbType
®®D J
:
®®J K
OracleMappingType
®®L ]
.
®®] ^
Int32
®®^ c
,
®®c d
	direction
®®e n
:
®®n o!
ParameterDirection®®p Ç
.®®Ç É
Input®®É à
)®®à â
;®®â ä

parameters
©© 
.
©© 
Add
©© 
(
©© 
name
©© #
:
©©# $
$str
©©% 2
,
©©2 3
	startDate
©©4 =
,
©©= >
dbType
©©? E
:
©©E F
OracleMappingType
©©G X
.
©©X Y
Date
©©Y ]
,
©©] ^
	direction
©©_ h
:
©©h i 
ParameterDirection
©©j |
.
©©| }
Input©©} Ç
)©©Ç É
;©©É Ñ

parameters
™™ 
.
™™ 
Add
™™ 
(
™™ 
name
™™ #
:
™™# $
$str
™™% 0
,
™™0 1
endDate
™™2 9
,
™™9 :
dbType
™™; A
:
™™A B
OracleMappingType
™™C T
.
™™T U
Date
™™U Y
,
™™Y Z
	direction
™™[ d
:
™™d e 
ParameterDirection
™™f x
.
™™x y
Input
™™y ~
)
™™~ 
;™™ Ä

parameters
´´ 
.
´´ 
Add
´´ 
(
´´ 
name
´´ #
:
´´# $
$str
´´% 9
,
´´9 :
dbType
´´; A
:
´´A B
OracleMappingType
´´C T
.
´´T U
Int32
´´U Z
,
´´Z [
	direction
´´\ e
:
´´e f 
ParameterDirection
´´g y
.
´´y z
Output´´z Ä
)´´Ä Å
;´´Å Ç
await
¨¨ 

connection
¨¨  
.
¨¨  !
ExecuteAsync
¨¨! -
(
¨¨- . 
DatabaseProcedures
¨¨. @
.
¨¨@ A&
SP_GET_UTILIZED_ONDUTIES
¨¨A Y
,
¨¨Y Z

parameters
¨¨[ e
,
¨¨e f
commandType
¨¨g r
:
¨¨r s
CommandType
¨¨t 
.¨¨ Ä
StoredProcedure¨¨Ä è
)¨¨è ê
;¨¨ê ë
utilizedOnDuties
≠≠  
=
≠≠! "

parameters
≠≠# -
.
≠≠- .
Get
≠≠. 1
<
≠≠1 2
int
≠≠2 5
>
≠≠5 6
(
≠≠6 7
$str
≠≠7 K
)
≠≠K L
;
≠≠L M
}
ÆÆ 
return
∞∞ 
utilizedOnDuties
∞∞ #
;
∞∞# $
}
±± 	
public
≤≤ 
async
≤≤ 
Task
≤≤ 
<
≤≤ 
List
≤≤ 
<
≤≤ !
EmpLeaveFileDetails
≤≤ 2
>
≤≤2 3
>
≤≤3 4
GetEmpLeaveFiles
≤≤5 E
(
≤≤E F
int
≤≤F I
leaveId
≤≤J Q
)
≤≤Q R
{
≥≥ 	
List
¥¥ 
<
¥¥ !
EmpLeaveFileDetails
¥¥ $
>
¥¥$ %!
empLeaveFileDetails
¥¥& 9
=
¥¥: ;
null
¥¥< @
;
¥¥@ A
using
µµ 
(
µµ 
var
µµ 

connection
µµ !
=
µµ" #
await
µµ$ )
base
µµ* .
.
µµ. /
CreateConnection
µµ/ ?
(
µµ? @
DbSchema
µµ@ H
.
µµH I
PORTAL
µµI O
)
µµO P
)
µµP Q
{
∂∂ %
OracleDynamicParameters
∑∑ '

parameters
∑∑( 2
=
∑∑3 4
new
∑∑5 8%
OracleDynamicParameters
∑∑9 P
(
∑∑P Q
)
∑∑Q R
;
∑∑R S

parameters
∏∏ 
.
∏∏ 
Add
∏∏ 
(
∏∏ 
name
∏∏ #
:
∏∏# $
$str
∏∏% 9
,
∏∏9 :
leaveId
∏∏; B
,
∏∏B C
dbType
∏∏D J
:
∏∏J K
OracleMappingType
∏∏L ]
.
∏∏] ^
Int32
∏∏^ c
,
∏∏c d
	direction
∏∏e n
:
∏∏n o!
ParameterDirection∏∏p Ç
.∏∏Ç É
Input∏∏É à
)∏∏à â
;∏∏â ä

parameters
ππ 
.
ππ 
Add
ππ 
(
ππ 
name
ππ #
:
ππ# $
$str
ππ% .
,
ππ. /
dbType
ππ0 6
:
ππ6 7
OracleMappingType
ππ8 I
.
ππI J
	RefCursor
ππJ S
,
ππS T
	direction
ππU ^
:
ππ^ _ 
ParameterDirection
ππ` r
.
ππr s
Output
ππs y
)
ππy z
;
ππz {!
empLeaveFileDetails
∫∫ #
=
∫∫$ %
(
∫∫& '
await
∫∫' ,

connection
∫∫- 7
.
∫∫7 8

QueryAsync
∫∫8 B
<
∫∫B C!
EmpLeaveFileDetails
∫∫C V
>
∫∫V W
(
∫∫W X 
DatabaseProcedures
∫∫X j
.
∫∫j k,
SP_GET_EMP_LEAVE_FILE_DETAILS∫∫k à
,∫∫à â

parameters∫∫ä î
,∫∫î ï
commandType∫∫ñ °
:∫∫° ¢
CommandType∫∫£ Æ
.∫∫Æ Ø
StoredProcedure∫∫Ø æ
)∫∫æ ø
)∫∫ø ¿
.∫∫¿ ¡
ToList∫∫¡ «
(∫∫« »
)∫∫» …
;∫∫…  
}
ªª 
return
ºº !
empLeaveFileDetails
ºº &
;
ºº& '
}
ΩΩ 	
}
ææ 
}øø €
WF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Mandals\MandalsRespository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Mandals& -
{ 
public 

class 
MandalsRespository $
:$ %
BaseRepository& 4
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
MandalsRespository !
(! "
IConfiguration" 0
configuration1 >
)> ?
:@ A
baseB F
(F G
configurationG T
)T U
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
MandalDetails ,
>, -
>- .
GetMandalDetails/ ?
(? @
int@ C
districtSlNoD P
)P Q
{ 	
List 
< 
MandalDetails 
> 
mandalDetails  -
=. /
null0 4
;4 5
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{ #
OracleDynamicParameters   '
	parmeters  ( 1
=  2 3
new  4 7#
OracleDynamicParameters  8 O
(  O P
)  P Q
;  Q R
	parmeters!! 
.!! 
Add!! 
(!! 
name!! "
:!!" #
$str!!$ 3
,!!3 4
districtSlNo!!5 A
,!!A B
dbType!!C I
:!!I J
OracleMappingType!!K \
.!!\ ]
Int32!!] b
,!!b c
	direction!!d m
:!!m n
ParameterDirection	!!o Å
.
!!Å Ç
Input
!!Ç á
)
!!á à
;
!!à â
	parmeters"" 
."" 
Add"" 
("" 
name"" "
:""" #
$str""$ -
,""- .
dbType""/ 5
:""5 6
OracleMappingType""7 H
.""H I
	RefCursor""I R
,""R S
	direction""T ]
:""] ^
ParameterDirection""_ q
.""q r
Output""r x
)""x y
;""y z
mandalDetails## 
=## 
(##  !
await##! &

connection##' 1
.##1 2

QueryAsync##2 <
<##< =
MandalDetails##= J
>##J K
(##K L
DatabaseProcedures##L ^
.##^ _
MANDAL_DETAILS##_ m
,##m n
	parmeters##o x
,##x y
commandType	##z Ö
:
##Ö Ü
CommandType
##á í
.
##í ì
StoredProcedure
##ì ¢
)
##¢ £
)
##£ §
.
##§ •
ToList
##• ´
(
##´ ¨
)
##¨ ≠
;
##≠ Æ
}$$ 
return%% 
mandalDetails%%  
;%%  !
}&& 	
}'' 
}(( ∏
cF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Masters\AttendanceReportTypeRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Masters& -
{ 
public 

class *
AttendanceReportTypeRepository /
:/ 0
BaseRepository1 ?
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public *
AttendanceReportTypeRepository -
(- .
IConfiguration. <
configuration= J
)J K
:L M
baseN R
(R S
configurationS `
)` a
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
<  
AttendanceReportType 3
>3 4
>4 5$
GetAttendanceReportTypes6 N
(N O
)O P
{ 	
List 
<  
AttendanceReportType %
>% &
reportTypes' 2
=3 4
null5 9
;9 :
string 
sqlQuery 
= 
$str	 â
;
â ä
using 
( 
var 

connection !
=" #
await$ )
CreateConnection* :
(: ;
DbSchema; C
.C D
PORTALD J
)J K
)K L
{ #
OracleDynamicParameters '
	parmeters( 1
=2 3
new4 7#
OracleDynamicParameters8 O
(O P
)P Q
;Q R
sqlQuery 
= 
string !
.! "
Format" (
(( )
sqlQuery) 1
,1 2
$str3 6
)6 7
;7 8
reportTypes   
=   
(   
await   $

connection  % /
.  / 0

QueryAsync  0 :
<  : ; 
AttendanceReportType  ; O
>  O P
(  P Q
sqlQuery  Q Y
,  Y Z
commandType  [ f
:  f g
CommandType  h s
.  s t
Text  t x
)  x y
)  y z
.  z {
ToList	  { Å
(
  Å Ç
)
  Ç É
;
  É Ñ
}!! 
return"" 
reportTypes"" 
;"" 
}## 	
}$$ 
}%% ªX
UF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Masters\BranchRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Masters& -
{ 
public 

class 
BranchRepository !
:! "
BaseRepository# 1
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
BranchRepository 
(  
IConfiguration  .
configuration/ <
)< =
:> ?
base@ D
(D E
configurationE R
)R S
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
Branch %
>% &
>& '
GetHRBranch( 3
(3 4
int4 7
employeeSlno8 D
)D E
{ 	
List 
< 
Branch 
> 
branch 
=  !
null" &
;& '
if 
( 
ApplicationSettings #
.# $
Current$ +
.+ ,
GetAllBranchesFor, =
.= >
Contains> F
(F G
employeeSlnoG S
)S T
)T U
{   
employeeSlno!! 
=!! 
$num!!  
;!!  !
}"" 
using$$ 
($$ 
var$$ 

connection$$ !
=$$" #
await$$$ )
CreateConnection$$* :
($$: ;
DbSchema$$; C
.$$C D
PORTAL$$D J
)$$J K
)$$K L
{%% #
OracleDynamicParameters&& '

parameters&&( 2
=&&3 4
new&&5 8#
OracleDynamicParameters&&9 P
(&&P Q
)&&Q R
;&&R S

parameters'' 
.'' 
Add'' 
('' 
name'' #
:''# $
$str''% 4
,''4 5
employeeSlno''6 B
,''B C
dbType''D J
:''J K
OracleMappingType''L ]
.''] ^
Int32''^ c
,''c d
	direction''e n
:''n o
ParameterDirection	''p Ç
.
''Ç É
Input
''É à
)
''à â
;
''â ä

parameters(( 
.(( 
Add(( 
((( 
name(( #
:((# $
$str((% .
,((. /
dbType((0 6
:((6 7
OracleMappingType((8 I
.((I J
	RefCursor((J S
,((S T
	direction((U ^
:((^ _
ParameterDirection((` r
.((r s
Output((s y
)((y z
;((z {
branch)) 
=)) 
()) 
await)) 

connection))  *
.))* +

QueryAsync))+ 5
<))5 6
Branch))6 <
>))< =
())= >
DatabaseProcedures))> P
.))P Q
SP_GET_HR_BRANCHES))Q c
,))c d

parameters))e o
,))o p
commandType))q |
:))| }
CommandType	))~ â
.
))â ä
StoredProcedure
))ä ô
)
))ô ö
)
))ö õ
.
))õ ú
ToList
))ú ¢
(
))¢ £
)
))£ §
;
))§ •
},, 
return-- 
branch-- 
;-- 
}.. 	
public// 
async// 
Task// 
<// 
List// 
<// 
Branch// %
>//% &
>//& ' 
GetBranchesByOfcType//( <
(//< =
int//= @
officeTypeSlno//A O
,//O P
int//Q T
employeeSlno//U a
)//a b
{00 	
List11 
<11 
Branch11 
>11 
branch11 
=11  !
null11" &
;11& '
if22 
(22 
ApplicationSettings22 "
.22" #
Current22# *
.22* +
GetAllBranchesFor22+ <
.22< =
Contains22= E
(22E F
employeeSlno22F R
)22R S
)22S T
{33 
employeeSlno44 
=44 
$num44  
;44  !
}55 
using66 
(66 
var66 

connection66 !
=66" #
await66$ )
CreateConnection66* :
(66: ;
DbSchema66; C
.66C D
PORTAL66D J
)66J K
)66K L
{77 #
OracleDynamicParameters88 '

parameters88( 2
=883 4
new885 8#
OracleDynamicParameters889 P
(88P Q
)88Q R
;88R S

parameters99 
.99 
Add99 
(99 
name99 #
:99# $
$str99% 6
,996 7
officeTypeSlno998 F
,99F G
dbType99H N
:99N O
OracleMappingType99P a
.99a b
Int3299b g
,99g h
	direction99i r
:99r s
ParameterDirection	99t Ü
.
99Ü á
Input
99á å
)
99å ç
;
99ç é

parameters:: 
.:: 
Add:: 
(:: 
name:: #
:::# $
$str::% 4
,::4 5
employeeSlno::6 B
,::B C
dbType::D J
:::J K
OracleMappingType::L ]
.::] ^
Int32::^ c
,::c d
	direction::e n
:::n o
ParameterDirection	::p Ç
.
::Ç É
Input
::É à
)
::à â
;
::â ä

parameters;; 
.;; 
Add;; 
(;; 
name;; #
:;;# $
$str;;% .
,;;. /
dbType;;0 6
:;;6 7
OracleMappingType;;8 I
.;;I J
	RefCursor;;J S
,;;S T
	direction;;U ^
:;;^ _
ParameterDirection;;` r
.;;r s
Output;;s y
);;y z
;;;z {
branch<< 
=<< 
(<< 
await<< 

connection<<  *
.<<* +

QueryAsync<<+ 5
<<<5 6
Branch<<6 <
><<< =
(<<= >
DatabaseProcedures<<> P
.<<P Q*
SP_GET_BRANCHES_BY_OFFICE_TYPE<<Q o
,<<o p

parameters<<q {
,<<{ |
commandType	<<} à
:
<<à â
CommandType
<<ä ï
.
<<ï ñ
StoredProcedure
<<ñ •
)
<<• ¶
)
<<¶ ß
.
<<ß ®
ToList
<<® Æ
(
<<Æ Ø
)
<<Ø ∞
;
<<∞ ±
}== 
return>> 
branch>> 
;>> 
}?? 	
publicAA 
asyncAA 
TaskAA 
<AA 
ListAA 
<AA 

OfficeTypeAA )
>AA) *
>AA* +
GetOfficeTypeAA, 9
(AA9 :
)AA: ;
{BB 	
ListCC 
<CC 

OfficeTypeCC 
>CC 

officeTypeCC '
=CC( )
nullCC* .
;CC. /
usingDD 
(DD 
varDD 

connectionDD !
=DD" #
awaitDD$ )
CreateConnectionDD* :
(DD: ;
DbSchemaDD; C
.DDC D
PORTALDDD J
)DDJ K
)DDK L
{EE #
OracleDynamicParametersFF '

parametersFF( 2
=FF3 4
newFF5 8#
OracleDynamicParametersFF9 P
(FFP Q
)FFQ R
;FFR S

parametersGG 
.GG 
AddGG 
(GG 
nameGG #
:GG# $
$strGG% .
,GG. /
dbTypeGG0 6
:GG6 7
OracleMappingTypeGG8 I
.GGI J
	RefCursorGGJ S
,GGS T
	directionGGU ^
:GG^ _
ParameterDirectionGG` r
.GGr s
OutputGGs y
)GGy z
;GGz {

officeTypeHH 
=HH 
(HH 
awaitHH #

connectionHH$ .
.HH. /

QueryAsyncHH/ 9
<HH9 :

OfficeTypeHH: D
>HHD E
(HHE F
DatabaseProceduresHHF X
.HHX Y
SP_GET_OFFICE_TYPEHHY k
,HHk l

parametersHHm w
,HHw x
commandType	HHy Ñ
:
HHÑ Ö
CommandType
HHÜ ë
.
HHë í
StoredProcedure
HHí °
)
HH° ¢
)
HH¢ £
.
HH£ §
ToList
HH§ ™
(
HH™ ´
)
HH´ ¨
;
HH¨ ≠
}II 
returnJJ 

officeTypeJJ 
;JJ 
}KK 	
publicOO 
asyncOO 
TaskOO 
<OO 
ListOO 
<OO 
	BranchRMSOO (
>OO( )
>OO) *
GetHRBranchRMSOO+ 9
(OO9 :
intOO: =
employeeSlnoOO> J
)OOJ K
{PP 	
ListQQ 
<QQ 
	BranchRMSQQ 
>QQ 
branchQQ "
=QQ# $
nullQQ% )
;QQ) *
ifRR 
(RR 
ApplicationSettingsRR #
.RR# $
CurrentRR$ +
.RR+ ,
GetAllBranchesForRR, =
.RR= >
ContainsRR> F
(RRF G
employeeSlnoRRG S
)RRS T
)RRT U
{SS 
employeeSlnoTT 
=TT 
$numTT  
;TT  !
}UU 
usingWW 
(WW 
varWW 

connectionWW !
=WW" #
awaitWW$ )
CreateConnectionWW* :
(WW: ;
DbSchemaWW; C
.WWC D
PORTALWWD J
)WWJ K
)WWK L
{XX #
OracleDynamicParametersYY '

parametersYY( 2
=YY3 4
newYY5 8#
OracleDynamicParametersYY9 P
(YYP Q
)YYQ R
;YYR S

parametersZZ 
.ZZ 
AddZZ 
(ZZ 
nameZZ #
:ZZ# $
$strZZ% 4
,ZZ4 5
employeeSlnoZZ6 B
,ZZB C
dbTypeZZD J
:ZZJ K
OracleMappingTypeZZL ]
.ZZ] ^
Int32ZZ^ c
,ZZc d
	directionZZe n
:ZZn o
ParameterDirection	ZZp Ç
.
ZZÇ É
Input
ZZÉ à
)
ZZà â
;
ZZâ ä

parameters[[ 
.[[ 
Add[[ 
([[ 
name[[ #
:[[# $
$str[[% .
,[[. /
dbType[[0 6
:[[6 7
OracleMappingType[[8 I
.[[I J
	RefCursor[[J S
,[[S T
	direction[[U ^
:[[^ _
ParameterDirection[[` r
.[[r s
Output[[s y
)[[y z
;[[z {
branch\\ 
=\\ 
(\\ 
await\\ 

connection\\  *
.\\* +

QueryAsync\\+ 5
<\\5 6
	BranchRMS\\6 ?
>\\? @
(\\@ A
DatabaseProcedures\\A S
.\\S T#
SP_GET_HRR_BRANCHES_RMS\\T k
,\\k l

parameters\\m w
,\\w x
commandType	\\y Ñ
:
\\Ñ Ö
CommandType
\\Ü ë
.
\\ë í
StoredProcedure
\\í °
)
\\° ¢
)
\\¢ £
.
\\£ §
ToList
\\§ ™
(
\\™ ´
)
\\´ ¨
;
\\¨ ≠
}__ 
return`` 
branch`` 
;`` 
}aa 	
}cc 
}dd ˇ
[F:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Masters\LeaveDayTypeRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Masters& -
{ 
public 

class "
LeaveDayTypeRepository '
:( )
BaseRepository* 8
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public "
LeaveDayTypeRepository %
(% &
IConfiguration& 4
configuration5 B
)B C
:D E
baseF J
(J K
configurationK X
)X Y
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
LeaveDayType +
>+ ,
>, -
GetLeaveDayTypes. >
(> ?
)? @
{ 	
List 
< 
LeaveDayType 
> 
leaveDayTypes ,
=- .
null/ 3
;3 4
string   
sqlQuery   
=   
$str	   Æ
;
  Æ Ø
using!! 
(!! 
var!! 

connection!! !
=!!" #
await!!$ )
CreateConnection!!* :
(!!: ;
DbSchema!!; C
.!!C D
PORTAL!!D J
)!!J K
)!!K L
{"" #
OracleDynamicParameters## '
	parmeters##( 1
=##2 3
new##4 7#
OracleDynamicParameters##8 O
(##O P
)##P Q
;##Q R
sqlQuery$$ 
=$$ 
string$$ !
.$$! "
Format$$" (
($$( )
sqlQuery$$) 1
,$$1 2
$str$$3 6
)$$6 7
;$$7 8
leaveDayTypes%% 
=%% 
(%%  !
await%%! &

connection%%' 1
.%%1 2

QueryAsync%%2 <
<%%< =
LeaveDayType%%= I
>%%I J
(%%J K
sqlQuery%%K S
,%%S T
commandType%%U `
:%%` a
CommandType%%b m
.%%m n
Text%%n r
)%%r s
)%%s t
.%%t u
ToList%%u {
(%%{ |
)%%| }
;%%} ~
}&& 
return'' 
leaveDayTypes''  
;''  !
}(( 	
}** 
}++ Ò
ZF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Masters\LeaveStatusRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Masters& -
{ 
public 

class !
LeaveStatusRepository &
:' (
BaseRepository) 7
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public !
LeaveStatusRepository $
($ %
IConfiguration% 3
configuration4 A
)A B
:C D
baseE I
(I J
configurationJ W
)W X
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
LeaveStatus *
>* +
>+ ,
GetLeaveStatus- ;
(; <
)< =
{ 	
List 
< 
LeaveStatus 
> 
leaveStatus )
=* +
null, 0
;0 1
string   
sqlQuery   
=   
$str	   ¶
;
  ¶ ß
using!! 
(!! 
var!! 

connection!! !
=!!" #
await!!$ )
CreateConnection!!* :
(!!: ;
DbSchema!!; C
.!!C D
PORTAL!!D J
)!!J K
)!!K L
{"" #
OracleDynamicParameters## '
	parmeters##( 1
=##2 3
new##4 7#
OracleDynamicParameters##8 O
(##O P
)##P Q
;##Q R
sqlQuery$$ 
=$$ 
string$$ !
.$$! "
Format$$" (
($$( )
sqlQuery$$) 1
,$$1 2
$str$$3 6
)$$6 7
;$$7 8
leaveStatus%% 
=%% 
(%% 
await%% $

connection%%% /
.%%/ 0

QueryAsync%%0 :
<%%: ;
LeaveStatus%%; F
>%%F G
(%%G H
sqlQuery%%H P
,%%P Q
commandType%%R ]
:%%] ^
CommandType%%_ j
.%%j k
Text%%k o
)%%o p
)%%p q
.%%q r
ToList%%r x
(%%x y
)%%y z
;%%z {
}&& 
return'' 
leaveStatus'' 
;'' 
}(( 	
})) 
}** Ñí
XF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Masters\LeaveTypeRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Masters& -
{ 
public 

class 
LeaveTypeRepository $
:% &
BaseRepository' 5
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
LeaveTypeRepository "
(" #
IConfiguration# 1
configuration2 ?
)? @
:A B
baseC G
(G H
configurationH U
)U V
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public   
async   
Task   
<   
List   
<   
	LeaveType   (
>  ( )
>  ) *!
GetAssignedLeaveTypes  + @
(  @ A
int  A D
employeeSlno  E Q
)  Q R
{!! 	
List"" 
<"" 
	LeaveType"" 
>"" 

leaveTypes"" &
=""' (
null"") -
;""- .
List## 
<## 
LeaveTypeReason##  
>##  !
leaveTypeReason##" 1
=##2 3
null##4 8
;##8 9
using$$ 
($$ 
var$$ 

connection$$ !
=$$" #
await$$$ )
base$$* .
.$$. /
CreateConnection$$/ ?
($$? @
DbSchema$$@ H
.$$H I
PORTAL$$I O
)$$O P
)$$P Q
{%% #
OracleDynamicParameters&& '

parameters&&( 2
=&&3 4
new&&5 8#
OracleDynamicParameters&&9 P
(&&P Q
)&&Q R
;&&R S

parameters'' 
.'' 
Add'' 
('' 
name'' #
:''# $
$str''% 4
,''4 5
employeeSlno''6 B
,''B C
dbType''D J
:''J K
OracleMappingType''L ]
.''] ^
Int32''^ c
,''c d
	direction''e n
:''n o
ParameterDirection	''p Ç
.
''Ç É
Input
''É à
)
''à â
;
''â ä

parameters(( 
.(( 
Add(( 
((( 
name(( #
:((# $
$str((% .
,((. /
dbType((0 6
:((6 7
OracleMappingType((8 I
.((I J
	RefCursor((J S
,((S T
	direction((U ^
:((^ _
ParameterDirection((` r
.((r s
Output((s y
)((y z
;((z {

leaveTypes)) 
=)) 
()) 
await)) #

connection))$ .
.)). /

QueryAsync))/ 9
<))9 :
	LeaveType)): C
>))C D
())D E
DatabaseProcedures))E W
.))W X'
SP_GET_EMPLOYEE_LEAVE_TYPES))X s
,))s t

parameters))u 
,	)) Ä
commandType
))Å å
:
))å ç
CommandType
))é ô
.
))ô ö
StoredProcedure
))ö ©
)
))© ™
)
))™ ´
.
))´ ¨
ToList
))¨ ≤
(
))≤ ≥
)
))≥ ¥
;
))¥ µ

leaveTypes++ 
=++ 
await++ "
GetLeaveTypeReasons++# 6
(++6 7

leaveTypes++7 A
)++A B
;++B C
}-- 
string11 
gender11 
=11 
await11 !
GetEmpGender11" .
(11. /
employeeSlno11/ ;
)11; <
;11< =
bool22 
	isMarried22 
=22 
await22 "!
CheckForMaritalStatus22# 8
(228 9
employeeSlno229 E
)22E F
;22F G
int33 
marriageCount33 
=33 
await33  %"
CheckForExistingLeaves33& <
(33< =
employeeSlno33= I
,33I J
LeaveTypeNames33K Y
.33Y Z
MARRIAGE_LEAVE33Z h
.33h i
ToInt32OrDefault33i y
(33y z
)33z {
,33{ |
LeaveStatusNames	33} ç
.
33ç é 
PendingAndApproval
33é †
.
33† °
ToInt32OrDefault
33° ±
(
33± ≤
)
33≤ ≥
)
33≥ ¥
;
33¥ µ
int55 
sclCount55 
=55 
$num55 
;55 
if66 
(66 

leaveTypes66 
.66 
Where66  
(66  !
x66! "
=>66# %
x66& '
.66' (
LeaveTypeId66( 3
==664 6
LeaveTypeNames667 E
.66E F 
SPECIAL_CASUAL_LEAVE66F Z
.66Z [
ToInt32OrDefault66[ k
(66k l
)66l m
)66m n
.66n o
ToList66o u
(66u v
)66v w
.66w x
Count66x }
>66~ 
$num
66Ä Å
)
66Ç É
{77 
sclCount88 
=88 
await88  "
CheckForExistingLeaves88! 7
(887 8
employeeSlno888 D
,88D E
LeaveTypeNames88F T
.88T U 
SPECIAL_CASUAL_LEAVE88U i
.88i j
ToInt32OrDefault88j z
(88z {
)88{ |
,88| }
LeaveStatusNames	88~ é
.
88é è 
PendingAndApproval
88è °
.
88° ¢
ToInt32OrDefault
88¢ ≤
(
88≤ ≥
)
88≥ ¥
)
88¥ µ
;
88µ ∂
}99 
int:: 
sslCount:: 
=:: 
$num:: 
;:: 
if;; 
(;; 

leaveTypes;; 
.;; 
Where;;  
(;;  !
x;;! "
=>;;# %
x;;& '
.;;' (
LeaveTypeId;;( 3
==;;4 6
LeaveTypeNames;;7 E
.;;E F
SPECIAL_SICK_LEAVE;;F X
.;;X Y
ToInt32OrDefault;;Y i
(;;i j
);;j k
);;k l
.;;l m
ToList;;m s
(;;s t
);;t u
.;;u v
Count;;v {
>;;| }
$num;;~ 
)	;; Ä
{<< 
sslCount== 
=== 
await==  "
CheckForExistingLeaves==! 7
(==7 8
employeeSlno==8 D
,==D E
LeaveTypeNames==F T
.==T U
SPECIAL_SICK_LEAVE==U g
.==g h
ToInt32OrDefault==h x
(==x y
)==y z
,==z {
LeaveStatusNames	==| å
.
==å ç 
PendingAndApproval
==ç ü
.
==ü †
ToInt32OrDefault
==† ∞
(
==∞ ±
)
==± ≤
)
==≤ ≥
;
==≥ ¥
}>> 
int?? 
bereavementCount??  
=??! "
$num??# $
;??$ %
if@@ 
(@@ 

leaveTypes@@ 
.@@ 
Where@@  
(@@  !
x@@! "
=>@@# %
x@@& '
.@@' (
LeaveTypeId@@( 3
==@@4 6
LeaveTypeNames@@7 E
.@@E F
BEREAVEMENT_LEAVE@@F W
.@@W X
ToInt32OrDefault@@X h
(@@h i
)@@i j
)@@j k
.@@k l
ToList@@l r
(@@r s
)@@s t
.@@t u
Count@@u z
>@@{ |
$num@@} ~
)@@~ 
{AA 
bereavementCountBB  
=BB! "
awaitBB# ("
CheckForExistingLeavesBB) ?
(BB? @
employeeSlnoBB@ L
,BBL M
LeaveTypeNamesBBN \
.BB\ ]
BEREAVEMENT_LEAVEBB] n
.BBn o
ToInt32OrDefaultBBo 
(	BB Ä
)
BBÄ Å
,
BBÅ Ç
LeaveStatusNames
BBÉ ì
.
BBì î 
PendingAndApproval
BBî ¶
.
BB¶ ß
ToInt32OrDefault
BBß ∑
(
BB∑ ∏
)
BB∏ π
)
BBπ ∫
;
BB∫ ª
}CC 
ifDD 
(DD 
genderDD 
==DD 
$strDD 
)DD 
{EE 

leaveTypesFF 
=FF 

leaveTypesFF '
.FF' (
WhereFF( -
(FF- .
xFF. /
=>FF0 2
(FF3 4
xFF4 5
.FF5 6
LeaveTypeIdFF6 A
!=FFB D
LeaveTypeNamesFFE S
.FFS T
PATERNITY_LEAVEFFT c
.FFc d
ToInt32OrDefaultFFd t
(FFt u
)FFu v
)FFv w
)FFw x
.FFx y
ToListFFy 
(	FF Ä
)
FFÄ Å
;
FFÅ Ç
}GG 
elseHH 
ifHH 
(HH 
genderHH 
==HH 
$strHH "
)HH" #
{II 

leaveTypesJJ 
=JJ 

leaveTypesJJ '
.JJ' (
WhereJJ( -
(JJ- .
xJJ. /
=>JJ0 2
(JJ3 4
xJJ4 5
.JJ5 6
LeaveTypeIdJJ6 A
!=JJB D
LeaveTypeNamesJJE S
.JJS T
MATERNITY_LEAVEJJT c
.JJc d
ToInt32OrDefaultJJd t
(JJt u
)JJu v
)JJv w
)JJw x
.JJx y
ToListJJy 
(	JJ Ä
)
JJÄ Å
;
JJÅ Ç
}KK 
ifLL 
(LL 
	isMarriedLL 
||LL 
marriageCountLL *
>=LL+ -
$numLL. /
)LL/ 0
{MM 

leaveTypesNN 
=NN 

leaveTypesNN '
.NN' (
WhereNN( -
(NN- .
xNN. /
=>NN0 2
xNN3 4
.NN4 5
LeaveTypeIdNN5 @
!=NNA C
LeaveTypeNamesNND R
.NNR S
MARRIAGE_LEAVENNS a
.NNa b
ToInt32OrDefaultNNb r
(NNr s
)NNs t
)NNt u
.NNu v
ToListNNv |
(NN| }
)NN} ~
;NN~ 
boolOO 
hasChildrenOO  
=OO! "
awaitOO# (
CheckForChildrenOO) 9
(OO9 :
employeeSlnoOO: F
)OOF G
;OOG H
ifRR 
(RR 
hasChildrenRR 
)RR  
{SS 
ifTT 
(TT 
genderTT 
==TT !
$strTT" %
)TT% &
{UU 

leaveTypesVV "
=VV# $

leaveTypesVV% /
.VV/ 0
WhereVV0 5
(VV5 6
xVV6 7
=>VV8 :
(VV; <
xVV< =
.VV= >
LeaveTypeIdVV> I
!=VVJ L
LeaveTypeNamesVVM [
.VV[ \
PATERNITY_LEAVEVV\ k
.VVk l
ToInt32OrDefaultVVl |
(VV| }
)VV} ~
)VV~ 
)	VV Ä
.
VVÄ Å
ToList
VVÅ á
(
VVá à
)
VVà â
;
VVâ ä
}WW 
elseXX 
ifXX 
(XX 
genderXX #
==XX$ &
$strXX' *
)XX* +
{YY 

leaveTypesZZ "
=ZZ# $

leaveTypesZZ% /
.ZZ/ 0
WhereZZ0 5
(ZZ5 6
xZZ6 7
=>ZZ8 :
(ZZ; <
xZZ< =
.ZZ= >
LeaveTypeIdZZ> I
!=ZZJ L
LeaveTypeNamesZZM [
.ZZ[ \
MATERNITY_LEAVEZZ\ k
.ZZk l
ToInt32OrDefaultZZl |
(ZZ| }
)ZZ} ~
)ZZ~ 
)	ZZ Ä
.
ZZÄ Å
ToList
ZZÅ á
(
ZZá à
)
ZZà â
;
ZZâ ä
}[[ 
}\\ 
}]] 
else^^ 
{__ 

leaveTypes`` 
=`` 

leaveTypes`` '
.``' (
Where``( -
(``- .
x``. /
=>``0 2
(``3 4
x``4 5
.``5 6
LeaveTypeId``6 A
!=``B D
LeaveTypeNames``E S
.``S T
PATERNITY_LEAVE``T c
.``c d
ToInt32OrDefault``d t
(``t u
)``u v
)``v w
)``w x
.``x y
ToList``y 
(	`` Ä
)
``Ä Å
;
``Å Ç

leaveTypesaa 
=aa 

leaveTypesaa '
.aa' (
Whereaa( -
(aa- .
xaa. /
=>aa0 2
(aa3 4
xaa4 5
.aa5 6
LeaveTypeIdaa6 A
!=aaB D
LeaveTypeNamesaaE S
.aaS T
MATERNITY_LEAVEaaT c
.aac d
ToInt32OrDefaultaad t
(aat u
)aau v
)aav w
)aaw x
.aax y
ToListaay 
(	aa Ä
)
aaÄ Å
;
aaÅ Ç
}bb 
ifcc 
(cc 
sclCountcc 
>=cc 
$numcc 
||cc  
!cc! "
	isMarriedcc" +
)cc+ ,
{dd 

leaveTypesee 
=ee 

leaveTypesee '
.ee' (
Whereee( -
(ee- .
xee. /
=>ee0 2
(ee3 4
xee4 5
.ee5 6
LeaveTypeIdee6 A
!=eeB D
LeaveTypeNameseeE S
.eeS T 
SPECIAL_CASUAL_LEAVEeeT h
.eeh i
ToInt32OrDefaulteei y
(eey z
)eez {
)ee{ |
)ee| }
.ee} ~
ToList	ee~ Ñ
(
eeÑ Ö
)
eeÖ Ü
;
eeÜ á
}ff 
ifgg 
(gg 
sslCountgg 
>=gg 
$numgg 
)gg 
{hh 

leaveTypesii 
=ii 

leaveTypesii '
.ii' (
Whereii( -
(ii- .
xii. /
=>ii0 2
(ii3 4
xii4 5
.ii5 6
LeaveTypeIdii6 A
!=iiB D
LeaveTypeNamesiiE S
.iiS T
SPECIAL_SICK_LEAVEiiT f
.iif g
ToInt32OrDefaultiig w
(iiw x
)iix y
)iiy z
)iiz {
.ii{ |
ToList	ii| Ç
(
iiÇ É
)
iiÉ Ñ
;
iiÑ Ö
}jj 
ifkk 
(kk 
bereavementCountkk  
>=kk! #
$numkk$ %
)kk% &
{ll 

leaveTypesmm 
=mm 

leaveTypesmm '
.mm' (
Wheremm( -
(mm- .
xmm. /
=>mm0 2
(mm3 4
xmm4 5
.mm5 6
LeaveTypeIdmm6 A
!=mmB D
LeaveTypeNamesmmE S
.mmS T
BEREAVEMENT_LEAVEmmT e
.mme f
ToInt32OrDefaultmmf v
(mmv w
)mmw x
)mmx y
)mmy z
.mmz {
ToList	mm{ Å
(
mmÅ Ç
)
mmÇ É
;
mmÉ Ñ
}nn 
varoo 
summerVacationoo 
=oo  

leaveTypesoo! +
.oo+ ,
Whereoo, 1
(oo1 2
xoo2 3
=>oo4 6
(oo7 8
xoo8 9
.oo9 :
LeaveTypeIdoo: E
==ooF H
LeaveTypeNamesooI W
.ooW X
SUMMER_VACATIONooX g
.oog h
ToInt32OrDefaultooh x
(oox y
)ooy z
)ooz {
)oo{ |
.oo| }
FirstOrDefault	oo} ã
(
ooã å
)
ooå ç
;
ooç é
ifpp 
(pp 
summerVacationpp 
!=pp !
nullpp" &
&&pp' )
(pp* +
summerVacationpp+ 9
.pp9 :
LeaveBalancepp: F
<=ppG I
$numppJ K
||ppL N
summerVacationppO ]
.pp] ^
DateValidFrompp^ k
>ppl m
DateTimeppn v
.ppv w
Nowppw z
.ppz {
Datepp{ 
||
ppÄ Ç
summerVacation
ppÉ ë
.
ppë í
DateValidUntil
ppí †
<
pp° ¢
DateTime
pp£ ´
.
pp´ ¨
Now
pp¨ Ø
.
ppØ ∞
Date
pp∞ ¥
)
pp¥ µ
)
ppµ ∂
{qq 

leaveTypesrr 
=rr 

leaveTypesrr '
.rr' (
Whererr( -
(rr- .
xrr. /
=>rr0 2
(rr3 4
xrr4 5
.rr5 6
LeaveTypeIdrr6 A
!=rrB D
LeaveTypeNamesrrE S
.rrS T
SUMMER_VACATIONrrT c
.rrc d
ToInt32OrDefaultrrd t
(rrt u
)rru v
)rrv w
)rrw x
.rrx y
ToListrry 
(	rr Ä
)
rrÄ Å
;
rrÅ Ç
}ss 
vartt 
winterVacationtt 
=tt  

leaveTypestt! +
.tt+ ,
Wherett, 1
(tt1 2
xtt2 3
=>tt4 6
(tt7 8
xtt8 9
.tt9 :
LeaveTypeIdtt: E
==ttF H
LeaveTypeNamesttI W
.ttW X
WINTER_VACATIONttX g
.ttg h
ToInt32OrDefaulttth x
(ttx y
)tty z
)ttz {
)tt{ |
.tt| }
FirstOrDefault	tt} ã
(
ttã å
)
ttå ç
;
ttç é
ifuu 
(uu 
winterVacationuu 
!=uu !
nulluu" &
&&uu' )
(uu* +
winterVacationuu+ 9
.uu9 :
LeaveBalanceuu: F
<=uuG I
$numuuJ K
||uuL N
winterVacationuuO ]
.uu] ^
DateValidFromuu^ k
>uul m
DateTimeuun v
.uuv w
Nowuuw z
.uuz {
Dateuu{ 
||
uuÄ Ç
winterVacation
uuÉ ë
.
uuë í
DateValidUntil
uuí †
<
uu° ¢
DateTime
uu£ ´
.
uu´ ¨
Now
uu¨ Ø
.
uuØ ∞
Date
uu∞ ¥
)
uu¥ µ
)
uuµ ∂
{vv 

leaveTypesww 
=ww 

leaveTypesww '
.ww' (
Whereww( -
(ww- .
xww. /
=>ww0 2
(ww3 4
xww4 5
.ww5 6
LeaveTypeIdww6 A
!=wwB D
LeaveTypeNameswwE S
.wwS T
WINTER_VACATIONwwT c
.wwc d
ToInt32OrDefaultwwd t
(wwt u
)wwu v
)wwv w
)www x
.wwx y
ToListwwy 
(	ww Ä
)
wwÄ Å
;
wwÅ Ç
}xx 
returnyy 

leaveTypesyy 
;yy 
}zz 	
public|| 
async|| 
Task|| 
<|| 
List|| 
<|| 
	LeaveType|| (
>||( )
>||) *
GetLeaveTypeReasons||+ >
(||> ?
List||? C
<||C D
	LeaveType||D M
>||M N

leaveTypes||O Y
)||Y Z
{}} 	
List~~ 
<~~ 
LeaveTypeReason~~  
>~~  !
leaveTypeReason~~" 1
=~~2 3
null~~4 8
;~~8 9
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{
ÄÄ %
OracleDynamicParameters
ÅÅ '

parameters
ÅÅ( 2
=
ÅÅ3 4
new
ÅÅ5 8%
OracleDynamicParameters
ÅÅ9 P
(
ÅÅP Q
)
ÅÅQ R
;
ÅÅR S
foreach
ÉÉ 
(
ÉÉ 
var
ÉÉ 
item
ÉÉ !
in
ÉÉ" $

leaveTypes
ÉÉ% /
)
ÉÉ/ 0
{
ÑÑ 
leaveTypeReason
ÖÖ #
=
ÖÖ$ %
null
ÖÖ& *
;
ÖÖ* +
if
ÜÜ 
(
ÜÜ 
item
ÜÜ 
.
ÜÜ 
ReasonCount
ÜÜ (
>
ÜÜ) *
$num
ÜÜ+ ,
)
ÜÜ, -
{
áá 

parameters
àà "
.
àà" #
Add
àà# &
(
àà& '
name
àà' +
:
àà+ ,
$str
àà- ;
,
àà; <
item
àà= A
.
ààA B
LeaveTypeId
ààB M
,
ààM N
dbType
ààO U
:
ààU V
OracleMappingType
ààW h
.
ààh i
Int32
àài n
,
ààn o
	direction
ààp y
:
àày z!
ParameterDirectionàà{ ç
.ààç é
Inputààé ì
)ààì î
;ààî ï

parameters
ââ "
.
ââ" #
Add
ââ# &
(
ââ& '
name
ââ' +
:
ââ+ ,
$str
ââ- 6
,
ââ6 7
dbType
ââ8 >
:
ââ> ?
OracleMappingType
ââ@ Q
.
ââQ R
	RefCursor
ââR [
,
ââ[ \
	direction
ââ] f
:
ââf g 
ParameterDirection
ââh z
.
ââz {
Outputââ{ Å
)ââÅ Ç
;ââÇ É
leaveTypeReason
ää '
=
ää( )
(
ää* +
await
ää+ 0

connection
ää1 ;
.
ää; <

QueryAsync
ää< F
<
ääF G
LeaveTypeReason
ääG V
>
ääV W
(
ääW X 
DatabaseProcedures
ääX j
.
ääj k"
SP_GET_LEAVE_REASONS
ääk 
,ää Ä

parametersääÅ ã
,ääã å
commandTypeääç ò
:ääò ô
CommandTypeääö •
.ää• ¶
StoredProcedureää¶ µ
)ääµ ∂
)ää∂ ∑
.ää∑ ∏
ToListää∏ æ
(ääæ ø
)ääø ¿
;ää¿ ¡
}
åå 
item
çç 
.
çç 
LeaveTypeReasons
çç )
=
çç* +
leaveTypeReason
çç, ;
;
çç; <
}
éé 
}
èè 
return
ëë 

leaveTypes
ëë 
;
ëë 
}
íí 	
public
ìì 
async
ìì 
Task
ìì 
<
ìì 
List
ìì 
<
ìì 
	LeaveType
ìì (
>
ìì( )
>
ìì) *
GetLeaveTypes
ìì+ 8
(
ìì8 9
)
ìì9 :
{
îî 	
List
ïï 
<
ïï 
	LeaveType
ïï 
>
ïï 

leaveTypes
ïï &
=
ïï' (
null
ïï) -
;
ïï- .
string
ññ 
sqlQuery
ññ 
=
ññ 
$strññ »
;ññ» …
using
óó 
(
óó 
var
óó 

connection
óó !
=
óó" #
await
óó$ )
CreateConnection
óó* :
(
óó: ;
DbSchema
óó; C
.
óóC D
PORTAL
óóD J
)
óóJ K
)
óóK L
{
òò %
OracleDynamicParameters
ôô '
	parmeters
ôô( 1
=
ôô2 3
new
ôô4 7%
OracleDynamicParameters
ôô8 O
(
ôôO P
)
ôôP Q
;
ôôQ R
sqlQuery
öö 
=
öö 
string
öö !
.
öö! "
Format
öö" (
(
öö( )
sqlQuery
öö) 1
,
öö1 2
$str
öö3 6
)
öö6 7
;
öö7 8

leaveTypes
õõ 
=
õõ 
(
õõ 
await
õõ #

connection
õõ$ .
.
õõ. /

QueryAsync
õõ/ 9
<
õõ9 :
	LeaveType
õõ: C
>
õõC D
(
õõD E
sqlQuery
õõE M
,
õõM N
commandType
õõO Z
:
õõZ [
CommandType
õõ\ g
.
õõg h
Text
õõh l
)
õõl m
)
õõm n
.
õõn o
ToList
õõo u
(
õõu v
)
õõv w
;
õõw x
}
úú 
return
ùù 

leaveTypes
ùù 
;
ùù 
}
ûû 	
private
†† 
async
†† 
Task
†† 
<
†† 
bool
†† 
>
††  
CheckForChildren
††! 1
(
††1 2
int
††2 5
employeeSlno
††6 B
)
††B C
{
°° 	
int
¢¢ 

childCount
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
bool
££ 
hasChildren
££ 
=
££ 
false
££ $
;
££$ %
using
•• 
(
•• 
var
•• 

connection
•• !
=
••" #
await
••$ )
base
••* .
.
••. /
CreateConnection
••/ ?
(
••? @
DbSchema
••@ H
.
••H I
PORTAL
••I O
)
••O P
)
••P Q
{
¶¶ %
OracleDynamicParameters
ßß '

parameters
ßß( 2
=
ßß3 4
new
ßß5 8%
OracleDynamicParameters
ßß9 P
(
ßßP Q
)
ßßQ R
;
ßßR S

parameters
®® 
.
®® 
Add
®® 
(
®® 
name
®® #
:
®®# $
$str
®®% 4
,
®®4 5
employeeSlno
®®6 B
,
®®B C
dbType
®®D J
:
®®J K
OracleMappingType
®®L ]
.
®®] ^
Int32
®®^ c
,
®®c d
	direction
®®e n
:
®®n o!
ParameterDirection®®p Ç
.®®Ç É
Input®®É à
)®®à â
;®®â ä

parameters
©© 
.
©© 
Add
©© 
(
©© 
name
©© #
:
©©# $
$str
©©% 2
,
©©2 3
dbType
©©4 :
:
©©: ;
OracleMappingType
©©< M
.
©©M N
Int32
©©N S
,
©©S T
	direction
©©U ^
:
©©^ _ 
ParameterDirection
©©` r
.
©©r s
Output
©©s y
)
©©y z
;
©©z {
await
™™ 

connection
™™  
.
™™  !
ExecuteAsync
™™! -
(
™™- . 
DatabaseProcedures
™™. @
.
™™@ A#
SP_CHECK_HAS_CHILDREN
™™A V
,
™™V W

parameters
™™X b
,
™™b c
commandType
™™d o
:
™™o p
CommandType
™™q |
.
™™| }
StoredProcedure™™} å
)™™å ç
;™™ç é

childCount
´´ 
=
´´ 

parameters
´´ '
.
´´' (
Get
´´( +
<
´´+ ,
int
´´, /
>
´´/ 0
(
´´0 1
$str
´´1 >
)
´´> ?
;
´´? @
}
¨¨ 
int
≠≠ 
pChildCount
≠≠ 
=
≠≠ 
await
≠≠ #$
CheckForExistingLeaves
≠≠$ :
(
≠≠: ;
employeeSlno
≠≠; G
,
≠≠G H
LeaveTypeNames
≠≠I W
.
≠≠W X
PATERNITY_LEAVE
≠≠X g
.
≠≠g h
ToInt32OrDefault
≠≠h x
(
≠≠x y
)
≠≠y z
,
≠≠z {
LeaveStatusNames≠≠| å
.≠≠å ç"
PendingAndApproval≠≠ç ü
.≠≠ü † 
ToInt32OrDefault≠≠† ∞
(≠≠∞ ±
)≠≠± ≤
)≠≠≤ ≥
;≠≠≥ ¥
int
ÆÆ 
mChildCount
ÆÆ 
=
ÆÆ 
await
ÆÆ #$
CheckForExistingLeaves
ÆÆ$ :
(
ÆÆ: ;
employeeSlno
ÆÆ; G
,
ÆÆG H
LeaveTypeNames
ÆÆI W
.
ÆÆW X
MATERNITY_LEAVE
ÆÆX g
.
ÆÆg h
ToInt32OrDefault
ÆÆh x
(
ÆÆx y
)
ÆÆy z
,
ÆÆz {
LeaveStatusNamesÆÆ| å
.ÆÆå ç"
PendingAndApprovalÆÆç ü
.ÆÆü † 
ToInt32OrDefaultÆÆ† ∞
(ÆÆ∞ ±
)ÆÆ± ≤
)ÆÆ≤ ≥
;ÆÆ≥ ¥
if
ØØ 
(
ØØ 
pChildCount
ØØ 
>=
ØØ 
$num
ØØ  
||
ØØ! #
mChildCount
ØØ$ /
>=
ØØ0 2
$num
ØØ3 4
||
ØØ5 7

childCount
ØØ8 B
>=
ØØC E
$num
ØØF G
||
ØØH J
(
ØØK L

childCount
ØØL V
>=
ØØW Y
$num
ØØZ [
&&
ØØ\ ^
(
ØØ_ `
pChildCount
ØØ` k
>=
ØØl n
$num
ØØo p
||
ØØq s
mChildCount
ØØt 
>=ØØÄ Ç
$numØØÉ Ñ
)ØØÑ Ö
)ØØÖ Ü
)ØØÜ á
{
∞∞ 
hasChildren
±± 
=
±± 
true
±± "
;
±±" #
}
≤≤ 
return
¥¥ 
hasChildren
¥¥ 
;
¥¥ 
}
µµ 	
private
∂∂ 
async
∂∂ 
Task
∂∂ 
<
∂∂ 
bool
∂∂ 
>
∂∂  #
CheckForMaritalStatus
∂∂! 6
(
∂∂6 7
int
∂∂7 :
employeeSlno
∂∂; G
)
∂∂G H
{
∑∑ 	
int
∏∏ 
marriageCount
∏∏ 
=
∏∏ 
$num
∏∏  !
;
∏∏! "
bool
ππ 
	isMarried
ππ 
=
ππ 
false
ππ "
;
ππ" #
using
ªª 
(
ªª 
var
ªª 

connection
ªª !
=
ªª" #
await
ªª$ )
base
ªª* .
.
ªª. /
CreateConnection
ªª/ ?
(
ªª? @
DbSchema
ªª@ H
.
ªªH I
PORTAL
ªªI O
)
ªªO P
)
ªªP Q
{
ºº %
OracleDynamicParameters
ΩΩ '

parameters
ΩΩ( 2
=
ΩΩ3 4
new
ΩΩ5 8%
OracleDynamicParameters
ΩΩ9 P
(
ΩΩP Q
)
ΩΩQ R
;
ΩΩR S

parameters
ææ 
.
ææ 
Add
ææ 
(
ææ 
name
ææ #
:
ææ# $
$str
ææ% 4
,
ææ4 5
employeeSlno
ææ6 B
,
ææB C
dbType
ææD J
:
ææJ K
OracleMappingType
ææL ]
.
ææ] ^
Int32
ææ^ c
,
ææc d
	direction
ææe n
:
ææn o!
ParameterDirectionææp Ç
.ææÇ É
InputææÉ à
)ææà â
;ææâ ä

parameters
øø 
.
øø 
Add
øø 
(
øø 
name
øø #
:
øø# $
$str
øø% 1
,
øø1 2
dbType
øø3 9
:
øø9 :
OracleMappingType
øø; L
.
øøL M
Int32
øøM R
,
øøR S
	direction
øøT ]
:
øø] ^ 
ParameterDirection
øø_ q
.
øøq r
Output
øør x
)
øøx y
;
øøy z
await
¿¿ 

connection
¿¿  
.
¿¿  !
ExecuteAsync
¿¿! -
(
¿¿- . 
DatabaseProcedures
¿¿. @
.
¿¿@ A%
SP_CHECK_MARITAL_STATUS
¿¿A X
,
¿¿X Y

parameters
¿¿Z d
,
¿¿d e
commandType
¿¿f q
:
¿¿q r
CommandType
¿¿s ~
.
¿¿~ 
StoredProcedure¿¿ é
)¿¿é è
;¿¿è ê
marriageCount
¡¡ 
=
¡¡ 

parameters
¡¡  *
.
¡¡* +
Get
¡¡+ .
<
¡¡. /
int
¡¡/ 2
>
¡¡2 3
(
¡¡3 4
$str
¡¡4 @
)
¡¡@ A
;
¡¡A B
}
¬¬ 
	isMarried
√√ 
=
√√ 
marriageCount
√√ %
>
√√& '
$num
√√( )
;
√√) *
return
ƒƒ 
	isMarried
ƒƒ 
;
ƒƒ 
}
≈≈ 	
private
∆∆ 
async
∆∆ 
Task
∆∆ 
<
∆∆ 
int
∆∆ 
>
∆∆ $
CheckForExistingLeaves
∆∆  6
(
∆∆6 7
int
∆∆7 :
employeeSlno
∆∆; G
,
∆∆G H
int
∆∆I L
leaveTypeId
∆∆M X
,
∆∆X Y
int
∆∆Z ]
leaveStatusId
∆∆^ k
)
∆∆k l
{
«« 	
int
»» 

leaveCount
»» 
=
»» 
$num
»» 
;
»» 
using
…… 
(
…… 
var
…… 

connection
…… !
=
……" #
await
……$ )
base
……* .
.
……. /
CreateConnection
……/ ?
(
……? @
DbSchema
……@ H
.
……H I
PORTAL
……I O
)
……O P
)
……P Q
{
   %
OracleDynamicParameters
ÀÀ '

parameters
ÀÀ( 2
=
ÀÀ3 4
new
ÀÀ5 8%
OracleDynamicParameters
ÀÀ9 P
(
ÀÀP Q
)
ÀÀQ R
;
ÀÀR S

parameters
ÃÃ 
.
ÃÃ 
Add
ÃÃ 
(
ÃÃ 
name
ÃÃ #
:
ÃÃ# $
$str
ÃÃ% 4
,
ÃÃ4 5
employeeSlno
ÃÃ6 B
,
ÃÃB C
dbType
ÃÃD J
:
ÃÃJ K
OracleMappingType
ÃÃL ]
.
ÃÃ] ^
Int32
ÃÃ^ c
,
ÃÃc d
	direction
ÃÃe n
:
ÃÃn o!
ParameterDirectionÃÃp Ç
.ÃÃÇ É
InputÃÃÉ à
)ÃÃà â
;ÃÃâ ä

parameters
ÕÕ 
.
ÕÕ 
Add
ÕÕ 
(
ÕÕ 
name
ÕÕ #
:
ÕÕ# $
$str
ÕÕ% 5
,
ÕÕ5 6
leaveTypeId
ÕÕ7 B
,
ÕÕB C
dbType
ÕÕD J
:
ÕÕJ K
OracleMappingType
ÕÕL ]
.
ÕÕ] ^
Int32
ÕÕ^ c
,
ÕÕc d
	direction
ÕÕe n
:
ÕÕn o!
ParameterDirectionÕÕp Ç
.ÕÕÇ É
InputÕÕÉ à
)ÕÕà â
;ÕÕâ ä

parameters
ŒŒ 
.
ŒŒ 
Add
ŒŒ 
(
ŒŒ 
name
ŒŒ #
:
ŒŒ# $
$str
ŒŒ% 7
,
ŒŒ7 8
leaveStatusId
ŒŒ9 F
,
ŒŒF G
dbType
ŒŒH N
:
ŒŒN O
OracleMappingType
ŒŒP a
.
ŒŒa b
Int32
ŒŒb g
,
ŒŒg h
	direction
ŒŒi r
:
ŒŒr s!
ParameterDirectionŒŒt Ü
.ŒŒÜ á
InputŒŒá å
)ŒŒå ç
;ŒŒç é

parameters
œœ 
.
œœ 
Add
œœ 
(
œœ 
name
œœ #
:
œœ# $
$str
œœ% 2
,
œœ2 3
dbType
œœ4 :
:
œœ: ;
OracleMappingType
œœ< M
.
œœM N
Int32
œœN S
,
œœS T
	direction
œœU ^
:
œœ^ _ 
ParameterDirection
œœ` r
.
œœr s
Output
œœs y
)
œœy z
;
œœz {
await
–– 

connection
––  
.
––  !
ExecuteAsync
––! -
(
––- . 
DatabaseProcedures
––. @
.
––@ A+
SP_CHECK_FOR_EXSISTING_LEAVES
––A ^
,
––^ _

parameters
––` j
,
––j k
commandType
––l w
:
––w x
CommandType––y Ñ
.––Ñ Ö
StoredProcedure––Ö î
)––î ï
;––ï ñ

leaveCount
—— 
=
—— 

parameters
—— '
.
——' (
Get
——( +
<
——+ ,
int
——, /
>
——/ 0
(
——0 1
$str
——1 >
)
——> ?
;
——? @
}
““ 
return
‘‘ 

leaveCount
‘‘ 
;
‘‘ 
}
’’ 	
private
÷÷ 
async
÷÷ 
Task
÷÷ 
<
÷÷ 
string
÷÷ !
>
÷÷! "
GetEmpGender
÷÷# /
(
÷÷/ 0
int
÷÷0 3
employeeSlno
÷÷4 @
)
÷÷@ A
{
◊◊ 	
string
ÿÿ 
gender
ÿÿ 
=
ÿÿ 
null
ÿÿ  
;
ÿÿ  !
string
ŸŸ 
getGenderQuery
ŸŸ !
=
ŸŸ" #
$str
ŸŸ$ y
;
ŸŸy z
using
⁄⁄ 
(
⁄⁄ 
IDbConnection
⁄⁄  

connection
⁄⁄! +
=
⁄⁄, -
await
⁄⁄. 3
CreateConnection
⁄⁄4 D
(
⁄⁄D E
DbSchema
⁄⁄E M
.
⁄⁄M N
PORTAL
⁄⁄N T
)
⁄⁄T U
)
⁄⁄U V
{
€€ 
string
‹‹ 
query
‹‹ 
=
‹‹ 
string
‹‹ %
.
‹‹% &
Format
‹‹& ,
(
‹‹, -
getGenderQuery
‹‹- ;
,
‹‹; <
employeeSlno
‹‹= I
)
‹‹I J
;
‹‹J K
gender
›› 
=
›› 
await
›› 

connection
›› )
.
››) *&
QueryFirstOrDefaultAsync
››* B
<
››B C
string
››C I
>
››I J
(
››J K
query
››K P
)
››P Q
;
››Q R
}
ﬁﬁ 
return
ﬂﬂ 
gender
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
}
‚‚ 
}„„ †
\F:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Masters\PayrollPeriodRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Masters& -
{ 
public 

class #
PayrollPeriodRepository (
:) *
BaseRepository+ 9
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public #
PayrollPeriodRepository &
(& '
IConfiguration' 5
configuration6 C
)C D
:E F
baseG K
(K L
configurationL Y
)Y Z
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public!! 
async!! 
Task!! 
<!! 

Dictionary!! $
<!!$ %
string!!% +
,!!+ ,
DateTime!!- 5
>!!5 6
>!!6 7
GetPayrollDates!!8 G
(!!G H
DateTime!!H P
fromDate!!Q Y
)!!Y Z
{"" 	
PayrollPeriod## 
payrollPeriod## '
=##( )
null##* .
;##. /

Dictionary$$ 
<$$ 
string$$ 
,$$ 
DateTime$$ '
>$$' (
payrollDates$$) 5
=$$6 7
null$$8 <
;$$< =
using%% 
(%% 
var%% 

connection%% !
=%%" #
await%%$ )
base%%* .
.%%. /
CreateConnection%%/ ?
(%%? @
DbSchema%%@ H
.%%H I
PORTAL%%I O
)%%O P
)%%P Q
{&& #
OracleDynamicParameters'' '
	parmeters''( 1
=''2 3
new''4 7#
OracleDynamicParameters''8 O
(''O P
)''P Q
;''Q R
	parmeters(( 
.(( 
Add(( 
((( 
name(( "
:((" #
$str(($ 6
,((6 7
fromDate((8 @
,((@ A
dbType((B H
:((H I
OracleMappingType((J [
.(([ \
Date((\ `
,((` a
	direction((b k
:((k l
ParameterDirection((m 
.	(( Ä
Input
((Ä Ö
)
((Ö Ü
;
((Ü á
	parmeters)) 
.)) 
Add)) 
()) 
name)) "
:))" #
$str))$ -
,))- .
dbType))/ 5
:))5 6
OracleMappingType))7 H
.))H I
	RefCursor))I R
,))R S
	direction))T ]
:))] ^
ParameterDirection))_ q
.))q r
Output))r x
)))x y
;))y z
payrollPeriod** 
=** 
await**  %

connection**& 0
.**0 1
QueryFirstAsync**1 @
<**@ A
PayrollPeriod**A N
>**N O
(**O P
DatabaseProcedures**P b
.**b c!
SP_GET_PAYROLL_PERIOD**c x
,**x y
	parmeters	**z É
,
**É Ñ
commandType
**Ö ê
:
**ê ë
CommandType
**í ù
.
**ù û
StoredProcedure
**û ≠
)
**≠ Æ
;
**Æ Ø
}++ 
if,, 
(,, 
payrollPeriod,, 
!=,,  
null,,! %
),,% &
{-- 
payrollDates.. 
=.. 
new.. "

Dictionary..# -
<..- .
string... 4
,..4 5
DateTime..6 >
>..> ?
{// 
{00 
$str00 !
,00! "
payrollPeriod00# 0
.000 1
FromDate001 9
}00: ;
,00; <
{11 
$str11 
,11  
payrollPeriod11! .
.11. /
ToDate11/ 5
}116 7
}22 
;22 
}33 
return44 
payrollDates44 
;44  
}66 	
}88 
}99 ›"
`F:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Notificaton\NotificationRespository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Notificaton& 1
{ 
public 

class #
NotificationRespository (
:) *
BaseRepository+ 9
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public #
NotificationRespository &
(& '
IConfiguration' 5
configuration6 C
)C D
:E F
baseG K
(K L
configurationL Y
)Y Z
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
NotificationDetail 1
>1 2
>2 3
GetNotifications4 D
(D E
intE H
employeeSlnoI U
)U V
{ 	
List   
<   
NotificationDetail   #
>  # $
notifications  % 2
=  3 4
null  5 9
;  9 :
using!! 
(!! 
var!! 

connection!! !
=!!" #
await!!$ )
CreateConnection!!* :
(!!: ;
DbSchema!!; C
.!!C D
PORTAL!!D J
)!!J K
)!!K L
{"" #
OracleDynamicParameters## '
	parmeters##( 1
=##2 3
new##4 7#
OracleDynamicParameters##8 O
(##O P
)##P Q
;##Q R
	parmeters$$ 
.$$ 
Add$$ 
($$ 
name$$ "
:$$" #
$str$$$ 3
,$$3 4
employeeSlno$$5 A
,$$A B
dbType$$C I
:$$I J
OracleMappingType$$K \
.$$\ ]
Int32$$] b
,$$b c
	direction$$d m
:$$m n
ParameterDirection	$$o Å
.
$$Å Ç
Input
$$Ç á
)
$$á à
;
$$à â
	parmeters%% 
.%% 
Add%% 
(%% 
name%% "
:%%" #
$str%%$ -
,%%- .
dbType%%/ 5
:%%5 6
OracleMappingType%%7 H
.%%H I
	RefCursor%%I R
,%%R S
	direction%%T ]
:%%] ^
ParameterDirection%%_ q
.%%q r
Output%%r x
)%%x y
;%%y z
notifications&& 
=&& 
(&&  !
await&&! &

connection&&' 1
.&&1 2

QueryAsync&&2 <
<&&< =
NotificationDetail&&= O
>&&O P
(&&P Q
DatabaseProcedures&&Q c
.&&c d
GET_NOTIFICATIONS&&d u
,&&u v
	parmeters	&&w Ä
,
&&Ä Å
commandType
&&Ç ç
:
&&ç é
CommandType
&&è ö
.
&&ö õ
StoredProcedure
&&õ ™
)
&&™ ´
)
&&´ ¨
.
&&¨ ≠
ToList
&&≠ ≥
(
&&≥ ¥
)
&&¥ µ
;
&&µ ∂
}'' 
foreach(( 
((( 
var(( 
item(( 
in((  
notifications((! .
)((. /
{)) 
string** 
[** 
]** 

imagesPath** #
=**$ %
null**& *
;*** +
StringBuilder++ 
	imagePath++ '
=++( )
new++* -
StringBuilder++. ;
(++; <
)++< =
;++= >

imagesPath,, 
=,, 
item,, !
.,,! "
	PhotoPath,," +
.,,+ ,
Split,,, 1
(,,1 2
$char,,2 5
),,5 6
;,,6 7
	imagePath-- 
.-- 
AppendFormat-- &
(--& '
$str--' 7
,--7 8
ApplicationSettings--9 L
.--L M
Current--M T
.--T U
ProfilePath--U `
,--` a

imagesPath--b l
[--l m
$num--m n
]--n o
)--o p
;--p q
item.. 
... 
	PhotoPath.. 
=..  
	imagePath..! *
...* +
ToString..+ 3
(..3 4
)..4 5
;..5 6
}// 
return00 
notifications00  
;00  !
}11 	
}22 
}33 ¢
_F:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Notificaton\VistorCountRespository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Notificaton& 1
{ 
public 

class "
VistorCountRespository '
:( )
BaseRepository* 8
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public "
VistorCountRespository %
(% &
IConfiguration& 4
configuration5 B
)B C
:D E
baseF J
(J K
configurationK X
)X Y
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
int 
> 
GetVisitorCount .
(. /
)/ 0
{ 	
int 
loggedInUsers 
= 
$num  !
;! "
bool   
	isUpdated   
=   
false   "
;  " #
string!! 

loginQuery!! 
=!! 
$str!!  ^
;!!^ _
using"" 
("" 
IDbConnection""  

connection""! +
="", -
await"". 3
CreateConnection""4 D
(""D E
DbSchema""E M
.""M N
PORTAL""N T
)""T U
)""U V
{## 
loggedInUsers$$ 
=$$ 

connection$$  *
.$$* +
ExecuteScalar$$+ 8
<$$8 9
int$$9 <
>$$< =
($$= >

loginQuery$$> H
)$$H I
;$$I J
}%% 
return&& 
loggedInUsers&&  
;&&  !
}'' 	
}(( 
})) áB
ZF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\NSL\EmployeeProfileRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Employee& .
{ 
public 

class %
EmployeeProfileRepository *
:+ ,
BaseRepository- ;
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
ICryptography &
cryptography' 3
;3 4
private 
readonly 
IDistributedCache *

redisCache+ 5
;5 6
public!! %
EmployeeProfileRepository!! (
(!!( )
IConfiguration!!) 7
configuration!!8 E
)!!E F
:!!G H
base!!I M
(!!M N
configuration!!N [
)!![ \
{"" 	
this## 
.## 
configuration## 
=##  
configuration##! .
;##. /
}$$ 	
public&& 
async&& 
Task&& 
<&& 
PagedResultSet&& (
<&&( )
EmployeeProfileData&&) <
>&&< =
>&&= >
GetEmployeeProfiles&&? R
(&&R S)
EmployeeProfileSearchCriteria&&S p
searchCriteria&&q 
)	&& Ä
{'' 	
List(( 
<(( 
EmployeeProfileData(( $
>(($ %
employeeProfiles((& 6
=((7 8
null((9 =
;((= >
PagedResultSet)) 
<)) 
EmployeeProfileData)) .
>)). /
profiles))0 8
=))9 :
null)); ?
;))? @
int** 
totalRecords** 
=** 
$num**  
;**  !
using++ 
(++ 
IDbConnection++  

connection++! +
=++, -
await++. 3
CreateConnection++4 D
(++D E
DbSchema++E M
.++M N
PORTAL++N T
)++T U
)++U V
{,, #
OracleDynamicParameters-- '

parameters--( 2
=--3 4
new--5 8#
OracleDynamicParameters--9 P
(--P Q
)--Q R
;--R S
string.. 

templateid.. !
=.." #
ApplicationSettings..$ 7
...7 8
Current..8 ?
...? @
HrmsOtpTemplate..@ O
;..O P

parameters// 
.// 
Add// 
(// 
name// #
://# $
$str//% 3
,//3 4
searchCriteria//5 C
.//C D
	PageIndex//D M
,//M N
dbType//O U
://U V
OracleMappingType//W h
.//h i
Int32//i n
,//n o
	direction//p y
://y z
ParameterDirection	//{ ç
.
//ç é
Input
//é ì
)
//ì î
;
//î ï

parameters00 
.00 
Add00 
(00 
name00 #
:00# $
$str00% 1
,001 2
(003 4
searchCriteria004 B
.00B C
	PageIndex00C L
+00M N
searchCriteria00O ]
.00] ^
PageSize00^ f
)00f g
,00g h
dbType00i o
:00o p
OracleMappingType	00q Ç
.
00Ç É
Int32
00É à
,
00à â
	direction
00ä ì
:
00ì î 
ParameterDirection
00ï ß
.
00ß ®
Input
00® ≠
)
00≠ Æ
;
00Æ Ø

parameters11 
.11 
Add11 
(11 
name11 #
:11# $
$str11% 5
,115 6
dbType117 =
:11= >
OracleMappingType11? P
.11P Q
Int3211Q V
,11V W
	direction11X a
:11a b
ParameterDirection11c u
.11u v
Output11v |
)11| }
;11} ~

parameters22 
.22 
Add22 
(22 
name22 #
:22# $
$str22% .
,22. /
dbType220 6
:226 7
OracleMappingType228 I
.22I J
	RefCursor22J S
,22S T
	direction22U ^
:22^ _
ParameterDirection22` r
.22r s
Output22s y
)22y z
;22z {
var33  
dbScreenInformations33 (
=33) *
await33+ 0

connection331 ;
.33; <

QueryAsync33< F
<33F G
EmployeeProfileData33G Z
>33Z [
(33[ \
DatabaseProcedures33\ n
.33n o)
SP_GET_NSL_EMPLOYEE_PROFILES	33o ã
,
33ã å

parameters
33ç ó
,
33ó ò
commandType
33ô §
:
33§ •
CommandType
33¶ ±
.
33± ≤
StoredProcedure
33≤ ¡
)
33¡ ¬
;
33¬ √
totalRecords44 
=44 

parameters44 )
.44) *
Get44* -
<44- .
int44. 1
>441 2
(442 3
$str443 D
)44D E
.44E F
ToInt32OrDefault44F V
(44V W
)44W X
;44X Y
employeeProfiles55  
=55! " 
dbScreenInformations55# 7
.557 8
ToList558 >
(55> ?
)55? @
;55@ A
}66 
profiles77 
=77 
new77 
PagedResultSet77 )
<77) *
EmployeeProfileData77* =
>77= >
(77> ?
)77? @
{88 
Items99 
=99 
employeeProfiles99 (
,99( )
	PageIndex:: 
=:: 
searchCriteria:: *
.::* +

StartIndex::+ 5
,::5 6
PageSize;; 
=;; 
searchCriteria;; )
.;;) *
EndIndex;;* 2
,;;2 3

TotalItems<< 
=<< 
totalRecords<< )
,<<) *
}== 
;== 
return>> 
profiles>> 
;>> 
}?? 	
publicAA 
asyncAA 
TaskAA 
<AA 
EmployeeProfileDataAA -
>AA- .
GetEmployeeProfileAA/ A
(AAA B
stringAAB H

employeeIdAAI S
)AAS T
{BB 	
EmployeeProfileDataCC 
employeeProfileCC  /
=CC0 1
nullCC2 6
;CC6 7
usingDD 
(DD 
IDbConnectionDD  

connectionDD! +
=DD, -
awaitDD. 3
CreateConnectionDD4 D
(DDD E
DbSchemaDDE M
.DDM N
PORTALDDN T
)DDT U
)DDU V
{EE #
OracleDynamicParametersFF '

parametersFF( 2
=FF3 4
newFF5 8#
OracleDynamicParametersFF9 P
(FFP Q
)FFQ R
;FFR S
stringGG 

templateidGG !
=GG" #
ApplicationSettingsGG$ 7
.GG7 8
CurrentGG8 ?
.GG? @
HrmsOtpTemplateGG@ O
;GGO P

parametersHH 
.HH 
AddHH 
(HH 
nameHH #
:HH# $
$strHH% 2
,HH2 3

employeeIdHH4 >
,HH> ?
dbTypeHH@ F
:HHF G
OracleMappingTypeHHH Y
.HHY Z
Varchar2HHZ b
,HHb c
	directionHHd m
:HHm n
ParameterDirection	HHo Å
.
HHÅ Ç
Input
HHÇ á
)
HHá à
;
HHà â

parametersII 
.II 
AddII 
(II 
nameII #
:II# $
$strII% .
,II. /
dbTypeII0 6
:II6 7
OracleMappingTypeII8 I
.III J
	RefCursorIIJ S
,IIS T
	directionIIU ^
:II^ _
ParameterDirectionII` r
.IIr s
OutputIIs y
)IIy z
;IIz {
employeeProfileJJ 
=JJ  !
awaitJJ" '

connectionJJ( 2
.JJ2 3$
QueryFirstOrDefaultAsyncJJ3 K
<JJK L
EmployeeProfileDataJJL _
>JJ_ `
(JJ` a
DatabaseProceduresJJa s
.JJs t(
SP_GET_NSL_EMPLOYEE_PROFILE	JJt è
,
JJè ê

parameters
JJë õ
,
JJõ ú
commandType
JJù ®
:
JJ® ©
CommandType
JJ™ µ
.
JJµ ∂
StoredProcedure
JJ∂ ≈
)
JJ≈ ∆
;
JJ∆ «
}KK 
returnLL 
employeeProfileLL "
;LL" #
}MM 	
}NN 
}OO ˚Ø
XF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Payslips\PayslipsRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Payslips& .
{ 
public 

class 
PayslipsRepository #
:# $
BaseRepository% 3
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
PayslipsRepository !
(! "
IConfiguration" 0
configuration1 >
)> ?
:@ A
baseB F
(F G
configurationG T
)T U
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
}   	
public(( 
async(( 
Task(( 
<(( 
byte(( 
[(( 
]((  
>((  !
DownloadPaySlip((" 1
(((1 2
int((2 5
employeeSlno((6 B
)((B C
{)) 	
List** 
<** !
EmployeePayslipDetail** &
>**& '
payslips**( 0
=**1 2
new**3 6
List**7 ;
<**; <!
EmployeePayslipDetail**< Q
>**Q R
(**R S
)**S T
;**T U
using,, 
(,, 
var,, 

connection,, !
=,," #
await,,$ )
base,,* .
.,,. /
CreateConnection,,/ ?
(,,? @
DbSchema,,@ H
.,,H I
PORTAL,,I O
),,O P
),,P Q
{-- #
OracleDynamicParameters.. '
	parmeters..( 1
=..2 3
new..4 7#
OracleDynamicParameters..8 O
(..O P
)..P Q
;..Q R
	parmeters// 
.// 
Add// 
(// 
name// "
://" #
$str//$ 0
,//0 1
employeeSlno//2 >
,//> ?
dbType//@ F
://F G
OracleMappingType//H Y
.//Y Z
Int32//Z _
,//_ `
	direction//a j
://j k
ParameterDirection//l ~
.//~ 
Input	// Ñ
)
//Ñ Ö
;
//Ö Ü
	parmeters00 
.00 
Add00 
(00 
name00 "
:00" #
$str00$ -
,00- .
dbType00/ 5
:005 6
OracleMappingType007 H
.00H I
	RefCursor00I R
,00R S
	direction00T ]
:00] ^
ParameterDirection00_ q
.00q r
Output00r x
)00x y
;00y z
payslips22 
=22 
(22 
await22 !

connection22" ,
.22, -

QueryAsync22- 7
<227 8!
EmployeePayslipDetail228 M
>22M N
(22N O
DatabaseProcedures22O a
.22a b
DOWNLOAD_PAYSLIP22b r
,22r s
	parmeters22t }
,22} ~
commandType	22 ä
:
22ä ã
CommandType
22å ó
.
22ó ò
StoredProcedure
22ò ß
)
22ß ®
)
22® ©
.
22© ™
ToList
22™ ∞
(
22∞ ±
)
22± ≤
;
22≤ ≥
}33 
using44 
var44 
report44 
=44 
new44 "
LocalReport44# .
(44. /
)44/ 0
;440 1
await55 #
GetEmployPaySlipDataSet55 )
(55) *
report55* 0
,550 1
payslips552 :
)55: ;
;55; <
var66 
pdf66 
=66 
report66 
.66 
Render66 #
(66# $
$str66$ )
)66) *
;66* +
return77 
pdf77 
;77 
}88 	
public:: 
async:: 
Task:: 
<:: 
List:: 
<:: 
Payslip:: &
>::& '
>::' (
GetEmployeePayslip::) ;
(::; <
string::< B
employeeSlno::C O
)::O P
{;; 	
List<< 
<<< 
EmployeePayslip<<  
><<  !
employeePayslips<<" 2
=<<3 4
null<<5 9
;<<9 :
List== 
<== 
Payslip== 
>== 
payslips== "
===# $
null==% )
;==) *
using?? 
(?? 
var?? 

connection?? !
=??" #
await??$ )
base??* .
.??. /
CreateConnection??/ ?
(??? @
DbSchema??@ H
.??H I
PORTAL??I O
)??O P
)??P Q
{@@ #
OracleDynamicParametersAA '
	parmetersAA( 1
=AA2 3
newAA4 7#
OracleDynamicParametersAA8 O
(AAO P
)AAP Q
;AAQ R
	parmetersBB 
.BB 
AddBB 
(BB 
nameBB "
:BB" #
$strBB$ 3
,BB3 4
employeeSlnoBB5 A
,BBA B
dbTypeBBC I
:BBI J
OracleMappingTypeBBK \
.BB\ ]
Int32BB] b
,BBb c
	directionBBd m
:BBm n
ParameterDirection	BBo Å
.
BBÅ Ç
Input
BBÇ á
)
BBá à
;
BBà â
	parmetersCC 
.CC 
AddCC 
(CC 
nameCC "
:CC" #
$strCC$ -
,CC- .
dbTypeCC/ 5
:CC5 6
OracleMappingTypeCC7 H
.CCH I
	RefCursorCCI R
,CCR S
	directionCCT ]
:CC] ^
ParameterDirectionCC_ q
.CCq r
OutputCCr x
)CCx y
;CCy z
payslipsDD 
=DD 
(DD 
awaitDD !

connectionDD" ,
.DD, -

QueryAsyncDD- 7
<DD7 8
PayslipDD8 ?
>DD? @
(DD@ A
DatabaseProceduresDDA S
.DDS T
GET_EMP_PAYSLIPSDDT d
,DDd e
	parmetersDDf o
,DDo p
commandTypeDDq |
:DD| }
CommandType	DD~ â
.
DDâ ä
StoredProcedure
DDä ô
)
DDô ö
)
DDö õ
.
DDõ ú
ToList
DDú ¢
(
DD¢ £
)
DD£ §
;
DD§ •
}EE 
returnUU 
payslipsUU 
;UU 
}VV 	
private^^ 
async^^ 
Task^^ #
GetEmployPaySlipDataSet^^ 2
(^^2 3
LocalReport^^3 >
report^^? E
,^^E F
List^^F J
<^^J K!
EmployeePayslipDetail^^K `
>^^` a
payslips^^b j
)^^j k
{__ 	
EmpPsDs``  
employPaySlipDataSet`` (
=``) *
new``+ .
EmpPsDs``/ 6
(``6 7
)``7 8
;``8 9
DataRowaa 
drPaySlipDetailsaa $
=aa% & 
employPaySlipDataSetaa' ;
.aa; <
Tablesaa< B
[aaB C
$numaaC D
]aaD E
.aaE F
NewRowaaF L
(aaL M
)aaM N
;aaN O
stringbb 
pathbb 
=bb 
$strbb 
;bb 
ifcc 
(cc 
payslipscc 
[cc 
$numcc 
]cc 
!=cc 
nullcc #
)cc# $
{dd 
varee 
itemee 
=ee 
payslipsee #
[ee# $
$numee$ %
]ee% &
;ee& '
drPaySlipDetailsff  
[ff  !
$strff! ,
]ff, -
=ff. /
itemff0 4
.ff4 5
	AccountNoff5 >
;ff> ?
drPaySlipDetailsgg  
[gg  !
$strgg! +
]gg+ ,
=gg- .
itemgg/ 3
.gg3 4
Advancesgg4 <
.gg< =
ToInt32OrDefaultgg= M
(ggM N
)ggN O
.ggO P
ToStringggP X
(ggX Y
$strggY \
)gg\ ]
;gg] ^
drPaySlipDetailshh  
[hh  !
$strhh! -
]hh- .
=hh/ 0
itemhh1 5
.hh5 6

AmtInWordshh6 @
;hh@ A
drPaySlipDetailsii  
[ii  !
$strii! (
]ii( )
=ii* +
itemii, 0
.ii0 1
Basicii1 6
.ii6 7
ToInt32OrDefaultii7 G
(iiG H
)iiH I
.iiI J
ToStringiiJ R
(iiR S
$striiS V
)iiV W
;iiW X
drPaySlipDetailsjj  
[jj  !
$strjj! 2
]jj2 3
=jj4 5
itemjj6 :
.jj: ;
CTC_GrossSalaryjj; J
.jjJ K
ToInt32OrDefaultjjK [
(jj[ \
)jj\ ]
.jj] ^
ToStringjj^ f
(jjf g
$strjjg j
)jjj k
;jjk l
drPaySlipDetailskk  
[kk  !
$strkk! %
]kk% &
=kk' (
itemkk) -
.kk- .
DAkk. 0
.kk0 1
ToInt32OrDefaultkk1 A
(kkA B
)kkB C
.kkC D
ToStringkkD L
(kkL M
$strkkM P
)kkP Q
;kkQ R
drPaySlipDetailsll  
[ll  !
$strll! 2
]ll2 3
=ll4 5
itemll6 :
.ll: ;
DeducationTotalll; J
.llJ K
ToInt32OrDefaultllK [
(ll[ \
)ll\ ]
.ll] ^
ToStringll^ f
(llf g
$strllg j
)llj k
;llk l
drPaySlipDetailsmm  
[mm  !
$strmm! -
]mm- .
=mm/ 0
itemmm1 5
.mm5 6

Departmentmm6 @
;mm@ A
drPaySlipDetailsnn  
[nn  !
$strnn! .
]nn. /
=nn0 1
itemnn2 6
.nn6 7
Designationnn7 B
;nnB C
DateTimeoo 
dateTimeoo !
=oo" #
DateTimeoo$ ,
.oo, -

ParseExactoo- 7
(oo7 8
itemoo8 <
.oo< =
DOJoo= @
,oo@ A
$strooB L
,ooL M
CultureInfoooN Y
.ooY Z
InvariantCultureooZ j
)ooj k
;ook l
stringpp 
DOJpp 
=pp 
dateTimepp %
.pp% &
ToStringpp& .
(pp. /
$strpp/ <
)pp< =
.pp= >
ToUpperpp> E
(ppE F
)ppF G
;ppG H
drPaySlipDetailsqq  
[qq  !
$strqq! &
]qq& '
=qq( )
DOJqq* -
;qq- .
drPaySlipDetailsrr  
[rr  !
$strrr! /
]rr/ 0
=rr1 2
itemrr3 7
.rr7 8
EmployeeNamerr8 D
;rrD E
drPaySlipDetailsss  
[ss  !
$strss! .
]ss. /
=ss0 1
itemss2 6
.ss6 7
EmployerESIss7 B
.ssB C
ToInt32OrDefaultssC S
(ssS T
)ssT U
.ssU V
ToStringssV ^
(ss^ _
$strss_ b
)ssb c
;ssc d
drPaySlipDetailstt  
[tt  !
$strtt! -
]tt- .
=tt/ 0
itemtt1 5
.tt5 6

EmployerPFtt6 @
.tt@ A
ToInt32OrDefaultttA Q
(ttQ R
)ttR S
.ttS T
ToStringttT \
(tt\ ]
$strtt] `
)tt` a
;tta b
drPaySlipDetailsuu  
[uu  !
$struu! /
]uu/ 0
=uu1 2
itemuu3 7
.uu7 8
EarningTotaluu8 D
.uuD E
ToInt32OrDefaultuuE U
(uuU V
)uuV W
.uuW X
ToStringuuX `
(uu` a
$struua d
)uud e
;uue f
drPaySlipDetailsvv  
[vv  !
$strvv! (
]vv( )
=vv* +
itemvv, 0
.vv0 1
EMPNovv1 6
;vv6 7
drPaySlipDetailsww  
[ww  !
$strww! &
]ww& '
=ww( )
itemww* .
.ww. /
ESIww/ 2
.ww2 3
ToInt32OrDefaultww3 C
(wwC D
)wwD E
.wwE F
ToStringwwF N
(wwN O
$strwwO R
)wwR S
;wwS T
drPaySlipDetailsxx  
[xx  !
$strxx! (
]xx( )
=xx* +
itemxx, 0
.xx0 1
ESINoxx1 6
==xx7 9
nullxx: >
?xx? @
$numxxA B
:xxC D
itemxxE I
.xxI J
ESINoxxJ O
;xxO P
drPaySlipDetailsyy  
[yy  !
$stryy! /
]yy/ 0
=yy1 2
itemyy3 7
.yy7 8
Food_Couponsyy8 D
.yyD E
ToInt32OrDefaultyyE U
(yyU V
)yyV W
.yyW X
ToStringyyX `
(yy` a
$stryya d
)yyd e
;yye f
drPaySlipDetailszz  
[zz  !
$strzz! )
]zz) *
=zz+ ,
itemzz- 1
.zz1 2
Genderzz2 8
;zz8 9
drPaySlipDetails{{  
[{{  !
$str{{! &
]{{& '
={{( )
item{{* .
.{{. /
GMC{{/ 2
.{{2 3
ToInt32OrDefault{{3 C
({{C D
){{D E
.{{E F
ToString{{F N
({{N O
$str{{O R
){{R S
;{{S T
drPaySlipDetails||  
[||  !
$str||! .
]||. /
=||0 1
item||2 6
.||6 7
GrossSalary||7 B
.||B C
ToInt32OrDefault||C S
(||S T
)||T U
.||U V
ToString||V ^
(||^ _
$str||_ b
)||b c
;||c d
drPaySlipDetails}}  
[}}  !
$str}}! &
]}}& '
=}}( )
item}}* .
.}}. /
HRA}}/ 2
.}}2 3
ToInt32OrDefault}}3 C
(}}C D
)}}D E
.}}E F
ToString}}F N
(}}N O
$str}}O R
)}}R S
;}}S T
drPaySlipDetails~~  
[~~  !
$str~~! 0
]~~0 1
=~~2 3
item~~4 8
.~~8 9
LEGBranchSlno~~9 F
;~~F G
drPaySlipDetails  
[  !
$str! *
]* +
=, -
item. 2
.2 3
LEGName3 :
;: ;
drPaySlipDetails
ÄÄ  
[
ÄÄ  !
$str
ÄÄ! 1
]
ÄÄ1 2
=
ÄÄ3 4
item
ÄÄ5 9
.
ÄÄ9 :
LEGName
ÄÄ: A
;
ÄÄA B
drPaySlipDetails
ÅÅ  
[
ÅÅ  !
$str
ÅÅ! *
]
ÅÅ* +
=
ÅÅ, -
item
ÅÅ. 2
.
ÅÅ2 3
LOPDays
ÅÅ3 :
;
ÅÅ: ;
drPaySlipDetails
ÇÇ  
[
ÇÇ  !
$str
ÇÇ! *
]
ÇÇ* +
=
ÇÇ, -
item
ÇÇ. 2
.
ÇÇ2 3
MISCAmt
ÇÇ3 :
.
ÇÇ: ;
ToInt32OrDefault
ÇÇ; K
(
ÇÇK L
)
ÇÇL M
.
ÇÇM N
ToString
ÇÇN V
(
ÇÇV W
$str
ÇÇW Z
)
ÇÇZ [
;
ÇÇ[ \
drPaySlipDetails
ÉÉ  
[
ÉÉ  !
$str
ÉÉ! ,
]
ÉÉ, -
=
ÉÉ. /
item
ÉÉ0 4
.
ÉÉ4 5
	MonthName
ÉÉ5 >
;
ÉÉ> ?
drPaySlipDetails
ÑÑ  
[
ÑÑ  !
$str
ÑÑ! (
]
ÑÑ( )
=
ÑÑ* +
item
ÑÑ, 0
.
ÑÑ0 1
NDays
ÑÑ1 6
;
ÑÑ6 7
drPaySlipDetails
ÖÖ  
[
ÖÖ  !
$str
ÖÖ! 1
]
ÖÖ1 2
=
ÖÖ3 4
item
ÖÖ5 9
.
ÖÖ9 :
OtherAllowance
ÖÖ: H
;
ÖÖH I
drPaySlipDetails
ÜÜ  
[
ÜÜ  !
$str
ÜÜ! (
]
ÜÜ( )
=
ÜÜ* +
item
ÜÜ, 0
.
ÜÜ0 1
PANNo
ÜÜ1 6
;
ÜÜ6 7
drPaySlipDetails
áá  
[
áá  !
$str
áá! %
]
áá% &
=
áá' (
item
áá) -
.
áá- .
PF
áá. 0
.
áá0 1
ToInt32OrDefault
áá1 A
(
ááA B
)
ááB C
.
ááC D
ToString
ááD L
(
ááL M
$str
ááM P
)
ááP Q
;
ááQ R
drPaySlipDetails
àà  
[
àà  !
$str
àà! '
]
àà' (
=
àà) *
item
àà+ /
.
àà/ 0
PFNo
àà0 4
==
àà5 7
null
àà8 <
?
àà= >
$num
àà? @
:
ààA B
item
ààC G
.
ààG H
PFNo
ààH L
;
ààL M
drPaySlipDetails
ââ  
[
ââ  !
$str
ââ! (
]
ââ( )
=
ââ* +
item
ââ, 0
.
ââ0 1
PHAmt
ââ1 6
.
ââ6 7
ToInt32OrDefault
ââ7 G
(
ââG H
)
ââH I
.
ââI J
ToString
ââJ R
(
ââR S
$str
ââS V
)
ââV W
;
ââW X
drPaySlipDetails
ää  
[
ää  !
$str
ää! .
]
ää. /
=
ää0 1
item
ää2 6
.
ää6 7
PresentDays
ää7 B
;
ääB C
drPaySlipDetails
ãã  
[
ãã  !
$str
ãã! %
]
ãã% &
=
ãã' (
item
ãã) -
.
ãã- .
PT
ãã. 0
.
ãã0 1
ToInt32OrDefault
ãã1 A
(
ããA B
)
ããB C
.
ããC D
ToString
ããD L
(
ããL M
$str
ããM P
)
ããP Q
;
ããQ R
drPaySlipDetails
åå  
[
åå  !
$str
åå! 0
]
åå0 1
=
åå2 3
item
åå4 8
.
åå8 9
Reimbursement
åå9 F
.
ååF G
ToInt32OrDefault
ååG W
(
ååW X
)
ååX Y
.
ååY Z
ToString
ååZ b
(
ååb c
$str
ååc f
)
ååf g
;
ååg h
drPaySlipDetails
çç  
[
çç  !
$str
çç! -
]
çç- .
=
çç/ 0
item
çç1 5
.
çç5 6

RoundedNet
çç6 @
.
çç@ A
ToInt32OrDefault
ççA Q
(
ççQ R
)
ççR S
.
ççS T
ToString
ççT \
(
çç\ ]
$str
çç] `
)
çç` a
;
çça b
drPaySlipDetails
éé  
[
éé  !
$str
éé! (
]
éé( )
=
éé* +
item
éé, 0
.
éé0 1
SDate
éé1 6
;
éé6 7
drPaySlipDetails
èè  
[
èè  !
$str
èè! &
]
èè& '
=
èè( )
item
èè* .
.
èè. /
TDS
èè/ 2
.
èè2 3
ToInt32OrDefault
èè3 C
(
èèC D
)
èèD E
.
èèE F
ToString
èèF N
(
èèN O
$str
èèO R
)
èèR S
;
èèS T
drPaySlipDetails
êê  
[
êê  !
$str
êê! 1
]
êê1 2
=
êê3 4
item
êê5 9
.
êê9 :
SincerityFund
êê: G
.
êêG H
ToInt32OrDefault
êêH X
(
êêX Y
)
êêY Z
.
êêZ [
ToString
êê[ c
(
êêc d
$str
êêd g
)
êêg h
;
êêh i
drPaySlipDetails
ëë  
[
ëë  !
$str
ëë! 4
]
ëë4 5
=
ëë6 7
item
ëë8 <
.
ëë< =
IsSincerityFund
ëë= L
.
ëëL M 
ToBooleanOrDefault
ëëM _
(
ëë_ `
)
ëë` a
;
ëëa b
if
ññ 
(
ññ 
payslips
ññ 
!=
ññ 
null
ññ  $
&&
ññ% '
payslips
ññ( 0
.
ññ0 1
Count
ññ1 6
>
ññ7 8
$num
ññ9 :
&&
ññ; =
payslips
ññ> F
[
ññF G
$num
ññG H
]
ññH I
.
ññI J
LEGBranchSlno
ññJ W
==
ññX Z
$num
ññ[ \
)
ññ\ ]
{
óó 
path
òò 
=
òò 
$str
òò P
;
òòP Q
drPaySlipDetails
ôô $
[
ôô$ %
$str
ôô% /
]
ôô/ 0
=
ôô1 2
$str
ôô4 h
;
ôôh i
}
öö 
else
õõ 
if
õõ 
(
õõ 
payslips
õõ !
!=
õõ" $
null
õõ% )
&&
õõ* ,
payslips
õõ- 5
.
õõ5 6
Count
õõ6 ;
>
õõ< =
$num
õõ> ?
&&
õõ@ B
payslips
õõC K
[
õõK L
$num
õõL M
]
õõM N
.
õõN O
LEGBranchSlno
õõO \
==
õõ] _
$num
õõ` b
)
õõb c
{
úú 
drPaySlipDetails
ùù $
[
ùù$ %
$str
ùù% /
]
ùù/ 0
=
ùù1 2
$str
ùù3 n
;
ùùn o
path
ûû 
=
ûû 
$str
ûû P
;
ûûP Q
}
üü 
else
†† 
if
†† 
(
†† 
payslips
†† !
!=
††" $
null
††% )
&&
††* ,
payslips
††- 5
.
††5 6
Count
††6 ;
>
††< =
$num
††> ?
)
††? @
{
°° 
path
¢¢ 
=
¢¢ 
$str
¢¢ P
;
¢¢P Q
drPaySlipDetails
££ $
[
££$ %
$str
££% /
]
££/ 0
=
££1 2
$str
££3 g
;
££g h
}
§§ 
}
•• "
employPaySlipDataSet
¶¶  
.
¶¶  !
Tables
¶¶! '
[
¶¶' (
$num
¶¶( )
]
¶¶) *
.
¶¶* +
Rows
¶¶+ /
.
¶¶/ 0
InsertAt
¶¶0 8
(
¶¶8 9
drPaySlipDetails
¶¶9 I
,
¶¶I J
$num
¶¶K L
)
¶¶L M
;
¶¶M N
ReportDataSource
®® 
rds
®®  
=
®®! "
new
®®# &
ReportDataSource
®®' 7
(
®®7 8
)
®®8 9
;
®®9 :
rds
©© 
.
©© 
Name
©© 
=
©© 
$str
©©  
;
©©  !
rds
™™ 
.
™™ 
Value
™™ 
=
™™ "
employPaySlipDataSet
™™ ,
.
™™, -
Tables
™™- 3
[
™™3 4
$num
™™4 5
]
™™5 6
;
™™6 7
using
¨¨ 
var
¨¨ 
rs
¨¨ 
=
¨¨ 
Assembly
¨¨ #
.
¨¨# $"
GetExecutingAssembly
¨¨$ 8
(
¨¨8 9
)
¨¨9 :
.
¨¨: ;'
GetManifestResourceStream
¨¨; T
(
¨¨T U
path
¨¨U Y
)
¨¨Y Z
;
¨¨Z [
report
≠≠ 
.
≠≠ "
EnableExternalImages
≠≠ '
=
≠≠( )
true
≠≠* .
;
≠≠. /
report
ÆÆ 
.
ÆÆ "
LoadReportDefinition
ÆÆ '
(
ÆÆ' (
rs
ÆÆ( *
)
ÆÆ* +
;
ÆÆ+ ,
report
ØØ 
.
ØØ 
DataSources
ØØ 
.
ØØ 
Add
ØØ "
(
ØØ" #
rds
ØØ# &
)
ØØ& '
;
ØØ' (
}
∞∞ 	
}
±± 
}≤≤ åª
bF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Reimbursement\ReimbursementRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Reimbursement& 3
{ 
public 

class #
ReimbursementRepository (
:) *
BaseRepository+ 9
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public #
ReimbursementRepository &
(& '
IConfiguration' 5
configuration6 C
)C D
:E F
baseG K
(K L
configurationL Y
)Y Z
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< !
ApprovedReimbursement 4
>4 5
>5 6
GetApprovedBills7 G
(G H
intH K
employeeNumberL Z
)Z [
{ 	
List 
< !
ApprovedReimbursement &
>& '"
approvedReimbursements( >
=? @
nullA E
;E F
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{ #
OracleDynamicParameters   '
	parmeters  ( 1
=  2 3
new  4 7#
OracleDynamicParameters  8 O
(  O P
)  P Q
;  Q R
	parmeters!! 
.!! 
Add!! 
(!! 
name!! "
:!!" #
$str!!$ 3
,!!3 4
employeeNumber!!5 C
,!!C D
dbType!!E K
:!!K L
OracleMappingType!!M ^
.!!^ _
Int32!!_ d
,!!d e
	direction!!f o
:!!o p
ParameterDirection	!!q É
.
!!É Ñ
Input
!!Ñ â
)
!!â ä
;
!!ä ã
	parmeters"" 
."" 
Add"" 
("" 
name"" "
:""" #
$str""$ -
,""- .
$num""/ 0
,""0 1
dbType""2 8
:""8 9
OracleMappingType"": K
.""K L
Int32""L Q
,""Q R
	direction""S \
:""\ ]
ParameterDirection""^ p
.""p q
Input""q v
)""v w
;""w x
	parmeters## 
.## 
Add## 
(## 
name## "
:##" #
$str##$ -
,##- .
dbType##/ 5
:##5 6
OracleMappingType##7 H
.##H I
	RefCursor##I R
,##R S
	direction##T ]
:##] ^
ParameterDirection##_ q
.##q r
Output##r x
)##x y
;##y z"
approvedReimbursements$$ &
=$$' (
($$) *
await$$* /

connection$$0 :
.$$: ;

QueryAsync$$; E
<$$E F!
ApprovedReimbursement$$F [
>$$[ \
($$\ ]
DatabaseProcedures$$] o
.$$o p 
GET_REIM_BAL_PORTAL	$$p É
,
$$É Ñ
	parmeters
$$Ö é
,
$$é è
commandType
$$ê õ
:
$$õ ú
CommandType
$$ù ®
.
$$® ©
StoredProcedure
$$© ∏
)
$$∏ π
)
$$π ∫
.
$$∫ ª
ToList
$$ª ¡
(
$$¡ ¬
)
$$¬ √
;
$$√ ƒ
}%% 
return&& "
approvedReimbursements&& )
;&&) *
}'' 	
public)) 
async)) 
Task)) 
<)) 
List)) 
<))  
PendingReimbursement)) 3
>))3 4
>))4 5
GetPendingBills))6 E
())E F
int))F I
employeeNumber))J X
)))X Y
{** 	
List++ 
<++  
PendingReimbursement++ %
>++% &!
pendingReimbursements++' <
=++= >
null++? C
;++C D
using-- 
(-- 
IDbConnection--  

connection--! +
=--, -
await--. 3
base--4 8
.--8 9
CreateConnection--9 I
(--I J
DbSchema--J R
.--R S
PORTAL--S Y
)--Y Z
)--Z [
{.. #
OracleDynamicParameters// '
	parmeters//( 1
=//2 3
new//4 7#
OracleDynamicParameters//8 O
(//O P
)//P Q
;//Q R
	parmeters00 
.00 
Add00 
(00 
name00 "
:00" #
$str00$ 3
,003 4
employeeNumber005 C
,00C D
dbType00E K
:00K L
OracleMappingType00M ^
.00^ _
Int3200_ d
,00d e
	direction00f o
:00o p
ParameterDirection	00q É
.
00É Ñ
Input
00Ñ â
)
00â ä
;
00ä ã
	parmeters11 
.11 
Add11 
(11 
name11 "
:11" #
$str11$ -
,11- .
$num11/ 0
,110 1
dbType112 8
:118 9
OracleMappingType11: K
.11K L
Int3211L Q
,11Q R
	direction11S \
:11\ ]
ParameterDirection11^ p
.11p q
Input11q v
)11v w
;11w x
	parmeters22 
.22 
Add22 
(22 
name22 "
:22" #
$str22$ -
,22- .
dbType22/ 5
:225 6
OracleMappingType227 H
.22H I
	RefCursor22I R
,22R S
	direction22T ]
:22] ^
ParameterDirection22_ q
.22q r
Output22r x
)22x y
;22y z!
pendingReimbursements33 %
=33& '
(33( )
await33) .

connection33/ 9
.339 :

QueryAsync33: D
<33D E 
PendingReimbursement33E Y
>33Y Z
(33Z [
DatabaseProcedures33[ m
.33m n 
GET_REIM_BAL_PORTAL	33n Å
,
33Å Ç
	parmeters
33É å
,
33å ç
commandType
33é ô
:
33ô ö
CommandType
33õ ¶
.
33¶ ß
StoredProcedure
33ß ∂
)
33∂ ∑
)
33∑ ∏
.
33∏ π
ToList
33π ø
(
33ø ¿
)
33¿ ¡
;
33¡ ¬
}44 
return55 !
pendingReimbursements55 (
;55( )
}66 	
public88 
async88 
Task88 
<88 
bool88 
>88 #
DeleteReimbursementBill88  7
(887 8
int888 ;
reimbursementId88< K
)88K L
{99 	
bool:: 
	isDeleted:: 
=:: 
false:: "
;::" #
int;; 
updatedRecords;; 
=;;  
$num;;! "
;;;" #
using<< 
(<< 
IDbConnection<<  

connection<<! +
=<<, -
await<<. 3
base<<4 8
.<<8 9
CreateConnection<<9 I
(<<I J
DbSchema<<J R
.<<R S
PORTAL<<S Y
)<<Y Z
)<<Z [
{== #
OracleDynamicParameters>> '
	parmeters>>( 1
=>>2 3
new>>4 7#
OracleDynamicParameters>>8 O
(>>O P
)>>P Q
;>>Q R
	parmeters?? 
.?? 
Add?? 
(?? 
name?? "
:??" #
$str??$ 6
,??6 7
reimbursementId??8 G
,??G H
dbType??I O
:??O P
OracleMappingType??Q b
.??b c
Int32??c h
,??h i
	direction??j s
:??s t
ParameterDirection	??u á
.
??á à
Input
??à ç
)
??ç é
;
??é è
updatedRecords@@ 
=@@  
await@@! &

connection@@' 1
.@@1 2
ExecuteAsync@@2 >
(@@> ?
DatabaseProcedures@@? Q
.@@Q R 
DELETE_REIMBURSEMENT@@R f
,@@f g
	parmeters@@h q
,@@q r
commandType@@s ~
:@@~ 
CommandType
@@Ä ã
.
@@ã å
StoredProcedure
@@å õ
)
@@õ ú
;
@@ú ù
}AA 
	isDeletedBB 
=BB 
(BB 
updatedRecordsBB '
*BB( )
-BB* +
$numBB+ ,
)BB, -
>BB. /
$numBB0 1
;BB1 2
returnCC 
	isDeletedCC 
;CC 
}DD 	
publicFF 
asyncFF 
TaskFF 
<FF 
boolFF 
>FF 
UploadReimburesmentFF  3
(FF3 4%
UploadReimbursmentDetailsFF4 M%
uploadReimbursmentDetailsFFN g
)FFg h
{GG 	
boolHH 
resultHH 
=HH 
falseHH 
;HH  
intII 
recordsUpdatedII 
=II  
$numII! "
;II" #
usingJJ 
(JJ 
varJJ 

connectionJJ !
=JJ" #
awaitJJ$ )
baseJJ* .
.JJ. /
CreateConnectionJJ/ ?
(JJ? @
DbSchemaJJ@ H
.JJH I
PORTALJJI O
)JJO P
)JJP Q
{KK #
OracleDynamicParametersLL '
	parmetersLL( 1
=LL2 3
newLL4 7
(LL7 8
)LL8 9
;LL9 :%
UploadReimbursmentDetailsMM )&
uploadReimbursmentDetails1MM* D
=MME F
awaitMMG L!
UploadFileToDirectoryMMM b
(MMb c%
uploadReimbursmentDetailsMMc |
)MM| }
;MM} ~
ifNN 
(NN &
uploadReimbursmentDetails1NN .
!=NN/ 1
nullNN2 6
)NN6 7
{OO 
	parmetersQQ 
.QQ 
AddQQ !
(QQ! "
nameQQ" &
:QQ& '
$strQQ( 1
,QQ1 2%
uploadReimbursmentDetailsQQ3 L
.QQL M

BillNumberQQM W
,QQW X
dbTypeQQY _
:QQ_ `
OracleMappingTypeQQa r
.QQr s
Varchar2QQs {
,QQ{ |
	direction	QQ} Ü
:
QQÜ á 
ParameterDirection
QQà ö
.
QQö õ
Input
QQõ †
)
QQ† °
;
QQ° ¢
	parmetersRR 
.RR 
AddRR !
(RR! "
nameRR" &
:RR& '
$strRR( 3
,RR3 4%
uploadReimbursmentDetailsRR5 N
.RRN O
BillDateRRO W
,RRW X
dbTypeRRY _
:RR_ `
OracleMappingTypeRRa r
.RRr s
DateRRs w
,RRw x
	direction	RRy Ç
:
RRÇ É 
ParameterDirection
RRÑ ñ
.
RRñ ó
Input
RRó ú
)
RRú ù
;
RRù û
	parmetersSS 
.SS 
AddSS !
(SS! "
nameSS" &
:SS& '
$strSS( 1
,SS1 2%
uploadReimbursmentDetailsSS3 L
.SSL M
AmountSSM S
,SSS T
dbTypeSSU [
:SS[ \
OracleMappingTypeSS] n
.SSn o
Int32SSo t
,SSt u
	directionSSv 
:	SS Ä 
ParameterDirection
SSÅ ì
.
SSì î
Input
SSî ô
)
SSô ö
;
SSö õ
	parmetersTT 
.TT 
AddTT !
(TT! "
nameTT" &
:TT& '
$strTT( 3
,TT3 4&
uploadReimbursmentDetails1TT5 O
.TTO P
FileTTP T
.TTT U
FileNameTTU ]
,TT] ^
dbTypeTT_ e
:TTe f
OracleMappingTypeTTg x
.TTx y
Varchar2	TTy Å
,
TTÅ Ç
	direction
TTÉ å
:
TTå ç 
ParameterDirection
TTé †
.
TT† °
Input
TT° ¶
)
TT¶ ß
;
TTß ®
	parmetersUU 
.UU 
AddUU !
(UU! "
nameUU" &
:UU& '
$strUU( 3
,UU3 4&
uploadReimbursmentDetails1UU5 O
.UUO P
FilePathUUP X
,UUX Y
dbTypeUUZ `
:UU` a
OracleMappingTypeUUb s
.UUs t
Varchar2UUt |
,UU| }
	direction	UU~ á
:
UUá à 
ParameterDirection
UUâ õ
.
UUõ ú
Input
UUú °
)
UU° ¢
;
UU¢ £
	parmetersVV 
.VV 
AddVV !
(VV! "
nameVV" &
:VV& '
$strVV( 6
,VV6 7%
uploadReimbursmentDetailsVV8 Q
.VVQ R
PBranchSLNoVVR ]
,VV] ^
dbTypeVV_ e
:VVe f
OracleMappingTypeVVg x
.VVx y
Int32VVy ~
,VV~ 
	direction
VVÄ â
:
VVâ ä 
ParameterDirection
VVã ù
.
VVù û
Input
VVû £
)
VV£ §
;
VV§ •
	parmetersWW 
.WW 
AddWW !
(WW! "
nameWW" &
:WW& '
$strWW( 4
,WW4 5%
uploadReimbursmentDetailsWW6 O
.WWO P
	MonthSLNoWWP Y
,WWY Z
dbTypeWW[ a
:WWa b
OracleMappingTypeWWc t
.WWt u
Int32WWu z
,WWz {
	direction	WW| Ö
:
WWÖ Ü 
ParameterDirection
WWá ô
.
WWô ö
Input
WWö ü
)
WWü †
;
WW† °
	parmetersXX 
.XX 
AddXX !
(XX! "
nameXX" &
:XX& '
$strXX( 2
,XX2 3%
uploadReimbursmentDetailsXX4 M
.XXM N
EmpSLNoXXN U
,XXU V
dbTypeXXW ]
:XX] ^
OracleMappingTypeXX_ p
.XXp q
Int32XXq v
,XXv w
	direction	XXx Å
:
XXÅ Ç 
ParameterDirection
XXÉ ï
.
XXï ñ
Input
XXñ õ
)
XXõ ú
;
XXú ù
	parmetersYY 
.YY 
AddYY !
(YY! "
nameYY" &
:YY& '
$strYY( 3
,YY3 4%
uploadReimbursmentDetailsYY5 N
.YYN O
UniqueNoYYO W
,YYW X
dbTypeYYY _
:YY_ `
OracleMappingTypeYYa r
.YYr s
Int32YYs x
,YYx y
	direction	YYz É
:
YYÉ Ñ 
ParameterDirection
YYÖ ó
.
YYó ò
Input
YYò ù
)
YYù û
;
YYû ü
	parmetersZZ 
.ZZ 
AddZZ !
(ZZ! "
nameZZ" &
:ZZ& '
$strZZ( 3
,ZZ3 4%
uploadReimbursmentDetailsZZ5 N
.ZZN O
UserSLNoZZO W
,ZZW X
dbTypeZZY _
:ZZ_ `
OracleMappingTypeZZa r
.ZZr s
Int32ZZs x
,ZZx y
	direction	ZZz É
:
ZZÉ Ñ 
ParameterDirection
ZZÖ ó
.
ZZó ò
Input
ZZò ù
)
ZZù û
;
ZZû ü
	parmeters[[ 
.[[ 
Add[[ !
([[! "
name[[" &
:[[& '
$str[[( 3
,[[3 4
$num[[5 7
,[[7 8
dbType[[9 ?
:[[? @
OracleMappingType[[A R
.[[R S
Int32[[S X
,[[X Y
	direction[[Z c
:[[c d
ParameterDirection[[e w
.[[w x
Input[[x }
)[[} ~
;[[~ 
recordsUpdated\\ "
=\\# $
await\\% *

connection\\+ 5
.\\5 6
ExecuteAsync\\6 B
(\\B C
DatabaseProcedures\\C U
.\\U V%
REIMBURESMENT_FILE_UPLOAD\\V o
,\\o p
	parmeters\\q z
,\\z {
commandType	\\| á
:
\\á à
CommandType
\\â î
.
\\î ï
StoredProcedure
\\ï §
)
\\§ •
;
\\• ¶
}]] 
}^^ 
result__ 
=__ 
(__ 
recordsUpdated__ $
*__% &
-__' (
$num__( )
)__) *
>__+ ,
$num__- .
;__. /
return`` 
result`` 
;`` 
}aa 	
privatecc 
asynccc 
Taskcc 
<cc 
intcc 
>cc %
GetPendingBillsTotalCountcc  9
(cc9 :
intcc: =
empSLNocc> E
)ccE F
{dd 	
intee 

totalCountee 
=ee 
$numee 
;ee 
usingff 
(ff 
IDbConnectionff  

connectionff! +
=ff, -
awaitff. 3
baseff4 8
.ff8 9
CreateConnectionff9 I
(ffI J
DbSchemaffJ R
.ffR S
PORTALffS Y
)ffY Z
)ffZ [
{gg #
OracleDynamicParametershh '
	parmetershh( 1
=hh2 3
newhh4 7#
OracleDynamicParametershh8 O
(hhO P
)hhP Q
;hhQ R
	parmetersii 
.ii 
Addii 
(ii 
nameii "
:ii" #
$strii$ .
,ii. /
empSLNoii0 7
,ii7 8
dbTypeii9 ?
:ii? @
OracleMappingTypeiiA R
.iiR S
Int32iiS X
,iiX Y
	directioniiZ c
:iic d
ParameterDirectioniie w
.iiw x
Inputiix }
)ii} ~
;ii~ 
	parmetersjj 
.jj 
Addjj 
(jj 
namejj "
:jj" #
$strjj$ -
,jj- .
dbTypejj/ 5
:jj5 6
OracleMappingTypejj7 H
.jjH I
	RefCursorjjI R
,jjR S
	directionjjT ]
:jj] ^
ParameterDirectionjj_ q
.jjq r
Outputjjr x
)jjx y
;jjy z

totalCountkk 
=kk 
(kk 
awaitkk #

connectionkk$ .
.kk. /
ExecuteScalarAsynckk/ A
<kkA B
intkkB E
>kkE F
(kkF G
DatabaseProcedureskkG Y
.kkY Z'
GET_EMP_PENDING_BILLS_COUNTkkZ u
,kku v
	parmeters	kkw Ä
,
kkÄ Å
commandType
kkÇ ç
:
kkç é
CommandType
kkè ö
.
kkö õ
StoredProcedure
kkõ ™
)
kk™ ´
)
kk´ ¨
;
kk¨ ≠
}ll 
returnmm 

totalCountmm 
;mm 
}nn 	
privateoo 
asyncoo 
Taskoo 
<oo 
intoo 
>oo &
GetApprovedBillsTotalCountoo  :
(oo: ;
intoo; >
empSLNooo? F
)ooF G
{pp 	
intqq 

totalCountqq 
=qq 
$numqq 
;qq 
usingrr 
(rr 
IDbConnectionrr  

connectionrr! +
=rr, -
awaitrr. 3
baserr4 8
.rr8 9
CreateConnectionrr9 I
(rrI J
DbSchemarrJ R
.rrR S
PORTALrrS Y
)rrY Z
)rrZ [
{ss #
OracleDynamicParameterstt '
	parmeterstt( 1
=tt2 3
newtt4 7#
OracleDynamicParameterstt8 O
(ttO P
)ttP Q
;ttQ R
	parmetersuu 
.uu 
Adduu 
(uu 
nameuu "
:uu" #
$struu$ .
,uu. /
empSLNouu0 7
,uu7 8
dbTypeuu9 ?
:uu? @
OracleMappingTypeuuA R
.uuR S
Int32uuS X
,uuX Y
	directionuuZ c
:uuc d
ParameterDirectionuue w
.uuw x
Inputuux }
)uu} ~
;uu~ 
	parmetersvv 
.vv 
Addvv 
(vv 
namevv "
:vv" #
$strvv$ -
,vv- .
dbTypevv/ 5
:vv5 6
OracleMappingTypevv7 H
.vvH I
	RefCursorvvI R
,vvR S
	directionvvT ]
:vv] ^
ParameterDirectionvv_ q
.vvq r
Outputvvr x
)vvx y
;vvy z

totalCountww 
=ww 
(ww 
awaitww #

connectionww$ .
.ww. /
ExecuteScalarAsyncww/ A
<wwA B
intwwB E
>wwE F
(wwF G
DatabaseProcedureswwG Y
.wwY Z(
GET_EMP_APPROVED_BILLS_COUNTwwZ v
,wwv w
	parmeters	wwx Å
,
wwÅ Ç
commandType
wwÉ é
:
wwé è
CommandType
wwê õ
.
wwõ ú
StoredProcedure
wwú ´
)
ww´ ¨
)
ww¨ ≠
;
ww≠ Æ
}xx 
returnyy 

totalCountyy 
;yy 
}zz 	
private|| 
async|| 
Task|| 
<|| %
UploadReimbursmentDetails|| 4
>||4 5!
UploadFileToDirectory||6 K
(||K L%
UploadReimbursmentDetails||L e
uploadReimbursment||f x
)||x y
{}} 	%
UploadReimbursmentDetails~~ %
uploadReimbursment1~~& 9
=~~: ;
null~~< @
;~~@ A
string 
fileType 
= 
Path "
." #
GetExtension# /
(/ 0
uploadReimbursment0 B
.B C
FileC G
.G H
FileNameH P
)P Q
.Q R
ToStringR Z
(Z [
)[ \
.\ ]
ToLower] d
(d e
)e f
;f g
string
ÄÄ 
fileName
ÄÄ 
=
ÄÄ 
string
ÄÄ $
.
ÄÄ$ %
Format
ÄÄ% +
(
ÄÄ+ ,
$str
ÄÄ, :
,
ÄÄ: ; 
uploadReimbursment
ÄÄ< N
.
ÄÄN O
EmpSLNo
ÄÄO V
,
ÄÄV W 
uploadReimbursment
ÄÄX j
.
ÄÄj k
UniqueNo
ÄÄk s
,
ÄÄs t
DateTime
ÄÄu }
.
ÄÄ} ~
NowÄÄ~ Å
.ÄÄÅ Ç
TicksÄÄÇ á
,ÄÄá à
fileTypeÄÄâ ë
)ÄÄë í
;ÄÄí ì
var
ÅÅ 
filePath
ÅÅ 
=
ÅÅ !
ApplicationSettings
ÅÅ .
.
ÅÅ. /
Current
ÅÅ/ 6
.
ÅÅ6 7
ReimbursementPath
ÅÅ7 H
;
ÅÅH I
string
ÇÇ 
fullPath
ÇÇ 
=
ÇÇ 
Path
ÇÇ "
.
ÇÇ" #
Combine
ÇÇ# *
(
ÇÇ* +
filePath
ÇÇ+ 3
,
ÇÇ3 4
fileName
ÇÇ5 =
)
ÇÇ= >
;
ÇÇ> ?
string
ÉÉ 
base64String
ÉÉ 
=
ÉÉ  ! 
uploadReimbursment
ÉÉ" 4
.
ÉÉ4 5
File
ÉÉ5 9
.
ÉÉ9 :
FileAsBase64
ÉÉ: F
.
ÉÉF G
	Substring
ÉÉG P
(
ÉÉP Q 
uploadReimbursment
ÉÉQ c
.
ÉÉc d
File
ÉÉd h
.
ÉÉh i
FileAsBase64
ÉÉi u
.
ÉÉu v
IndexOf
ÉÉv }
(
ÉÉ} ~
$charÉÉ~ Å
)ÉÉÅ Ç
+ÉÉÉ Ñ
$numÉÉÖ Ü
)ÉÉÜ á
;ÉÉá à
byte
ÑÑ 
[
ÑÑ 
]
ÑÑ 

imageBytes
ÑÑ 
=
ÑÑ 
Convert
ÑÑ  '
.
ÑÑ' (
FromBase64String
ÑÑ( 8
(
ÑÑ8 9
base64String
ÑÑ9 E
)
ÑÑE F
;
ÑÑF G!
uploadReimbursment1
ÖÖ 
=
ÖÖ  !
new
ÖÖ" %'
UploadReimbursmentDetails
ÖÖ& ?
(
ÖÖ? @
)
ÖÖ@ A
;
ÖÖA B
File
ÜÜ 
.
ÜÜ 
WriteAllBytes
ÜÜ 
(
ÜÜ 
fullPath
ÜÜ '
,
ÜÜ' (

imageBytes
ÜÜ) 3
)
ÜÜ3 4
;
ÜÜ4 5!
uploadReimbursment1
áá 
.
áá  
FilePath
áá  (
=
áá) *
fullPath
áá+ 3
;
áá3 4!
uploadReimbursment1
àà 
.
àà  
File
àà  $
=
àà% &
new
àà' *
FileToUpload
àà+ 7
(
àà7 8
)
àà8 9
;
àà9 :!
uploadReimbursment1
ââ 
.
ââ  
File
ââ  $
.
ââ$ %
FileName
ââ% -
=
ââ. /
fileName
ââ0 8
;
ââ8 9
return
ää !
uploadReimbursment1
ää &
;
ää& '
}
ãã 	
}
åå 
}çç Ç
LF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Reports\EmpPsDs.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Reports& -
{ 
} ƒ
mF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\SendEmailNotification\ResignedEmployeeRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &!
SendEmailNotification& ;
{ 
public 

class &
ResignedEmployeeRepository +
:, -
BaseRepository. <
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public &
ResignedEmployeeRepository )
() *
IConfiguration* 8
configuration9 F
)F G
:H I
baseJ N
(N O
configurationO \
)\ ]
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
ResignedEmployee /
>/ 0
>0 1 
GetResignedEmployees2 F
(F G
)G H
{ 	
List 
< 
ResignedEmployee !
>! "
	emailList# ,
=- .
null/ 3
;3 4
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{ #
OracleDynamicParameters '

parameters( 2
=3 4
new5 8#
OracleDynamicParameters9 P
(P Q
)Q R
;R S

parameters 
. 
Add 
( 
name #
:# $
$str% .
,. /
dbType0 6
:6 7
OracleMappingType8 I
.I J
	RefCursorJ S
,S T
	directionU ^
:^ _
ParameterDirection` r
.r s
Outputs y
)y z
;z {
	emailList 
= 
( 
await "

connection# -
.- .

QueryAsync. 8
<8 9
ResignedEmployee9 I
>I J
(J K
DatabaseProceduresK ]
.] ^%
SP_GET_RESIGNED_EMPLOYEES^ w
,w x

parameters	y É
,
É Ñ
commandType
Ö ê
:
ê ë
CommandType
í ù
.
ù û
StoredProcedure
û ≠
)
≠ Æ
)
Æ Ø
.
Ø ∞
ToList
∞ ∂
(
∂ ∑
)
∑ ∏
;
∏ π
}   
return!! 
	emailList!! 
;!! 
}"" 	
}## 
}$$ ⁄_
fF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\SendEmailNotification\SendEmailRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &!
SendEmailNotification& ;
{ 
public 

class 
SendEmailRepository $
:% &
BaseRepository' 5
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
SendEmailRepository "
(" #
IConfiguration# 1
configuration2 ?
)? @
:A B
baseC G
(G H
configurationH U
)U V
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
EmailDetails +
>+ ,
>, -
GetPendingEmails. >
(> ?
)? @
{ 	
List 
< 
EmailDetails 
> 
	emailList (
=) *
null+ /
;/ 0
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{   #
OracleDynamicParameters!! '

parameters!!( 2
=!!3 4
new!!5 8#
OracleDynamicParameters!!9 P
(!!P Q
)!!Q R
;!!R S

parameters"" 
."" 
Add"" 
("" 
name"" #
:""# $
$str""% .
,"". /
dbType""0 6
:""6 7
OracleMappingType""8 I
.""I J
	RefCursor""J S
,""S T
	direction""U ^
:""^ _
ParameterDirection""` r
.""r s
Output""s y
)""y z
;""z {
	emailList## 
=## 
(## 
await## "

connection### -
.##- .

QueryAsync##. 8
<##8 9
EmailDetails##9 E
>##E F
(##F G
DatabaseProcedures##G Y
.##Y Z
GET_SEND_EMAILS##Z i
,##i j

parameters##k u
,##u v
commandType	##w Ç
:
##Ç É
CommandType
##Ñ è
.
##è ê
StoredProcedure
##ê ü
)
##ü †
)
##† °
.
##° ¢
ToList
##¢ ®
(
##® ©
)
##© ™
;
##™ ´
}$$ 
return%% 
	emailList%% 
;%% 
}&& 	
public'' 
async'' 
Task'' 
<'' 
List'' 
<'' 
EmailDetails'' +
>''+ ,
>'', -
GetPendingEmails2''. ?
(''? @
)''@ A
{(( 	
List)) 
<)) 
EmailDetails)) 
>)) 
	emailList)) (
=))) *
null))+ /
;))/ 0
using** 
(** 
var** 

connection** !
=**" #
await**$ )
base*** .
.**. /
CreateConnection**/ ?
(**? @
DbSchema**@ H
.**H I
PORTAL**I O
)**O P
)**P Q
{++ #
OracleDynamicParameters,, '

parameters,,( 2
=,,3 4
new,,5 8#
OracleDynamicParameters,,9 P
(,,P Q
),,Q R
;,,R S

parameters-- 
.-- 
Add-- 
(-- 
name-- #
:--# $
$str--% .
,--. /
dbType--0 6
:--6 7
OracleMappingType--8 I
.--I J
	RefCursor--J S
,--S T
	direction--U ^
:--^ _
ParameterDirection--` r
.--r s
Output--s y
)--y z
;--z {
	emailList.. 
=.. 
(.. 
await.. "

connection..# -
...- .

QueryAsync... 8
<..8 9
EmailDetails..9 E
>..E F
(..F G
DatabaseProcedures..G Y
...Y Z
GET_SEND_EMAILS2..Z j
,..j k

parameters..l v
,..v w
commandType	..x É
:
..É Ñ
CommandType
..Ö ê
.
..ê ë
StoredProcedure
..ë †
)
..† °
)
..° ¢
.
..¢ £
ToList
..£ ©
(
..© ™
)
..™ ´
;
..´ ¨
}// 
return00 
	emailList00 
;00 
}11 	
public33 
async33 
Task33  
UpdateMailSentStatus33 .
(33. /
List33/ 3
<333 4
int334 7
>337 8
seletedLeaveIds339 H
)33H I
{44 	
using55 
(55 
var55 

connection55 !
=55" #
await55$ )
base55* .
.55. /
CreateConnection55/ ?
(55? @
DbSchema55@ H
.55H I
PORTAL55I O
)55O P
)55P Q
{66 #
OracleDynamicParameters77 '

parameters77( 2
=773 4
new775 8#
OracleDynamicParameters779 P
(77P Q
)77Q R
;77R S

parameters88 
.88 
Add88 
(88 
name88 #
:88# $
$str88% 7
,887 8
seletedLeaveIds889 H
.88H I
ToArray88I P
(88P Q
)88Q R
,88R S
dbType88T Z
:88Z [
OracleMappingType88\ m
.88m n
Int3288n s
,88s t
	direction88u ~
:88~  
ParameterDirection
88Ä í
.
88í ì
Input
88ì ò
,
88ò ô
seletedLeaveIds
88ö ©
.
88© ™
Count
88™ Ø
,
88Ø ∞
collectionType99 &
:99& ''
OracleMappingCollectionType99( C
.99C D!
PLSQLAssociativeArray99D Y
)99Y Z
;99Z [
await:: 

connection::  
.::  !
ExecuteAsync::! -
(::- .
DatabaseProcedures::. @
.::@ A
SP_UPDATE_MAIL_SENT::A T
,::T U

parameters::V `
,::` a
commandType::b m
:::m n
CommandType::o z
.::z {
StoredProcedure	::{ ä
)
::ä ã
;
::ã å
};; 
}<< 	
public== 
async== 
Task== !
UpdateSentMailStatus2== /
(==/ 0
List==0 4
<==4 5
int==5 8
>==8 9
seletedLeaveIds==: I
)==I J
{>> 	
using?? 
(?? 
var?? 

connection?? !
=??" #
await??$ )
base??* .
.??. /
CreateConnection??/ ?
(??? @
DbSchema??@ H
.??H I
PORTAL??I O
)??O P
)??P Q
{@@ #
OracleDynamicParametersAA '

parametersAA( 2
=AA3 4
newAA5 8#
OracleDynamicParametersAA9 P
(AAP Q
)AAQ R
;AAR S

parametersBB 
.BB 
AddBB 
(BB 
nameBB #
:BB# $
$strBB% 7
,BB7 8
seletedLeaveIdsBB9 H
.BBH I
ToArrayBBI P
(BBP Q
)BBQ R
,BBR S
dbTypeBBT Z
:BBZ [
OracleMappingTypeBB\ m
.BBm n
Int32BBn s
,BBs t
	directionBBu ~
:BB~  
ParameterDirection
BBÄ í
.
BBí ì
Input
BBì ò
,
BBò ô
seletedLeaveIds
BBö ©
.
BB© ™
Count
BB™ Ø
,
BBØ ∞
collectionTypeCC &
:CC& ''
OracleMappingCollectionTypeCC( C
.CCC D!
PLSQLAssociativeArrayCCD Y
)CCY Z
;CCZ [
awaitDD 

connectionDD  
.DD  !
ExecuteAsyncDD! -
(DD- .
DatabaseProceduresDD. @
.DD@ A&
SP_UPDATE_SENT_MAIL_STATUSDDA [
,DD[ \

parametersDD] g
,DDg h
commandTypeDDi t
:DDt u
CommandType	DDv Å
.
DDÅ Ç
StoredProcedure
DDÇ ë
)
DDë í
;
DDí ì
}EE 
}FF 	
publicII 
asyncII 
TaskII #
UpdateOTPMailSentStatusII 1
(II1 2
ListII2 6
<II6 7
intII7 :
>II: ;
seletedMailIdII< I
)III J
{JJ 	
usingKK 
(KK 
varKK 

connectionKK !
=KK" #
awaitKK$ )
baseKK* .
.KK. /
CreateConnectionKK/ ?
(KK? @
DbSchemaKK@ H
.KKH I
PORTALKKI O
)KKO P
)KKP Q
{LL #
OracleDynamicParametersMM '

parametersMM( 2
=MM3 4
newMM5 8#
OracleDynamicParametersMM9 P
(MMP Q
)MMQ R
;MMR S

parametersNN 
.NN 
AddNN 
(NN 
nameNN #
:NN# $
$strNN% 5
,NN5 6
seletedMailIdNN7 D
.NND E
ToArrayNNE L
(NNL M
)NNM N
,NNN O
dbTypeNNP V
:NNV W
OracleMappingTypeNNX i
.NNi j
Int32NNj o
,NNo p
	directionNNq z
:NNz {
ParameterDirection	NN| é
.
NNé è
Input
NNè î
,
NNî ï
seletedMailId
NNñ £
.
NN£ §
Count
NN§ ©
,
NN© ™
collectionTypeOO &
:OO& ''
OracleMappingCollectionTypeOO( C
.OOC D!
PLSQLAssociativeArrayOOD Y
)OOY Z
;OOZ [
awaitPP 

connectionPP  
.PP  !
ExecuteAsyncPP! -
(PP- .
DatabaseProceduresPP. @
.PP@ A#
SP_UPDATE_OTP_MAIL_SENTPPA X
,PPX Y

parametersPPZ d
,PPd e
commandTypePPf q
:PPq r
CommandTypePPs ~
.PP~ 
StoredProcedure	PP é
)
PPé è
;
PPè ê
}QQ 
}RR 	
publicTT 
asyncTT 
TaskTT 
<TT 
ListTT 
<TT  
EmailOtpVerificationTT 3
>TT3 4
>TT4 5
GetPendingOTPEmailsTT6 I
(TTI J
)TTJ K
{UU 	
ListVV 
<VV  
EmailOtpVerificationVV '
>VV' (
verificationDetailsVV) <
=VV= >
nullVV? C
;VVC D
usingWW 
(WW 
varWW 

connectionWW !
=WW" #
awaitWW$ )
baseWW* .
.WW. /
CreateConnectionWW/ ?
(WW? @
DbSchemaWW@ H
.WWH I
PORTALWWI O
)WWO P
)WWP Q
{XX #
OracleDynamicParametersYY '

parametersYY( 2
=YY3 4
newYY5 8#
OracleDynamicParametersYY9 P
(YYP Q
)YYQ R
;YYR S

parametersZZ 
.ZZ 
AddZZ 
(ZZ 
nameZZ #
:ZZ# $
$strZZ% .
,ZZ. /
dbTypeZZ0 6
:ZZ6 7
OracleMappingTypeZZ8 I
.ZZI J
	RefCursorZZJ S
,ZZS T
	directionZZU ^
:ZZ^ _
ParameterDirectionZZ` r
.ZZr s
OutputZZs y
)ZZy z
;ZZz {
verificationDetails[[ #
=[[$ %
([[& '
await[[' ,

connection[[- 7
.[[7 8

QueryAsync[[8 B
<[[B C 
EmailOtpVerification[[C W
>[[W X
([[X Y
DatabaseProcedures[[Y k
.[[k l*
SP_SENT_EMAILOTP_VERIFICATION	[[l â
,
[[â ä

parameters
[[ã ï
,
[[ï ñ
commandType
[[ó ¢
:
[[¢ £
CommandType
[[§ Ø
.
[[Ø ∞
StoredProcedure
[[∞ ø
)
[[ø ¿
)
[[¿ ¡
.
[[¡ ¬
ToList
[[¬ »
(
[[» …
)
[[…  
;
[[  À
}]] 
return__ 
verificationDetails__ &
;__& '
}`` 	
}ll 
}mm –H
hF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\SiteNotificaton\SiteNotificationRespository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
SiteNotificaton& 5
{ 
public 

class '
SiteNotificationRespository ,
:- .
BaseRepository/ =
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
private 
readonly 
ILoggerManager '
logger( .
;. /
public '
SiteNotificationRespository *
(* +
IConfiguration+ 9
configuration: G
,G H
ILoggerManagerI W
loggerX ^
)^ _
:` a
baseb f
(f g
configurationg t
)t u
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
this 
. 
logger 
= 
logger  
;  !
}   	
public"" 
async"" 
Task"" 
<"" #
SiteNotificationDetails"" 1
>""1 2 
GetSiteNotifications""3 G
(""G H
int""H K
officeTypeslno""L Z
)""Z [
{## 	#
SiteNotificationDetails$$ #
sitenotifications$$$ 5
=$$6 7
null$$8 <
;$$< =
using%% 
(%% 
var%% 

connection%% !
=%%" #
await%%$ )
CreateConnection%%* :
(%%: ;
DbSchema%%; C
.%%C D
PORTAL%%D J
)%%J K
)%%K L
{&& #
OracleDynamicParameters'' '

parameters''( 2
=''3 4
new''5 8#
OracleDynamicParameters''9 P
(''P Q
)''Q R
;''R S

parameters(( 
.(( 
Add(( 
((( 
name(( #
:((# $
$str((% 6
,((6 7
officeTypeslno((8 F
,((F G
dbType((H N
:((N O
OracleMappingType((P a
.((a b
Int32((b g
,((g h
	direction((i r
:((r s
ParameterDirection	((t Ü
.
((Ü á
Input
((á å
)
((å ç
;
((ç é

parameters)) 
.)) 
Add)) 
()) 
name)) #
:))# $
$str))% .
,)). /
dbType))0 6
:))6 7
OracleMappingType))8 I
.))I J
	RefCursor))J S
,))S T
	direction))U ^
:))^ _
ParameterDirection))` r
.))r s
Output))s y
)))y z
;))z {
sitenotifications** !
=**" #
await**$ )

connection*** 4
.**4 5$
QueryFirstOrDefaultAsync**5 M
<**M N#
SiteNotificationDetails**N e
>**e f
(**f g
DatabaseProcedures**g y
.**y z#
GET_SITE_NOTIFICATIONS	**z ê
,
**ê ë

parameters
**í ú
,
**ú ù
commandType
**û ©
:
**© ™
CommandType
**´ ∂
.
**∂ ∑
StoredProcedure
**∑ ∆
)
**∆ «
;
**« »
},, 
return-- 
sitenotifications-- $
;--$ %
}.. 	
public00 
async00 
Task00 
<00 
EmpLeaveResponse00 *
>00* + 
SaveEmployeeFeedback00, @
(00@ A#
EmployeeFeedbackDetails00A X
feedbackDetails00Y h
)00h i
{11 	
EmpLeaveResponse22 
response22 %
=22& '
null22( ,
;22, -#
EmployeeFeedbackDetails33 #
empFeedback33$ /
=330 1
null332 6
;336 7
var66 
toEmail66 
=66 
ApplicationSettings66 -
.66- .
Current66. 5
.665 6
FeedbackEmail666 C
;66C D
var77 
Subject77 
=77 
ApplicationSettings77 -
.77- .
Current77. 5
.775 6
FeedbackSubject776 E
;77E F
int88 
FeedbackSave88 
=88 
$num88  
;88  !#
OracleDynamicParameters99 #

parameters99$ .
=99/ 0
null991 5
;995 6
using:: 
(:: 
IDbConnection::  

connection::! +
=::, -
await::. 3
base::4 8
.::8 9
CreateConnection::9 I
(::I J
DbSchema::J R
.::R S
PORTAL::S Y
)::Y Z
)::Z [
{;; 
using<< 
(<< 
var<< 
tran<< 
=<<  !

connection<<" ,
.<<, -
BeginTransaction<<- =
(<<= >
)<<> ?
)<<? @
{== 

parameters>> 
=>>  
new>>! $#
OracleDynamicParameters>>% <
(>>< =
)>>= >
;>>> ?

parameters?? 
.?? 
Add?? "
(??" #
name??# '
:??' (
$str??) 4
,??4 5
feedbackDetails??6 E
.??E F
Feedback??F N
,??N O
dbType??P V
:??V W
OracleMappingType??X i
.??i j
Varchar2??j r
,??r s
	direction??t }
:??} ~
ParameterDirection	?? ë
.
??ë í
Input
??í ó
)
??ó ò
;
??ò ô

parameters@@ 
.@@ 
Add@@ "
(@@" #
name@@# '
:@@' (
$str@@) 8
,@@8 9
feedbackDetails@@: I
.@@I J

Created_by@@J T
,@@T U
dbType@@V \
:@@\ ]
OracleMappingType@@^ o
.@@o p
Int32@@p u
,@@u v
	direction	@@w Ä
:
@@Ä Å 
ParameterDirection
@@Ç î
.
@@î ï
Input
@@ï ö
)
@@ö õ
;
@@õ ú

parametersAA 
.AA 
AddAA "
(AA" #
nameAA# '
:AA' (
$strAA) 9
,AA9 :
SubjectAA; B
,AAB C
dbTypeAAD J
:AAJ K
OracleMappingTypeAAL ]
.AA] ^
Varchar2AA^ f
,AAf g
	directionAAh q
:AAq r
ParameterDirection	AAs Ö
.
AAÖ Ü
Input
AAÜ ã
)
AAã å
;
AAå ç

parametersBB 
.BB 
AddBB "
(BB" #
nameBB# '
:BB' (
$strBB) :
,BB: ;
feedbackDetailsBB< K
.BBK L
Office_Type_SlnoBBL \
,BB\ ]
dbTypeBB^ d
:BBd e
OracleMappingTypeBBf w
.BBw x
Int32BBx }
,BB} ~
	direction	BB à
:
BBà â 
ParameterDirection
BBä ú
.
BBú ù
Input
BBù ¢
)
BB¢ £
;
BB£ §

parametersCC 
.CC 
AddCC "
(CC" #
nameCC# '
:CC' (
$strCC) 5
,CC5 6
feedbackDetailsCC7 F
.CCF G

Created_byCCG Q
,CCQ R
dbTypeCCS Y
:CCY Z
OracleMappingTypeCC[ l
.CCl m
Int32CCm r
,CCr s
	directionCCt }
:CC} ~
ParameterDirection	CC ë
.
CCë í
Input
CCí ó
)
CCó ò
;
CCò ô

parametersDD 
.DD 
AddDD "
(DD" #
nameDD# '
:DD' (
$strDD) :
,DD: ;
feedbackDetailsDD< K
.DDK L
	FromEmailDDL U
,DDU V
dbTypeDDW ]
:DD] ^
OracleMappingTypeDD_ p
.DDp q
Varchar2DDq y
,DDy z
	direction	DD{ Ñ
:
DDÑ Ö 
ParameterDirection
DDÜ ò
.
DDò ô
Input
DDô û
)
DDû ü
;
DDü †

parametersEE 
.EE 
AddEE "
(EE" #
nameEE# '
:EE' (
$strEE) 4
,EE4 5
toEmailEE6 =
,EE= >
dbTypeEE? E
:EEE F
OracleMappingTypeEEG X
.EEX Y
Varchar2EEY a
,EEa b
	directionEEc l
:EEl m
ParameterDirection	EEn Ä
.
EEÄ Å
Input
EEÅ Ü
)
EEÜ á
;
EEá à
FeedbackSaveFF  
=FF! "
awaitFF# (

connectionFF) 3
.FF3 4
ExecuteAsyncFF4 @
(FF@ A
DatabaseProceduresFFA S
.FFS T
INSERT_EMP_FEEDBACKFFT g
,FFg h

parametersFFi s
,FFs t
commandType	FFu Ä
:
FFÄ Å
CommandType
FFÇ ç
.
FFç é
StoredProcedure
FFé ù
)
FFù û
;
FFû ü
tranGG 
.GG 
CommitGG 
(GG  
)GG  !
;GG! "
responseII 
=II 
newII "
EmpLeaveResponseII# 3
{JJ 
ResponseKK  
=KK! "
trueKK# '
,KK' (
MessageLL 
=LL  !
$strLL" 3
}MM 
;MM 
}NN 
}OO 
returnPP 
responsePP 
;PP 
}QQ 	
}TT 
}UU Ù
TF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\States\StatesRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
States& ,
{ 
public 

class 
StatesRepository "
:# $
BaseRepository% 3
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public 
StatesRepository 
(  
IConfiguration  .
configuration/ <
)< =
:> ?
base@ D
(D E
configurationE R
)R S
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< 
StatesDetails ,
>, -
>- .
GetStatesDetails/ ?
(? @
)@ A
{ 	
List 
< 
StatesDetails 
> 
statesDetails  -
=. /
null0 4
;4 5
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{ #
OracleDynamicParameters   '
	parmeters  ( 1
=  2 3
new  4 7#
OracleDynamicParameters  8 O
(  O P
)  P Q
;  Q R
	parmeters!! 
.!! 
Add!! 
(!! 
name!! "
:!!" #
$str!!$ -
,!!- .
dbType!!/ 5
:!!5 6
OracleMappingType!!7 H
.!!H I
	RefCursor!!I R
,!!R S
	direction!!T ]
:!!] ^
ParameterDirection!!_ q
.!!q r
Output!!r x
)!!x y
;!!y z
statesDetails"" 
="" 
(""  !
await""! &

connection""' 1
.""1 2

QueryAsync""2 <
<""< =
StatesDetails""= J
>""J K
(""K L
DatabaseProcedures""L ^
.""^ _
STATE_DETAILS""_ l
,""l m
	parmeters""n w
,""w x
commandType	""y Ñ
:
""Ñ Ö
CommandType
""Ü ë
.
""ë í
StoredProcedure
""í °
)
""° ¢
)
""¢ £
.
""£ §
ToList
""§ ™
(
""™ ´
)
""´ ¨
;
""¨ ≠
}## 
return$$ 
statesDetails$$  
;$$  !
}%% 	
}&& 
}'' É#
ZF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\TimeSheet\TimeSheetRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
	TimeSheet& /
{ 
public 

class 
TimeSheetRepository $
:% &
BaseRepository' 5
{ 
private 
IConfiguration 
configuration ,
;, -
public 
TimeSheetRepository "
(" #
IConfiguration# 1
configuration2 ?
)? @
:A B
baseC G
(G H
configurationH U
)U V
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
async 
Task 
< 
List 
< #
TimeSheetProjectDetails 6
>6 7
>7 8%
GetEmployeeProjectDetails9 R
(R S
intS V
employeeSlnoW c
)c d
{ 	
List 
< #
TimeSheetProjectDetails (
>( )
employeePorjects* :
=; <
null= A
;A B
using 
( 
var 

connection !
=" #
await$ )
base* .
.. /
CreateConnection/ ?
(? @
DbSchema@ H
.H I
PORTALI O
)O P
)P Q
{   #
OracleDynamicParameters!! '

parameters!!( 2
=!!3 4
new!!5 8#
OracleDynamicParameters!!9 P
(!!P Q
)!!Q R
;!!R S

parameters"" 
."" 
Add"" 
("" 
name"" #
:""# $
$str""% 4
,""4 5
employeeSlno""6 B
,""B C
dbType""D J
:""J K
OracleMappingType""L ]
.""] ^
Int32""^ c
,""c d
	direction""e n
:""n o
ParameterDirection	""p Ç
.
""Ç É
Input
""É à
)
""à â
;
""â ä

parameters## 
.## 
Add## 
(## 
name## #
:### $
$str##% .
,##. /
dbType##0 6
:##6 7
OracleMappingType##8 I
.##I J
	RefCursor##J S
,##S T
	direction##U ^
:##^ _
ParameterDirection##` r
.##r s
Output##s y
)##y z
;##z {

parameters$$ 
.$$ 
Add$$ 
($$ 
name$$ #
:$$# $
$str$$% /
,$$/ 0
dbType$$1 7
:$$7 8
OracleMappingType$$9 J
.$$J K
	RefCursor$$K T
,$$T U
	direction$$V _
:$$_ `
ParameterDirection$$a s
.$$s t
Output$$t z
)$$z {
;$${ |
var%% 
results%% 
=%% 
await%% #

connection%%$ .
.%%. /
QueryMultipleAsync%%/ A
(%%A B
DatabaseProcedures%%B T
.%%T U&
SP_GET_EMP_PROJECT_DETAILS%%U o
,%%o p

parameters%%q {
,%%{ |
commandType	%%} à
:
%%à â
CommandType
%%ä ï
.
%%ï ñ
StoredProcedure
%%ñ •
)
%%• ¶
;
%%¶ ß
employeePorjects''  
=''! "
results''# *
.''* +
Read''+ /
<''/ 0#
TimeSheetProjectDetails''0 G
>''G H
(''H I
)''I J
.''J K
ToList''K Q
(''Q R
)''R S
;''S T
var(( 
taskInformation(( #
=(($ %
results((& -
.((- .
Read((. 2
<((2 3
TaskInformation((3 B
>((B C
(((C D
)((D E
.((E F
ToList((F L
(((L M
)((M N
;((N O
foreach** 
(** 
var** 
item** !
in**" $
employeePorjects**% 5
)**5 6
{++ 
item,, 
.,, 
TaskInformation,, (
=,,) *
taskInformation,,+ :
.,,: ;
ToList,,; A
(,,A B
),,B C
;,,C D
}-- 
}// 
return00 
employeePorjects00 #
;00# $
}11 	
}22 
}33 Ë_
cF:\Work\Office\Projects\Nspira\Portal\HRMS_API\8-Database\Workflow\WorkFlowInformationRepository.cs
	namespace 	
Phoenix
 
. 
Database 
. 

Repository %
.% &
Workflow& .
{ 
public 

class )
WorkFlowInformationRepository .
:/ 0
BaseRepository1 ?
{ 
private 
readonly 
IDbConnection &
localConnection' 6
;6 7
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public )
WorkFlowInformationRepository ,
(, -
IConfiguration- ;
configuration< I
)I J
:K L
baseM Q
(Q R
configurationR _
)_ `
{ 	
} 	
public )
WorkFlowInformationRepository ,
(, -
IDbConnection- :

connection; E
,E F
IConfigurationG U
configurationV c
)c d
:e f
baseg k
(k l
configurationl y
)y z
{ 	
this 
. 
localConnection  
=! "

connection# -
;- .
this 
. 
configuration 
=  
configuration! .
;. /
}   	
public!! 
async!! 
Task!! 
<!! 
bool!! 
>!! !
InitiateLeaveWorkFlow!!  5
(!!5 6
int!!6 9
employeeSlno!!: F
,!!F G
int!!H K
leaveId!!L S
,!!S T
EmployeeLeave!!U b
leaveRequest!!c o
)!!o p
{"" 	
bool$$ 
isWorkFlowSaved$$  
=$$! "
false$$# (
;$$( )
WorkFlowType%% 
leaveWorkFlowType%% *
=%%+ ,
WorkFlowType%%- 9
.%%9 :
Leave%%: ?
;%%? @
List&& 
<&& 
WorkFlowInformation&& $
>&&$ %
mappedWorkflows&&& 5
=&&6 7
await&&8 = 
GetEmployeeWorkFlows&&> R
(&&R S
employeeSlno&&S _
,&&_ `
leaveWorkFlowType&&a r
)&&r s
;&&s t
mappedWorkflows'' 
='' 
mappedWorkflows'' -
.''- .
OrderBy''. 5
(''5 6
x''6 7
=>''8 :
x''; <
.''< =
StepMasterId''= I
)''I J
.''J K
ToList''K Q
(''Q R
)''R S
;''S T
WorkFlowInformation(( 
workFlow((  (
=(() *
mappedWorkflows((+ :
.((: ;
FirstOrDefault((; I
(((I J
)((J K
;((K L
if)) 
()) 
workFlow)) 
!=)) 
null))  
)))  !
{** 
isWorkFlowSaved++ 
=++  !
await++" '
InsertLeaveWorkFlow++( ;
(++; <
workFlow++< D
,++D E
leaveId++F M
)++M N
;++N O
},, 
return00 
isWorkFlowSaved00 "
;00" #
}11 	
public44 
async44 
Task44 
<44 
bool44 
>44  
LeaveWorkFlowProcess44  4
(444 5
int445 8
employeeSlno449 E
,44E F
int44G J
leaveId44K R
,44R S
EmployeeLeave44T a
leaveRequest44b n
)44n o
{55 	
bool77 
isWorkFlowSaved77  
=77! "
false77# (
;77( )
WorkFlowType88 
leaveWorkFlowType88 *
=88+ ,
WorkFlowType88- 9
.889 :
Leave88: ?
;88? @
List99 
<99 
WorkFlowInformation99 $
>99$ %
mappedWorkflows99& 5
=996 7
await998 = 
GetEmployeeWorkFlows99> R
(99R S
employeeSlno99S _
,99_ `
leaveWorkFlowType99a r
)99r s
;99s t
mappedWorkflows:: 
=:: 
mappedWorkflows:: -
.::- .
OrderBy::. 5
(::5 6
x::6 7
=>::8 :
x::; <
.::< =
StepMasterId::= I
)::I J
.::J K
ToList::K Q
(::Q R
)::R S
;::S T
WorkFlowInformation;; 
workFlow;;  (
=;;) *
mappedWorkflows;;+ :
.;;: ;
FirstOrDefault;;; I
(;;I J
);;J K
;;;K L
if<< 
(<< 
workFlow<< 
!=<< 
null<<  
)<<  !
{== 
isWorkFlowSaved>> 
=>>  !
await>>" '
InsertLeaveWorkFlow>>( ;
(>>; <
workFlow>>< D
,>>D E
leaveId>>F M
)>>M N
;>>N O
}?? 
returnCC 
isWorkFlowSavedCC "
;CC" #
}DD 	
privateFF 
asyncFF 
TaskFF 
<FF 
boolFF 
>FF  
InsertLeaveWorkFlowFF! 4
(FF4 5
WorkFlowInformationFF5 H
workFlowInformationFFI \
,FF\ ]
intFF^ a
leaveIdFFb i
)FFi j
{GG 	
boolHH 
respHH 
=HH 
falseHH 
;HH #
OracleDynamicParametersII #
paramII$ )
=II* +
newII, /
(II/ 0
)II0 1
;II1 2
paramJJ 
.JJ 
AddJJ 
(JJ 
nameJJ 
:JJ 
$strJJ &
,JJ& '
leaveIdJJ( /
,JJ/ 0
dbTypeJJ1 7
:JJ7 8
OracleMappingTypeJJ9 J
.JJJ K
Int32JJK P
,JJP Q
	directionJJR [
:JJ[ \
ParameterDirectionJJ] o
.JJo p
InputJJp u
)JJu v
;JJv w
paramKK 
.KK 
AddKK 
(KK 
nameKK 
:KK 
$strKK /
,KK/ 0
workFlowInformationKK1 D
.KKD E
WorkFlowTypeIdKKE S
,KKS T
dbTypeKKU [
:KK[ \
OracleMappingTypeKK] n
.KKn o
Int32KKo t
,KKt u
	directionKKv 
:	KK Ä 
ParameterDirection
KKÅ ì
.
KKì î
Input
KKî ô
)
KKô ö
;
KKö õ
paramLL 
.LL 
AddLL 
(LL 
nameLL 
:LL 
$strLL +
,LL+ ,
workFlowInformationLL- @
.LL@ A

StepTypeIdLLA K
,LLK L
dbTypeLLM S
:LLS T
OracleMappingTypeLLU f
.LLf g
Int32LLg l
,LLl m
	directionLLn w
:LLw x
ParameterDirection	LLy ã
.
LLã å
Input
LLå ë
)
LLë í
;
LLí ì
paramMM 
.MM 
AddMM 
(MM 
nameMM 
:MM 
$strMM -
,MM- .
workFlowInformationMM/ B
.MMB C
StepMasterIdMMC O
,MMO P
dbTypeMMQ W
:MMW X
OracleMappingTypeMMY j
.MMj k
Int32MMk p
,MMp q
	directionMMr {
:MM{ |
ParameterDirection	MM} è
.
MMè ê
Input
MMê ï
)
MMï ñ
;
MMñ ó
paramNN 
.NN 
AddNN 
(NN 
nameNN 
:NN 
$strNN -
,NN- .
LeaveStatusNamesNN/ ?
.NN? @
PendingForApprovalNN@ R
.NNR S
ToInt32OrDefaultNNS c
(NNc d
)NNd e
,NNe f
dbTypeNNg m
:NNm n
OracleMappingType	NNo Ä
.
NNÄ Å
Int32
NNÅ Ü
,
NNÜ á
	direction
NNà ë
:
NNë í 
ParameterDirection
NNì •
.
NN• ¶
Input
NN¶ ´
)
NN´ ¨
;
NN¨ ≠
paramOO 
.OO 
AddOO 
(OO 
nameOO 
:OO 
$strOO *
,OO* +
workFlowInformationOO, ?
.OO? @"
Reporting_EmployeeSlnoOO@ V
,OOV W
dbTypeOOX ^
:OO^ _
OracleMappingTypeOO` q
.OOq r
Int32OOr w
,OOw x
	direction	OOy Ç
:
OOÇ É 
ParameterDirection
OOÑ ñ
.
OOñ ó
Input
OOó ú
)
OOú ù
;
OOù û
intQQ 
updatedRecordsQQ 
=QQ  
awaitQQ! &
localConnectionQQ' 6
.QQ6 7
ExecuteAsyncQQ7 C
(QQC D
DatabaseProceduresQQD V
.QQV W!
INSERT_LEAVE_WORKFLOWQQW l
,QQl m
paramQQn s
,QQs t
commandType	QQu Ä
:
QQÄ Å
CommandType
QQÇ ç
.
QQç é
StoredProcedure
QQé ù
)
QQù û
;
QQû ü
respRR 
=RR 
(RR 
updatedRecordsRR "
*RR# $
-RR% &
$numRR& '
)RR' (
>RR) *
$numRR+ ,
;RR, -
returnTT 
respTT 
;TT 
}VV 	
privateXX 
asyncXX 
TaskXX 
<XX 
ListXX 
<XX  
WorkFlowInformationXX  3
>XX3 4
>XX4 5 
GetEmployeeWorkFlowsXX6 J
(XXJ K
intXXK N
employeeSlnoXXO [
,XX[ \
WorkFlowTypeXX] i
leaveWorkFlowTypeXXj {
)XX{ |
{YY 	
ListZZ 
<ZZ 
WorkFlowInformationZZ $
>ZZ$ %
workFlowInformationZZ& 9
=ZZ: ;
nullZZ< @
;ZZ@ A
using[[ 
([[ 
var[[ 

connection[[ !
=[[" #
await[[$ )
base[[* .
.[[. /
CreateConnection[[/ ?
([[? @
DbSchema[[@ H
.[[H I
PORTAL[[I O
)[[O P
)[[P Q
{\\ #
OracleDynamicParameters]] '

parameters]]( 2
=]]3 4
new]]5 8#
OracleDynamicParameters]]9 P
(]]P Q
)]]Q R
;]]R S

parameters^^ 
.^^ 
Add^^ 
(^^ 
name^^ #
:^^# $
$str^^% 5
,^^5 6
employeeSlno^^7 C
,^^C D
dbType^^E K
:^^K L
OracleMappingType^^M ^
.^^^ _
Int32^^_ d
,^^d e
	direction^^f o
:^^o p
ParameterDirection	^^q É
.
^^É Ñ
Input
^^Ñ â
)
^^â ä
;
^^ä ã

parameters__ 
.__ 
Add__ 
(__ 
name__ #
:__# $
$str__% 8
,__8 9
leaveWorkFlowType__: K
.__K L
ToInt32OrDefault__L \
(__\ ]
)__] ^
,__^ _
dbType__` f
:__f g
OracleMappingType__h y
.__y z
Int32__z 
,	__ Ä
	direction
__Å ä
:
__ä ã 
ParameterDirection
__å û
.
__û ü
Input
__ü §
)
__§ •
;
__• ¶

parameters`` 
.`` 
Add`` 
(`` 
name`` #
:``# $
$str``% .
,``. /
dbType``0 6
:``6 7
OracleMappingType``8 I
.``I J
	RefCursor``J S
,``S T
	direction``U ^
:``^ _
ParameterDirection``` r
.``r s
Output``s y
)``y z
;``z {
workFlowInformationaa #
=aa$ %
(aa& '
awaitaa' ,

connectionaa- 7
.aa7 8

QueryAsyncaa8 B
<aaB C
WorkFlowInformationaaC V
>aaV W
(aaW X
DatabaseProceduresaaX j
.aaj k"
GET_EMPLOYEE_WORKFLOW	aak Ä
,
aaÄ Å

parameters
aaÇ å
,
aaå ç
commandType
aaé ô
:
aaô ö
CommandType
aaõ ¶
.
aa¶ ß
StoredProcedure
aaß ∂
)
aa∂ ∑
)
aa∑ ∏
.
aa∏ π
ToList
aaπ ø
(
aaø ¿
)
aa¿ ¡
;
aa¡ ¬
}cc 
returndd 
workFlowInformationdd &
;dd& '
}ee 	
}ff 
}gg 